cset: moving following pidspec: 2675
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.014920384 seconds)
loading group "string"... done (took 0.628350376 seconds)
loading group "linalg"... done (took 9.848247053 seconds)
loading group "parallel"... done (took 0.189540782 seconds)
loading group "find"... done (took 1.562977354 seconds)
loading group "tuple"... done (took 2.246911846 seconds)
loading group "dates"... done (took 1.531755846 seconds)
loading group "micro"... done (took 0.244306893 seconds)
loading group "io"... done (took 0.603026858 seconds)
loading group "scalar"... done (took 48.656011034 seconds)
loading group "sparse"... done (took 14.493934999 seconds)
loading group "broadcast"... done (took 1.177684378 seconds)
loading group "union"... done (took 13.365211507 seconds)
loading group "simd"... done (took 2.746076996 seconds)
loading group "random"... done (took 11.223898799 seconds)
loading group "problem"... done (took 1833.274671591 seconds)
loading group "array"... done (took 27.543666494 seconds)
loading group "misc"... done (took 1.239746676 seconds)
loading group "sort"... done (took 4.041092399 seconds)
loading group "collection"... done (took 20.440733767 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.73561839 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154656625 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.186369969 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.384356463 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211280046 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.175970407 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.179994737 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.596030629 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.015757977 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.241942252 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.162931661 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.610098917 seconds)
done (took 6.363022129 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257480066 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.473892806 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147677972 seconds)
  done (took 1.273721542 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090417873 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.202048816 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111080635 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.127839623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.127447749 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.127749644 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.126769087 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112129093 seconds)
  done (took 1.590378229 seconds)
done (took 3.872643818 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.549879763 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868858869 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.552891194 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144305303 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.178106771 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.167903601 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.33903495 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.174940368 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.138284936 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.116494258 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.193187622 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.360187414 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.528382832 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.002067997 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.12218293 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.150960097 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.09541044 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.7158765 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.09557053 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141304892 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.565256722 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.127943564 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.131952027 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.154142813 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.215566217 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133350682 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180727668 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.112240504 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673634629 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11344209 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.199650642 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.124133984 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182858107 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.268454123 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.111259228 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106706629 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.692663083 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19364155 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.128367375 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.114652856 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690128022 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.094989776 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.214908135 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.113632878 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.125192839 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.204632918 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.124054785 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.108692128 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101189048 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.117065398 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17482153 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482677428 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.120080027 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.166596674 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.119996235 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698002224 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110277692 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.170708479 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.153630983 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108000422 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.108767843 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.125692199 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166744494 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.127266803 seconds)
  done (took 20.65824132 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.136355501 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.159399433 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10855074 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157406697 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.15933531 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.111272258 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.112949484 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092826075 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.142978252 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.208977272 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.156882083 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.164204324 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089771292 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.108735736 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118062373 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.266228996 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.138416149 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.137367689 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095924171 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.1212504 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.155761824 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113615602 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.124689837 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.124091557 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.184290274 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21864419 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122617265 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.13665106 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.107739251 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.130521113 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141210327 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.176455516 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.105532258 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091858398 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.202147493 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.13500972 seconds)
  done (took 5.730817851 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.224070237 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.131655622 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.217711814 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199542207 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.167450889 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.199710714 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135355758 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.280450008 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.257546375 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.195290824 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.153014002 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142824798 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112235096 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110256325 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095245499 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.110526725 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.843317525 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155056889 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193069054 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.144423198 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119752049 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.11177532 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.400115617 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099994833 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.111808845 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100629148 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103109029 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201967586 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116845634 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.401233935 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11515455 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.127075188 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14796007 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.224240618 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131604484 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.158879474 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117386627 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095942213 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.256764753 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130282904 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125773265 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.108883117 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125188149 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149636481 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.150421671 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.114137957 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127235255 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.249646333 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.114390716 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095912458 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.136614949 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.160796283 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.229423396 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.111801478 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.112405817 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.396602831 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130914492 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103826282 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113774701 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.323666201 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152197805 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09696211 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.108607975 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101276459 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.109511182 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.421396324 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124539454 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.781865945 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096080557 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.181304112 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116157405 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121890063 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116086095 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101352754 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.133102405 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09386932 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.108914834 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094710648 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.109164155 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098896178 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129450047 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116152256 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092850548 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.177009486 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.135314917 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114105109 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140199117 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.115610974 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093482531 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143762228 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111529805 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098239229 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164940982 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.122215704 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129426282 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100625355 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.157520683 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.112126471 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095976894 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19785476 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.108892289 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.138400195 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.114113898 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128210482 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.137760947 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111514184 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097738926 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.110483999 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092755172 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180245752 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096347667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.111564354 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097003223 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.128578944 seconds)
  done (took 25.811273198 seconds)
done (took 52.856536583 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.52175113 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115580727 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.133297863 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.132037488 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.13093132 seconds)
  done (took 1.771856975 seconds)
done (took 2.481742153 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.410146699 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210916445 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.13707939 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.207443035 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.120036171 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.215718477 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.198338226 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.136358734 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.247296395 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097784255 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.222866869 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099228023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.120838269 seconds)
  done (took 3.162369435 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11057752 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.135079187 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094878072 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125526837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08882085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.125442146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10649221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.154245204 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.12445063 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101462267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105170782 seconds)
  done (took 1.974236142 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10701049 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.129286625 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094913875 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122952753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089301238 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121070164 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105624763 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.133346254 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104862461 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118950692 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088247896 seconds)
  done (took 1.918461476 seconds)
done (took 7.7517509 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.156902155 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.625908818 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122090634 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.185963276 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.382258997 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.23308688 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.572284768 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151887566 seconds)
  done (took 12.357779453 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.169794681 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097166962 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.11364071 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094321091 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.116152556 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098003336 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.11177689 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095378292 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112128553 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098195651 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110795969 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097936329 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.111539379 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096287855 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.113780749 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097444948 seconds)
  done (took 2.513162923 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.136979658 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.135292935 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.12005273 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.126405605 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100881867 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119055986 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.1024395 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.120092032 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114793745 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10059014 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.123915278 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.12233206 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105865533 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.114751486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102492295 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.125551722 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.115143057 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102977679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.121776982 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104850897 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.124415007 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.117336746 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104815819 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.123908092 seconds)
  done (took 3.616706419 seconds)
done (took 19.193602733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.193649865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1169824 seconds)
  done (took 1.024049788 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.119726549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.136467892 seconds)
  done (took 0.970031237 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.125748408 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.112267544 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.154607464 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.132272528 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097269812 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.113682592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.15067551 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097489434 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.113337626 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096603727 seconds)
  done (took 1.911265613 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.101947009 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.117516525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.105657037 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136462044 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.126339151 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097931174 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.119009334 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101223786 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.120284337 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.110355598 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105669441 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.134505933 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.120362984 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120721597 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.119380054 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.119609289 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107226144 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.11719758 seconds)
  done (took 2.799659252 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096850202 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.114355227 seconds)
  done (took 0.932028134 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.100413954 seconds)
    (2/7) benchmarking "second"...
    done (took 0.111269692 seconds)
    (3/7) benchmarking "month"...
    done (took 0.098709868 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115038797 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094502823 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.111619916 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094003169 seconds)
  done (took 1.44202119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.587048878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271254613 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377657977 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.135684403 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.159847735 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.414076247 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.178130064 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113603397 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.132181811 seconds)
  done (took 3.137372984 seconds)
done (took 12.93585519 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.1082898 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.212193682 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603802074 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.137306425 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093018664 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.176506021 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.302862783 seconds)
done (took 2.355479569 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.384964955 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14211776 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.103501319 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095296322 seconds)
  done (took 1.445758574 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.094629591 seconds)
    (2/2) benchmarking "read"...
    done (took 0.120384873 seconds)
  done (took 0.942165644 seconds)
done (took 3.118773136 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094514506 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.150748409 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092736501 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.110075183 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092832983 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.110111837 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09084618 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112556421 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09286547 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.111468572 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.093110742 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.109956692 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093191202 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107650898 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091826107 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109577798 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090983252 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089805001 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107942816 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090467939 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111957941 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090086947 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107537337 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090700421 seconds)
  done (took 3.209122032 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.121392257 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112186762 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117077093 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.216823624 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.116353383 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.1002154 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.117641317 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.111618308 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101779082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.115311661 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099552179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.115931899 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096631141 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.117183671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113808644 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10064257 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.119071758 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095460796 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11435762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.116581717 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101878414 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112551261 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099931862 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117172237 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115964487 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100504127 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114797721 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095737976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118758255 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099452523 seconds)
  done (took 4.125991867 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.104506179 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.108529388 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093394617 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.121833546 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092567472 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.113994355 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092748703 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.1093469 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093426587 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.108040817 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.09519738 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091291951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.109638451 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093777148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.112416293 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099155125 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113981974 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10991655 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091783093 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.110421967 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098223215 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.109159173 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094835855 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109078158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09254806 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.108915738 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09263884 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091340804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.110234138 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091239833 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11539433 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.116204877 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092171678 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.123891177 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099631394 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.108974412 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101595128 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.108498811 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093229384 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.108615792 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09208732 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108461751 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093550579 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.121965229 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09578239 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.110392805 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09249008 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.1106252 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093434383 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.112625713 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093023918 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091745048 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.113185451 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.112944179 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098921197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.109188719 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094319173 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091468267 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111934974 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092058469 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109735062 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091649467 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118298061 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093082815 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.137779994 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.122269421 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091806348 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111887693 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097252183 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.118605956 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094985748 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.13127344 seconds)
  done (took 8.244191729 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098994605 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121423146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094751103 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113425934 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090666235 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11143182 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099882255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111114836 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095443012 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130933515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110086888 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095401828 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112660482 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096974756 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110309696 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094562197 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121068246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090708797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.110712365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09647428 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111393355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099927004 seconds)
  done (took 3.055890889 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.25761264 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121891309 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.165835274 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.130888796 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.131995355 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113112702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.118624267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103023986 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119210358 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.122608094 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104603014 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118569203 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.134899251 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104562235 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122129581 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123770111 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101457071 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.123558705 seconds)
  done (took 3.05884061 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.110898111 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.11451146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122882601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.115051416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095626268 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.116864434 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121071179 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112937949 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.117574055 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096829291 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.127366829 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116303015 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098045044 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114090624 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099253067 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11419312 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09883673 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115129563 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12631463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103639779 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122447634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125570416 seconds)
  done (took 3.226828872 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114933967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11592254 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.150286817 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101000681 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109729107 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094728835 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.122782859 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09692752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.1232544 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098400529 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115575061 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094977593 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123118086 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113612652 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103876944 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115346948 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098840831 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114742779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099204858 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.110566801 seconds)
  done (took 2.964501693 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145793838 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131779987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131449683 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128416188 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133058014 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114860052 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.14582572 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132986038 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114416575 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149456973 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132641124 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113673776 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144843424 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139554361 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131741643 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12779948 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145189064 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.14493538 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114982147 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13458984 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147881623 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114330503 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146763293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132786607 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114916974 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132301042 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132275568 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122720448 seconds)
  done (took 4.450088981 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097144936 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095814527 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.112552176 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094003221 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.111908174 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09344167 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.11278273 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093823229 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114458437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093957122 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.114123051 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096386434 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113870828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096293416 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114669193 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096407489 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113252851 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094135457 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111465829 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09416848 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.113134235 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096854579 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095914013 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112213534 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093267061 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.114616736 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093629838 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111366446 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096403834 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111561136 seconds)
  done (took 3.856078304 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107048845 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122497674 seconds)
  done (took 0.981433981 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095217599 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133817574 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094728351 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118341872 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103966201 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.116147898 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125206625 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104222405 seconds)
  done (took 1.643874167 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.125058579 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.139546082 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.103636874 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.130770812 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.137072619 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118224132 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.19000159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.123838625 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105369738 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.116957461 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118987691 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.11714853 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125407956 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103626925 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.125301345 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113721609 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113425656 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10925869 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.124246782 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100582468 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122912882 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.134719966 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110677754 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.125445065 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100969265 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.129400327 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.131969633 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110996172 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.12141078 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111949066 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.124953119 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091601503 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.122512013 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.121516046 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096847412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.136442413 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118667217 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.122277967 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108068349 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123040874 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128245382 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093324369 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.12867344 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106243848 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.130461793 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103527256 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.123616135 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092652091 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.118102937 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.119889515 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094281694 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120507164 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09324966 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127457558 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109664393 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137955069 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10073777 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.122750665 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.120956592 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101682305 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.124940604 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103248622 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12928089 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.110828902 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.127342226 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.126325894 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108075195 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112151416 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092533726 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114720549 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110173662 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144592972 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.129276119 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104436022 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123264637 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096391699 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123498922 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105185329 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127187428 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.12852026 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104149937 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125623819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110103073 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.121940311 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103427001 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.126023348 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100742803 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.121053751 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098979149 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14238179 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.120234945 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096693099 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.117607799 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111846732 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.121695339 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102324861 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.117523189 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109199832 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.111152106 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103372923 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123809152 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123476659 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114041162 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122915018 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105929495 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.126942577 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.129818497 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104738819 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.119796559 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095462602 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124142249 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101487448 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.127279898 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092313376 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.122913757 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103681165 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.123350647 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.129326265 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101201108 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.121953388 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111893762 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.130177593 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101385785 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.112944872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103501761 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.122214095 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108838634 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.132647126 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.119301713 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094469891 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111530375 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109400085 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.121486334 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106843769 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124124693 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104456464 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112344554 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097029639 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.124323297 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.130609283 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102936211 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.124427226 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111538692 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.125725703 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101499295 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.130453093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.120337034 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099165429 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.12857882 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103876087 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113030518 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108789004 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.123632642 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102190324 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.123493695 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127952491 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105017164 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.123567076 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101677334 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123232496 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105642185 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.11815108 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104440801 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.120397882 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.132335651 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104041828 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112730826 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096007671 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.125581729 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100765266 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.121422613 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099320902 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.123693113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105899326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.116014607 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102768816 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.122107725 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117428059 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.134207662 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12281468 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107640751 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.128987625 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102915762 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.123380804 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103555707 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120090226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101022833 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.124075587 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.120398811 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102509982 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.117936227 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094564157 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121385497 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107697116 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.11433121 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09345734 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.113920533 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100769058 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.127269265 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118864398 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10137544 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115189727 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104488404 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124202323 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101709555 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.117538649 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09634283 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11932671 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106381243 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.126314929 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123488322 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112318888 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.122718832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095109486 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128306605 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101225791 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.126786593 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094819168 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.118161907 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099938958 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.123222868 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101644483 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.11861542 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089412278 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.125841832 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125206768 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102999798 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.114689189 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103342722 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.130539148 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100055781 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.123077822 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.118283143 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106041 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137891664 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096579001 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.119352569 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.127998726 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100860315 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.107961196 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105477157 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.116393682 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097387242 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11849406 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101707567 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123124869 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10815566 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.125777949 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093104187 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.123021546 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103313526 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.120296792 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095637034 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.130141526 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.123876769 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106800294 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.134477387 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10631553 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.126223634 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107050321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.124593715 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.12450527 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107390883 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125411509 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106806487 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.122123046 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10011948 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.12460074 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100105459 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.117482427 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103211521 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.124339088 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106052273 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.127347718 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.12243961 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111449146 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.124178841 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107361281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148649054 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.120965988 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100604336 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126227814 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107538918 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.123903264 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10391776 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115493976 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.13064134 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106524867 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131928024 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10481091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.116459076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107145205 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.124831708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107013818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.126433827 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107671551 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.124319729 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102750697 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.119733819 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.129745391 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099462301 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.129045003 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107695981 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.124933943 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.120238234 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103741574 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.118475858 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099221442 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.124752147 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106963188 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.12555053 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105290202 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.127647055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105308184 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.125262559 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.121773376 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107356794 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.126092576 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109237415 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113763613 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101046853 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.120165624 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106763873 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.130432085 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106809885 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.122990926 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103925266 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127790324 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103729581 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.118181988 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.129640168 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11072517 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.125961041 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116805603 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.121085505 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106030677 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.137188422 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094273427 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.123561991 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09838603 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.12249188 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.130521787 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107185602 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.131820767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107026524 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.121879805 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098095687 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.1272705 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104281217 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114688618 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09911387 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.129749506 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102358357 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124605617 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106360774 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.130385114 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.126595556 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111770208 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.12379283 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10568064 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.126413299 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098632813 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.122357532 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101334023 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.125752658 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107910634 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.122655119 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097814524 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.126080684 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.124824834 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109051854 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120511815 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10051972 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.125976289 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101391373 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.121342912 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107216326 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111479238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102217619 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120155049 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101043781 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.117797582 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.12086396 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104105594 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122520161 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108801798 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.121468532 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106941952 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123608272 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09978747 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.125981164 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106331218 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.127823413 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101256861 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.129146196 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.133260724 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099478896 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.127062904 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108248448 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.12316351 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107967223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.128036671 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106498186 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.132511809 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.12608071 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108605199 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.129989981 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108398108 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.127316622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108109304 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.124375447 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110949737 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.12304591 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.134019826 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109006385 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.127575293 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105987528 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.12280904 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106093897 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.125661359 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105011255 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.134153762 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107091431 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.122310295 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.120863473 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100801942 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.126874659 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113400164 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133025582 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108051975 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.12761816 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096452798 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.118675856 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108489142 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.124470657 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104745698 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.130916129 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.131252546 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108084211 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.123038931 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105427724 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.132584613 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111070124 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.132318007 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.122159895 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111867956 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.12785755 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107424963 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.125069208 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105724363 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124472177 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106874124 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.121994033 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097026539 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132106207 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.12654176 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104923195 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.122265969 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108032553 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.124874964 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096176812 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.131116692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.126307206 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112537904 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.125584607 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107066443 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.137312001 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099942258 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.123226602 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.129903362 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102408454 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.128378665 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.093538293 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.121923017 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104870554 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123484656 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093041404 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.117394726 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098141377 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.12500342 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09947199 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.114054377 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.133452337 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11131265 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.125201329 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103883843 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125322456 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097869819 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.118896223 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102935313 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130286952 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107296858 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.137806704 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.121240077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101920465 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.113741712 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103939755 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.123060634 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107198782 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.115206228 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096425724 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.118551613 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104916398 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.131341096 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100668159 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122171049 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.122825091 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104719785 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115078605 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108946501 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114334394 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107258626 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13622315 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104335719 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127590318 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.12537056 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111277055 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123797336 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094857871 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123244338 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104562921 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.124238432 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103152382 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124944233 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.139445526 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103586208 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11899366 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101361938 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.122793892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.098682177 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.133111006 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123521835 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10493969 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.124103753 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102568474 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126756765 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11577684 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.132657582 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.129132919 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11037793 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.127617135 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108474552 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.12413758 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106476119 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12775509 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107365107 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122321315 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105807532 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.118422027 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.13365808 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112380399 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.1250802 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09934731 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.121005548 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105124786 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.119656459 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111421094 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120737675 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106366507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.126466695 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106649051 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.131059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111317501 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.129708774 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128595589 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109075831 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11788784 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114063242 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.129696876 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111843687 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118290997 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108793512 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.128521544 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114213828 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.133677613 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124119482 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110472637 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.127756613 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112935055 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120122614 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112793041 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.128582463 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107443373 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.124916592 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108935016 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.129222533 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110960493 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130601447 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127834511 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104763744 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.12653121 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108241303 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117604533 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099362895 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.127163456 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097916749 seconds)
  done (took 69.74259148 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.176461275 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102529832 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113651911 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094933424 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14346079 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114587737 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095041129 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114308656 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096516189 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130036409 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095499463 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117707421 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14649009 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.152816989 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128003829 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132743452 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117837461 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101347098 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119064737 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101130965 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.146331353 seconds)
  done (took 3.354115018 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.12976321 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.142014908 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139898994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.143350902 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106502614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134383859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.134336945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115333021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.139290725 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128930509 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.138204979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115307747 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.130423216 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.133953488 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112389706 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134398145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.140941143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.131243041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121055387 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138830621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136778541 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.138023636 seconds)
  done (took 3.701503927 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.114565381 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.126153178 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11492607 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.12247714 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109773481 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.121767953 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116455154 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.125814845 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.114844608 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.130260453 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107234085 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.129616774 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115400432 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122617709 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107066613 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.126206786 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11497248 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.129744768 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110065708 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.124731098 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.155049035 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103230732 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.124030428 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10674617 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.139672334 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110393715 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.129513031 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106010077 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.122041148 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103822982 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120211305 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.129017198 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113875374 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.126565161 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.10772035 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.129821633 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10993973 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.124157315 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.106103288 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.133340859 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103815426 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.131380013 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117618648 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.126898316 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104313183 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.133022091 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107877591 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.123662482 seconds)
  done (took 6.550111244 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.147706619 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.187367765 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.110860116 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.183488934 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.146615459 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.143958485 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.117660274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153733345 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.127007375 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106842034 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.147433155 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.143486528 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124206019 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112054129 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.128943177 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.135879933 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112744428 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.132696105 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130050335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.125138669 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131103385 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108327489 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.145504951 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.141829861 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129252968 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104884586 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126603803 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.118672079 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.148187825 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.142287567 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.148765143 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113066023 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.143863637 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.132118523 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117711711 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.130064619 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.142391972 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10572039 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128914734 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108499896 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.133367287 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136407864 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110195398 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.150052602 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124658024 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107358785 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.130348319 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102599467 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.138880424 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127240911 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.138285216 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123764673 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.129254426 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.127544078 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111831354 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.149009127 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123718448 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103390148 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.133619002 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.141582424 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103330676 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129537789 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13957925 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109095789 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.134466321 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.141511658 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108671728 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.136034079 seconds)
  done (took 9.838680638 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119177363 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1504661 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143330215 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121829255 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13109971 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130289373 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111224226 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.131609599 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129300228 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119383953 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132449691 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.185987446 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122913251 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117468943 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130043782 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130369063 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110844365 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129697501 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11049686 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131531289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.13078661 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146229483 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115097902 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.148209879 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.154022193 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109659699 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.139505107 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.139012965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.150989081 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117484496 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15288347 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.135760097 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113592042 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143998748 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.145475483 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.130105875 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100931297 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130085871 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110832654 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132115418 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122474474 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125247069 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130992769 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.123099873 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111337522 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131408102 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1462347 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.145027705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116865747 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139832722 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130428182 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123451796 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13285532 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131380755 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.143349845 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153286904 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123486247 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.143109031 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131425427 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.14387273 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123396873 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.153724994 seconds)
  done (took 8.997476433 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107652885 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106121519 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12674595 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103078779 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12117234 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098256716 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121458794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.099924218 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11988862 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100525328 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120599158 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098263258 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117844421 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100172279 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118028541 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098925633 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118000601 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098299242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119488077 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098092616 seconds)
  done (took 3.03020237 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.117775497 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.151926405 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.10868793 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.136777196 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.127448081 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11069673 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.122790998 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104028618 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125088531 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110346199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.139801054 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13577635 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102156627 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.131719297 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134878408 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108809014 seconds)
  done (took 2.808952337 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.132087045 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.144730895 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.154797073 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.114088466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128540118 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.116272555 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.13002414 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099178923 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119121458 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.130949565 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108318206 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.133883528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101177017 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.120198592 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101699882 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.128815948 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096246267 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126413574 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102407251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.149920899 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.127381736 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103957265 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123046158 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103638892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.125486654 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128506002 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110084962 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.120542142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099619166 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122496792 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104490132 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133044638 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.117887698 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108937879 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122374829 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104736353 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.12872927 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109032167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.134701218 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106707927 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.120930314 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103847405 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.122671739 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.123415024 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098250189 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122111943 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098076207 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129105023 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103884031 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.125090441 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102117284 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131471199 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.128955896 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115341453 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133788753 seconds)
  done (took 7.376943083 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.124820394 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127345633 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106854427 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119827586 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104895644 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.131501586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106776256 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125531765 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.123343404 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099792786 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124325678 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106278898 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126264533 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11022948 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127328888 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109286181 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117861648 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103389225 seconds)
  done (took 2.940790705 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115566641 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.128832477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113811246 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122122591 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103465847 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.126009617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101077961 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.121631659 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102393175 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122214041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102467629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.12397325 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09999972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125247448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101486974 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123209148 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104892111 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123551407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10833813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.127381607 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110802636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13077032 seconds)
  done (took 3.390199452 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.129708072 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.16822485 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.146826795 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.156705111 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.138262499 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.112836092 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.14754157 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.136760959 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.135739385 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.136024023 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.112062647 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.129227487 seconds)
  done (took 2.504505496 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137585739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167288773 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120877941 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104687138 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138212498 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108740479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128784115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12868083 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121419771 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145092207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128282755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142790467 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121487324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142591559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13670846 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138041018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107737269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129289736 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102358652 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153314422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129956392 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14249435 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107888512 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129723533 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12848763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120672819 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143349766 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144168844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128892277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142204426 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117332981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128532079 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142406426 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144573418 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104964754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142154048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107843617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153514537 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137154926 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141882374 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10543438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139349764 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142386921 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137450921 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122317321 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13022947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137418332 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108981148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130839057 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160843147 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137668364 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1424335 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116979282 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143186659 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142294467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161315915 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146129734 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14272725 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117205969 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14595536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14183366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138128801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142505727 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123878418 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138609669 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144334917 seconds)
  done (took 9.64042062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156152925 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123214402 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130045872 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124442352 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144528734 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129404796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130449243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110284303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129211142 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104745178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.182832797 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131201654 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142691315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143108706 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109468448 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130280545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109159836 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143874831 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125391757 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162608413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13046277 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121023536 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142256509 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142457896 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146355527 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137844113 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109464539 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129000111 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109158026 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131018795 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137594203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108944541 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14288098 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122440457 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142065261 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109718937 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13051338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138973258 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110122198 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137870505 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142867779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154320084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109535906 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13018327 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147229899 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109283394 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130271425 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124571353 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109248276 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126115856 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14681165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124273097 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145698204 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142711714 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129982474 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109515073 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130287376 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130274243 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109481046 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139022807 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143612624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108577842 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160779161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131185233 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13042638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141475451 seconds)
  done (took 9.51217631 seconds)
done (took 182.931586621 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.13067166 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.168863849 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.118193802 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188534309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102013477 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159283015 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.158142067 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119767289 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.123397605 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.102578242 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.123482398 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.106714346 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.190475202 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102598676 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.124394888 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106756414 seconds)
  done (took 2.984400905 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.209265999 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.317429083 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129199651 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.129497244 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.133984573 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105600333 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.129366353 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109990246 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.125941029 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117132722 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.127169338 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105456398 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.139532344 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.127371587 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104217687 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.126426231 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117084619 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.127682441 seconds)
  done (took 3.351396459 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.138406818 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.193250313 seconds)
  done (took 1.201285621 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.149749668 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213534596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.334686026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.186905098 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.134749582 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.151551494 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.187562832 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.146457295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.220583416 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.149179137 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.148763545 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111476304 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.159527084 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.138754266 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11445592 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.131719523 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.161863325 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113943437 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.133451869 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111845396 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.155027679 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.133252919 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117243162 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134523306 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.209234371 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.150362896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111677805 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.133843144 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.133350982 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112408334 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.139059672 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.150294618 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.148808049 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.197448027 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.138281616 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.192845359 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.141568905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110481442 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133920987 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109195022 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.137031771 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.136164422 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126452164 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132549556 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.133375173 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119898168 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.132987363 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110678449 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.141554722 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.143388689 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.14122577 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117666728 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.213497457 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120683523 seconds)
  done (took 8.824846158 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.173879712 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154440779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13280113 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.056354249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166575358 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124331983 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.937107953 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135453372 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.290748752 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.925017334 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12536039 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.144863615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.267634891 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26991696 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.050262794 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353281233 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.793363576 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122155345 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161708034 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.181658071 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138320435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139572163 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152047122 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448013754 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.131524867 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107704031 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136586787 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.143379527 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191645144 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.129422672 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11213292 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.231838144 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.27609182 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236778512 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109053617 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12833414 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106515514 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.216070569 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283833703 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.252750545 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.202199804 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12543374 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106629513 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142584219 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.153303101 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103362697 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.217709264 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.203061769 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202042495 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.133935807 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.14194009 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118179927 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142989401 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.192774647 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126741632 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359602128 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357227835 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107007908 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139297391 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.149712964 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.300597535 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106938313 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261088484 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.158698814 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22505943 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.129139969 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.860394603 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.196090261 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128524793 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117724382 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.14796938 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134831451 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120075927 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192337551 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407703066 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146810389 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134459826 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107245091 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.270069435 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108086771 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129860043 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195325944 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13325225 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116833075 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148030309 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14498101 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.199313044 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278663112 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123545777 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139653462 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.135198604 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122247844 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.132354564 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.244972481 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.257926937 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.188773641 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.264628802 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121845694 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.218332371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.195366853 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143588763 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.200290333 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.138919492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148097963 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122949373 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253588501 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.167712508 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129583464 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1140314 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138226533 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.171971524 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109889706 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138602481 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197449744 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.508939626 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.196232457 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.128045291 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110013108 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140184299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193646425 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13889151 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299155158 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117533921 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.218306428 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1162554 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.127135194 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118177637 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.218246685 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.144786389 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118528124 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144132669 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137897698 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.263146845 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256935341 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124341298 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.281011443 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.208246573 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140631645 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203068603 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141007628 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202477902 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14053101 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142803627 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110554478 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847679071 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144132623 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116376732 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135871604 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.220999699 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107873058 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130695119 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107477112 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126764811 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836291543 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109666022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.127058065 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108142706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139848235 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116053964 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138898175 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.135750712 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192819938 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271106544 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.144154302 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115994735 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.130333021 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193171203 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133107832 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108776584 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.130300597 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107862805 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140436272 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.136291433 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108683521 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.203439129 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.211412211 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.260033028 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567238893 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130520753 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107566603 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266590078 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130645286 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325418348 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117535236 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.263366401 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.220358195 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106217267 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354267859 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.199994659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.224101822 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.131497366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.202295887 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126717195 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117048552 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.214600161 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11134283 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138777478 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.194499665 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.148391396 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146164048 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.979765318 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.131609107 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25837358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.127923073 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.198344465 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133059872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121145265 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332837312 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129479997 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15150737 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193052311 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134589593 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108881852 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.657049649 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107469721 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143294917 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118199309 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.261482194 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.219248323 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11674812 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139762927 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.144140767 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193668413 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239400179 seconds)
  done (took 49.990329517 seconds)
done (took 67.213391291 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353828762 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.310378387 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.345602668 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.250249869 seconds)
  done (took 2.241218367 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.211880343 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.179393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.171163108 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10534746 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.180331998 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.128348717 seconds)
  done (took 1.866160384 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.558922859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.436651446 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.395089438 seconds)
  done (took 2.278741347 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293847507 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.317966397 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.364920012 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.534757478 seconds)
  done (took 2.51732638 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.246494364 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.148883702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119288638 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.163161772 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20128309 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.214841092 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.16731425 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183303206 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.154463131 seconds)
  done (took 2.538399253 seconds)
done (took 12.336931862 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.190435541 seconds)
    (2/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.187582228 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.261889963 seconds)
    (4/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.33091899 seconds)
    (5/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.309696872 seconds)
    (6/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.282833495 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.153632733 seconds)
    (8/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.195277014 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134531712 seconds)
    (10/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.239032152 seconds)
    (11/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111817709 seconds)
    (12/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.305142413 seconds)
    (13/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.156532158 seconds)
    (14/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.148104053 seconds)
    (15/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.276025656 seconds)
    (16/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.245897506 seconds)
    (17/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102648173 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.183730584 seconds)
    (19/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.281914656 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.195500873 seconds)
    (21/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.247972027 seconds)
    (22/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.246893483 seconds)
    (23/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137355985 seconds)
    (24/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113716521 seconds)
    (25/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.227300009 seconds)
    (26/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.115792022 seconds)
    (27/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.162858944 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.146715997 seconds)
    (29/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.136964663 seconds)
    (30/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110159798 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.146635074 seconds)
    (32/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.122512645 seconds)
    (33/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.331996671 seconds)
    (34/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.234839589 seconds)
    (35/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.227277167 seconds)
    (36/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110512462 seconds)
    (37/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.220111195 seconds)
    (38/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.167605383 seconds)
    (39/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.211957352 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.140717416 seconds)
    (41/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174837882 seconds)
    (42/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.115645145 seconds)
    (43/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.242013169 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.115446634 seconds)
    (45/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149567924 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109790851 seconds)
    (47/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.271075816 seconds)
    (48/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132135482 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.107205027 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.227873072 seconds)
    (51/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.27254216 seconds)
    (52/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.177234377 seconds)
    (53/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.14931194 seconds)
    (54/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.200179975 seconds)
    (55/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.238779433 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.148891547 seconds)
    (57/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.117345849 seconds)
    (58/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110940019 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.147105693 seconds)
    (60/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.254431817 seconds)
    (61/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092096709 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.167815216 seconds)
    (63/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.117874382 seconds)
    (64/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.24675552 seconds)
    (65/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.160867698 seconds)
    (66/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.200999481 seconds)
    (67/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.124851134 seconds)
    (68/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.119919829 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.136370813 seconds)
    (70/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100338066 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138469766 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112846028 seconds)
    (73/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.138211842 seconds)
    (74/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092536532 seconds)
    (75/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.115015423 seconds)
    (76/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092071801 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136622571 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.179564592 seconds)
    (79/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.210272515 seconds)
    (80/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.11170186 seconds)
    (81/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.212667257 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.094881403 seconds)
    (83/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.116934383 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120774805 seconds)
    (85/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.166433579 seconds)
    (86/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.136397543 seconds)
    (87/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.1626136 seconds)
    (88/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.161090159 seconds)
    (89/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134065425 seconds)
    (90/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113666591 seconds)
    (91/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.116986335 seconds)
    (92/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109909626 seconds)
    (93/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.185933213 seconds)
    (94/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212292898 seconds)
    (95/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.093318026 seconds)
    (96/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.218500288 seconds)
    (97/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.225881111 seconds)
    (98/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.214038325 seconds)
    (99/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.213397078 seconds)
    (100/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.09291484 seconds)
    (101/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.116826421 seconds)
    (102/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11256697 seconds)
    (103/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.145319073 seconds)
    (104/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092769858 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.136693501 seconds)
    (106/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.180211778 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.140820479 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168906247 seconds)
    (109/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.186111537 seconds)
    (110/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128641248 seconds)
    (111/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.119188999 seconds)
    (112/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136423487 seconds)
    (113/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.125332845 seconds)
    (114/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.247148631 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.147990694 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106756804 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134930703 seconds)
    (118/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.107805367 seconds)
    (119/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.174259005 seconds)
    (120/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.1306016 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112862427 seconds)
    (122/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.136627988 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122271874 seconds)
    (124/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.116932681 seconds)
    (125/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.213491943 seconds)
    (126/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.127663778 seconds)
    (127/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173435938 seconds)
    (128/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.161563721 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.144373155 seconds)
    (130/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.117007817 seconds)
    (131/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.233072027 seconds)
    (132/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214652739 seconds)
    (133/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.119450589 seconds)
    (134/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.175103087 seconds)
    (135/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.220964861 seconds)
    (136/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.119469135 seconds)
    (137/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138139496 seconds)
    (138/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.120932769 seconds)
    (139/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159041593 seconds)
    (140/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110253109 seconds)
    (141/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.126193055 seconds)
    (142/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114200858 seconds)
    (143/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13525461 seconds)
    (144/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.136562228 seconds)
    (145/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094217874 seconds)
    (146/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.092097082 seconds)
    (147/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.116660351 seconds)
    (148/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093473296 seconds)
    (149/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.130279391 seconds)
    (150/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.092475531 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.154115752 seconds)
    (152/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.092277428 seconds)
    (153/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.147810026 seconds)
    (154/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111950145 seconds)
    (155/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.158813884 seconds)
    (156/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148050355 seconds)
    (157/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122330459 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140201575 seconds)
    (159/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.183677711 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116356051 seconds)
    (161/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216674949 seconds)
    (162/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.1618387 seconds)
    (163/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0927701 seconds)
    (164/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.115836323 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114384802 seconds)
    (166/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.151536562 seconds)
    (167/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.117242624 seconds)
    (168/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.11750307 seconds)
    (169/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.103268652 seconds)
    (170/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.119136215 seconds)
    (171/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.135250842 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134062762 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093374546 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138193599 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139098637 seconds)
    (176/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.093434676 seconds)
    (177/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.117660864 seconds)
    (178/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.093162364 seconds)
    (179/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.092196526 seconds)
    (180/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.117175939 seconds)
    (181/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.150109585 seconds)
    (182/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.103024975 seconds)
    (183/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09307578 seconds)
    (184/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134932512 seconds)
    (185/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.148489263 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118482329 seconds)
    (187/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.116541392 seconds)
    (188/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110860123 seconds)
    (189/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131067891 seconds)
    (190/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.094473085 seconds)
    (191/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.117943992 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107465706 seconds)
    (193/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130398462 seconds)
    (194/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114410543 seconds)
    (195/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138524599 seconds)
    (196/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094255562 seconds)
    (197/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135010303 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11086639 seconds)
    (199/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.117589328 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113784332 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144536127 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122806909 seconds)
    (203/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.15210543 seconds)
    (204/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.092884517 seconds)
    (205/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.117743175 seconds)
    (206/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.094564271 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.132102413 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113568289 seconds)
    (209/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.118284246 seconds)
    (210/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.165548062 seconds)
    (211/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09554196 seconds)
    (212/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.117581788 seconds)
    (213/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109364164 seconds)
    (214/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.116963188 seconds)
    (215/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.135687821 seconds)
    (216/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.133365719 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122938031 seconds)
    (218/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.117735954 seconds)
    (219/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.102730478 seconds)
    (220/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.117538562 seconds)
    (221/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.093754144 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.143881204 seconds)
    (223/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.094657301 seconds)
    (224/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.118157312 seconds)
  done (took 34.584272064 seconds)
done (took 35.485831235 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.442175565 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150004607 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.143562018 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117890573 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165297923 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120414107 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14673847 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.148218484 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116412407 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134540051 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.107539767 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.144821512 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.142596387 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.138188345 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.147147022 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.111077715 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.134916936 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144506367 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119934357 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.146525373 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140112538 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136912537 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.143154473 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110389321 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166083829 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113119518 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.14461315 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117894365 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.143235851 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.134780271 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118217145 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.134944589 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.121194272 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.148366084 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107871808 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.136108829 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107739133 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.126239632 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134983105 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113377762 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.142747284 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110018423 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.14615269 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111228398 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.138438033 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133356587 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10834641 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.146887991 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107750872 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.143215592 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110735027 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.148857488 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107961709 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.134332975 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.132828062 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111559399 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.143914814 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108983834 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144771231 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107662039 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1368304 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108591772 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.139552428 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1088621 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13656703 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.13502215 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111893501 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13643295 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109188002 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135715999 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108350201 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136141183 seconds)
done (took 10.610780091 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.118640843 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.194301855 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.168259449 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14390159 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.166312469 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.151715779 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.149124074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134286778 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.145697592 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.161171707 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.166856574 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133760559 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.175917767 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.14081755 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.126882771 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.138835856 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117369025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.147877454 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.172630318 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.160032954 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144250959 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142894188 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.166224764 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133223278 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.141532398 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163156299 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11939242 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.139271656 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.1401737 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133260412 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.160693924 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116298064 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.142680117 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.156346873 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123322809 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141781516 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.151441799 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113784925 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.139545789 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114530191 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.15424831 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1554165 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114194257 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.151501367 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138359919 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119269836 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.142957086 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116884321 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.144054625 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112306672 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.144698573 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.166327866 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11620757 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.14266701 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141186254 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118831372 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143604943 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.142561669 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.117848998 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.143758888 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115036001 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.142551232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119121961 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.162442786 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.143173437 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140866463 seconds)
  done (took 10.293694599 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.138892616 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.177317259 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.152147478 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126668378 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.147413825 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.13211625 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10662943 seconds)
  done (took 1.932384997 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.112162782 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.166002832 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144915342 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.170583665 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.157051603 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.174154046 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12852688 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.133911516 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135060933 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.145664982 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.164281906 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.193597595 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109827288 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147066347 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.171000397 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108356003 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.173756732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.107732177 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142601486 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.170379003 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115383061 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158901671 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.149417866 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10936452 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.157550578 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110628572 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.208679938 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147499244 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108291605 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.140630453 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140010683 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.21317099 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134695555 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.146201893 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10672623 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.166286453 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.157911016 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114554109 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.164015219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.139540409 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.132776235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142752891 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.141004425 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116823479 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.142299584 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124508542 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148021577 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.143106969 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115081388 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.164656226 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12046529 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.157719639 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.135725988 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114225964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.145578463 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115963522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151280209 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114121251 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.164945943 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142757276 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137143634 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.166156465 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.15902291 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.162964883 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128790543 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.158658227 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132099418 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.141948513 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142787676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117573602 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.164594935 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.139116693 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120937986 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.153894353 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117955365 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.164100934 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.164145152 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113655063 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.148511753 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113039095 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138773539 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10916473 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152480799 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137596205 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112026945 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153651194 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122429745 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.14139448 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.137853628 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133407891 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140805039 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.147324035 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121680226 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139247511 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126827222 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.166502946 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.147579532 seconds)
  done (took 14.721197719 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.115432622 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.135511109 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116843754 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13673835 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110665498 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.136406114 seconds)
  done (took 1.72128603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.149359161 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.142687712 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153803713 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119274046 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.200942816 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.163564182 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.165984564 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121746376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161566676 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.153933192 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13784339 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.166713484 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.163663902 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121861914 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.167088726 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145764606 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.141537325 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140501712 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127087985 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141523007 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.152794034 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12111737 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142529224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.160594474 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119960963 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147333847 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119895846 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.155122453 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153200259 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120633539 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148725474 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144907674 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118388108 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.147490634 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.168018788 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117720784 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140302467 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123421924 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14564146 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144932705 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.140479311 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141620849 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.153217384 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12235016 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.147264404 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.143804382 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123227516 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.14673473 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.165953933 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122803619 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149857372 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144087529 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121372364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148796014 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118401309 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146752521 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148535612 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140851571 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.14956506 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.144679523 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117012489 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147201623 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146575251 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124363127 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143623694 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12305334 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.144747292 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14499997 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115386503 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145819077 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122958355 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.142923679 seconds)
  done (took 11.19232334 seconds)
done (took 40.812434939 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.212144782 seconds)
  done (took 2.184574238 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.926829712 seconds)
  done (took 1.901196867 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.696772241 seconds)
  done (took 18.698163701 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.593816181 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.690192592 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.060875701 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.190506349 seconds)
  done (took 3.510408128 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.01550906 seconds)
  done (took 1.999368512 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.355425865 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.297856962 seconds)
  done (took 1.629284808 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.874792634 seconds)
  done (took 1.86310908 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.407013775 seconds)
  done (took 3.390256102 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.399530651 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.224083093 seconds)
  done (took 1.608726789 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.633603887 seconds)
  done (took 1.619658958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.570849842 seconds)
  done (took 37.561955388 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264673255 seconds)
  done (took 1.259481492 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.329553649 seconds)
  done (took 1.316599017 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.717416492 seconds)
  done (took 4.709614677 seconds)
done (took 84.23719453 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125838566 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.151042511 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125253387 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.148157096 seconds)
  done (took 1.542586716 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.132592989 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.144345333 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12212382 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.145651448 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126881202 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144982345 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144385667 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.125003121 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.146022451 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.119804379 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.144830049 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.14426296 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121695346 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.143313158 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116519898 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147165687 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122381395 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.144479429 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145366844 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120129062 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.144852644 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119942952 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.148611066 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118703162 seconds)
  done (took 4.234237955 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.127530464 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.141178063 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118183465 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.140967101 seconds)
  done (took 1.536162171 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132415063 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.161338338 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.134453762 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.153432878 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.162210637 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133093552 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.142392959 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114307299 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144524808 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.152517703 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116736442 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.16440273 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.160222221 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11136392 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15386146 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107009953 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.13809029 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134594554 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.153317565 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153053168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.113538432 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.151560849 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122071368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.156601829 seconds)
  done (took 4.371253342 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.226603001 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129306278 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.166101864 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.192978297 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141244116 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.139296375 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.167997624 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.119355889 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.145240512 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.112758302 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.140934821 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.19880547 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.116809366 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.145359512 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.140059475 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.120617591 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.146957058 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.143616953 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.116820119 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.154476872 seconds)
  done (took 3.968355035 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128313989 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.139624381 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109939987 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.139855428 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121889831 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.143605447 seconds)
  done (took 1.791715967 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114444979 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107677938 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.136678894 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.107006486 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.140296933 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107729348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.133745256 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108836647 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.134882009 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.107685321 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.134659287 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106472813 seconds)
  done (took 2.444222443 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.255000642 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.139881356 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.139619548 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115130831 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.144682339 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114724824 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.155920442 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.112044365 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.199633414 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.140480094 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.156255082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197786387 seconds)
  done (took 2.88292442 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250168127 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118341444 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304474446 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.410217071 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191704259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196781336 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303062273 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199607117 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.217399207 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163015741 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228791199 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184284894 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180579977 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208771576 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137532874 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.219837947 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231523888 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235291029 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176624914 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23936041 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195268403 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195653902 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210448754 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177963961 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161522375 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18626194 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114028809 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152498458 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204440368 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199252283 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206365319 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176405455 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163564046 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235897861 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285293305 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216199987 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345374422 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161567303 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.219807898 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.214440618 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303992813 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138176508 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256136528 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181071645 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127820781 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212814243 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182425998 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.231306757 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1301071 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165481259 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218178854 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204806774 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.236870449 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137826769 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.352564017 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150799409 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169659051 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207519284 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249547913 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221813224 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194833725 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118368431 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23967399 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21311272 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210996035 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170274435 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.198157971 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120149765 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206235562 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254953852 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210598416 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196088159 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.214713862 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157301764 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191860217 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199213606 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181136998 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208636414 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188615484 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115915641 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176415447 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162897112 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123844069 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218505835 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146117795 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23718228 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159999459 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.213508288 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239602298 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185213504 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189169929 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193150271 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195949863 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173192597 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.14109956 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145234958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189858174 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185138057 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156528277 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184989955 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170347181 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122041257 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178759283 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.145735309 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185207032 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130785866 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19621662 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192153241 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.153853507 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192694837 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177260351 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185856561 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201515608 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216412749 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128189765 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157680199 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227013505 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185573637 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.161909865 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207062042 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217850612 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.191512047 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163455086 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202448068 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227727134 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167789765 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220944834 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170987361 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130764635 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17905677 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187987772 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185117676 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.182620437 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153415468 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178913682 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227941013 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150175071 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133930985 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205645227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150758106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122973292 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170152194 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163196321 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.167013514 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.17646562 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135426219 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182590609 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187434481 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180605792 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188611483 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169380606 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23192807 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157320207 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.187956069 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145695065 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.142291265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.211209771 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21569534 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154070697 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216874592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.197331387 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253193404 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192116085 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126416435 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212854931 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154121069 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.113553512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196833195 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187252611 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190378189 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211835995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250764641 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.198115659 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179642441 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176312012 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199096986 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.204926207 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184415236 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.17187842 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16114115 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225317619 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117453587 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147006245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.122682267 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166460665 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155734043 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128071008 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242825446 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193572598 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21719816 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189892889 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164996566 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214617352 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120307244 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195124358 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.228297663 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135026939 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215687136 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238791592 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194383867 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139933596 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202439601 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143250453 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119533638 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158404516 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194578614 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158348632 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130668339 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172120886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212462359 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231702664 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146537702 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262551394 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199595443 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225088257 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144093491 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163434454 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199887698 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184124934 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.212815032 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157665557 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.190231543 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20768966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172276027 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226833732 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191553211 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198527532 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231588031 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.18390304 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155930545 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176285482 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196521688 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138150086 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190931273 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173212853 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16000642 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180398004 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132091302 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150548519 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212357663 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169600483 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211090166 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184456761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233130954 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121777325 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1718624 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189725529 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171084384 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11282053 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200600656 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246680835 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143242748 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186250135 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204584845 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156277317 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341349083 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224580708 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244470054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136497899 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170325584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191509493 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188063231 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194582404 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213684182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171901717 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211902133 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186603035 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139220157 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160947611 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17448474 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178245231 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.179796905 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130511508 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.181590751 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168651134 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21567369 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171482837 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18702853 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192372053 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173123834 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.153092602 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166341563 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233532078 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185519416 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209164656 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.183975104 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193863758 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218603325 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149505913 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122569241 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.151265907 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213494079 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156436017 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186827112 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.210775161 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227612021 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18769395 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197503971 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165002733 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.146983786 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158499163 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17534532 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25854965 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169148597 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133115949 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251957656 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148474203 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155908198 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192703518 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312336416 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173114009 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204780979 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.113106931 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.331796788 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123028958 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157132392 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188622187 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203097707 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.126591746 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211756363 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192996726 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17304401 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18979856 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162329573 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219114728 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24262419 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201544072 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206409747 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.171182114 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187056843 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193077416 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207889902 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16936315 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.171662818 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190609419 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213967862 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.218297038 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156752679 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16191252 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190648728 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187304105 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238848164 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130681873 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217550643 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156642831 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196927524 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165514944 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117593537 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184419898 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.237907752 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13013146 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205137504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18634434 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155576905 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14931545 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152262027 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185519974 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172526189 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.153637005 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213037523 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.121648972 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192176959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212062255 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15450223 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184952989 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171603506 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12768138 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169782256 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171822693 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131211592 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.197996002 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214284767 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157454097 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206849097 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205210654 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1943632 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187357589 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170535656 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688859012 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122902016 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212172118 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174683733 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221391217 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176096646 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195177233 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189659562 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175741983 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201133177 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176656629 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225579346 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224279927 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156813452 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15797848 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171182228 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175166278 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127096063 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179452551 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190924658 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166392865 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130796513 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184968198 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172708563 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17230333 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164232502 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215951777 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144295459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246622835 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215751167 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135710054 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195694607 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239019559 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124017346 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189882354 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201759133 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168960023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180649808 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.155033181 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130100068 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21007644 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.148768724 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190985887 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187503154 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189126535 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162156276 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.160405113 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189520948 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169833786 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189462021 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120803307 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182181907 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186362359 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155545534 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.121619195 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183600368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187646536 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.186385481 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150604666 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170082839 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209012598 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.148170312 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159373964 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308605025 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18807355 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227062965 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.181202327 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128682833 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170077918 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183529827 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181597322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187366834 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.123498477 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158163609 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.156363349 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.208742233 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.184603793 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184574651 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21170019 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161296996 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247334068 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141115463 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.302972191 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165849645 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181928136 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.127089897 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154037165 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167694293 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131129549 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173386929 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246773574 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209953103 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151255132 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172035112 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152125213 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.118953027 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158111944 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190514238 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18236412 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185578096 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141600138 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.141242124 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17136515 seconds)
  done (took 90.421237843 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192247144 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.170694648 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.173112745 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.230119763 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195444917 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292961936 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.238371407 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263458364 seconds)
  done (took 2.862489524 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.129405493 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163234711 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.168693272 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.150228864 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.148322688 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.395371503 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162246275 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122347051 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.211893622 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.163330939 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.145984361 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.692218697 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.151510663 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14750466 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.140422699 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.122146948 seconds)
  done (took 4.308932423 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.569376092 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.576464909 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.278506586 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2690124 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.280240764 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.187393783 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.790371786 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.221499883 seconds)
  done (took 13.280188229 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.156933123 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168367642 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.296277803 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.203209184 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1875576 seconds)
  done (took 2.121237087 seconds)
done (took 136.761059256 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121788082 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.149332963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11963147 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150844968 seconds)
  done (took 1.627217365 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.135821299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.133869468 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105004666 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.1291155 seconds)
  done (took 1.600956049 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.547211697 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101013361 seconds)
  done (took 1.776700609 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149605764 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.163329829 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167943365 seconds)
  done (took 1.59437206 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.130461099 seconds)
  done (took 1.234151985 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125455988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.149264521 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.14510421 seconds)
  done (took 1.53617641 seconds)
done (took 10.47176896 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151774484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.452882404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438031556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134046273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747834366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.400241721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071553751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.184274216 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193105655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1129025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163337543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.721922796 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02647618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.387607706 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009936734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.387377879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696658123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146690128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149710624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115592362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.043797391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112966089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144561691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115289959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723376215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420105911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143623655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.400667185 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11357942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148412758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.403481132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142800099 seconds)
  done (took 17.709709335 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165611575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.210098195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152647518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115594499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.148610127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114118293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155840934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157448817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207627774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113824484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164119785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113587844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149009478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114031079 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167465764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11277215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147158509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115113867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.153205249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144814953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135084674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141912721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115423735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146146977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114251822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157222134 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113824224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.156135728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141195969 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119583325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.148475559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115281052 seconds)
  done (took 5.64373768 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.170121374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.219620098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.153482844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150448073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.198364458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.145592503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.23580886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.182839099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212398007 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11411376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165644103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112724337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.18586936 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.143141058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138298351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.143609642 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117019206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145875008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120738674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147496574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16395195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113948739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145138845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116720337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143833548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12836612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144288882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.156248392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114484791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148429043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120398733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144541012 seconds)
  done (took 5.966581715 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125571662 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.15215075 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133530849 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163157397 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118142638 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.151431028 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.121293084 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.146510343 seconds)
  done (took 2.228704396 seconds)
done (took 32.665372372 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141046062 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.158546081 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130508127 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154674951 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.148065729 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142641387 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126294057 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.142709595 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124231906 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.162407509 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113110608 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146008375 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130012307 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.150526748 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.131769445 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.154788785 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.165996654 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132067658 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144481112 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126621149 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.143696777 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136607377 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15134121 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114807484 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.170983675 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117525558 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.162702183 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.148287626 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120129844 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145256656 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131827944 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149217321 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115406059 seconds)
  done (took 5.748893976 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.1486261 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.193200744 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.113246548 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.144759991 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.188615128 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.11497894 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.174506326 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.112738384 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.143160352 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.111843303 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.142505847 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.140161503 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.179927684 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.177164068 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.196501629 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.154994314 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.175579128 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.184971681 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.141057333 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.185631229 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.177889916 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.114601778 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.18002351 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.187385199 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115552218 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.142141646 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.159398547 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.17681538 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.190424021 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.178061864 seconds)
  done (took 5.873777963 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126838535 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.160896461 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141271988 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219250573 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.190091296 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.129018048 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.158934876 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135389993 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173678523 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.144509533 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12669016 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180457405 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132538482 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.155383406 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119410753 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.162957267 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.166438396 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.117395554 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.151901128 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135124118 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166118715 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129591112 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.16054123 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.125226358 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.147463509 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155780827 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120529333 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.158511866 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12167197 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15452764 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119242127 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.150424362 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.119082205 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.155913967 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.148466235 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125661142 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.169824652 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124476606 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157886277 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.18307977 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.124890986 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.150178317 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.136442752 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.193850294 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115911028 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155577061 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.157302306 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125412433 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143835309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135939447 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.159994899 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115771824 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.16396129 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11464258 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.145211584 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153332736 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.117317641 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148400491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.123930854 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.15048876 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138536825 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.15467511 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121477708 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.148672127 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.120469043 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.14701557 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114574855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.152344731 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170190762 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122053424 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178368494 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115852015 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154227992 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123130478 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151938005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125423897 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.145688239 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122444951 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155374824 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121512561 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.155460681 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148783271 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120605991 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164080419 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132939326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155805817 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151694841 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12321667 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.14902725 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117594606 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160675282 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117349759 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.15128936 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125562844 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.147822513 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11860146 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155150416 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.120612415 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.146647336 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164667598 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121760879 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.144649297 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132924596 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146848495 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119800659 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155541358 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127918529 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.147198263 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.120955574 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.154562627 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113895512 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151584871 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120284559 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.146600283 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159687782 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128270835 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.15096688 seconds)
  done (took 17.84101818 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.283178666 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.255385679 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.22602438 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.345796388 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.172884027 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.177442242 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.252645123 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.203334071 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11773711 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.191753008 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.207213716 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.213183343 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147051732 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.149329928 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25506418 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.353843723 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180891514 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.193455061 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.191246196 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.172615886 seconds)
  done (took 5.438314576 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138976084 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.190989706 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.178992942 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.177015089 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117535315 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162385694 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116168359 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.164664825 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.116337019 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.155796756 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.145825112 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127114726 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.149303172 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.121084292 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.166334255 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.165758282 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122694123 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.154803264 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135660844 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.154658615 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.149099868 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.170225755 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129101627 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.179732035 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.126221129 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.164904967 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11494242 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.156278747 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.143012653 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.116858349 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.154153823 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133565484 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15587259 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.117043093 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.153944617 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.117113608 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.143891306 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116769632 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.150356571 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120559861 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.167657525 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.150870289 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.117062158 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.147062379 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.126500365 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.142485062 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122885689 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.154986012 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.121676066 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.158375343 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153943693 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122921099 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155055534 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131141055 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.144671526 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126267534 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.16063571 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.151919634 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125188231 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.147099869 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114307277 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.152700871 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.115964391 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153663454 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.121896466 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165778608 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158640001 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116314773 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.155587497 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120875911 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.153249881 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135363498 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.171147306 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.147954796 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.114507326 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.170604296 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.115015649 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.135948471 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127462458 seconds)
  done (took 12.411404958 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.151676499 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.149225762 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139914891 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.188244117 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132403782 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.156842145 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.117639141 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.168957244 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.157923183 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126340513 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.156352984 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13297673 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.179139697 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.163708762 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117618202 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164378316 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124806642 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.193364587 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.171258302 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.151825867 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162019742 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122293044 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.163375238 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.161761124 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.154202853 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.16326371 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.185471809 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.12312745 seconds)
  done (took 5.4503629 seconds)
done (took 53.886627708 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.237667394 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4504036 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.222391787 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.24038205 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.22448348 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.244320718 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218880345 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.409853219 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.005906915 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.216566737 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.220654641 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.219910923 seconds)
done (took 28.068684854 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.226201809 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.822130108 seconds)
    (2/2) benchmarking "String"...
    done (took 1.581495018 seconds)
  done (took 4.552005406 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.214972202 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.214572367 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459793857 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.21458473 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.233305861 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.229627067 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.220234996 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.228898086 seconds)
  done (took 15.939130349 seconds)
done (took 26.071574282 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.276866027 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.407466238 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.479288003 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.230964995 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.216443636 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.214354458 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.22418016 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.256189673 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.229974283 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.206002124 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.21711043 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.482562667 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.204339347 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.611313059 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.204486788 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.226363749 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.231950577 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.443646407 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.218209916 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.278240669 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.200047243 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.22367748 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.236913464 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.238263151 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.226778348 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.21749745 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.235607491 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.201021546 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.408858743 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.221328296 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.262810158 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.217198016 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.239553118 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.232934866 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.329523964 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.246842978 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.409255423 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.21729899 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.20463892 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.218584515 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.40559429 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.650210329 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.221674908 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.203553515 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.228377226 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.286892024 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.204974813 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.966411473 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.224002453 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.202598948 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.253598104 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.604159686 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.224744713 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.218217214 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.217128376 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.471946189 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.221890029 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.268810089 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.248146844 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.220920835 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.221594517 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.216779576 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.259446202 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.217930509 seconds)
  done (took 144.444576184 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.219577679 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.221886508 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.221352719 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.284024761 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.221459996 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.221926429 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.217356768 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.219026149 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.222971176 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.251799211 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.220541781 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.221211396 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.228098098 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.17970479 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218750703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234051357 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.22100754 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.230769141 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224094769 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.220017849 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.222380631 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.222717302 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.23572416 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.219008673 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.226379048 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.296520733 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.263648757 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.225045727 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.221198329 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.220800007 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.222142274 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.269741135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.860844296 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.076089393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.234992861 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.251836788 seconds)
  done (took 80.907601761 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.220229606 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.22114099 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220725128 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.254409897 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.222311268 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826381669 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828340291 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.76864752 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.706590104 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.673360173 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.223748254 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536571827 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.222175003 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316878702 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.232180196 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.221748701 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.238242017 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247188282 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220583254 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221552406 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826855837 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236077562 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.213962302 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412254693 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.233306638 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256452751 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.621400556 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220816372 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257633092 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.559346462 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.268867596 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221067931 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.63826902 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.874294974 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338677304 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22352172 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25836834 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.221473592 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.505900665 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.22171586 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22336379 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.223227122 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226967919 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942108954 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.225491732 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.830424937 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226122157 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.227079916 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.222635531 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.221584623 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222760281 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.991677309 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.006662203 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.240102155 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.222720744 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.225502231 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.222638451 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222737926 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.25878185 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.043398146 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.344696346 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226978685 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.22790733 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25970391 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.224158943 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.275950433 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242222915 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.845773535 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281375791 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337230839 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835157623 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226821033 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323439562 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344600431 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223629557 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224996194 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225288138 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.225717035 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.336845576 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.221527216 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.653281121 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.404006613 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236941674 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.692398129 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.327931461 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.223793883 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641992645 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227142565 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.224468817 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03818162 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324872578 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.223622136 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227347498 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22727183 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.652822587 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834586941 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.498507684 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228996856 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.22742391 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.192533258 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.230095699 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.661974997 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803443299 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.943166611 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.229327545 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340030528 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.403551285 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.239523305 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.225119091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.687834325 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.22936844 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.285031692 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.225242354 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627195983 seconds)
  done (took 371.500305887 seconds)
done (took 597.990325414 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.92348567 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.872959476 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.01525124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.903811145 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.871689652 seconds)
  done (took 10.727762338 seconds)
done (took 11.869757812 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430676515 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.432974089 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293943366 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.434450736 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264159894 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452606995 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41165588 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.250734174 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.339486307 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.320870758 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341588672 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.286224959 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271780017 seconds)
  done (took 18.672986981 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.514442914 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.232454359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296674864 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488579724 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27143284 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506100508 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.537248158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.231212069 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368662687 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242441103 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242477088 seconds)
  done (took 18.079507652 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.503880103 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.230300672 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297338418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.485068271 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272131335 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515651071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.584837366 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.233294827 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377855675 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241970537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242112356 seconds)
  done (took 18.133685939 seconds)
done (took 56.031129701 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.277383336 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.444227998 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.255874464 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.247094737 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.238515552 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.241598046 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.246531483 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.239679324 seconds)
  done (took 11.335358734 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.239414184 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.234926571 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.234532056 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.236036738 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.239996088 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.238247401 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.23434735 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.235074229 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.235591457 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.238222272 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.234388104 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.237747144 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.234768773 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23700337 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.237788851 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.236725343 seconds)
  done (took 20.93220143 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.235712536 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.232691246 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.235657119 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.234986269 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.235134526 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.234281318 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.23718057 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.234066625 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.236435292 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.234492456 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.235757354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.235225955 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.235748854 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236660229 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.235107005 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235978847 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.235753818 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.235524722 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.240444657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.235927883 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.236083321 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.235366999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.236097808 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.236487146 seconds)
  done (took 30.805058319 seconds)
done (took 64.219090853 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.232644286 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.234689712 seconds)
  done (took 5.612502795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.299760509 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300330013 seconds)
  done (took 3.754353905 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.238623864 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.238443941 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.238436233 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.239063337 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.237603297 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.238454533 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.238855044 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240505984 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.238877829 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23948666 seconds)
  done (took 13.538927668 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.23921392 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.240025383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.236704956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.240887274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.23873921 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.237937716 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.236796556 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.238513832 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23880872 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.236467341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.239031149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.238291728 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.239624823 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.238206168 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.240392374 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.236874883 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.238916058 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.237436402 seconds)
  done (took 23.443984402 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.252336813 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.26192433 seconds)
  done (took 3.665058259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.378441811 seconds)
    (2/7) benchmarking "second"...
    done (took 1.283033816 seconds)
    (3/7) benchmarking "month"...
    done (took 1.356221315 seconds)
    (4/7) benchmarking "year"...
    done (took 1.343184729 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.281630157 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.259811281 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.279553469 seconds)
  done (took 10.331067767 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.243457672 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.433865199 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.544138267 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.831442121 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.242048842 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.28882191 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.074603786 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.286908304 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.277153115 seconds)
  done (took 14.374297036 seconds)
done (took 75.868890275 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.23427746 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.298808712 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.242586873 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.251846349 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.572844992 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.268284485 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.238478294 seconds)
done (took 16.259558875 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.227978735 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.23112272 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.227329806 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.23972535 seconds)
  done (took 10.074805653 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.239382557 seconds)
    (2/2) benchmarking "read"...
    done (took 1.587644205 seconds)
  done (took 4.980966011 seconds)
done (took 16.209695607 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24670258 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.243273935 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.243469631 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.241098255 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.243273187 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.239816754 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23944218 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.243262911 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.244083902 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.24287041 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.242798666 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.242788142 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245301105 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241732372 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240587237 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242495515 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.240472442 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241359352 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.24002921 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241517604 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243426269 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238820553 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.240126236 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.240829783 seconds)
  done (took 30.959738756 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.248443734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.243253599 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.244395092 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.243899192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.242275388 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.244238144 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.243782504 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.241262481 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.245811806 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.243769461 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240755376 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.241659492 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.243302928 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.241924924 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245219524 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.241389623 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24506542 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242081645 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245611018 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.241963549 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.245514884 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243931669 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.24215095 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243994815 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.245006188 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243271737 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.245059998 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.244382795 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246453814 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.241866011 seconds)
  done (took 38.468927129 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.251775368 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.25443778 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.24631441 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.245290917 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.244768757 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.245942903 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.246287847 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.243765259 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.245660292 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.246485005 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.246091308 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.243890916 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245128561 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.24672944 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.245484605 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.244608321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.246754428 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.246491926 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.245397062 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.246911633 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.24546355 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.248464777 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.248108115 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.246022538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.248013042 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.247337977 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.245847917 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.245923634 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.246370428 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.245523306 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.247480122 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.248650621 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.246318401 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.247739308 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.247295012 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.24727301 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.25102448 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.25518788 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.246300417 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.247742703 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250817361 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.247144114 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.247092965 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.246244764 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.247993724 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.246060823 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.247040718 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.246267987 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.251865374 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.248218937 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246345896 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.247848985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.247485898 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.247560577 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.248424251 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.247435692 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.248611921 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.246996042 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.248809808 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.24831764 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246501569 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.247025639 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.247286622 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.246486966 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.249481988 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.248074514 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.248553234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.250593426 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.249772805 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24880092 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.250339274 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.250094882 seconds)
  done (took 90.979913194 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.250111774 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248189993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.247811666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246156901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246187422 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250141557 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247355723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250065286 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245804388 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250803477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249956039 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246697787 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247660904 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249510956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250218207 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24667528 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.249199999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247024309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.249546241 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24952341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250671761 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247875569 seconds)
  done (took 28.626568508 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252015095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251132234 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.249444352 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25273689 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249070243 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250844125 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250554579 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252002859 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251143387 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247530089 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249849654 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250835888 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24914321 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250278344 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249694969 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25090065 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250148349 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249979488 seconds)
  done (took 23.668679993 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.250101494 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.25026576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.254092425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.249385095 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.24900014 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252334411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249192194 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256279096 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.251139344 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.248684751 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.251537469 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248445806 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.25047162 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246708841 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250308748 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249136182 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.25251016 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248933036 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252910801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250117984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249781094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250225967 seconds)
  done (took 28.672247891 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253086192 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251992144 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25468065 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253438628 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250656647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251637379 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.254070889 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.250718867 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.255491589 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.252873947 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251768043 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251960499 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.252212066 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254565783 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.251492974 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249265168 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256461187 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251800269 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255272158 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251759076 seconds)
  done (took 26.220555311 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263068043 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261173694 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262176166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257410549 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256545672 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256262114 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257118685 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257520654 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25514005 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25718385 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262252954 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257203926 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257798786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255778626 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261221298 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258814672 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257060979 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256957734 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2570407 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256780222 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258050851 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261496836 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260210559 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261455374 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26688328 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257192462 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258884077 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256572425 seconds)
  done (took 36.410691842 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260837792 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257624836 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.257682231 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.25572002 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.254823448 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.256268842 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255209935 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.255060216 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256537091 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258671335 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.262730522 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.258332464 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258489319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.257330457 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258832502 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.25852696 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256492181 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.253738937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25741413 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260111083 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.261783969 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263865346 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.262253418 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256294492 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255108758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.25860389 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254927159 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254942321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258629087 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25849999 seconds)
  done (took 38.906672512 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.500789308 seconds)
    (2/2) benchmarking "in"...
    done (took 1.295573716 seconds)
  done (took 3.963276234 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.256294377 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258465267 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.25931924 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256719688 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256446243 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260071318 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265109669 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257937918 seconds)
  done (took 11.236989056 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.260351435 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.258644305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.259916601 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.260090643 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.259687361 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.260415444 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266228118 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.278331833 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.260270939 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.261403155 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.269858141 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.271592182 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.260516558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261410572 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259098176 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259083565 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.265370763 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.260115221 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.260094741 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.260421494 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260304924 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262582439 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260702419 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.259245191 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262348698 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.27190818 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264509372 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.260716888 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260138223 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.265480241 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.259965292 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.256976427 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.261052286 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.261482589 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.269122104 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.260524397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269195483 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284603588 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.267664567 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261932274 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263115914 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.261947237 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.263357707 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.26605966 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263667729 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.262622957 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.261493683 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.259541547 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.262731695 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.267855471 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2700941 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263936428 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.258720353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270271638 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.26396136 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267517893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.28033961 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.266213985 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276153752 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.277178665 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.276841897 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.29026474 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264266091 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.26365574 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276424029 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.287983895 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274616015 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.284200272 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.260657349 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263702867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274379325 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274221893 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286811574 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.262083857 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262686125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.268483933 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26467932 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262315533 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272219578 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.292342774 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.268954068 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271467382 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280142295 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290621934 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.269927365 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.270500926 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.268279994 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.272111739 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.272617538 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278374613 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.28605652 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.272381393 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.269856522 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.274751178 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.270629542 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.274124274 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.268163323 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27428918 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266003762 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.266216556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268598547 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273896731 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.280405414 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268499323 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268023685 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.27660892 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.267936393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269686893 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.272136531 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.265945988 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269847056 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.269412155 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.274997808 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.269400046 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279647773 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.276887287 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.269088496 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.266202328 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265987151 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.271690163 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280879985 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.301177245 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.269678465 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.270990802 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.277060956 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.280528735 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271636471 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.274448141 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.269662158 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.271025162 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.264376404 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.270810488 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.274797632 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.273146431 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271301633 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272232726 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.2701069 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.269877784 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.270773885 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270997477 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.273707114 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.269290557 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.27881724 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.27344609 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.271407419 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.268709071 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.284013632 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272875638 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.275833213 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.271325405 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.272346281 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273816014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.274849841 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.271163172 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275448583 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269471995 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.273325427 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.274554617 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270473728 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.271130236 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275663798 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.27605221 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277108193 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.273693506 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.276933454 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.274843586 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.270653859 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.273331129 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.276579826 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.270621685 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.272890486 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.276798245 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.274731183 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.284907944 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.278413885 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.273271026 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.279570381 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271630718 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276009442 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276982085 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.274614433 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.283961748 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.271991539 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281657391 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.272839896 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271534626 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.271302421 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.271556926 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.272315001 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275604637 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.276477921 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.284821774 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285754154 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295914564 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.276085366 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.280737958 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.277117557 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.276334568 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.284710336 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27480605 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.273838275 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272802783 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279539478 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278642995 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.279214693 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.279837311 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.277296218 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27898469 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.277617938 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.283419495 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280173376 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.279563792 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27578381 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.27297956 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274408516 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274558342 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.275302666 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.271149997 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.277411817 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.272263202 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.283209342 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281374456 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.287372543 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.273463934 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277138509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279609719 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.285668472 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.279317183 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.275813461 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280181317 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.281309307 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28371699 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.297536425 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.280534338 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281601584 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.297643583 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272662609 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.28183628 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278769356 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.276654172 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.283615328 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.283762803 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.278798896 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.277672451 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.281422124 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277035073 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277464376 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.283666171 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274067554 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.274737081 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.283596908 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.281139903 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.272261854 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.284245914 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.285767816 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.28170308 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782004132 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277528545 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.276035353 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284576886 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.281017807 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.285096346 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.279265397 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286211442 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.292867674 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284450475 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.282830809 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.287826639 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.288150023 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.289284116 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.286788803 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.284846073 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.283275615 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294572148 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.309571098 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288681279 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285747733 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.282379444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291033475 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.286882898 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.290616314 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285751512 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286979352 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.28210382 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.283771168 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.283446393 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283577657 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.286664218 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285682574 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.287430771 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.288703141 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.286163735 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.288370487 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.288685732 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.290182781 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.287875864 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.287799641 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.289695543 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.286146578 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284687724 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.286980914 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.28662871 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.296077781 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311897314 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.288972502 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.285991083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.289606943 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.289886943 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.290233083 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.288901184 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.291671049 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.293045062 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.29308106 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.292725901 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.29166171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.298334738 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.291693744 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.29023326 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.296095606 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.290500683 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.285559252 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.288852898 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.285373957 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291319214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.307969997 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.289250398 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.286215212 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286968335 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.292867939 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.287750989 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.289599166 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292570929 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.289360716 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298900553 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.316750161 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.295899387 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291017512 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.287600876 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.290076846 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.29281234 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.287888481 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295438498 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.293042402 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.294176968 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.290377176 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.29187786 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.288605769 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.292083795 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.293132726 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.290511476 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.293576169 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294863224 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.318337994 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297688858 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.295546223 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.300015145 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29538321 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300534542 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.316527729 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.294456923 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.29478095 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.293952357 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.294634563 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.293482446 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.294081603 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.29306292 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.292263032 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.297099068 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.292020909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.295792542 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.294240711 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.294791681 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.290578968 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302468658 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319083795 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.298514983 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.299034971 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.292251829 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.293401842 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.293868537 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.293970696 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.288579009 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.296945441 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305198272 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301812543 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.295093503 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.295271659 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296381232 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293409945 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.295362361 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.293848249 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.293533913 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.296182426 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.297348563 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.296257326 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297684558 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.296433752 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.297057718 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298376859 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.294182327 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.3064358 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.29840958 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.297809398 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295417136 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.29844276 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.296672095 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.296638284 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.296051107 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296689255 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296920376 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.298568813 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303852717 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.30399095 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.299823576 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.297278053 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.297460004 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.296939926 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.296949498 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29765927 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.296823731 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297632421 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.299692415 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.297135745 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.29873557 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.295575999 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.297496504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.295562564 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297878225 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299948636 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.307530263 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.298231192 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.294873361 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.297645291 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297385163 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.297009597 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.298395876 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.303015948 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301807489 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.308732767 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.30736868 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.302731916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.299067873 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301950467 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308544052 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.298402395 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.29959279 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.299725595 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.299787177 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.299330417 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.302322273 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300185003 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.305427778 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299966023 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.295820746 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306877404 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.325203464 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.301050718 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.301677105 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.303529365 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.300657226 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.296282794 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.300619145 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.300389509 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306075111 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.322873561 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301691017 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301993507 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.300804883 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.299807566 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30552368 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299968062 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.301260543 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.298997339 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.302120019 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299988271 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301351688 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.297728196 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.301714837 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.300498327 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.303275158 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.309299085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.299482839 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301895125 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.301645186 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.300403313 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301140422 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302654862 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.298856384 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.298701536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.300010704 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302681225 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.301754142 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.303412198 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.30242873 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.302802406 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.30066817 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302347908 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305381645 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.314252216 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.310135049 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.300633965 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.300377871 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.303952656 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.304415427 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302856777 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.302834192 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302591523 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.302093164 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.30132866 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3031192 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.30301888 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.305846515 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318909981 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.327339486 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301139298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.302668302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305712006 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.30386235 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.299536729 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.30354817 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.306081015 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.30648141 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.311229553 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.304926515 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310005347 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326224565 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.306598198 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.305712866 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.307053606 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.312497983 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.306134258 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304027803 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.30480191 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.311105603 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.3198774 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.309709711 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313989066 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.335138079 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.327115649 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.305190486 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.305582601 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304955353 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.303663661 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.30683715 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.30747666 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.30700601 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.306750472 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.307527819 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.308570549 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.309906999 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.307376143 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.306368095 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.305932837 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.305830382 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.304447357 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.303484033 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.306299538 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.306772493 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.307976909 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.308028706 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.307162538 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.309037015 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.317288434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.331972137 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.308178996 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.306198373 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.305852601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.311710814 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.310239802 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317474175 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.316638504 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.308194886 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.30831562 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.308608323 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309636638 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.306947518 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.309719126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.308331303 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308714855 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.305738083 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.320357078 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335138899 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.312182314 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.309833951 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309434909 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.309417064 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306702753 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310209271 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305081477 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.310626271 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.313262849 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312415382 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.308452538 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.309840472 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.311941614 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.318045156 seconds)
  done (took 769.431358435 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307400305 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305722201 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30593396 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307352623 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307158087 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305903012 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307120679 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306111079 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305259587 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306731668 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307123077 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305150577 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.308889042 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306789465 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307567894 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308302181 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307135336 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306346091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307658455 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307847056 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308024784 seconds)
  done (took 28.665462663 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.30892513 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.308532083 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.3066923 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.311803935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308221749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311690015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.30757023 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309767569 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309473878 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30912394 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310294036 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310684823 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.309270046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.308687702 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308058232 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309326147 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.312794552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308435997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.313112605 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311910832 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311723843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.308790633 seconds)
  done (took 30.035172428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.313954033 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.31219866 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.312789779 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.31035157 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.312477772 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.309346332 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.309524054 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.311132592 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.311923678 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.312948555 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.310492026 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.315936965 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.319142095 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.318999353 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.314272832 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.312227248 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.314189283 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314076904 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.313555254 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.308264315 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.318585319 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.311989628 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.311064911 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.311805134 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.314838055 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.314983377 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.31659618 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.315950201 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.317643965 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.318589662 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.31537592 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.312442885 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.314746301 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.314707923 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.313672177 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.316245277 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.312261389 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.312411865 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.315524972 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.323446137 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.337277331 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.314973476 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.322165722 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.314558897 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.314793313 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.316538408 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.325392401 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.314361966 seconds)
  done (took 64.344323062 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.917711398 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.937038404 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.940915807 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.931718188 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.934710568 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.9318648 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.937682163 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.941858874 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.936175208 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.932870897 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.937562171 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.933671855 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.939687226 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.948902794 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.939889294 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.932354716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.935607306 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.937040936 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.946105806 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.938618828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.935729255 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.94438501 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.937383222 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.939385839 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.951989809 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.937814609 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.938616457 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.93901136 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.937288012 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.948382463 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.944238626 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.941054115 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.940375025 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.935331017 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.941915527 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.947591974 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.942483539 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.945876571 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.93952157 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.938854779 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.951731027 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.951426084 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.942850169 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.945398234 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.936177612 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.944351407 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.94708604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.939575091 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.943521742 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.940300127 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.943480644 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.951548271 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.943004176 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.940594234 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.943039587 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.945614761 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.945988957 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.94892451 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.942448582 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.943781376 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.937743036 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.940782078 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.949790639 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.940604588 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.939702589 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.939736123 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.937709891 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.953047152 seconds)
  done (took 133.215945444 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318326987 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.321154078 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319072335 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320053377 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320566032 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.318903467 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.320061783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.320167788 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.321120829 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.322542425 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320061111 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.322902808 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.319804569 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321686496 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.31980234 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320047301 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.321410617 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.319430302 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.320383647 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320918537 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.320418172 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.321016467 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.321559612 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.321788725 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.321625234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.320687341 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321570324 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320569417 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322537518 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.321337639 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321046119 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.321396908 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.322181269 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.320687419 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.322260481 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.321423046 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322214247 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321102977 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.322999416 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.320710839 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.323089956 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.322225914 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.321889449 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.32190919 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322561225 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.324007931 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320845258 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.322486696 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.322328637 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32299155 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.322258925 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322413856 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322885142 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.323646032 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.322776321 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.323920814 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323309443 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32305468 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32414535 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.321160503 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324851244 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.32049964 seconds)
  done (took 83.168946589 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323301489 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.322166639 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.319992082 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.318846911 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322798292 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.320448322 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.321203172 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.320970493 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321060972 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.322940283 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323711239 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322582192 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322049189 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323152083 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321119178 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321147294 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320581784 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321183027 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324111052 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.320147273 seconds)
  done (took 27.661512129 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.322144581 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.32322504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.323727249 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323232343 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.323371589 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.321283587 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.325689535 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323684857 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32275852 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322758523 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325189584 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.326030297 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321843363 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32327604 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326323581 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323083901 seconds)
  done (took 22.40963265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.325699574 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.326613412 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.326615143 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.326286286 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.325639797 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.32280484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.325378326 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.322193735 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.322003099 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.324914742 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.326260852 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.325716426 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.324699753 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.322652186 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.32338535 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.32692503 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.323318078 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.322415961 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.327186417 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.325799817 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.326930381 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.325438211 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.326930944 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.325224932 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.325309955 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.327035598 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.324809879 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.324553123 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.324403985 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.326641198 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.326723195 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.323769817 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.324265382 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.322757172 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.327244586 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.326498756 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.327083172 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.328228771 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.326413938 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.327915583 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.325296711 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.32524595 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.326561374 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.32811074 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.322048559 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.328385404 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.324003672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.323741022 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.326713991 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.325579538 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.328981859 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.330424521 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.3278012 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.328589828 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.329326281 seconds)
  done (took 74.149485003 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331573593 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328734205 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.326939535 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.330731065 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.330609464 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.326400257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.328413652 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.329405427 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327228963 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.328968436 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.327026082 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.330875119 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32602162 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.328723937 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.326905557 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328151718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.327309095 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328319443 seconds)
  done (took 25.14824966 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.326388883 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328307481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.330222023 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.327123058 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.326795964 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32925518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328057322 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.330016299 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330052267 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.327903383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326591018 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.330819937 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327892601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.329501116 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328541244 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328559387 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.328516532 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330719609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327186623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327588813 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331057058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330659885 seconds)
  done (took 30.470987404 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.328806784 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.327889612 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.330523308 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.346788192 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.351148221 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.330272834 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.329637442 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.328497281 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.351924008 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.385929986 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.379280203 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.35368312 seconds)
  done (took 17.380833212 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331030675 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330508753 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328982837 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331215405 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330807791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330205463 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32840894 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327959755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33176726 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329914148 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326665714 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331269199 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331596105 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332724779 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330269385 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332194695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329985366 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331106181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330593104 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332624219 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33039761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331520234 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328315168 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330638581 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328497376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330779725 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332833411 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33098926 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331530046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333727876 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331158943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330941099 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334513603 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331577697 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332987345 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334342318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330098277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334056947 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333309874 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330960285 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.333492879 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33128364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332612389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33119141 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333311218 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331336355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331344763 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332224614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33075633 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333922256 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334861169 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331161964 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333963419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33605296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335567397 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335129011 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333484196 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331249303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334704742 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331332077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332976016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336996065 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333695858 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335127781 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334516242 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333930073 seconds)
  done (took 89.151504228 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333027718 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332979892 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332327101 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333079839 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335202322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334679058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334804855 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335344584 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334601248 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334021395 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33637747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332814258 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334235156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33548574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333812939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334571878 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334476753 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333846267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333873632 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338460694 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33483355 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334757687 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334990785 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33339725 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332663905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336163565 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333887073 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333070833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334629735 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332932507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334906826 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333153088 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334435131 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334474538 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336589222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335848705 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334083043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335910208 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335356879 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339034178 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335041523 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337872534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33445867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336656294 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335815887 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333344934 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33518509 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33665571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337563199 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33503153 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335125826 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337221538 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335953149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335888909 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335834198 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33394038 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335595396 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333976125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335042689 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339847462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33498201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336693153 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337113054 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337919874 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336438331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337341797 seconds)
  done (took 89.364990255 seconds)
done (took 1843.86598795 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.501099516 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.45665568 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.337373749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.347354094 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.335775294 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.361666253 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.346554208 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.337140202 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.338442046 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.337833888 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.336797845 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.526982102 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.332089602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.337606598 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.338615464 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.434841822 seconds)
  done (took 27.253824217 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.3723161 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.351988476 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.472384148 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.365275635 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.373415921 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.555616722 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.407877253 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.343152833 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.542405358 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.368911319 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.334322315 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.373257305 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.348757099 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349925202 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.366854934 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.553771074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.62954794 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.33752125 seconds)
  done (took 29.695103434 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.861692016 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.371917405 seconds)
  done (took 5.483208801 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.365195739 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.347024921 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.343651326 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.34241386 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.334470483 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.331749499 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.343788858 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.340774786 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.355052603 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.486036176 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.351084761 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.358488543 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.36586823 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.345246816 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.344218488 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.391070411 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.494547799 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.34341759 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.340868622 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.351021147 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.346000877 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.451180896 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.3916485 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.345193375 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.488166236 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.3439803 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.343932361 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.348592323 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.488070739 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.34552678 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.345393113 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.344938836 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.346448265 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.336548078 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.85107516 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.378583711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.377779342 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.3564468 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.341423099 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.519082707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.345211526 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.351449632 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.351229163 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.836504214 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.49043273 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.481794674 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.359820112 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.368858386 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.347081252 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.420908578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.350459252 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.349562881 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.408684642 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.225187195 seconds)
  done (took 86.309453291 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.397736018 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.33921914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510490715 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.36762119 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.337193245 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340877562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.359587491 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.67367669 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.358752789 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338229401 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.705995351 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.913168078 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.363209333 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.348782107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.910994996 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.389572149 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340954395 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.360916315 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.342500836 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.346752713 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892031398 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342837368 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.34365759 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.44710731 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.380441654 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.843193483 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.349421473 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.356909054 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.342792228 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.337388971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859676753 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.369165323 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.372518899 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342055305 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.646796532 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.767287203 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.734049142 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.345733349 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366381385 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.343085859 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.368443796 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.899252541 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74569698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.34285132 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.343443172 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.869337149 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.344059714 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.344613839 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.349982518 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556616265 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.342743479 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.343718227 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.366698936 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.344356833 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.340595649 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.376208818 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.407237281 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.897878188 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343145537 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.343887048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359117265 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.339477707 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.340046339 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343523851 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.342357028 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.74996659 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561010023 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.341157219 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.752648465 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855658342 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.367383206 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918078563 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.361546856 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.371116617 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.543075137 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.346079887 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.344742336 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.886247555 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.357176629 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.340154068 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.730746927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.349482419 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.70192167 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.364994988 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.360766972 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903778632 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.351982087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.362772605 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.342234368 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.346567484 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.341655639 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365862144 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.653332158 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.394876793 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.339416221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.33922023 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.359202912 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.351605292 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.34491195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.346938152 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916110904 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.367410101 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.345713605 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.350810709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344140494 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.363166102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.3435787 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.343537065 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581835166 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.348465576 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.348765593 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342626588 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.341101711 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.355265427 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448403207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.347635085 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.711888422 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.348520885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.345909492 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.351562416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.34365474 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390493223 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344067592 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347734612 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270177467 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.64847928 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.371673891 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.347409447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346164925 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.363174168 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341366861 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.364947824 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.417976602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.348808913 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125639005 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.37935026 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.347254008 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.347353776 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.347611119 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.358897655 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.348242998 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346377323 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.654865431 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.640200305 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.562244983 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.349345952 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.350309909 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.121801962 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.384751174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495532798 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36403695 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345314139 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.607740053 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561976254 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.344768698 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.345673999 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.347772111 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567562006 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.350411168 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.66682416 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.889642735 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.367386527 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348577073 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.119582685 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.068724605 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.350358948 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.346883534 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.709474466 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.371147699 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.34250265 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.344015713 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.347717106 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.350348912 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.367114699 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.3474478 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.348116198 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.349184823 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.398679781 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.523024355 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.371568577 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.350038443 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.863277358 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369185094 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.341868865 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.369449149 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.351536965 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.348380231 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.3930318 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.350556902 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.37365824 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.346818531 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.350634195 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966460768 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.348252205 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.344707124 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506239771 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05329913 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.370254326 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.348947737 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.36488705 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.84820223 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904167994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.391849152 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.696701025 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.352671181 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.390403752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.352870995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.379167505 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862980376 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350025617 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353846287 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988202355 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.366469073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.780233658 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.349573174 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.351767871 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947270266 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.367656815 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.355638406 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.347873682 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.370010381 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613816909 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.355117154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.375978657 seconds)
  done (took 501.222221717 seconds)
done (took 651.20815249 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.351593947 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.353067212 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.339287668 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.351530316 seconds)
  done (took 10.660755941 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.358294853 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.356433249 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.35651437 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.35745189 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.359476845 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.358327328 seconds)
  done (took 9.40524824 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347751545 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.353142076 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.349886422 seconds)
  done (took 8.307619487 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.587870517 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.372927305 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.72514758 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.37389359 seconds)
  done (took 9.319609804 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.358193541 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.356434309 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.360036098 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.362549337 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.364895868 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.361805709 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.356874557 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.360804518 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.362553402 seconds)
  done (took 13.503114978 seconds)
done (took 52.458784369 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.577534006 seconds)
    (2/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.438028924 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.430457809 seconds)
    (4/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.491678536 seconds)
    (5/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.463356667 seconds)
    (6/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.470753045 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.403741936 seconds)
    (8/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.364568146 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.367096713 seconds)
    (10/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.337941519 seconds)
    (11/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.434394542 seconds)
    (12/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.196942181 seconds)
    (13/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.478328392 seconds)
    (14/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.573730155 seconds)
    (15/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.996939486 seconds)
    (16/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.008367142 seconds)
    (17/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.340464427 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.47182983 seconds)
    (19/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.350488685 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.533582833 seconds)
    (21/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.640775348 seconds)
    (22/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.490089884 seconds)
    (23/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.487676466 seconds)
    (24/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.445153724 seconds)
    (25/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.065999853 seconds)
    (26/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.070628467 seconds)
    (27/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.465817538 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.36451426 seconds)
    (29/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.535657971 seconds)
    (30/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371271674 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.363793551 seconds)
    (32/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.360941025 seconds)
    (33/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.545877634 seconds)
    (34/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.422790925 seconds)
    (35/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005778623 seconds)
    (36/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.364984878 seconds)
    (37/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.432577639 seconds)
    (38/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.382167082 seconds)
    (39/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.345140524 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.381292084 seconds)
    (41/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.44455337 seconds)
    (42/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.074500364 seconds)
    (43/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.435877688 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.437838414 seconds)
    (45/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.368421964 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361878634 seconds)
    (47/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.341986576 seconds)
    (48/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.369789178 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.126983961 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.138938707 seconds)
    (51/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.45771163 seconds)
    (52/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.429428454 seconds)
    (53/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.392539303 seconds)
    (54/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.556710609 seconds)
    (55/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.49922263 seconds)
    (56/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.372650031 seconds)
    (57/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.3618832 seconds)
    (58/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.358945338 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.500874616 seconds)
    (60/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.751128462 seconds)
    (61/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.496384534 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.479008264 seconds)
    (63/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.00630439 seconds)
    (64/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.273237079 seconds)
    (65/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.426897731 seconds)
    (66/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.250652158 seconds)
    (67/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.537312359 seconds)
    (68/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.498615633 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369094871 seconds)
    (70/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.529363097 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.352821794 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.418388993 seconds)
    (73/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.44675419 seconds)
    (74/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.452351693 seconds)
    (75/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.486374986 seconds)
    (76/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.12908377 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.493926906 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.433110324 seconds)
    (79/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.339508498 seconds)
    (80/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.402948547 seconds)
    (81/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.4923887 seconds)
    (82/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.142312143 seconds)
    (83/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.572752054 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.403734992 seconds)
    (85/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.377032697 seconds)
    (86/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.453762295 seconds)
    (87/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.408759018 seconds)
    (88/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.579705932 seconds)
    (89/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.371301771 seconds)
    (90/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.521467481 seconds)
    (91/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.445937974 seconds)
    (92/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.3643209 seconds)
    (93/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.465269172 seconds)
    (94/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.344467737 seconds)
    (95/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.592768906 seconds)
    (96/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.24370054 seconds)
    (97/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.138893516 seconds)
    (98/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.41662288 seconds)
    (99/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.009636892 seconds)
    (100/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.446471089 seconds)
    (101/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.35294171 seconds)
    (102/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.371439612 seconds)
    (103/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.376407247 seconds)
    (104/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.750701879 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.474669027 seconds)
    (106/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.438200697 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.403363766 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.378765387 seconds)
    (109/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.517385932 seconds)
    (110/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.374733898 seconds)
    (111/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.998944556 seconds)
    (112/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.365834512 seconds)
    (113/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.371559767 seconds)
    (114/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.347702411 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.413357466 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.456638853 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.366782915 seconds)
    (118/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.43895137 seconds)
    (119/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.356389589 seconds)
    (120/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.525486065 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.465767087 seconds)
    (122/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.400750686 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360706306 seconds)
    (124/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.438100229 seconds)
    (125/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.06796938 seconds)
    (126/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.572052759 seconds)
    (127/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.413982624 seconds)
    (128/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.501267882 seconds)
    (129/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.405279534 seconds)
    (130/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.356057535 seconds)
    (131/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.554002643 seconds)
    (132/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.145455607 seconds)
    (133/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.583016908 seconds)
    (134/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.442896975 seconds)
    (135/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.355533719 seconds)
    (136/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.380098231 seconds)
    (137/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37112026 seconds)
    (138/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.368457162 seconds)
    (139/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.381590242 seconds)
    (140/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36713166 seconds)
    (141/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.530881124 seconds)
    (142/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.378842713 seconds)
    (143/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373741034 seconds)
    (144/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.418134891 seconds)
    (145/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.359647517 seconds)
    (146/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.478537924 seconds)
    (147/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.440967516 seconds)
    (148/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.439497827 seconds)
    (149/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.40349033 seconds)
    (150/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.377892185 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.462906306 seconds)
    (152/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.414182135 seconds)
    (153/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.588129007 seconds)
    (154/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.376527917 seconds)
    (155/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.778407069 seconds)
    (156/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.458072463 seconds)
    (157/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.38200785 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.379043653 seconds)
    (159/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.408858739 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.483536622 seconds)
    (161/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.204315014 seconds)
    (162/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.586367572 seconds)
    (163/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.512669874 seconds)
    (164/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.456464411 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.573925688 seconds)
    (166/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.700645858 seconds)
    (167/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.374419419 seconds)
    (168/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.520897035 seconds)
    (169/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.378131101 seconds)
    (170/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.350813764 seconds)
    (171/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.390843565 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367790292 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.627864389 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.440858318 seconds)
    (175/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.419577211 seconds)
    (176/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.575032429 seconds)
    (177/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.275471829 seconds)
    (178/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.029123904 seconds)
    (179/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.38396093 seconds)
    (180/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.379510873 seconds)
    (181/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.357207002 seconds)
    (182/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.580349367 seconds)
    (183/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.521910874 seconds)
    (184/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.395751583 seconds)
    (185/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.37428652 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.447472582 seconds)
    (187/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.494091659 seconds)
    (188/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.393801527 seconds)
    (189/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.449062515 seconds)
    (190/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.345374056 seconds)
    (191/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.467374622 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.423273845 seconds)
    (193/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.426094173 seconds)
    (194/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.382167784 seconds)
    (195/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.364438979 seconds)
    (196/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.389586012 seconds)
    (197/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.375537114 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375696183 seconds)
    (199/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.128777602 seconds)
    (200/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.441747075 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.452798761 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.404282414 seconds)
    (203/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.472259941 seconds)
    (204/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.422167648 seconds)
    (205/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.358701689 seconds)
    (206/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.487598576 seconds)
    (207/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.479210217 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.426870703 seconds)
    (209/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.415943196 seconds)
    (210/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.377334478 seconds)
    (211/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.507017575 seconds)
    (212/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.392103147 seconds)
    (213/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.373290419 seconds)
    (214/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.513668679 seconds)
    (215/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.382481608 seconds)
    (216/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.478582919 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.54200048 seconds)
    (218/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.563778682 seconds)
    (219/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.550993755 seconds)
    (220/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.45335499 seconds)
    (221/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.015814152 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.597651792 seconds)
    (223/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.568877719 seconds)
    (224/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.148438911 seconds)
  done (took 375.966557758 seconds)
done (took 377.228527898 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.421166837 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.551035774 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.370092628 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.374124118 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415711512 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.370084681 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.406376304 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.382647499 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376692285 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374570618 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.371054132 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.380069017 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.389869209 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.412347785 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.488234944 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.385433536 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.375962878 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.377786456 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.417081165 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.435769871 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.418789454 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.42003783 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.389707486 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.369681455 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.420012138 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.423769188 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.381516704 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364242569 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371284892 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.418014438 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.373567591 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380979055 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.422431546 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.427039939 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.415399955 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37556173 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.417077438 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.551930455 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.409838429 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.412487475 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.377607089 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.426409388 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.386588604 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.38755651 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.422905584 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.389160097 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423478943 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.500326267 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.377235283 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359610885 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420079383 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.440794968 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.378313137 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.363315006 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.369540158 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.497844089 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.37779198 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423337827 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.376250765 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.415664705 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.488982707 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425914864 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.436188131 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.423322498 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.378295883 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.387937166 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.375965406 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.437848266 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.379421511 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419979862 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423044259 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.381805734 seconds)
done (took 110.587740761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.506878553 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.375454922 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.53599237 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.375507946 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.545225679 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.527855918 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366638432 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.373655203 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36959903 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.202684117 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.376037389 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371283207 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.37783176 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.373778667 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.511045886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.375282283 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.377198746 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.097542962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.380354383 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.525395464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.37760364 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373638106 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.378377947 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.207926994 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.373884386 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.370069222 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.52665524 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377378675 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.097567248 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.373620164 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.374458656 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.093929395 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.526510231 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.397659857 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385415931 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.380208231 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.549936919 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400434921 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.507679796 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.507951985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.538581857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.417350844 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.371103772 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.376674034 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.376517014 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.380233929 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374635329 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406533025 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.377319796 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379140298 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.09758308 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.388727068 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.374892823 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376151919 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.375741943 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.404787224 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.377599047 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.378442915 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.526686807 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.382550275 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.509937685 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.207913464 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.215300866 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.382455905 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.375757784 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379491665 seconds)
  done (took 111.554112797 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.446762253 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.458623043 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505533898 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400401655 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.433192672 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.50467949 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.382937239 seconds)
  done (took 11.413637017 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.386977672 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378266349 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430935784 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.434103366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.38061635 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.598288937 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377177007 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.395195243 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377527292 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.459129437 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.384384449 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380264263 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.390851576 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.379798984 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.431254947 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.3956207 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499830539 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.385759926 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385611424 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536410913 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378679546 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.391961905 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.457493417 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.39525659 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.381348717 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.389971171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.328143582 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38210101 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380785008 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.385296758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380775085 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.492335156 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385672389 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.381653189 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381390544 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.542243012 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.382817052 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383572612 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.38558701 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.385459053 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.384900274 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.386702298 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.385495921 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.382018196 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.382055686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406696718 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.386226909 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.382661498 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.383627709 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385766195 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.458410837 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38439874 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.383672636 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.382997349 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.464037348 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39319795 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.386813928 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379750634 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387974382 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383485363 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.538631674 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.435545701 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.384379553 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435098373 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385797085 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385168896 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.389749716 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.388184543 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442000741 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.390284057 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.437124711 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.383117477 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.608621732 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.410026584 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.390558206 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.387278937 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.38875497 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387299956 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.38189864 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.39589107 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.386703061 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.386685709 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.392430737 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383481766 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385852067 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.570969901 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.544770995 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384094437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.40177815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.39497113 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.387527995 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.46519114 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.393357399 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.384763343 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437783391 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502094998 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.460619569 seconds)
  done (took 143.125236314 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.40393268 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.402486255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.390810343 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.417853072 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.388625871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.390032573 seconds)
  done (took 9.677232625 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390872418 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38827702 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.387558728 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.386439278 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385979117 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.393326054 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.392126315 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389995451 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.390558104 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.38720369 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388855968 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38997969 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.391079804 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.391755096 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.391907805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391898146 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.385156624 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390095385 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.39225543 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390247526 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.390386587 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.390769009 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.39232123 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.392326195 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.395184167 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.393358334 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.414044834 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.392999449 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.39345729 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.397895301 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.408432221 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391075901 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.395329403 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.399298015 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.397904327 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.393510688 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395914851 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.396179436 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388135674 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.389633729 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.396820147 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389932559 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.392368452 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.393352343 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.387985139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.399062498 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.398779808 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.412743936 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390873185 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.394847147 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.389716809 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.389792635 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.392694133 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.391151082 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.394407974 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415498306 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.399574851 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.389160964 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.390858698 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.392547625 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.394773393 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387837408 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39385469 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.388714384 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.391764511 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.397391375 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.393584064 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397387321 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395437256 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.396333214 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.395906782 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.389448532 seconds)
  done (took 102.618969855 seconds)
done (took 379.663527067 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.229861731 seconds)
  done (took 4.515672332 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.428262395 seconds)
  done (took 3.722878892 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.789483831 seconds)
  done (took 25.090950435 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.384083982 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.473299327 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.411247654 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.389214132 seconds)
  done (took 10.944019603 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.788367994 seconds)
  done (took 4.082202157 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.380938655 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.386129146 seconds)
  done (took 6.064426893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.753185557 seconds)
  done (took 4.041343292 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.931725362 seconds)
  done (took 4.232034889 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.40857029 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.396421321 seconds)
  done (took 6.108756673 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.36663325 seconds)
  done (took 3.651578082 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.358280455 seconds)
  done (took 40.648200618 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.390380376 seconds)
  done (took 3.684647776 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.428835111 seconds)
  done (took 3.716030821 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.399599272 seconds)
  done (took 6.690240976 seconds)
done (took 128.488083266 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.380466605 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.378311749 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.38157846 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.380616776 seconds)
  done (took 10.803421298 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.440174783 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.439641396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.441167468 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.439438885 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440069513 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.440501137 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.414836294 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.410830812 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438549272 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441117883 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.440778221 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.441775804 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.441644921 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.41649758 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.437966024 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.442689004 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.443504629 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.441758082 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41886588 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.441594451 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.390069077 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.440455042 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.443101184 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387486416 seconds)
  done (took 35.66015031 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903946671 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.460659667 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.542729857 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.442973047 seconds)
  done (took 7.635944997 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.467594366 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.470097113 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480190443 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.516998747 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.531500302 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.481369084 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418163348 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409528044 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400866677 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.468275979 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.521639071 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.458527117 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.54315756 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39156646 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.596964042 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.389246623 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.392180839 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.470149526 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.517554847 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.535547737 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38934868 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.467487267 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.467085379 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.461040973 seconds)
  done (took 36.531246355 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.396486715 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405414183 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.389722675 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407271565 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388107403 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.391935241 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.396662293 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.396462441 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.388572345 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.394126344 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.391874419 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.403205115 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.397178037 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.392334555 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.398428235 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396466621 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.402230175 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397591278 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.39081547 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.402579835 seconds)
  done (took 29.223464093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.386677667 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.385092319 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.739944601 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641349061 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.38608181 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.387319811 seconds)
  done (took 14.216561791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.479132412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.630527135 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396129678 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.820532178 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.910470122 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39511782 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.396942189 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.686072136 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.037919236 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.028789974 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.463276814 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.476619256 seconds)
  done (took 21.013842623 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.394708808 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.391209904 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.412795534 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.408673886 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.463004794 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.407126523 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.407326663 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.38863215 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.466187534 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.469640176 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.402648888 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.469780753 seconds)
  done (took 22.379154213 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493821678 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394333902 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411607875 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451118458 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398545921 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.241681236 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478886963 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19771481 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.423672844 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669794455 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39516325 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495036525 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654524627 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392937891 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396279923 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.390295136 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626656201 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961486387 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399393938 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392310914 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430082744 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402925695 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402335313 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645843369 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401984012 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391743211 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.697327505 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396596826 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727335801 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4134667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403095357 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396789042 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673936664 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116623037 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51922554 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632175424 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402321155 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391384806 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.399953253 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.401191453 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414685369 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397907613 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403419866 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394680533 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393165545 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393789794 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203179342 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.425799743 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.39225474 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39360112 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704237025 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49398591 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399535831 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39308327 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424556206 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398719201 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.396368523 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534210707 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007508186 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400821542 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403880717 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.399073608 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39863129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396687199 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110003833 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403199177 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397549387 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399239523 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395650447 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398090465 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414487097 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396029142 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.4189326 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396434268 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202609334 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396925622 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400692035 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017005726 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398882155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.404427956 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624600742 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392700561 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395345023 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.394630778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39621079 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200627527 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404247692 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.381037704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447857678 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227504454 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664279858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418344765 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424913027 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616836892 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.378035118 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396003532 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.396608162 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401168678 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418042965 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202056794 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421643796 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.401290963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655692033 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.609563111 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410358667 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386028894 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948207639 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421835651 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.434905441 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409823009 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648733988 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.077883149 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418695166 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400491625 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419601537 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395733859 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276523699 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401933783 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.503060479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39915974 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69785489 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.326600819 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400865315 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467342409 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404161027 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399617616 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406427939 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404607037 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398622448 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.63408653 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435612266 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413792003 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.39805525 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399948231 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.39537341 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430467144 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.405271037 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621760135 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400657531 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676923869 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40061347 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398015185 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40041223 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.623269754 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.396241939 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.739438981 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665244714 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413562115 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418175084 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415752766 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42029978 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5076161 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424427609 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.414196372 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667593492 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.409014689 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.411043691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415424462 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409613145 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406717385 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.409206412 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42214461 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081863043 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376391615 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411162781 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297566141 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.415871342 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468204175 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406277347 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647361083 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.409835517 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424407319 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.40774867 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.398296757 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628392658 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412404927 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.410872587 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483317592 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.948986399 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105628951 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421803305 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.402564637 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.401733005 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.401322848 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404406892 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404785461 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402936161 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649010728 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423205492 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415498299 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093584821 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407799138 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411129354 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.415127912 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418264482 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.408369585 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403412583 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412369591 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409923606 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417800919 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.419312276 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548692243 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.416630667 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405509944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.922549137 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411277684 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402358741 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405211937 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438953028 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412960295 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37759227 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673634445 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407897863 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718893678 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417949276 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.426061049 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40690091 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411408372 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417726681 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.436712514 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438076857 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.417260195 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415749623 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411879175 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987385212 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282621263 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037058903 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411042347 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.414642889 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410884384 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216978894 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428562239 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405594421 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67995808 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22426555 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431590862 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962012736 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.438602838 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278298477 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721602385 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6417372 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404987918 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.41671225 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730102306 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624476434 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442073993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412855013 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412740213 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.394096891 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045471146 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432598962 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491633488 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226098449 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438729149 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412936851 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.429956466 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.431144135 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874959563 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433671032 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408508972 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417180955 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417539993 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37678872 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419076829 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407814097 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124871823 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414971765 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.963811805 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434239104 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655129592 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42352068 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411170228 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.406340086 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.419037871 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.664776021 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722178288 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41470131 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407519008 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056320415 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.282853086 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413679788 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41113966 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259946192 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425782789 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757356079 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.421400025 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.410744311 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412572526 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40910236 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41002881 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.407417841 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417526704 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379003253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976699543 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.413269866 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413326238 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41999971 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412897868 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667528289 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.423687539 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095485568 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646160646 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425656092 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439152883 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.416267751 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423542192 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.40153234 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410499823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409094913 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423849358 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637133619 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414342088 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.394354514 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498860954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624408068 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413146491 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409443312 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694857121 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.414032406 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.418008581 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305947303 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446243725 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425048613 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417492827 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424847288 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461352584 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480577045 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660602429 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.430262434 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.422763771 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87592852 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448132356 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41654345 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.426197517 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508268675 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411767078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.438110814 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.183800214 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103678576 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245786617 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106058922 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733313639 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418195232 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423910738 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413521704 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576610377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413989519 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685368671 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412777119 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.4112985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460601963 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42698701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425701437 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629373337 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686153256 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413482142 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430337916 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419958305 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.415581528 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423447473 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.626168955 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983665591 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046253634 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415404951 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419442729 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235385167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711633732 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412104412 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412848294 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414380204 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.416088783 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.43705346 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.423180463 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432131755 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566398717 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733542616 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153264214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.450950146 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.444483997 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.931098624 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429961887 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677234374 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417014756 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.667029821 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107659862 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249873357 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69070883 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484222727 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665650886 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.41734846 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578567917 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.431131632 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420344983 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415089597 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416043257 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.414533808 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425334784 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096145606 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68339903 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.419010949 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.428822909 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453504363 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.428098306 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636084208 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246545095 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640973785 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426832747 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423174096 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414295041 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094146739 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736461897 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424968375 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418454242 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695380653 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422299612 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439738161 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.934018935 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.414943732 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044149605 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.394662072 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438339473 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421376865 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246634694 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097741763 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.432184905 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996179753 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426381587 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437661886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70128225 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.444932588 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420531876 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722188132 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.427480441 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420578575 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714985237 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.090713097 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319887332 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.434762122 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439715271 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.427559658 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423641695 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492512457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428149935 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425459854 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.900934029 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447616067 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427603857 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437123158 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.430046247 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428967241 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.453187916 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427957081 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.43136036 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.44114667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.423176408 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430511813 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588737573 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077557963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457988621 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.112212994 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.809835452 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682733689 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438971542 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.414292244 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.430341546 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426130961 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427824057 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423701121 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43162603 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052965543 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.443220536 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.440600224 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430811985 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.426309059 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639407818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429956929 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676716672 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44521689 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443821527 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.41306412 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426729204 seconds)
  done (took 1000.324335417 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.428269016 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.446758903 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.471739427 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.53074494 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.451863814 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.467040763 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.469620431 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.521064771 seconds)
  done (took 21.117701809 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.433269583 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.441886675 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.431542023 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.440790535 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.430924918 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.979265255 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.455215106 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.442102569 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.453877508 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.441097829 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.434661214 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.419843401 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.443721944 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.446684237 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.429642881 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.443628036 seconds)
  done (took 33.906017219 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.815796804 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.699002036 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.147919564 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.515320365 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.428606172 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.446474147 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.857001209 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.450932399 seconds)
  done (took 28.694783917 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44132062 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.440299437 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.441109274 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.440424277 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.442615091 seconds)
  done (took 8.536653901 seconds)
done (took 1271.330868928 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.431570371 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.435527445 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.434528788 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.435831392 seconds)
  done (took 7.068740663 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.415773835 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.414328841 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.414426498 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.426310764 seconds)
  done (took 10.002984699 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.271218638 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.166482387 seconds)
  done (took 5.770416476 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.945384699 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.957599165 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.939785209 seconds)
  done (took 7.180264849 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.76182724 seconds)
  done (took 3.096222637 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.366520719 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.433984636 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.129760368 seconds)
  done (took 8.264275709 seconds)
done (took 42.716889561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.429617382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.679144013 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.631745483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.446097644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.590396396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.5895114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.197325194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.434384702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.441801473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431480948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.443762586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.592009066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.18261488 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.680191366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.184070467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.679180245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.635289912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.433888554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.43350682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434015434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.198287 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42930969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429874859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.430659377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.59780673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.577283927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.441626295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.680864762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.448655245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.442511324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.582164342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431692475 seconds)
  done (took 84.596509744 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.43368954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.455421288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432287749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.461106861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431861526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.432456175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.457967569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432711448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.433474548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428848133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.462750381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432254026 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.4422112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.433402431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.469081071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.432749482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.459083539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430186166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432725555 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.451324601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.440968446 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.444860416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432032133 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.444199116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.432788148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.432125432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.471429068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.433461321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.434061329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.447028106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.432784163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.45309894 seconds)
  done (took 79.480899104 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.448443611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.432188024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.444900155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.439055424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.443311296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.444428519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.432099583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.431432979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.438131505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.432778887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.441103427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.438240147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.436389566 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.439238762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.432177926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.433569496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.45299243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432896504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.45282948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.455139448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.434413253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.443497459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.433885153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.445304222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.450232177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.443645856 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433887678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.448253436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.435194061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.438855617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.442143899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.446187569 seconds)
  done (took 79.433854313 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.718576402 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.441309326 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.445358742 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.434430518 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.44592763 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.442864915 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.436590566 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.717747729 seconds)
  done (took 15.419889235 seconds)
done (took 260.266118636 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.435183438 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.02352312 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.486207296 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.434765727 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468217923 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465113129 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.689780315 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.482913874 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.691114315 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.461168728 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.464796858 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.441668394 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.36612803 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.601580695 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.350202401 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.438371783 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.43094156 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.437548905 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.101638845 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.74447481 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.4654802 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.438142252 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.323812921 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.46293437 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.423955718 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538310386 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.557052881 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.674566287 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.616965515 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.536446302 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.045898572 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.458407872 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.458872083 seconds)
  done (took 67.356994467 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.44384722 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.570151709 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.446147492 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.44547458 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.572038825 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.447279113 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.444811293 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.446242751 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.445670809 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.44528551 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.444185951 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.447907474 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.446851346 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.500414583 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.578739992 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.465734588 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.444052752 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.56764234 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.447172407 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.441085973 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.495169349 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.449919139 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.451512037 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.49697113 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.44868462 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.447679835 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.571375738 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.448863439 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.450592986 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.569624005 seconds)
  done (took 45.663713567 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.448382076 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.111997718 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.295344044 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.460327562 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.44920123 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.453169755 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.794368066 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.45011185 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.452738125 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.455148807 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.038125636 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.453908736 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489441434 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.326561169 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.452607404 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.45129442 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.450545356 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.450639956 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.119957635 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.462961959 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.816391855 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.451284958 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.79178174 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.462212892 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.47490032 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451097278 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.454254589 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342862459 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.451125158 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.017855105 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.37802549 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.77859882 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.269505245 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.307677082 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.379956823 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453832398 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.44799248 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.0198915 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.450533829 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.450207683 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.792740133 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.454274824 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.308967042 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.159168204 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.471715304 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.452248156 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.360206334 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.018057274 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.739687969 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459097182 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.314390281 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.451747866 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.451000285 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.45311643 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.741791985 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.455308291 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.450072837 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.388581162 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45670666 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.797737512 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.454897542 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.454782615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122108121 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.454053088 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.109914486 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.455299477 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.461225742 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.476377995 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.295302085 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.455469045 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.181060215 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.47345584 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.452058241 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.017898281 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.098875596 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.410064221 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453823066 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.11048185 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.305812579 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.778963283 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.456067429 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.317134778 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.782593113 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.454089669 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.457187428 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.453615555 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.451639279 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.532478949 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.779590163 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.109297696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.171530201 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.406087528 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.784645307 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.461978731 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.453595887 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.387006366 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452374611 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.453143022 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.304111948 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.188375799 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.472024211 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.462202921 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.19107211 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.479252301 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.788933421 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.460783253 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.300998046 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.45470173 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.534402451 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.457069471 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.463628392 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.480061724 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.790275345 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.458185689 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.456995994 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.162566668 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.05888012 seconds)
  done (took 205.594657454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.44884896 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.446624257 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.446866733 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.447399863 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.450893135 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460155196 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.449817362 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.486159311 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.454762092 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.450258838 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.449095053 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.457134374 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.457623673 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.450190061 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.449701765 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.46984123 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.465839963 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.453464456 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.446691166 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.449321536 seconds)
  done (took 46.437562439 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.457270694 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.102725082 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.070798914 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.456839706 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.454622538 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.457358402 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.522336771 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.4552751 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.45484889 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.798368975 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.656033013 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.458165492 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.457146874 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.456158427 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.092083223 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.445536864 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.802899294 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.100624718 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.455162194 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.115006559 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.446802788 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.457180598 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.458029246 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.103863567 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.801730268 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.789010661 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.525885618 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.104889495 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.454453371 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.457248347 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.102258114 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458282712 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.45966385 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.097877626 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.475060947 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.472495603 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.455612161 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52811393 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.531612434 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.8056025 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.180677931 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.787386471 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468850934 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.649809828 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.463402276 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.448052688 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.103541746 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.47711187 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.448573307 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.455629361 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.464202013 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.094708185 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.482895782 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.09126992 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.47457191 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.460862426 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.10465801 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.093914548 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.117575736 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.665352761 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.46375236 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.802523278 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.459331228 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.110546266 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.47978947 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461722245 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.460302218 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.66574996 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.111216647 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.804411871 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.814852965 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.806740746 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.460254366 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.530316562 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.481208885 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.874647787 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525940442 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.894823473 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.806892598 seconds)
  done (took 134.157130593 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.763338758 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.584788168 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.918283024 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.108405835 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.453195465 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596383935 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.582398313 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.742898914 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.464083288 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.536206259 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.183391973 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.565980135 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.256970332 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.540676958 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.56826251 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.618668136 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.912043112 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.470651321 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.159626845 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.17189043 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.457585972 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.604393942 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.034120428 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.689448797 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.479196026 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.093848166 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.478347342 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.196841724 seconds)
  done (took 56.586668693 seconds)
done (took 557.135396546 seconds)
SAVING RESULT...
DONE!
