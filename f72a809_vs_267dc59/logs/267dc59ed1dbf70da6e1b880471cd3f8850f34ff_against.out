cset: moving following pidspec: 6289
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.974532255 seconds)
loading group "string"... done (took 0.610479017 seconds)
loading group "linalg"... done (took 9.603391987 seconds)
loading group "parallel"... done (took 0.18302944 seconds)
loading group "find"... done (took 1.509144609 seconds)
loading group "tuple"... done (took 2.199840785 seconds)
loading group "dates"... done (took 1.504286509 seconds)
loading group "micro"... done (took 0.242419464 seconds)
loading group "io"... done (took 0.595950499 seconds)
loading group "scalar"... done (took 47.299755514 seconds)
loading group "sparse"... done (took 14.33048703 seconds)
loading group "broadcast"... done (took 1.161621578 seconds)
loading group "union"... done (took 13.142655189 seconds)
loading group "simd"... done (took 2.711875423 seconds)
loading group "random"... done (took 11.029390515 seconds)
loading group "problem"... done (took 1833.058209965 seconds)
loading group "array"... done (took 27.557183372 seconds)
loading group "misc"... done (took 1.226513107 seconds)
loading group "sort"... done (took 4.033066086 seconds)
loading group "collection"... done (took 20.400842704 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.707516203 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145155349 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.177757865 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.374970822 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202577467 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.172473267 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160952586 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.597189164 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.0481605 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235739266 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154566814 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.609816212 seconds)
done (took 6.296043273 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.267774995 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.456633148 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123615285 seconds)
  done (took 1.234616744 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.100854713 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.189994428 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10405781 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.118795968 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.120125337 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.119393104 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.104824856 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.120571451 seconds)
  done (took 1.535683199 seconds)
done (took 3.799231879 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.529733082 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.877378894 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.512722063 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138620904 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.167375126 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.160549155 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.326917299 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.169772865 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135984563 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.094486439 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.185342802 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.371786109 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.512225938 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.98667118 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094239841 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.136976708 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096347179 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.714537415 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.088955075 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.146466357 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.566949251 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.120542082 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.129445113 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14705412 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.197762243 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141219963 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176630748 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103356782 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67283699 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107206891 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.194304809 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.105705878 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.17449952 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.263527309 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.104336657 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10026083 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68172327 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183130173 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.118884113 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.109316977 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683126001 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088931189 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.219314014 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105663552 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.122202823 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19397912 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122239076 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.087064384 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.11068522 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100962079 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167508678 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454226259 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111204141 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.160027182 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.115321583 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698509415 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104694984 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.163451344 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.156720067 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.113590191 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100335561 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116092323 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162378163 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.117961809 seconds)
  done (took 20.180867739 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.126945886 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.151392435 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101304761 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.149188546 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1551961 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.104431784 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091075089 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.101461235 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120098958 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.200529975 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.15035555 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156086532 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098467712 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086728133 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12822256 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.260814954 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.114186643 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.132403785 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087397753 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.114957226 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.150671353 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10497533 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.118544751 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.119811126 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178685228 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212179436 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116447346 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130730907 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.1010602 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.109882384 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.150659219 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.171769878 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.082064074 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.10156437 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.197832238 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127759885 seconds)
  done (took 5.476278938 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.213215381 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123629903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205420644 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.187775315 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.156220717 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.174333929 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12505373 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287150224 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.307036465 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187354011 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121561547 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119566294 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083038922 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.102002879 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082447759 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.820082163 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190936874 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157880795 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133113786 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108707021 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087546926 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382285871 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105863393 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08622382 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10843658 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07788248 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.190707031 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111564835 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.407586529 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125078645 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096348497 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140448644 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214780555 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126275837 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154083492 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110743906 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.089136869 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.248512457 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100613389 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100645141 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117416339 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139380877 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.140966741 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106452813 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104975168 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.25694917 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088417589 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127352859 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.180090599 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.207958522 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.15901709 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085591056 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.398185868 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104360187 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110079666 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.087317278 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.30905916 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143203835 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.141438461 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086320602 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.104450299 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109522604 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086023943 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.413936752 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116020999 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.99201774 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088428873 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.176429485 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107173191 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114441006 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091437514 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108656026 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105970478 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.102854244 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083247614 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.103166379 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083034048 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108105166 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086273243 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121137398 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107159736 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085858439 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169688645 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.128546651 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108498477 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133747396 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.109851591 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086026627 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133080959 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085737841 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106498605 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.156216114 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092920716 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121778527 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107118754 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.149765991 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08959343 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107824753 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.202461168 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088185079 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.132308724 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088576811 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10782054 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135140277 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.134348247 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086444441 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107737243 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08287882 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.104955678 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152662628 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103125693 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086929836 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106360968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101726413 seconds)
  done (took 25.063154035 seconds)
done (took 51.378197371 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.496888431 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104354136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.125063014 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.126731109 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.125743808 seconds)
  done (took 1.708670681 seconds)
done (took 2.416758738 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.40205962 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203497826 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.129678118 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.200955312 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096019697 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.227072782 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19145762 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.127403167 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.221675598 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.109219263 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197261462 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107833111 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096144009 seconds)
  done (took 3.043521561 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102278352 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128240759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087691925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118226204 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08077683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117139301 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099087251 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.145524772 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096767439 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108900696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081464421 seconds)
  done (took 1.876040311 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097843777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120529041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087220567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114856372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08213813 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095939483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115024342 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124509699 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098101595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110276603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082176182 seconds)
  done (took 1.838906858 seconds)
done (took 7.450065022 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.173152203 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.849510199 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.110071695 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.178818429 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.360975121 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206891971 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601589479 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.140972855 seconds)
  done (took 12.549019189 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.138751042 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10760908 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087297447 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107287037 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087558192 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103730501 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085022955 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104316155 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087351947 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103801604 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087335864 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103370411 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086560778 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102346668 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087601334 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10663238 seconds)
  done (took 2.357443708 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12457011 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122958992 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111060488 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.116642319 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092204952 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.109443148 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095587311 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110909097 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09065653 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10811434 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115621329 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098094674 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.11310796 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090227158 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110264921 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.099979384 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107079197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109732015 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094968097 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111098665 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098309336 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.108104062 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114461176 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098455409 seconds)
  done (took 3.371624951 seconds)
done (took 18.989771107 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.18407492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.092118668 seconds)
  done (took 0.983426381 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.111125119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.12728977 seconds)
  done (took 0.955383408 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115327204 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.103315338 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.148271932 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.125587423 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089261937 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10182161 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125733608 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105704152 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085791931 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.105482687 seconds)
  done (took 1.826361056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091833036 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107544652 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098376417 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.129166641 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117681314 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089897117 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.110435562 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093361294 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111469916 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086781837 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112963004 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126975784 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096519785 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128641365 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093590882 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112401063 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116356417 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092648912 seconds)
  done (took 2.636433776 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087982631 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087561627 seconds)
  done (took 0.898834256 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091831632 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102744523 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090937569 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107975737 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.086315492 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.103025408 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08651041 seconds)
  done (took 1.391078992 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.549028451 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273532587 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.359216576 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108582937 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.168278297 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.397436001 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.152113954 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.123262268 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.123166292 seconds)
  done (took 3.024381258 seconds)
done (took 12.433414522 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097729738 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.199529536 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.59280651 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.126147817 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085149012 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167407417 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.293286721 seconds)
done (took 2.285683868 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371637603 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.13335846 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093839062 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086296529 seconds)
  done (took 1.399657627 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084885586 seconds)
    (2/2) benchmarking "read"...
    done (took 0.108274561 seconds)
  done (took 0.919839916 seconds)
done (took 3.048561632 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.118180716 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102945412 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082968415 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102181678 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.08142713 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102029104 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.081018741 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080636037 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101554582 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080937557 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.11133937 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083138772 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100802382 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.084410615 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100878239 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081289436 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080129437 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10052204 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082374109 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098740091 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083162171 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10174223 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083035402 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081067389 seconds)
  done (took 2.970986025 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109399393 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10327837 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.09168495 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.108590322 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108501209 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.094158222 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.109539094 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087223359 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109692382 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088491382 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108044048 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090898173 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104382896 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090871165 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105098441 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10766034 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092710555 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102595441 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.208440083 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106552859 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093182948 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103325149 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09088481 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109218777 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105662171 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090337888 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103904706 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.087322829 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108414989 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089396814 seconds)
  done (took 3.835333132 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093087341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.079979481 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.10074783 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.093372221 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.099989236 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085157176 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098928042 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084473944 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100997045 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083504684 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101209728 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083976226 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081606287 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.101722677 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082346857 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.107524228 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120004338 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.084296295 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080695126 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100687145 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.088154553 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.099772598 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086155769 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10031328 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082979821 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.098323074 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084918806 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08245497 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101302744 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082289277 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.105006051 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.090673719 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099952296 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097813482 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107124195 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.081530066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.109406367 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083707304 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101453613 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082966471 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098943159 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081932497 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080236911 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112624225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084964198 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101697789 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084900626 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.102020724 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084013482 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.104662591 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083564221 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099597156 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086207376 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100945956 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090052178 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080980002 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102217516 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080760716 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10033982 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.083154642 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0998916 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083990639 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.105755239 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082153729 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.126062738 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.094333782 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099004397 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.086013691 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.104172065 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093753861 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.103416594 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104403192 seconds)
  done (took 7.491063937 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088841379 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111488505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085295132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101436418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082698049 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081736742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110510372 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10135259 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0865875 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120374015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085005765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101881258 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086509923 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103994925 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085071846 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083764946 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113603382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09936536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084563718 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105349309 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084931467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108681794 seconds)
  done (took 2.851122928 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.245957567 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111166179 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.157641073 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122540705 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108279096 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121487053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110518724 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094195886 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109557898 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097205791 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113836712 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093057199 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123890682 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114211221 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096466427 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115376973 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109086578 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097855839 seconds)
  done (took 2.879923762 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102923109 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.105300274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.114629873 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107110956 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087519874 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.108386218 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094578543 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123604646 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108490532 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.088766105 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117366788 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090714348 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107816075 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087764732 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108237487 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087967744 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.107973133 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087531715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116156318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11249876 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097227075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117162019 seconds)
  done (took 3.021244165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105917191 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106655103 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124024882 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109578128 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083173008 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103920278 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.096183147 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.106206842 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11480119 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.090407861 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104904592 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086056965 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.113728392 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088568027 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.11294062 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088158468 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108273448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087811631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108017634 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084086267 seconds)
  done (took 2.766290973 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136654232 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123087542 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105417222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135911363 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123492295 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106898467 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136117532 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123615515 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10668237 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140408176 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105719561 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125029845 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136900725 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114953731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125864109 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138016623 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119850675 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137340947 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125081752 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106780042 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139049886 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124134641 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120420123 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124346848 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10684321 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12507885 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124686896 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113973751 seconds)
  done (took 4.199610271 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088378094 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087796902 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.102014342 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.085151919 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.103642978 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085715167 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.103605156 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.086204856 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08703311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102897227 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.087631621 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.104687059 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08760005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.106199098 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087717079 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103545892 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087852068 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085027601 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101447003 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085116064 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.105179988 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087086296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.104687178 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085265832 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084564251 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10586774 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085495567 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103067671 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087635728 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103313193 seconds)
  done (took 3.570442674 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098971232 seconds)
    (2/2) benchmarking "in"...
    done (took 0.113711862 seconds)
  done (took 0.958525611 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086406805 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121822694 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084415051 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108740771 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096036993 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105271056 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.099497793 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113757091 seconds)
  done (took 1.563561423 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.11654863 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.126479929 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094416606 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121674652 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109846282 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.127726098 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.180662629 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093780506 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113311812 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.088899265 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.12784511 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088298597 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.118568938 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095382489 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.117697991 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.124081495 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08693517 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117600104 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097776272 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107025865 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094744577 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126018218 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101383261 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116419772 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091680277 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.118047905 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.123626051 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10259025 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113521273 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.102861752 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113219818 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.082078134 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112517598 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094886681 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.104276171 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108662592 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126122512 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095195143 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.117336968 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093960419 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117621019 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08396501 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.120350824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.115886274 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103056073 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.112706955 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095931385 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101816071 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090168386 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.112150556 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085702971 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110044467 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083343198 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117228739 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101263892 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128310019 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.092357965 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110605648 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09423792 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109627358 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.098126139 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110650131 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103372282 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.112203313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11802184 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109407361 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116099275 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085076226 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.100482839 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087867424 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.118775844 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117834076 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.12216868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09527976 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114712335 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087489235 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113679417 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097186319 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118402681 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.120829978 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09514568 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112768414 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100997943 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110540773 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.094333898 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115086014 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092686316 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10870663 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090996786 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131730549 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093132397 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.105396647 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090419817 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.120952676 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.094228551 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.111896519 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.090370105 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118366084 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08331966 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113497459 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096874067 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115412344 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104822327 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113430655 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096781657 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.117896388 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.101440205 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115905481 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111698965 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086847034 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095866316 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109406092 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.099842053 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.102362585 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099258642 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111230479 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095560459 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.120337282 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.106819933 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096081093 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117096697 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101152702 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107733054 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083397642 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110696181 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091270728 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116357179 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101701451 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108127024 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.084672147 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100780234 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10064424 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111392783 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.098135702 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112100287 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095531116 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100372395 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088305402 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112578992 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.103306903 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.11024408 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097847082 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.119750671 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116627863 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.093826362 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.116444181 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092593071 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.107396015 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102085203 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111946477 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084635292 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117644572 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.095442934 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.108574956 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095616379 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116663289 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.096290578 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114631595 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092690145 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111628041 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096599651 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.108898347 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09642294 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111497589 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.104752909 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.11261095 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086189274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.105639117 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097887058 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110741274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094749512 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.109795328 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.096138731 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115069972 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.088462133 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.11241352 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094855058 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128013046 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104582731 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115827408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.098850007 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.120972359 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094728158 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.115648155 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094611415 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113155534 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096453355 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.119471989 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.116586354 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09725851 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11338181 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088883995 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116717755 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102245088 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106436972 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088786589 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087608236 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.113848282 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119886556 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095953685 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113403336 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090842717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112953263 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099004876 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111490526 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091548774 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105886103 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093095919 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.116255374 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094693582 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112543775 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.101132951 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113082922 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086000862 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117327055 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092369182 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.117954774 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08579307 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10931233 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090624116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113428199 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094031782 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109913332 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084942118 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11982163 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102868151 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112656216 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.091454774 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113294962 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108551398 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111643351 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099640247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.112131491 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100406663 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128679598 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109925849 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095895803 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.124903279 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096885129 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.101576132 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.099714317 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.107962183 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090822348 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.110108927 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093808994 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111552713 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098222 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113448572 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.085232812 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.11177849 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.093258704 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087910872 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105504783 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.099708085 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.115608322 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111600526 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104861502 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113314046 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097458136 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113962214 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095893147 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.113552873 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096437775 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113338386 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.095412853 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109966878 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088358191 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112776039 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088958003 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.105903328 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092340485 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11265153 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095284159 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114255966 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.093605181 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119009927 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.096946956 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.113298241 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.138640507 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.093383411 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.110079677 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098004797 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115364778 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095870907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.11346497 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086553723 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121158034 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096444063 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119601097 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093630875 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.104451409 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097521874 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.112696813 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098148428 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.113797034 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.096586738 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.111538133 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.092195698 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112832777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105492631 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109664932 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11932035 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095563855 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113922645 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093189136 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112848041 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09164806 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107135295 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.096295119 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11439954 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094666761 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.110718388 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.096257359 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112912508 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092525538 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109892063 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09435338 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112909381 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095997778 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102226608 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088559932 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108094712 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.096322637 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118613689 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097517572 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110393872 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094362228 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114785547 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094338893 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102885037 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097170491 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11431191 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09426359 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123137582 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089810268 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112650622 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105895263 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103011741 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090832915 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106517074 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089735819 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120368263 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.095173653 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.120521388 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093769223 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108954827 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088612308 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.114921272 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09236714 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102217672 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087350293 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116535521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090573419 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110267446 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094163198 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116258945 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095434234 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118138295 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09361095 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.113581056 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.094742544 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105296105 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090599551 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10783464 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094122794 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.114722065 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090154337 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105306117 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.094234611 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.113915554 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099788282 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.111953702 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0935434 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119809916 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094731747 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113313828 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098774174 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102811804 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094879625 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.112190018 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093355109 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10893165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096151933 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114285645 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095050398 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.119178425 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091843298 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116137074 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09254816 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.106586474 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.092743675 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.11250845 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.093036924 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109321033 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.095602318 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120854593 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087353137 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113851549 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094987938 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110255481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095398181 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.115368618 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094669987 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117627228 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.093274962 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.116549965 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097149242 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114920118 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094806642 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117977374 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110955518 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100907337 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106651156 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102638744 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114508736 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095278471 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112208517 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090967924 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112258771 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.092658846 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111099633 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100731591 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.114869164 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088972579 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108339046 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087588888 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113682827 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098392228 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120745827 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094928214 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115614137 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085640643 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.106193498 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095839258 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.11094683 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093029083 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116087787 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101291886 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113573984 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091391715 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.112942512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099458022 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119203477 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096804723 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112925551 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095704661 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117174604 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11276993 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093826332 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091723239 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116643172 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.116038632 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096521809 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108039264 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104985723 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119128988 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097351341 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111910927 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096244272 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.114472016 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085337053 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.115545105 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094039405 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11805369 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094474884 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114045066 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104654601 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109071124 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091933216 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123101532 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091778432 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.122029541 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103492427 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094893401 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115225957 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096215334 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102809165 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090089495 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089372918 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.116077085 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087874302 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105703714 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124786447 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.100205157 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115533738 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092457638 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110933889 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085604508 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103654864 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090741907 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114896908 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09373727 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123240413 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090639135 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10850745 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087528145 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111848482 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09664627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115719287 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086810651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083656238 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111324908 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0937154 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.124630224 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110836877 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.093301058 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114432262 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096291095 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106454353 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100030363 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104764116 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097046541 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126946693 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.095893034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117196368 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097986403 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122393565 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.094303557 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.106217812 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09516488 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115907247 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094242816 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118728459 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095346441 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.133678807 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116280605 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089853386 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.112617655 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094014536 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110266607 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103207331 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115862563 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095794522 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116344159 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09399595 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117035068 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100826278 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118707678 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095715425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.118810619 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.092537742 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116965643 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090556891 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113724342 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096868333 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116998293 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094731788 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118508659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090214901 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128889302 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123473569 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101408662 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104112499 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.095325418 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109027057 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086636905 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095449226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.112112194 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.092092447 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.112151057 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093652289 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117858059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09857012 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115657439 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095867482 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.116537888 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082398159 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119264558 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095140401 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118677449 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085322922 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.115034725 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094600234 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121198559 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121414587 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096339405 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113467665 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09236031 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116321025 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085821488 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117379137 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092280749 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111198525 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090121697 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09271392 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.118141854 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114659736 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095939433 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116274409 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095322143 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118148303 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098177217 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105830579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.089085566 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117118406 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093917873 seconds)
  done (took 63.201458297 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.169776078 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096759316 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105832988 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090094234 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139878366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091565302 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107107722 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091701259 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107451741 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105998584 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105651736 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088399581 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.13003658 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140862828 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139607341 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12731818 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088442887 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105435044 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088684584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105198393 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110713773 seconds)
  done (took 3.134955828 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118758976 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126949308 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129138435 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113966937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119999215 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130948131 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108216535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130112213 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130219827 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124563268 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115409195 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127101839 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123178235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104822583 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120387036 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126776484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115344633 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118387767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.13092076 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109562854 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123192403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128315338 seconds)
  done (took 3.473699117 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103856542 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.094427396 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.122294445 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.09152594 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.114939744 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091042765 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120177102 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.092567344 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119651584 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.098682264 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111664819 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.098361367 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120298811 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091297537 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112847928 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091716621 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119984143 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.095827736 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.115600716 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.092877188 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140641341 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087317454 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.110606969 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089812994 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.125205569 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.093680628 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117347599 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092991432 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111753251 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09441983 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.110309626 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.099401245 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119588925 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091055999 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.112237441 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.09682835 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.11469943 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088807492 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.110431561 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104454877 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.108856136 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.100759311 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.123669936 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095476909 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111308152 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.101395014 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114210997 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.091910739 seconds)
  done (took 5.858603713 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.137722068 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.174271454 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102107905 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.169694118 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133698967 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.130991079 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096305942 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158037285 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.112578984 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094490501 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135446792 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13305557 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0971505 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.126580579 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101574919 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119062983 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116781849 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100715416 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.131677546 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093987933 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12742698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.118891556 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111965725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130947577 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121831511 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097528819 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117395786 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105453143 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132130426 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125099762 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105413329 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124941245 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.142810231 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101724469 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120636667 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.116470136 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115113296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11728086 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09938668 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.116219257 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119374412 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105314794 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.122013325 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.1369002 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101567065 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.117883709 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102384304 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120518057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132913107 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097698282 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126082779 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133302461 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102660575 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118041487 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105484443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136475547 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.118401267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095741987 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.120616053 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.129296225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105399486 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123129012 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115210824 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123816241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124962803 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110791128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119197378 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122166154 seconds)
  done (took 9.057903562 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109183878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.140877328 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137013725 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120058957 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122835652 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123342609 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106983079 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121359534 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105176673 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130253025 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123200409 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.176933082 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.094460073 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127509328 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105192505 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122850481 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122764394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107034368 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122098172 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105277907 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122034496 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.137623552 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103443408 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135022408 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140189 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09811104 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127000979 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120865039 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11635805 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125708102 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137024315 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10255203 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127775164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134758707 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139301979 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103759704 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111554864 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101437833 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122715612 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126058296 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097644476 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135718649 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102438565 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.117816923 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121552638 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103271859 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136156571 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140647453 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110103029 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134120782 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.122952675 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13523364 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103531648 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121817387 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135191745 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128119388 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137689159 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137020038 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121678423 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117277859 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135396202 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145864017 seconds)
  done (took 8.408260272 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094536092 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089697925 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.110380665 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09014671 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111939739 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088873365 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111138188 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092374097 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089967607 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115559468 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09065773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10923757 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089465869 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110930594 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090458947 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107402602 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08992068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088196996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112517932 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091069725 seconds)
  done (took 2.7835932 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10465078 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.135774962 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093214547 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122093294 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094886103 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122950428 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.116578034 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097391782 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111827647 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098261304 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127780734 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1071535 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11657556 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121376992 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108484206 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.121998569 seconds)
  done (took 2.614951174 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121732132 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129981301 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.145212615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09964927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.111071914 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102595811 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.11361519 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08948586 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.109153765 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.102750458 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.119876317 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10488632 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.113541899 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.092691355 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.113210614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.100659072 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108588594 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099071386 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.113012363 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123648944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.120535178 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.117782049 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.096580326 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114781979 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099977826 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.118835701 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109717021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.116805764 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0947857 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113365594 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.096921428 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12254033 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.092042749 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.119976107 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090983128 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111771685 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.095006135 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11546802 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099354066 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.116394912 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.09040281 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116667759 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092969195 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.118985209 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086950216 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.117785311 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.088834158 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.121043537 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097242862 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.121407926 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111430978 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108128535 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119206974 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110683794 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124836018 seconds)
  done (took 6.819855485 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114166645 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117498496 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099791351 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110440641 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097581183 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.122041556 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10253355 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115637908 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09640653 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110100528 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095436499 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117993474 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095979263 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11736267 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09579008 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117806663 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090251004 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116666122 seconds)
  done (took 2.74930503 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104787522 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111185298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103948667 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112272761 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093853152 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094073241 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115431451 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089651595 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113087972 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095255035 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114779238 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.095406868 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112571085 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.096623439 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113998439 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095101706 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.116843819 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09149941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113212451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088825426 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116220547 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091865468 seconds)
  done (took 3.097839417 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117267931 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.150972365 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108440942 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.161862648 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.124872785 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099981671 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129923781 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100765174 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140107402 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11731275 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097784414 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.115703046 seconds)
  done (took 2.287227244 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127271069 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156925679 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09133752 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118021177 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129624018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101377512 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119773455 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099691562 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13444896 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138003543 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099453155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141052036 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133552465 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1331096 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10850451 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129747014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120984135 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100538053 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114919003 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144982291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099700697 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13434736 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117777029 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100122886 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120312058 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132476721 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11610647 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136816126 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122162629 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11220883 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130654669 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119539511 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112766977 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136156788 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117430247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113315738 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124774124 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145361471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130698098 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112015006 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118096433 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128864935 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113170472 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130105251 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133494997 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099995435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128474963 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121362601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099971808 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152257399 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130791957 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133595935 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107165808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134540183 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134815717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154459582 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137168264 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111011342 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132320078 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136793384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134512891 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107833754 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133911559 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139716624 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130431024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112729822 seconds)
  done (took 8.998838272 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144789637 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113805748 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099397808 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141576844 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134631434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121904249 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100749849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120943644 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099960844 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116687985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175084625 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120811656 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115236057 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134068477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121015149 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099116942 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121172453 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134716921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095791471 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153698337 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124258234 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133201033 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1117675 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134060472 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137928055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130582762 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09901103 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121263569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101430966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121944759 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130508343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100193937 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135260314 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091958282 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137706014 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121315646 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098228108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133001739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12099307 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106663569 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135391608 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147142452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122540476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099697671 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136907353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122248299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10046111 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116833975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100682307 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116861895 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143102733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138059193 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118212305 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134918434 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122580842 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100740219 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121700595 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099319982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126316053 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12912167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112114809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126484333 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154478377 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124177211 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099723016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134903798 seconds)
  done (took 8.873641921 seconds)
done (took 168.191978798 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.120049656 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.155320812 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.109669386 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179770489 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092324991 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151505831 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126267269 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.13252498 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093315897 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115844669 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094818307 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118797381 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160578366 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.114759277 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095323981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118494237 seconds)
  done (took 2.804457706 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198918829 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305819072 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112350962 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121733532 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101882204 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.119951383 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.096805653 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122753979 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095348522 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13138228 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115686548 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100202538 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129636251 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095770521 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116009628 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095820448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.130102811 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096556161 seconds)
  done (took 3.117355283 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.125367041 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165395382 seconds)
  done (took 1.124066827 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.139922132 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.203140604 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325655627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17670003 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.125072965 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142831052 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.183741576 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137936547 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21583208 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.144274602 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121535745 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.124467193 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149222985 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108076204 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.127330759 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101932034 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.152738589 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.127038954 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.103242635 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.125746038 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124777128 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125838788 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10839769 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.129847959 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19993479 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.142584407 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103333775 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.127469305 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123284912 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.104648312 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.130146964 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13996999 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119130676 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.211994322 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.109061401 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.207392505 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.111209252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124129571 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.101511479 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124309663 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126843624 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105126226 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.141042253 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099688661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.126007752 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131791591 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103789446 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124688311 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109562438 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.137023411 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133095119 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107683681 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.206119775 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112905944 seconds)
  done (took 8.300515447 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.896096732 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.170615663 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123086743 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.053264918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131032744 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140939102 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.9094884 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146225276 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261071948 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.926345828 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14313818 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112042395 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264556271 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.297031253 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175977479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345367054 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.019034077 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135754975 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129208463 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.168675175 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129636491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151831639 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119934201 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429095209 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122708505 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119742796 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106264831 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133285158 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181735494 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119210665 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103135781 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223352498 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.285599989 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205342231 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12336855 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095699477 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119418309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189367999 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30031524 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245900832 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188568768 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094732088 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118734007 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111330128 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142675733 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115212861 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186714984 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195969197 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.215772819 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103359605 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132826073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108454195 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133351772 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182511149 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11681911 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374295914 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371443511 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098201571 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129652675 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138913455 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273366739 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120201 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253441259 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126740368 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240916036 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118176439 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816623499 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207894822 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097731486 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129144312 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110246704 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126562469 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131465246 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182863261 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393470227 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114848637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124286841 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096426756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25396207 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096983963 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120028981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183989229 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12204691 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107826085 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136672671 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13516417 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.193956763 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269324705 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134843893 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128342 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104647955 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134644221 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099360885 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.255117534 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248284273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179505681 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232581337 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134275116 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186926184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185237259 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131798675 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191497265 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128178986 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139722698 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111402779 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.243796049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158345114 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.119752251 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102726038 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127952449 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161135764 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101166445 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129091718 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188995847 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487070839 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186905833 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095569024 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124503449 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128962058 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183485658 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106712705 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286816446 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130459197 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188785386 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128536774 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.094387948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128798232 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184933905 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135026548 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107785924 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13392009 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128955613 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272799467 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245412876 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136321513 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24121649 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191959957 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131020994 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1974162 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130172126 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191363199 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129774999 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111213027 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122096704 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837663994 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113192788 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129159381 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102520923 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205433705 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118885313 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098151258 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.119562337 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093961945 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822424204 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099935471 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.118090407 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098887816 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13074764 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128546931 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105559026 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125312359 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184544422 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264031332 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134005101 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107889948 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.119947356 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184876081 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122844664 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098711904 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.118596429 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.099119524 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129816004 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10266345 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.121179606 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197863586 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181083838 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.249320608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557285336 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098428152 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119326392 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260123791 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097909107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.334704292 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106349528 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.254787485 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.211073522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095731808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3663793 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190797625 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206569944 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.122780403 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193756006 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094102761 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129050869 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18225297 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120155993 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12556012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181325916 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11562839 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137272995 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.185282739 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097640993 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.272729738 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094896522 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.212115058 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101355555 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133733993 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.335655909 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098564887 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142346006 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185086422 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124468619 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09821572 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.636873858 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099126732 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132324299 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108949061 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.254576189 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.208004996 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107834411 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129225425 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134307674 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18463735 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233204601 seconds)
  done (took 48.051232572 seconds)
done (took 64.227357119 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.342504521 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.29884437 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.341361171 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223532472 seconds)
  done (took 2.144883585 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.206561651 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.172280845 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139409982 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.122009852 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.172774954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.0964451 seconds)
  done (took 1.769240297 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.573885897 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.441314795 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.394459452 seconds)
  done (took 2.272603536 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.280289631 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.310366914 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352045039 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.51845523 seconds)
  done (took 2.437425612 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.233643997 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140632295 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110617706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.153585461 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.193538967 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21111986 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161451922 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176870004 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.144009569 seconds)
  done (took 2.438101118 seconds)
done (took 11.925386784 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.350216414 seconds)
    (2/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.298904777 seconds)
    (3/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.254320415 seconds)
    (4/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.25658798 seconds)
    (5/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.305270349 seconds)
    (6/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.236657669 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.141750105 seconds)
    (8/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.252731638 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.19824004 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.176715489 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12555675 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.174910318 seconds)
    (13/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.260343953 seconds)
    (14/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.185556859 seconds)
    (15/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.192253279 seconds)
    (16/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.225928914 seconds)
    (17/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115845219 seconds)
    (18/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.220895216 seconds)
    (19/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.142521024 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.158036173 seconds)
    (21/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116685444 seconds)
    (22/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.253867356 seconds)
    (23/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.242879549 seconds)
    (24/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.136984995 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104327672 seconds)
    (26/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.150394678 seconds)
    (27/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.243139551 seconds)
    (28/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.279395531 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13718711 seconds)
    (30/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189252746 seconds)
    (31/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.109887147 seconds)
    (32/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08374669 seconds)
    (33/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.15446528 seconds)
    (34/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.261344378 seconds)
    (35/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.218351949 seconds)
    (36/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100968443 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.155373112 seconds)
    (38/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12249452 seconds)
    (39/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092910159 seconds)
    (40/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.223088804 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110331251 seconds)
    (42/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.248248395 seconds)
    (43/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.125951533 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.139005772 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.1026229 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.126600463 seconds)
    (47/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103997532 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.122111501 seconds)
    (49/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.242596238 seconds)
    (50/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083025825 seconds)
    (51/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.201748772 seconds)
    (52/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.163038827 seconds)
    (53/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084051263 seconds)
    (54/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.122187695 seconds)
    (55/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.156296123 seconds)
    (56/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.12832803 seconds)
    (57/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.112760023 seconds)
    (58/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104872084 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133311487 seconds)
    (60/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.168143461 seconds)
    (61/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.105430654 seconds)
    (62/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178751011 seconds)
    (63/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.128031732 seconds)
    (64/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.155940177 seconds)
    (65/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192148824 seconds)
    (66/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.13711751 seconds)
    (67/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130159409 seconds)
    (68/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10246863 seconds)
    (69/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107217576 seconds)
    (70/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.19632472 seconds)
    (71/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126881345 seconds)
    (72/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.213558988 seconds)
    (73/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.22571524 seconds)
    (74/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.14129544 seconds)
    (75/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.204534166 seconds)
    (76/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105380471 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104647251 seconds)
    (78/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.168652924 seconds)
    (79/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083369951 seconds)
    (80/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13236379 seconds)
    (81/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139927672 seconds)
    (82/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.113923326 seconds)
    (83/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.15069746 seconds)
    (84/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.106730406 seconds)
    (85/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107458578 seconds)
    (86/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.166600262 seconds)
    (87/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090817041 seconds)
    (88/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139515817 seconds)
    (89/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.217050041 seconds)
    (90/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08258584 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.215473488 seconds)
    (92/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.11406411 seconds)
    (93/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.215739786 seconds)
    (94/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113958891 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125342583 seconds)
    (96/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.09863938 seconds)
    (97/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.136481128 seconds)
    (98/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.131779185 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.127373347 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105777355 seconds)
    (101/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.172854302 seconds)
    (102/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134550131 seconds)
    (103/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111636752 seconds)
    (104/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106064582 seconds)
    (105/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100951858 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.106293199 seconds)
    (107/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.148866355 seconds)
    (108/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.219173099 seconds)
    (109/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.106198221 seconds)
    (110/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.100995541 seconds)
    (111/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.127223534 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098310817 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.126620791 seconds)
    (114/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084964687 seconds)
    (115/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.218718737 seconds)
    (116/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110954922 seconds)
    (117/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.115857009 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.102912601 seconds)
    (119/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.123225519 seconds)
    (120/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111498212 seconds)
    (121/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.108627433 seconds)
    (122/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.122909063 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128768448 seconds)
    (124/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082166012 seconds)
    (125/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.148804907 seconds)
    (126/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.118451212 seconds)
    (127/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104580085 seconds)
    (128/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122940369 seconds)
    (129/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08470961 seconds)
    (130/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101877013 seconds)
    (131/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.123887636 seconds)
    (132/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158417627 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107961388 seconds)
    (134/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.136148036 seconds)
    (135/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.160623378 seconds)
    (136/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.117564429 seconds)
    (137/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140590502 seconds)
    (138/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15804614 seconds)
    (139/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123250975 seconds)
    (140/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.082473493 seconds)
    (141/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205930818 seconds)
    (142/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.106290768 seconds)
    (143/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098354173 seconds)
    (144/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105041616 seconds)
    (145/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10152928 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099396047 seconds)
    (147/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117762737 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104395239 seconds)
    (149/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.105714123 seconds)
    (150/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103281045 seconds)
    (151/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.163476954 seconds)
    (152/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.084236063 seconds)
    (153/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106738829 seconds)
    (154/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084203373 seconds)
    (155/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122741636 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.118107265 seconds)
    (157/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.113974751 seconds)
    (158/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086247299 seconds)
    (159/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201745308 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.15967168 seconds)
    (161/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10637429 seconds)
    (162/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.15161142 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.136463037 seconds)
    (164/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.09293587 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.135474987 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.132691684 seconds)
    (167/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.105519209 seconds)
    (168/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084333575 seconds)
    (169/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083092928 seconds)
    (170/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.122226046 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104904536 seconds)
    (172/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.106957705 seconds)
    (173/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08453203 seconds)
    (174/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119295317 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101098964 seconds)
    (176/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.125329266 seconds)
    (177/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.202249733 seconds)
    (178/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084499547 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126985563 seconds)
    (180/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085934546 seconds)
    (181/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083611316 seconds)
    (182/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.125569439 seconds)
    (183/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109070987 seconds)
    (184/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.128533234 seconds)
    (185/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.14521423 seconds)
    (186/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084328436 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132416609 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097406282 seconds)
    (189/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123860431 seconds)
    (190/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084424487 seconds)
    (191/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084890062 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12314137 seconds)
    (193/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.092153227 seconds)
    (194/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.15038716 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.135637476 seconds)
    (196/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.125392538 seconds)
    (197/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.105936447 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084416804 seconds)
    (199/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084203492 seconds)
    (200/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.219998057 seconds)
    (201/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.107741171 seconds)
    (202/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085171449 seconds)
    (203/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.147813818 seconds)
    (204/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109945062 seconds)
    (205/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.128626836 seconds)
    (206/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085445223 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128236786 seconds)
    (208/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084704081 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137772755 seconds)
    (210/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085099756 seconds)
    (211/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.127940305 seconds)
    (212/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.092659125 seconds)
    (213/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.107099529 seconds)
    (214/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.083349034 seconds)
    (215/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130984746 seconds)
    (216/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097935385 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083184417 seconds)
    (218/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141038782 seconds)
    (219/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.186925193 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085756016 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.148714641 seconds)
    (222/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.103807437 seconds)
    (223/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107811555 seconds)
    (224/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084627602 seconds)
  done (took 31.970752047 seconds)
done (took 32.836776291 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.43749461 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.139405919 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.132916961 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109936966 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.154291495 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113943064 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.134426937 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112577864 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.130582999 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099940004 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.123054244 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132290089 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.109886716 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.153466003 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.1118678 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125426599 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100604832 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134460815 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109910554 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.135937951 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.153980344 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10150413 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.130805509 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100514745 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154147069 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100506 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132191871 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109577843 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.131704323 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100864137 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.132455178 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100528831 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.134311885 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.135641107 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099518999 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125424541 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099934107 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.114807068 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.101537328 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.125796202 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.108507 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.124243851 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113304712 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.125567065 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.103497163 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.122460483 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099141479 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136424889 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099393648 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.132769016 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100889575 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137408728 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120948225 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099286077 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.121073481 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103029263 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.132746727 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09977738 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134104 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099308088 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.124922121 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100058318 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128175771 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099149679 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.124995619 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101424157 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125583393 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104484369 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.121184533 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101995727 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121337736 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.102593319 seconds)
done (took 9.766302557 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111215365 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182865465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.158953736 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.133288389 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.157128467 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142094132 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.114873699 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151187691 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.134396124 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12587797 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.155125746 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.146780852 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.140689543 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131388251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140590409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.103609752 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13228753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113575758 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.161917651 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148824766 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157523577 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.108351812 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156139778 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147801157 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108547128 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.16302825 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109105433 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128727388 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107030367 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139808677 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.148335422 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108224724 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132777214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122233913 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137979422 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128960479 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118442681 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.127179408 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105928505 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.128910517 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14141907 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121200221 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128225096 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116948575 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127561206 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108783652 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133004278 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.13061204 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109107027 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125798685 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109486379 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155380771 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.132610106 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10950207 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.130641208 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109947464 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132085094 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109604957 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13171975 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107956398 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.129320165 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129798661 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10945733 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151939919 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131237226 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109348163 seconds)
  done (took 9.505923517 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133174651 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.166038891 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140143233 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117060698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.138105682 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.096101989 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121581241 seconds)
  done (took 1.828467663 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104444961 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.154583083 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135382874 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.158724678 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.145214325 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.139018421 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141128011 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.098654871 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.150900399 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.133690647 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129926698 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183089692 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.123325831 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.112105463 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.160790615 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.122562791 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138374171 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.121980763 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.107193752 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.158783798 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128777795 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.122978107 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139184576 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100249975 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146965354 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100781907 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1979658 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136405926 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098429052 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.129019998 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105382936 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.224170796 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.123986674 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13470959 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097469207 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153765879 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.122177396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132681223 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.153302317 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10512305 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.147435422 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.106618226 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.131415977 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.129875463 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.108470613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.139796842 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113674891 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131837194 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.105746429 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.15425266 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.134659037 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125006413 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.125791555 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.105108421 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.134260109 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106349875 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139176936 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.105373593 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.154341505 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131479781 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129038474 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.153510126 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.147017757 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129171062 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143540901 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.123080054 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.147425594 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.130223752 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10886862 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.130841267 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128869607 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.128047697 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.110878264 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.141642632 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133186086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.129435557 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.153518282 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104515509 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.137113026 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103836395 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.126373271 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.099999733 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.141216982 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103410097 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125938587 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143706585 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113858348 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.129819432 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104909051 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149454425 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.130392096 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115022928 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.136445599 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105759114 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140570107 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.154261431 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112207869 seconds)
  done (took 13.568657249 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106562328 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101430488 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.131594659 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.124840242 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102177018 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.100931485 seconds)
  done (took 1.593925638 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.138836712 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129531868 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.118053414 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.133773543 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.188392583 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.152237055 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132702112 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13641034 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.149863483 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12047543 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.152683571 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.130546292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.152233668 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.136875087 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.131681306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.135523383 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.156529479 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105622022 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.142763658 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104932277 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142793249 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.135776397 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105802626 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.149702558 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11054629 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.134800969 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111903541 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.145370572 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141326279 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11211843 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.13602622 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.110082766 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13377722 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13521713 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132266586 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.133205488 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103703956 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140005181 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133178984 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.110939936 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.15561983 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104943158 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141065663 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138749252 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11190477 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.134775252 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.138405367 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112190622 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.155044571 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.112350514 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.139097924 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134276162 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111277323 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.138175663 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110048208 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135514428 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.137877275 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132046412 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.137213948 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108775653 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.13370527 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.134482426 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112889612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138188998 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109600904 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.137048183 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.133136254 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110851465 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129728043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.111602475 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.138821001 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.107227424 seconds)
  done (took 10.324928017 seconds)
done (took 37.730911699 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.106158027 seconds)
  done (took 2.024364655 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.914051954 seconds)
  done (took 1.835475394 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.853497437 seconds)
  done (took 17.80632559 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.584061354 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.682179214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.037727287 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179180385 seconds)
  done (took 3.403648145 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.985379753 seconds)
  done (took 1.924688915 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.346261294 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.28331158 seconds)
  done (took 1.555187121 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.845631399 seconds)
  done (took 1.777441574 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.402649741 seconds)
  done (took 3.332795075 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.394660622 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.21454166 seconds)
  done (took 1.553147918 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.615737158 seconds)
  done (took 1.552311454 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.355341861 seconds)
  done (took 37.29697886 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25314296 seconds)
  done (took 1.205261775 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.325736761 seconds)
  done (took 1.263385802 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.507554478 seconds)
  done (took 4.446838281 seconds)
done (took 81.910553792 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116799845 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.138216071 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116410109 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.136061486 seconds)
  done (took 1.440024383 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120476965 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133876027 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.112671293 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.132509758 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.118698016 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.133608867 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.108221263 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140552817 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.108699336 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13783741 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132531296 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.109672795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.133478251 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.108317881 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.131459889 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.111050455 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.137719144 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.109388807 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.134859296 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.110780746 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.13315171 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.134258424 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.111606743 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.132984114 seconds)
  done (took 3.921328306 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116727198 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105532096 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.132934579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.104714668 seconds)
  done (took 1.401567137 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.121941548 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.150189923 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.123354261 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.140770407 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149749469 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.124241004 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.128322627 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.105075248 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.131367578 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.11622941 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130728754 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127484739 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.151299193 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123393349 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.118940506 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.12175781 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.101966759 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.149428718 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.115610442 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.14196676 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.103292673 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.140620648 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.112735631 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.146053376 seconds)
  done (took 4.027765678 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189030873 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.144980135 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.155662681 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.180278795 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13294889 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.127829335 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.131781317 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13726048 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.132642032 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.105466806 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.128381664 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163317769 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132295857 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.132700586 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105196697 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.136626122 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.11150969 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.134721599 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.10630207 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.142977834 seconds)
  done (took 3.684286105 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.116903744 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.128884172 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101039012 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.128380226 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.113117319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13099732 seconds)
  done (took 1.671553708 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107057452 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099165856 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.126010965 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09971262 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.128774111 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.098649333 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.121974552 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.099104088 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09845194 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.124294461 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.098611641 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.122594533 seconds)
  done (took 2.272317547 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.243585306 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.103737413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132270909 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.128579196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.110309286 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.127355112 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12052772 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.128768243 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.191276706 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103407482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146337553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.187070842 seconds)
  done (took 2.673433457 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237574179 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110429999 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294627247 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396983232 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155290401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186876012 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.317775707 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163480156 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.234276015 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126778535 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243274452 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14857928 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170705121 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201554436 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15794229 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.20826504 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195632174 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225324682 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167751788 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2291108 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184427257 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188616252 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204327785 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169347146 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152287886 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177720735 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.105080224 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143067068 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194696551 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189185935 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197634319 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167274093 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153660301 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229196122 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244111786 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229320302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.335509505 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149890811 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.205287618 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.206358953 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271180184 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159372187 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22450915 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174300277 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145711415 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202158319 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176198574 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199073853 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.120306493 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157283111 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209130891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199101488 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.230891677 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129249865 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34560652 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143937612 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164210707 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199226233 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216689315 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23895652 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184957228 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.110456427 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206667917 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226653018 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202191177 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134308009 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188522633 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1407554 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198873154 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217295577 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201145147 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186943311 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236897298 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121668481 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183049937 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190678092 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172968655 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1997671 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179850695 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10715732 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166762987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15338229 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13894044 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176774814 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136839776 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230196781 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150425397 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.204193626 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231539779 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177173828 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182248787 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184196655 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188248932 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161755345 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.107267893 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165104176 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178521409 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176648168 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119877328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175036851 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161662099 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.139776799 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142792629 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.13773196 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176150587 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.122016615 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185893168 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183347196 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.146619958 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182636769 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166436584 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177844817 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190068373 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206226215 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119988969 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147827403 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214605495 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176628102 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150274128 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196162994 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209025957 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180580569 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126294305 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190372593 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246172982 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130424954 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209561702 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162295387 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150501012 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169351538 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175776373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174273998 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.145470559 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141876091 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167859646 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218645806 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140055508 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124696161 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195743087 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139703892 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114618989 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161136772 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151396556 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.130141648 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.166960944 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155064981 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173437854 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177180124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17029053 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176738527 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133311761 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24993528 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121638345 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.178535624 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164247088 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.104844012 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201542375 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231824005 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117510067 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206847769 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186848433 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243071971 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186720979 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116710379 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203226829 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144079204 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.10452675 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186347515 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1771022 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181445222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.20228573 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239001327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191371124 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.168455019 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139459335 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188310167 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195131984 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175423303 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.160270939 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17953233 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188115438 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134281547 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110523721 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.140253443 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128861899 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146108482 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144776675 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204476662 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183800055 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207051315 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180483559 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15476012 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202974316 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.112569073 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184507576 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.192462052 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152236644 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205469167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201932284 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187613887 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158521093 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192456303 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131773886 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112373507 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14617814 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186545772 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119515379 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150424063 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161767676 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204177688 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195726566 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165152049 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225076574 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188434039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213826544 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.133629284 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.180656508 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188087453 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148146189 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.201219814 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149399197 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.178511927 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196899581 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136233406 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244684104 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179199659 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186888423 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224265548 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.175027668 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118794383 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169301737 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186410854 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157811327 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180876057 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159918623 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12361542 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172108844 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.151157724 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11361376 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231608971 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131912908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229364346 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14793295 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223071795 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112004068 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161933278 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178978028 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160816795 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104982784 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190564739 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209277906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160827737 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175946221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195387661 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144401262 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.328809071 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217365846 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208893384 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154248917 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159317469 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153008676 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178316138 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182928923 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203348208 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163122803 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202076351 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178028513 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158461594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121622694 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164705026 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168110791 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169710937 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.121180258 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170344491 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.159297075 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207936527 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161574832 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177277188 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182993236 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.136090296 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.171854496 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156428802 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226557527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175994611 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199824857 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172977428 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183745657 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209668533 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109144026 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142886405 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.112871903 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204073962 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149446008 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1775742 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.200351285 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244026821 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151439068 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186779619 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154665025 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.136229508 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151176532 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165105952 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246998706 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132790721 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149795723 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212993741 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167664435 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144274947 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183007227 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300940985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138413489 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192117274 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.134284638 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.295008461 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141639278 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119845181 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179607631 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19201704 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.146282544 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.174496823 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179390014 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161674136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178737489 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153538092 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210528026 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2319395 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193559676 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19585318 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.16036257 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178340421 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183152142 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197701199 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159857768 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.160706443 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153498724 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203333022 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232882999 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12056538 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180239178 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182723596 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176878496 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201941789 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149432884 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209607957 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116712938 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18773917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156462367 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137221667 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17585188 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200453017 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122717625 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195413731 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175016927 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146456351 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112489514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170490173 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175589623 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162503477 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141972034 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202833721 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.112976158 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182177417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200984383 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142760384 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146425636 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161630463 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144957732 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13159272 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160142415 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150086315 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159815963 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226943372 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117957887 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197265321 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193837636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184975892 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178258973 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160424752 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.677840821 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.113319323 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203149097 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163113364 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211494998 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166253151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187332511 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178407655 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13809769 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215789207 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139886396 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237382051 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186793621 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177943722 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146075842 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133313137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160822458 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146822292 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168532025 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152176996 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157550753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151070609 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174256398 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134589993 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.162206625 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154349347 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20709702 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163282673 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207168358 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20442678 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128305003 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188449476 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231092531 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115702177 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180533077 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192599804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15999951 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169485679 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.116276783 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151115118 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201128954 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.110216254 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179662477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180009846 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181754035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18215869 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150738204 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150595862 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160668827 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179174156 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139560653 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.172441611 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14811104 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14565699 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.140149182 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145935757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179718666 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.175338935 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140620572 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160689731 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20460475 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.137264744 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122058889 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323149959 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180556135 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217330433 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142289731 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150653958 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161037599 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173964482 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142544443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180011919 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.14416714 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144773772 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.119231357 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.198177909 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.180439762 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174126382 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201124193 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181940759 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210012217 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132597195 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284787114 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156132722 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171830098 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118785377 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.144141659 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155687554 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12314043 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164829412 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211524036 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198289604 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.171268107 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.16049702 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114692676 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.140899368 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119285662 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180702586 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172787534 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176023642 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159948908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103433169 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161781596 seconds)
  done (took 85.260409524 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175886912 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.160925547 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.160455352 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.210701694 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183264009 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272503492 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.2204338 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24171653 seconds)
  done (took 2.660685378 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121552455 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.150017385 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.155860513 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.138169594 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.137295876 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.383220404 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.149700776 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.113042834 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.202459698 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151855316 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135200819 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.673996877 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.107809546 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.137306422 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125632896 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137839225 seconds)
  done (took 4.04530822 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.355125035 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542158051 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.87938884 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.250640011 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.264388361 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.176514866 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.739098287 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.185607771 seconds)
  done (took 12.426021692 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145772856 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.156696952 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.287123508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.193043501 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.175596454 seconds)
  done (took 2.001991298 seconds)
done (took 128.42206958 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.112985976 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.137486386 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110001782 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.138663542 seconds)
  done (took 1.523851442 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.126935604 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092675878 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.126777172 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.092374616 seconds)
  done (took 1.471773941 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.535372708 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093248396 seconds)
  done (took 1.704221986 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.140811163 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152470331 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.132866045 seconds)
  done (took 1.472417985 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.122173153 seconds)
  done (took 1.166191101 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124889421 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.114854527 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.159539848 seconds)
  done (took 1.44425236 seconds)
done (took 9.820964105 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140868418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.533733826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.399352906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15349696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.73447843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.392614532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.051840148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172043501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181856005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.103791795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.153933881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.683651525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035666186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.448089007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023080095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.353530951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713882869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.105951851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140069781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.105518251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028328335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.102454591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135158561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.106273567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711193646 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.410945989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131093438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393368245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104713298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135569041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.394931254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130318933 seconds)
  done (took 17.44170063 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154646421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197273106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.139881597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107430527 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.135757945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.106160094 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141022923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120392789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197910418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1306895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.126088931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130878219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109577803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.131199194 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.12732442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.13086983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.107403947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.134847808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.113614037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135239267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.125261851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.130881069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.106549288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13566012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103577712 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.146009997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.103816964 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.146792005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103927953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137639392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13538385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.105924343 seconds)
  done (took 5.203421717 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158680953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.207654933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141644592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141006113 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18800519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.133026701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22409334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146054251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200976275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132121535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.125192412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133741869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.172131142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.106164484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.154109277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.105150031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133908545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107932796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140288095 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.106891805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.153412037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103395296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134488505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107014061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132731583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.120305662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132477077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119082381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133561105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135880922 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112654678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130889575 seconds)
  done (took 5.526820645 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.117504909 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.139915985 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123970429 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150319868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11026346 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.138995233 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.113792169 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.13456145 seconds)
  done (took 2.073563347 seconds)
done (took 31.286543581 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131477057 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.145657245 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.120213562 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141093664 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139717884 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.128827798 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.118175041 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102506044 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.14187592 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.122241707 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.131741946 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.106170276 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.147886186 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.110154499 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.14893289 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.114378654 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.155341975 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.121352311 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.13380134 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.115451895 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.133038213 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.127677747 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.139084461 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.105100964 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.160168819 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.107898611 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.154934809 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.109142318 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.139582868 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.10617839 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.150223712 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.111324121 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132797128 seconds)
  done (took 5.294998666 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.141807146 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.181352626 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102588118 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.130662478 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.175142712 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103648121 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.161413005 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104019747 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.130561228 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104432477 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.10144747 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.160861891 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.167623502 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.137954488 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.184106201 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170090811 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.133081428 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.17321881 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.156353915 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.145334767 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.16315463 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.101885033 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.169323627 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.175971803 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102471076 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.130491494 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.149956501 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.164952142 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.178626734 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.139732964 seconds)
  done (took 5.397373232 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.118990453 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.149689143 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132411787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206336264 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.175867506 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.120458318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.145202928 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.126785883 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160246117 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.105841472 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.14354475 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.140751393 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152157446 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.11643571 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.139467507 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.120873337 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157844696 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.106784515 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.140666647 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126878698 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.155674968 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14726094 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.12146466 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.144697159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.106858962 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145416707 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.111987886 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146120211 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.112841267 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.141762181 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.110615177 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.138646761 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.108907584 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.143190782 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.110334225 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.143991897 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12999272 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.143026942 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.117717498 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172099088 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.142864613 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111800616 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.155627933 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.153565428 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.136685683 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.114638627 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.146900138 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.116046129 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.132960071 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125987802 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148163009 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.107043028 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.152678388 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.105257355 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.134245047 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112602634 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.13488874 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.108113534 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.142708447 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.110578831 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.157138103 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.114032968 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142431947 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.108331848 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.141028816 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.105793866 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.133178182 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.112819559 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157975967 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110717301 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165403165 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.133294741 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.113843292 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.141224565 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.112826081 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141792637 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.105858507 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139773982 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116489626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.139059149 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.115429485 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.109016391 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.138887264 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.125094143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.15404722 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.143259761 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.112752298 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.140979839 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.110475539 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.136692015 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119442254 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.136577801 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.111241735 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.144020494 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.107584268 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.137472223 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.114234864 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140389668 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.105390118 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15396088 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.113149182 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.134186567 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.122958065 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.135679089 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.111212131 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.144077175 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.117880631 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.134930403 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.112873075 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.141933574 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.10571224 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.140292309 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.110315997 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.13392377 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.120030137 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145213304 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.111060767 seconds)
  done (took 16.385724768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.270926415 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.243669522 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.214560878 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.333499473 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.160709709 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135123682 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.240410507 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.19022684 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.136306607 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179305745 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19723718 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.201832399 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.106566162 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.168395113 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.242962049 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.33871906 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.138185732 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.181959704 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181275233 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.161271611 seconds)
  done (took 5.097596761 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130483278 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.179040693 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16789551 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.135967003 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.136206359 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.121487332 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.136236067 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.153423564 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.108607922 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.142394136 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.10654867 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.145195505 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109604817 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13874675 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.126076411 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.155724515 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.111378562 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.142886503 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.153966573 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.114534076 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139571924 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160701544 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.117793458 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167556243 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.115755793 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.153530938 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.105838132 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.143053192 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104318643 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134099529 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.112995646 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152100989 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.142680777 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109161431 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140808445 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107759912 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.130403829 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.108986884 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.108469415 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.140467388 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.152249657 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.111169011 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.134031669 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.107343954 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.143966151 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102926732 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.112908172 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.142657832 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.141121037 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.116709178 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141794127 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11298753 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.143658502 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.121077242 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.131734689 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.120305477 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.149862201 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.113256706 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.143963978 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.104875089 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.133716263 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.111262832 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.134657201 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.113333348 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.141048085 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.154734361 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.119837894 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.135073441 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116079591 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.139631237 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.112021365 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.15443065 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.157825617 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.106432421 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104466118 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15812083 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103095827 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122161199 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.117483218 seconds)
  done (took 11.37084619 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142315559 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13555985 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129418557 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.174151494 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.122891485 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.143103825 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.106848719 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.155759999 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.114909147 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.144753221 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.115682501 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.152131864 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165897603 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122435733 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.135631206 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.123239756 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.139961307 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152985024 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158462228 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.171172929 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120845096 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.140811665 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.121563625 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.148820445 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143635458 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.149978206 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172347578 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.114026189 seconds)
  done (took 5.006304614 seconds)
done (took 49.600715782 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.249257728 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.368390685 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.145907402 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.148718677 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.1788557 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.164240296 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.151656231 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.344262257 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.884510644 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.139567738 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.149630553 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.150672846 seconds)
done (took 27.143674478 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.501690711 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.727558617 seconds)
    (2/2) benchmarking "String"...
    done (took 1.457588169 seconds)
  done (took 4.24469448 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.13728358 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.139724688 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.387172494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.140299222 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.156371659 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.154281398 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.143228229 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.148264974 seconds)
  done (took 15.329645803 seconds)
done (took 25.282422093 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.178711796 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.334914316 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.393474866 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.17186872 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.137956796 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.152998175 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.128510012 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.166604601 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.142514053 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.129203518 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.139713771 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.408077135 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.126591189 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.513697087 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.129476423 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.141926439 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.153583301 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.371014796 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.138284055 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.176438697 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.14189129 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.127298881 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.151415242 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.177132035 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.149054897 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.14202702 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.128490573 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.127035322 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.331480325 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.175745905 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.182401213 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.144179904 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.204233325 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.145056923 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.24464948 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.172165247 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.318781961 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.129930139 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.132174834 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.149741333 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.333852925 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.514889399 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.150419601 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.124482948 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.14561987 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.200832833 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.126047563 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.842885592 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.145873532 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.150684014 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.179007074 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.512676669 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.140619556 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.150227241 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.161919326 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.3753459 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.158614197 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.156075104 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.161191399 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.146370416 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.154687152 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.152704855 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.179241112 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.145558308 seconds)
  done (took 139.283179636 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.139242337 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.138477749 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.144110251 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.204405476 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.144040533 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.137912093 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.136605414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.136898513 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.138360481 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.165265316 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.143259836 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.141968513 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.143525352 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.132933349 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.141964362 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.157661799 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.142687422 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.139392872 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.137971432 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.137918345 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.136496404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.142127235 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.151422505 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.137529166 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.166230505 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.217704423 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.162579434 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.150528847 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.136918056 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.138376881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.171908644 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.205405968 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.699853856 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.991212983 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.150320301 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.146571821 seconds)
  done (took 77.870373873 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.139093766 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1383684 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.138223504 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.166781855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.141539571 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.653205735 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.651346836 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.868845565 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.478339695 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.28883908 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.335569943 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.139522251 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229919539 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.153244985 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.142168343 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.157597416 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.167858559 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.145738744 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.140421387 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.649247106 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.156517257 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.362490362 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.305079357 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.154090014 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.166996855 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.532135732 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.13956869 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168224157 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.462617441 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.184066723 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.139544106 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.455904914 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.996672944 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250225464 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.142777507 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.167415707 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.140300029 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.415080872 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.14214296 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.141016748 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.141812919 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760114757 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.143373565 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.653207384 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.145388525 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.018863212 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.140976768 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.140971837 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.924695679 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.701989887 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.159219963 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.138332998 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.141753211 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.137423644 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138563022 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.169088735 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.886348475 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.230708597 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.139170607 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.138342824 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.142279564 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.167030806 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.139069874 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.211984707 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.137777295 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.924567367 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.210734706 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.350127135 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.624496928 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140610809 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229708418 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252949179 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.137921121 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.135573274 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.136461106 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.136596699 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.243214975 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.138191334 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.136575013 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.496069634 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.299376805 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.152581038 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.214447125 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.232772819 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.136054486 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.450974277 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.14193876 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.14019817 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.826709225 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232544158 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.138743301 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.13726312 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.136898104 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.490751755 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.617610198 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.305337834 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.139859265 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.136348107 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.075658033 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.157001593 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.501484169 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.136510422 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.607632216 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.739231871 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.143250712 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245169903 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.297838389 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.154472311 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.135816355 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.189179208 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.142231458 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.195160354 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.137256762 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.528374404 seconds)
  done (took 358.074024734 seconds)
done (took 576.288036924 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.867941229 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.820459196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.944021661 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.848922878 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812840753 seconds)
  done (took 10.351231163 seconds)
done (took 11.406097895 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.311263313 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.312870393 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.193231436 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.314844466 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.171667284 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.331426748 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.294971504 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.164230134 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.23304179 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.211796113 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.238199235 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.191038411 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.176796521 seconds)
  done (took 17.203867017 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398095678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.141857884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.20153887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363936372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.179628969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398823465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416013013 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.14003253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.280577646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.155429227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.153315579 seconds)
  done (took 16.889313817 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381058904 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.136704847 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.202854762 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376770679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.181865718 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.406818072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417756487 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.140991173 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298420226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.15240213 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.15123422 seconds)
  done (took 16.902532463 seconds)
done (took 52.052466037 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.180226232 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.296347036 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.167426634 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.155314888 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.148520749 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.150844691 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.155064418 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.147146989 seconds)
  done (took 10.460475682 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.15032686 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.146796039 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.14957368 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.146229973 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.148880723 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.14605172 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.144281315 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.149452435 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.146713758 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.145991893 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.146512717 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.145174365 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.14570277 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.144528762 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.146822536 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.148223588 seconds)
  done (took 19.411910071 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.14626187 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.143432712 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.145726282 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.146162732 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.146667481 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.145374387 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.146052022 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.145993165 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.142766943 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.146959912 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.146923572 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.146081945 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.146384021 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.14797516 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.14993659 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.147389635 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.145941244 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.14780957 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.149801457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.146553464 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.146991395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.146017479 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.146618229 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.147465381 seconds)
  done (took 28.580204757 seconds)
done (took 59.510587811 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.145103244 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.145483414 seconds)
  done (took 5.352204109 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.209773961 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213673591 seconds)
  done (took 3.486715313 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.151816382 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.150056721 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.152033946 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.151439708 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.150511331 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.150945627 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.149760637 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.149707151 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.149677445 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.150925757 seconds)
  done (took 12.566352706 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.151450713 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.150365286 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.147852773 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.151650348 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.151597745 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.148547955 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.15306551 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.151430047 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.150541516 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.14952481 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.152219226 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.149794201 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.151397539 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.147976607 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.150790734 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.149657225 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.150147247 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.149569929 seconds)
  done (took 21.771335163 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.167781923 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.172647331 seconds)
  done (took 3.404492431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.289646713 seconds)
    (2/7) benchmarking "second"...
    done (took 1.19153448 seconds)
    (3/7) benchmarking "month"...
    done (took 1.26621834 seconds)
    (4/7) benchmarking "year"...
    done (took 1.25549841 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.191183437 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.171782999 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.190829968 seconds)
  done (took 9.619870516 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.15412004 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.342482299 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.445532894 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.744290669 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.153486643 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.198350462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.016603364 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.19815004 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.186303236 seconds)
  done (took 13.504243649 seconds)
done (took 70.764716883 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.143043952 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.205064063 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.158903098 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.164822252 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.444092155 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.166404208 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.149664399 seconds)
done (took 15.495562762 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.138332949 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.135788755 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.153879617 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.133622273 seconds)
  done (took 9.625733769 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.076091825 seconds)
    (2/2) benchmarking "read"...
    done (took 1.510705278 seconds)
  done (took 4.651792011 seconds)
done (took 15.342277638 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.151110112 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152832684 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.155169713 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.155592225 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.151439312 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.153939389 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.151150867 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.152411291 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.154325003 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.15243845 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.153680452 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.151717027 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.155079675 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.153837539 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154834586 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148534347 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152820774 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153410754 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.151153386 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152772313 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151677479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152513554 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.152804179 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.15124401 seconds)
  done (took 28.732905957 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.15574005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.150200803 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.158527117 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.158448061 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.154549897 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.156026428 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.158745103 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.155591041 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.157931587 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.154588742 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154268832 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.154189803 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.156145748 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.153397421 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155066296 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.154479842 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.155306386 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153718583 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154500179 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.151857316 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.155899782 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150841834 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.15115709 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153354934 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.152152262 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149144899 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.159247581 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.14998705 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.157119994 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.155791493 seconds)
  done (took 35.707080347 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.159501709 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.161812534 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.159563112 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.15895236 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.157903717 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.154778296 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.157464306 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.157994437 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.153022309 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.157420389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.159229982 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.156967965 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.155609139 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.154134534 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.159437406 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.15338459 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.158179813 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.157625348 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.158415291 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.156431867 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.154079777 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.160411175 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.154368737 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.154975697 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.15923685 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.152887696 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.153767964 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.158060237 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.161335602 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.156366616 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.1600491 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.156037012 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.15722607 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.159226353 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.155364416 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.155696043 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.160585318 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.16280877 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.155793686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.157743266 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.156667614 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.160087784 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.157991682 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.156758923 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.16121426 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.156623428 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.155837122 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.156647203 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.156454644 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.155368245 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.160416317 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.159624371 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.155794582 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.159169173 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.16105369 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.158665634 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.157914984 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.161831687 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.163120745 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.157778083 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.156911551 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.156054367 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.158263012 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.159375152 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.159890004 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.158581058 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.163851763 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.161392466 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.159736209 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.158543122 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.157591565 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.160057874 seconds)
  done (took 84.443457228 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.158463352 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.152563721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.160248088 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.155912459 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.158449483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.158445282 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.15742754 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158427563 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155539262 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.163274877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161117273 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.157248726 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157758479 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.15803197 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161126612 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.157588614 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.161389351 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.156950214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.159022227 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.160023655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.158180502 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.159863371 seconds)
  done (took 26.557166315 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159189396 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.158818732 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.161791763 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.159417438 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159693323 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.157640889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.161538814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161418476 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158166194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.159722752 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157853764 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159737132 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.16143456 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157978661 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15657008 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.15963466 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166830636 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165474639 seconds)
  done (took 21.948244256 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.155290446 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.161752739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.160061615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.16505905 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.158542096 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.161025474 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16196259 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.161355834 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.163307024 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.161472402 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.167690825 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157774142 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.163731979 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157944372 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160243008 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.158594336 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.160711697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157649913 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161773908 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.159684051 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.159642175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.166768577 seconds)
  done (took 26.613291702 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160625528 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.160352374 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.160978968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.158785246 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.163128991 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.162122402 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.162779698 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.160586257 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.165487453 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.167031655 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16301687 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.16255153 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.163799585 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.165613026 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.163533598 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16027611 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.164467757 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.162691339 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169603263 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.157712509 seconds)
  done (took 24.325255398 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164827677 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.167784768 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.164629644 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1683728 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166168314 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.168651193 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.167012306 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165036457 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.168101671 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.171576375 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.164099253 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.168693083 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.16875677 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.165155194 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.168217489 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168203705 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166393487 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.165889234 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165316973 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.169055722 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.170843205 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171584623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.166164214 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.172972272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.167533382 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.169871214 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166951877 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.171056727 seconds)
  done (took 33.770596724 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163988672 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.165584984 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.162957784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.16248202 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.165743806 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.165587227 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.161752357 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.165266572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.165712819 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.162985405 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.169044189 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.164585761 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170477733 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.168287462 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.168599735 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.166123425 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166886579 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.165147277 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163969832 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163987869 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.165445563 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167710594 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.174562216 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.163625918 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165385365 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.170084256 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169924307 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.164581184 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172022224 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165478698 seconds)
  done (took 36.062417141 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.215316994 seconds)
    (2/2) benchmarking "in"...
    done (took 1.211864069 seconds)
  done (took 3.498271281 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.164349059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16847765 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.171318626 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.164864204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.168755916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168063431 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.172851989 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167326151 seconds)
  done (took 10.425127224 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.16982671 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.171028628 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.174262147 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.170669797 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.17193637 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.173307345 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.176996763 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.189014121 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.171376445 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.175344959 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.178639117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.176941032 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.175450041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.172157413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.170124728 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176408644 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.171208288 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.172303578 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.170366884 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.16939804 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168248157 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174111977 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177130568 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.170376995 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.177023852 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.180938832 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.176586672 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.177996454 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.177111125 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.177597241 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.179006586 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.173761525 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.178577129 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.172830406 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.174150468 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.173189375 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184095542 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19863701 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.187498826 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169613298 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17590631 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.169315588 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.175825792 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.175751751 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18147587 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.179065915 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.178280846 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.175495685 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.179679401 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.182627808 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.183936839 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179345495 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.175165787 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184390544 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.18241962 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186590495 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.197916246 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.18378816 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.190277725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.189589606 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.194593066 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.203174798 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181290733 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.179625125 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.187975815 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.202616186 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.189573178 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.199740421 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.179427218 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.180660932 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.188188703 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18730987 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.207072028 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.176060587 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180344233 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.182948252 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180723045 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184214952 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.19174442 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.204015291 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.181174679 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182142669 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190605896 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203553179 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.183671249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.183427218 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.180596072 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.179871579 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.186043833 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191711576 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.198576149 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.182876919 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.182669031 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.181899433 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.184028081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.18227172 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.181444713 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183554856 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.177923139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.182980093 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182572781 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183882766 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.193097904 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.183716891 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.185164704 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.189246132 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.185354615 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183743198 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.189895429 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.183740315 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179959869 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.185667602 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.189899076 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.18450912 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189525524 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.191752292 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.1849015 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.186251609 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.183785486 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.185761998 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194316741 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.208106383 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.186967831 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.189037871 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.189309909 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.195548765 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18268816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.190028817 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.185963493 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.182852109 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.18207036 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.186761973 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.187080013 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.186821339 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185072768 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186684407 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.185145765 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.188567125 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.188060595 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.187526141 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.188551972 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.187598288 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.189420599 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.189075467 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.186144638 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.189994652 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.193846064 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.188942468 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.188096189 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.189144859 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.187106344 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18867218 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.187337179 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.187097573 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.188721869 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18814469 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.187869267 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.187296592 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191247729 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.187829173 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188991696 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.188215442 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192513623 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.187237025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.191105525 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.189482431 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.186277681 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.189868094 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.187862384 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.188814332 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.188765703 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.192409336 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.195301426 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.196638797 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.19047319 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.190228356 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.195135182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187137342 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191546777 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.189307134 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.194668215 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.201111608 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.191880661 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.198355655 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.191703421 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189833273 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.191309142 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.192691826 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.191337478 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.188784148 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.195365213 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.200268305 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204227783 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219991177 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.192792717 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.197924763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.196384206 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.194898508 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.196973105 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.190073138 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.192125173 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.193921563 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.192205734 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191922216 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.192933249 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.190351639 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.19277192 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.194076977 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.196713939 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.194168145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.192798061 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.194416002 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195776901 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.191258638 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194397004 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.191542846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.196193795 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.189721209 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.193509503 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.193299195 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.195553622 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.194493975 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.201185312 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.190250261 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.198629054 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.196160498 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.195748785 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.192259721 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.196983557 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196279726 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.197219373 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20330178 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.21297394 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.198945319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202609963 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.212238466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.196468774 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.197083511 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.200078276 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.193818822 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.19838522 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.208784658 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.195674263 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.195388911 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.197922029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197972316 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.198096397 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.205599069 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.193184678 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.197853963 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.198260463 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.19768178 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.194879446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.197638309 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.197884726 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.1952106 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.200650121 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196126286 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.198625251 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.198182225 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.198130868 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.197406812 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.197702371 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.203506782 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.208275548 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.203731466 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.197191847 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.201738666 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.200919731 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.203023866 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.199607951 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.197718878 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.198620936 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.208227172 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.226750383 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206461045 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.218941051 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.19629991 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207390957 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.217600052 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.205342902 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.200748789 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20010512 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.200105748 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.198807848 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.19796641 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19911348 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.199570384 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201756491 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.201304572 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.20484174 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.202231753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.199753602 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.200385563 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.199608264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.200736553 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.200298183 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.19959582 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.202774202 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.204062203 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.203577478 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.199421565 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20662705 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.219647877 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.200777061 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.201314444 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.200210641 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.200925402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.202303734 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.199337707 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.20388339 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.208683867 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.204367771 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.210469468 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.201829128 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211960863 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.200182806 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.204851809 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.208696643 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.197406188 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.201037891 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.203675288 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.201738075 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.210921677 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.221039477 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.204690842 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.208099589 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202794779 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.201671466 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.203277755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.200244857 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203064754 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.201933091 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214871794 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.224148834 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.209846038 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.20542323 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.200280283 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.203193927 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.203449558 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.202885503 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.206934696 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.205896591 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.208238885 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.204541022 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.205734517 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.204025688 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.202696954 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.206966307 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.204242122 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.205060944 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.213330787 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.223760868 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209072133 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.206126228 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.212465767 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207176291 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.211702586 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.224583774 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.206006093 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.205797488 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.205095476 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.206388627 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.205936167 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.205525754 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.20426253 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.205452731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.209702553 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.203669494 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.206791412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.205368989 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.202878719 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.204629578 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.213543939 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226108272 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.206299675 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208879384 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.203091475 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.207847206 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.20751395 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.203838248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.205069317 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.207857995 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.215672034 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21584444 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.207200155 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.207518641 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211783796 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.208553847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.209037533 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.212077893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.208483399 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.21089675 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.213357447 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.211140492 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.21265126 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.206107226 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.20547588 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208180033 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.207086004 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.220922162 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.206229827 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.207677237 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20483007 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.206750261 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.208459739 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.20818151 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.207813265 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.207352167 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.208285667 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.211649136 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211249946 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.215395366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.212134231 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.209405185 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.206010513 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.208854038 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2095806 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.207946621 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.207463495 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206590471 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.210127217 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.206791884 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.210249256 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.208831958 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.207492367 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.208887562 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.209325054 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211962846 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.217823622 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.210136469 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.206557914 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.21085541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.210470456 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.210582107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.20810622 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.218920595 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.211683253 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.222398584 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.218533133 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.215151073 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.211323013 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.214659548 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.222022141 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.210190894 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.213245343 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.208815497 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.210294899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.211809793 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.212912143 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210333662 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.214963769 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.209752579 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.210052059 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221810969 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.680688668 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209924865 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.212374539 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.217535104 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.211504688 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.209960524 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.212753858 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.214882868 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.219892739 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.229412448 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211922582 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.210824177 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.207723604 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.212236944 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2146417 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210580346 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.215585011 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.210582546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.215166484 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211858274 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.212265959 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.212651535 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.211764261 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.213807632 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.216940422 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.221821442 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.213469652 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.213393234 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.213091075 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.211322154 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214063985 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.213883497 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.212664807 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.211144246 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.213323091 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.213084618 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.21444037 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.215694711 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.213462744 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.21648468 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.213347652 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212385894 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217944113 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.224418038 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.220842675 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.212964648 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.21374403 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.215248486 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.216570597 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216541335 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.217194271 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217964189 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.21631329 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.215524886 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215135209 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.216156522 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.217580571 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232678403 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.23492547 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21639275 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.214976466 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.218014547 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.214552254 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.211396584 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.214612924 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.216713705 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.21836916 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.222915518 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.216249019 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.225576261 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232919631 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.217621372 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.218428101 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.219510889 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.222938762 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.219417174 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214181844 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.219151867 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.219724933 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.232605427 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217024467 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225641771 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245588628 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.237011564 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.217592288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.216961527 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216259943 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.215745279 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.218742809 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.219246417 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.216400617 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.218593587 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.216789407 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.217788689 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222326244 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.218567548 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.22102396 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.216616859 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.215795518 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.219893486 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.215080386 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.216296066 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.218634529 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.218209847 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.214084137 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.216416291 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.219679178 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.229926802 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.243857874 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.219265729 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.217080286 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.216754557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.219836163 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.221665076 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230020496 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.228196876 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.218323539 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.21931871 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.221545051 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.218899529 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.218885815 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.221879043 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.218944952 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219812006 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.216498565 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.230803711 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244077134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.223607903 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.219708671 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.219213738 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.21899297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.221814145 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222883169 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219825816 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.221060873 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.223109747 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225654801 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.218738844 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.2173618 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.223469839 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.2298062 seconds)
  done (took 717.751084713 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220445478 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217190059 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216856604 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217619853 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218739024 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217661151 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220422019 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216866322 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.219534126 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.217267556 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.221037393 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217365855 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.218951544 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218149281 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218466728 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218747348 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218603344 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.220618089 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217164597 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218244556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.21915664 seconds)
  done (took 26.711594146 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.219883231 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.218797476 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219932241 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221845536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218237512 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222780774 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222203666 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222569719 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224629613 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218598765 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.223653575 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223118049 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.22019743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.222217253 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220378935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221290598 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22328144 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221178063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.221962286 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221875109 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223117861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223227724 seconds)
  done (took 27.997455799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.221464986 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.221498327 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.22313882 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.22221663 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.221432079 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.220600025 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.223482229 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.223534528 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.221700372 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.224567754 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.223278165 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.224549336 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.230181143 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.229812474 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.224581896 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.22540504 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.224292089 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.222940622 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.223218498 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.223030987 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.23063762 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.238518435 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.22210951 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.22490417 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.224762508 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.225324412 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.223729805 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.224765582 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.225876277 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.229442278 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.225846218 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.223093008 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.227506976 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.224498823 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.227994352 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.230925132 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.226446364 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.224267161 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.225783551 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.236034303 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.24376489 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.224845872 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.234644623 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.241494307 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.226119216 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.226970051 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.232028527 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.224741888 seconds)
  done (took 59.996937436 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.798757652 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.816925314 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.813154683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810935502 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.812954942 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813419275 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.827871036 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.832269685 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.814465557 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.810204543 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.811241161 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814195661 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810337797 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.817941521 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.816027637 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.813348063 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812450713 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812726235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.830547696 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.826133287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.810244156 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.818896244 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.815816807 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818220484 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814851081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820534732 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819736932 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.820618324 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.815413214 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.816540264 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.819414704 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832591797 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.833822428 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.818807519 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821677488 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.819065045 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.813514641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.814658454 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820420943 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.817021603 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.817897385 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818544447 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.819138746 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.82106138 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.835807311 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.819790015 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.818761458 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.816739604 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.81906569 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.816551917 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.8191717 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824450129 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.814954093 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.818040786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.818564089 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.819507947 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.829289322 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.833238713 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.821095353 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821538387 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823734454 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.818491732 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.818659655 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.824648798 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.817625923 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.821968909 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.825639499 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827426676 seconds)
  done (took 124.830444234 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231714497 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.231237773 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229710087 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229243088 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231231294 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.230031543 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232919467 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.229976701 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.231952353 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231264361 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23433647 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.234995462 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.233330655 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.234266178 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.231794475 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230732433 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.232506745 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231767418 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230802491 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232371618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.232161012 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.233302212 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231256482 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.232369912 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232909309 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.232443995 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232832534 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.23415423 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23441418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.230676131 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235375686 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.233022134 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.234745239 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.231527107 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.232740832 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.233250907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.233466971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234564182 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.234200077 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232472697 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.234584195 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233132239 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233229182 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.232376214 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233154837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.230212907 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.229938718 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2351445 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.237343515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235118202 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.232937751 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234477487 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234762223 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234643747 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.235704159 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.235542004 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233367391 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235538003 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234016281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.235963454 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236214279 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.234857979 seconds)
  done (took 77.587026703 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237876925 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236894871 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.233286449 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.234420455 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234514031 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234877505 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236831433 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.237379702 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236546103 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.23819277 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237351136 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235463491 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236624147 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239212336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237277089 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235316391 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235171996 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233191234 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237183848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236134665 seconds)
  done (took 25.85929372 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.230980394 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.233866991 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.234882723 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230716925 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.239293368 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2353547 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.23635704 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237997295 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234496756 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23795243 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236982994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238485497 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237379217 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235868379 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.236463677 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.234132477 seconds)
  done (took 20.905275033 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.235647231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.237810993 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.239739978 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.236596162 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.236355182 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.234881951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.238825066 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.23686609 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.237762379 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.237701594 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.236974733 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.237329721 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.237766581 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.239943554 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.237113038 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.240537912 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.236165549 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.235954513 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.238241542 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.239024843 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.237434812 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.236959894 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.239075394 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.238745476 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.235434079 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.23662553 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.240349549 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.240352824 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.238088982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.239870783 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.237107854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.237182531 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.235696711 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.236729788 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.238774284 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.239752 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.239421463 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.238262145 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.240529147 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.240658709 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.240063133 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.240108097 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.242926836 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.242209841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.236958298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.241151263 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.238428444 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.238089044 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.238744843 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.239314419 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.242359281 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.241697467 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.239938411 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.242127354 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.240885702 seconds)
  done (took 69.262950868 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24115126 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243332955 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239247912 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.241089375 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.241786787 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.239204288 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.242507536 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.239480285 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240232841 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.243978919 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240081213 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.243190624 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238584573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.242588808 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239369786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242689685 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.241045419 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.239238197 seconds)
  done (took 23.477582133 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240921055 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239876381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.246498354 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.242080792 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.241586976 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243528582 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242724482 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.244612005 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244100852 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242545803 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242585626 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.243829536 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245420026 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.241420307 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242986653 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23799721 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.243878909 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243305758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.240362576 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240646696 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244224783 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245084246 seconds)
  done (took 28.481421615 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.242716529 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.242038789 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.241883171 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.25677966 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.262632928 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.245456319 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.24302488 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.245229544 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.26698131 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.296878102 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.29260036 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.265619113 seconds)
  done (took 16.241163082 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243487734 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244136972 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242850689 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247006199 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245335471 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243152656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243353407 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243262139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245094514 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244340487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243720458 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247296922 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24505619 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244045186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246519854 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246043455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246178494 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244098482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243835998 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246873057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243537354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245478443 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244317696 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242232522 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246350896 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244409726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246022806 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245041201 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242960067 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247302964 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245985096 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245382882 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245965948 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247279526 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247500212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246371326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243836636 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248499349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246463498 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246890788 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.248120143 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246177695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247963526 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245335089 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249200108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246812959 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244872098 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243880486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245229066 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248491242 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24936406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247793431 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248504808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248762315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248852137 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24835439 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247160274 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246420106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250617566 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247840744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246068379 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247986607 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247130937 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245865972 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24822894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246652883 seconds)
  done (took 83.38677206 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247408035 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248460435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246912836 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247064475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247273531 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246056998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246763305 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247495343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250174048 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244924672 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24967282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248579516 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246509435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247942484 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247379474 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24932708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247469166 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248372469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246945512 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251195458 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249472474 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249335039 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24831604 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251115923 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247957521 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252378701 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248886401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24597304 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247375736 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246944869 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246666338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248453391 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247570632 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.250452513 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248617842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249032061 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248600172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249502485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248902934 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252333552 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249401587 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252133744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249900878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250089337 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24809295 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250558538 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250843557 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248574724 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249227965 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251132252 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251340456 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249377087 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250923551 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251238673 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250373768 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250594739 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249431162 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247750196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251587706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252133804 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250150264 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250701877 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253609329 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251694862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250345164 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250512733 seconds)
  done (took 83.595631732 seconds)
done (took 1719.232980369 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.41735553 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.37096086 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.251393264 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.265592552 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.247546978 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.248236191 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.260818603 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.247414874 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.253849645 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.253724986 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.254641343 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.444270221 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.248935501 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.250447803 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.254740189 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.35479777 seconds)
  done (took 25.776311656 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.284634846 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.263136063 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.364420373 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.2735734 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.283100547 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.43365477 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.309844595 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.257719388 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.414462607 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.277772375 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.247606267 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.279126928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.255203746 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.248853557 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.273448387 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.433865104 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.4877933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.259404269 seconds)
  done (took 27.800645586 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.67177867 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.24807214 seconds)
  done (took 5.071748155 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.278128684 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.258793491 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.260838394 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.258050333 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.250372131 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.244832402 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.259706852 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.256552509 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.253708418 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.373388052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.262701048 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.275685837 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.275906113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.260158617 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.253733646 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.303410235 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.41083356 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.255477185 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.255573188 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.268042065 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.249889262 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.375188564 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.288624614 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.248250452 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.365046612 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.248865698 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.255355097 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.252273049 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.386618626 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.241962193 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.242370201 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.24287635 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.24667374 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238024642 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.665311781 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.240019013 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25228152 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.233934021 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.223416787 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.423364624 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.23135816 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.228004442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.216630886 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.65530312 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.350202835 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.336060619 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.232973402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.219612302 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.218512327 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.279564926 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.217571311 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.219006569 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.27495341 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.0116349 seconds)
  done (took 80.291627135 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.245018077 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.204716912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.385886774 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.224169097 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.206084852 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205610901 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.207344894 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.46662545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.215232819 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.204664276 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.485576237 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755415577 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.226807331 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.254046965 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.049174875 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.269688577 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.205198652 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.220923257 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.209433028 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.205902148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737714399 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.212881862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.205505882 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.279652278 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.242363909 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.701741301 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.206990278 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.217334245 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.210460671 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.205177358 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.707773132 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.232414055 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.25885976 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.208745272 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.467140177 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.565706212 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.532254854 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.211226173 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.249966826 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.204551372 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.227348185 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685269609 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.545924828 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.210320344 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.206004929 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.694494145 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.205948194 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.212751064 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.21290185 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44966539 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.203534184 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.204265429 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.218973476 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.208038567 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.202575425 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.303072526 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.282951529 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.701799226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.204486435 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.205991823 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.237254942 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.203117209 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.214780805 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202273787 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.201304368 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.542791727 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.407018263 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.202068978 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.535315957 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.692562867 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.217276663 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.771185324 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.216849321 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.21833892 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.389996038 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.208212697 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.204869966 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.6793881 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.220771463 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.194960577 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.510561488 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.197684636 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.479498066 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.215711618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.19325408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741861317 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.20152974 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.19784973 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.195232156 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.214312344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.199902262 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.210154198 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.461558915 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.221144693 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.194274122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.19640414 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.234785701 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.196247481 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.200418281 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.199842677 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.753366177 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.216384336 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.194259679 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196992888 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.196156246 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.215737011 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.198210469 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.196634963 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.462993608 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.212140106 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.201299051 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.196799351 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.197056022 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.214729018 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.271342309 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.197825846 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.484503613 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.200635915 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.20270965 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.205384768 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.197316394 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.232807106 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.197485816 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.205570576 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.069014764 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.459296339 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.217428198 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.202376414 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196526746 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.197577442 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.200320556 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.20320125 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.232846811 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.201542275 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971696532 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.219522802 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.208261764 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.198229369 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.207297752 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.198452467 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.208784992 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.199782015 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.487882876 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.471196732 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.412110635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.209003747 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.203388618 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961761116 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.2453305 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.382886706 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.222845884 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.204697489 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.453751084 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.409082596 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.205326233 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.205475979 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.205335471 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459610147 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.204718973 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.52800195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.733486706 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.221845556 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.213901605 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978879949 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.911424703 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.203584481 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.19870984 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.474231194 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.220485319 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.196035434 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.196032483 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.19693756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.196273767 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.197249181 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.200155759 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.193657127 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.19196695 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.516224054 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.383018677 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.208764234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.192549953 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679791979 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.203014645 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.192408604 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.196820829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.195381923 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.193316459 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.258894943 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.194831475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.196515599 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.194783234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.194680857 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.697180458 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.194324328 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.198706341 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.385752065 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873444508 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.208151015 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.195238744 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.209066437 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.094792363 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707047723 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.220975602 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.485293646 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.196825737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.232663594 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.207425136 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.197051462 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707800953 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.194881739 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.210784337 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829834935 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.213002269 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.613383754 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.194108841 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.199086691 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784831599 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.210705147 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.193395494 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.193712351 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.200016984 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493694382 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.194737947 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.232656521 seconds)
  done (took 467.857594413 seconds)
done (took 607.946066091 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.194179714 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.195996901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.184178717 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.197101056 seconds)
  done (took 9.879777803 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.206121744 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.203145523 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.203315052 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.20166287 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.204482145 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.202512029 seconds)
  done (took 8.331854012 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.194793572 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.196867386 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.200867743 seconds)
  done (took 7.701768313 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.393201165 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.222413929 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.504461379 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.215935468 seconds)
  done (took 8.448265542 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.203666057 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.202601663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.202547436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.204224002 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.20861995 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.208591776 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.205773818 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.205583571 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.2081622 seconds)
  done (took 11.959580618 seconds)
done (took 47.428602547 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.839043111 seconds)
    (2/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.337234226 seconds)
    (3/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.201680448 seconds)
    (4/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.424771962 seconds)
    (5/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.365522253 seconds)
    (6/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.326107622 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.234994784 seconds)
    (8/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.332935319 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.318870309 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.253493246 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.212180055 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.264476311 seconds)
    (13/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.279465292 seconds)
    (14/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.391495896 seconds)
    (15/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.224324807 seconds)
    (16/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.320548802 seconds)
    (17/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.227669309 seconds)
    (18/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.848424339 seconds)
    (19/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.208389643 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.302996909 seconds)
    (21/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.21419065 seconds)
    (22/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.18425828 seconds)
    (23/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.22291493 seconds)
    (24/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.21100932 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.248462564 seconds)
    (26/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.214308615 seconds)
    (27/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.848396744 seconds)
    (28/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.326684326 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.211231428 seconds)
    (30/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.188812467 seconds)
    (31/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.275851144 seconds)
    (32/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.362988545 seconds)
    (33/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.224514496 seconds)
    (34/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.233352568 seconds)
    (35/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.94601553 seconds)
    (36/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.233339615 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.223076099 seconds)
    (38/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.213087574 seconds)
    (39/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.219133828 seconds)
    (40/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.032233732 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.237091768 seconds)
    (42/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.390169628 seconds)
    (43/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.217976827 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.281827222 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.519114155 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.292633712 seconds)
    (47/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.333675621 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.213967999 seconds)
    (49/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.291961427 seconds)
    (50/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.345033773 seconds)
    (51/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.297741625 seconds)
    (52/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.229651787 seconds)
    (53/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.845293368 seconds)
    (54/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.213419013 seconds)
    (55/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.291390692 seconds)
    (56/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.285484806 seconds)
    (57/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.255577726 seconds)
    (58/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.011508701 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.25987041 seconds)
    (60/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.222978294 seconds)
    (61/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.306559075 seconds)
    (62/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.251103162 seconds)
    (63/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.262400169 seconds)
    (64/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.211109153 seconds)
    (65/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.345430344 seconds)
    (66/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.259046129 seconds)
    (67/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.382269842 seconds)
    (68/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.21687969 seconds)
    (69/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.901275714 seconds)
    (70/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.37351372 seconds)
    (71/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.229865707 seconds)
    (72/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.324327449 seconds)
    (73/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.048684387 seconds)
    (74/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.285916169 seconds)
    (75/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.291607949 seconds)
    (76/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.198582982 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.251758875 seconds)
    (78/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.267822654 seconds)
    (79/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.861289081 seconds)
    (80/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.490686473 seconds)
    (81/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.283964501 seconds)
    (82/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.256574752 seconds)
    (83/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.302721549 seconds)
    (84/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.256709435 seconds)
    (85/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.215065462 seconds)
    (86/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.265849326 seconds)
    (87/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.346259123 seconds)
    (88/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.226537523 seconds)
    (89/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.189483584 seconds)
    (90/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.86556244 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.345615766 seconds)
    (92/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.357113335 seconds)
    (93/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.339005692 seconds)
    (94/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.212668045 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.240177846 seconds)
    (96/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.28506772 seconds)
    (97/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.22122296 seconds)
    (98/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.549758445 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.273423906 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.205638815 seconds)
    (101/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.251036535 seconds)
    (102/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.230532817 seconds)
    (103/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.398020226 seconds)
    (104/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.897929222 seconds)
    (105/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.21879488 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.190870969 seconds)
    (107/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.272468352 seconds)
    (108/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.208403195 seconds)
    (109/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.301780234 seconds)
    (110/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.231850726 seconds)
    (111/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.215119984 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.244011044 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.256262821 seconds)
    (114/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.286613584 seconds)
    (115/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.32093816 seconds)
    (116/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.233286653 seconds)
    (117/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.342256048 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.307204677 seconds)
    (119/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.219910491 seconds)
    (120/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.2363985 seconds)
    (121/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.950373283 seconds)
    (122/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.422928685 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.306548071 seconds)
    (124/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.94948103 seconds)
    (125/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.423319945 seconds)
    (126/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.293555064 seconds)
    (127/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.276701986 seconds)
    (128/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.221062513 seconds)
    (129/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.192461285 seconds)
    (130/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.229330201 seconds)
    (131/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.217735709 seconds)
    (132/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.23308566 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.302934838 seconds)
    (134/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.214463557 seconds)
    (135/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.233333504 seconds)
    (136/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.327488305 seconds)
    (137/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.328671172 seconds)
    (138/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.323134369 seconds)
    (139/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.358637275 seconds)
    (140/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.274155249 seconds)
    (141/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.203933055 seconds)
    (142/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.907566539 seconds)
    (143/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.283217418 seconds)
    (144/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.319651175 seconds)
    (145/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.22613293 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.222175426 seconds)
    (147/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.194318003 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.260817757 seconds)
    (149/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.227771047 seconds)
    (150/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.291822766 seconds)
    (151/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.282815772 seconds)
    (152/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.193981114 seconds)
    (153/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.194815059 seconds)
    (154/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.208416861 seconds)
    (155/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.313645754 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.340522283 seconds)
    (157/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.275011326 seconds)
    (158/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.858957459 seconds)
    (159/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.194728452 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.401365337 seconds)
    (161/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.234506162 seconds)
    (162/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.211980039 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.348152604 seconds)
    (164/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.345434721 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.247962137 seconds)
    (166/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.282058798 seconds)
    (167/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.229097542 seconds)
    (168/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.339495241 seconds)
    (169/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.328240335 seconds)
    (170/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.234131899 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.361624137 seconds)
    (172/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.945482709 seconds)
    (173/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.315746501 seconds)
    (174/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.303916534 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.21817149 seconds)
    (176/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.2853852 seconds)
    (177/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.95515193 seconds)
    (178/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.404478651 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.364331123 seconds)
    (180/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.379820025 seconds)
    (181/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.872092853 seconds)
    (182/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.22484292 seconds)
    (183/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.292866824 seconds)
    (184/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.223973571 seconds)
    (185/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.236840952 seconds)
    (186/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.291658066 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.228136433 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.246415524 seconds)
    (189/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.218828713 seconds)
    (190/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.202918909 seconds)
    (191/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.321094748 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.22436106 seconds)
    (193/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.386216386 seconds)
    (194/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.329830582 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.252234075 seconds)
    (196/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.211146459 seconds)
    (197/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.399866108 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.927102861 seconds)
    (199/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.952888976 seconds)
    (200/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.438614551 seconds)
    (201/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.530482891 seconds)
    (202/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.20184113 seconds)
    (203/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.262565808 seconds)
    (204/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.40902648 seconds)
    (205/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.309475206 seconds)
    (206/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.196558032 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.307974447 seconds)
    (208/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.064545683 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.412453593 seconds)
    (210/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.067558508 seconds)
    (211/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.243771346 seconds)
    (212/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.35525298 seconds)
    (213/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.298708593 seconds)
    (214/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.260080457 seconds)
    (215/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.387541535 seconds)
    (216/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.266074595 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.198702175 seconds)
    (218/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.449932188 seconds)
    (219/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.078246715 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.961331508 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.229163459 seconds)
    (222/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.222688538 seconds)
    (223/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.952504861 seconds)
    (224/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.41389309 seconds)
  done (took 339.157409156 seconds)
done (took 340.267559195 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268960106 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.397517534 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.221434593 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.220639171 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265135495 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.21642263 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.257738603 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.230857786 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.226113422 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.224536137 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.216193083 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.228339922 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.235474029 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.257105295 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.33653507 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.231388482 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.222281469 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.224299321 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.26475731 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.281283299 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266005647 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267373419 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.235496697 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.222131815 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.269504868 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271056912 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.229966692 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.217288987 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.226227496 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.262163457 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.215956627 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.234359995 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.273820592 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.275267985 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267808212 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.224553249 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267593122 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.399822695 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.259181565 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.25805281 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.227032867 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.272186897 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.23501449 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.233791829 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.275918499 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.236904907 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.272226828 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346576016 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.215648327 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.228953823 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271076071 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.286677364 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.227875365 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.210023948 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.214540533 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.351797772 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.226182746 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271895229 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.228217175 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267866469 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.339409442 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271895357 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.287456738 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273307452 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.228848718 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.238746679 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.227768042 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.284455128 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.225186948 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271160382 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269703277 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.232399384 seconds)
done (took 99.550617556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.354824663 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.22432684 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.385300179 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.224429192 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.388213351 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.371333325 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.221642405 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.222853617 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.220849412 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.055299854 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.222701843 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.223318847 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.222547973 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.222021698 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.357186837 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.226624502 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.221594401 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.989410602 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.225972652 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.367606467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.225622435 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.225463901 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.226101542 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.092019959 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.223846653 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.219247845 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.370361895 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.226992957 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.943355987 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.220338606 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.2222465 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.98813835 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.370771361 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.243324393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.237588006 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.233238164 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391909702 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.243802361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.352319337 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.357899828 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.393264673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.264355014 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.220394737 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.223681911 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.227532855 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.227596087 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.224540623 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.253615137 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.226196043 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.223828168 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.945722055 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.235576413 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.22457343 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.226465222 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.224796791 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.256123659 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.224321461 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.227646544 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.37037559 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.227120458 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.35788848 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.052635537 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.098681854 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.228798586 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.22399737 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.225845127 seconds)
  done (took 101.528857424 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.292792492 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.302834495 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.336822467 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.242596242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.279050561 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.342361195 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.242690292 seconds)
  done (took 10.170003759 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.23359372 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.229190845 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.278721073 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.278223779 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.228813058 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.445904757 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.229226987 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.240245461 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.227964996 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.307328485 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.229997587 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.229020164 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.235065836 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.225002508 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.277645663 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.241012408 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344653436 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.229691118 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.2305043 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383251827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.228713645 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.235705758 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.307253465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.241320106 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.23171899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.23663487 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.17216879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.230481326 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.22845402 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.231466372 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.227512005 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.340954312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.230972472 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.22904619 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.228718216 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392222738 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.231712815 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.229071302 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.231777788 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.230529932 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.23152915 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.232106492 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.231175617 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.228696793 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.230072078 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.254252131 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.231938074 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.231733316 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.231749428 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.231908575 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.310902391 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.232768261 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.22893201 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.22911294 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.310664662 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239824734 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.232692668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.228172978 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.232437777 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.230243613 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.386694313 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.281174401 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.232682311 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.279608322 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.232119358 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.233985042 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.232312624 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.231553105 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324365856 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.233093492 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.282540267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.230564233 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.453870324 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.256555159 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.234515678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.23592366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.236424622 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.232951534 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.229707022 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.240373855 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.231279754 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.234903751 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.241145225 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.232476593 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.231552831 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.41683443 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390640162 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.232593604 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.246116224 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.241260659 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.231418379 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.312278532 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.234373851 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.231490673 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.289555938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.350340842 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.313030046 seconds)
  done (took 128.151323982 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.247780845 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.248746714 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.239961067 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.26148747 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.235972384 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.235078292 seconds)
  done (took 8.607295161 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.236171443 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.237879348 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.235249824 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.236494379 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.235957281 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.23728797 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.236766905 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.239117745 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.23854732 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.237335372 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.236169866 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.239222224 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.237950647 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.236868156 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.237717012 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.237042347 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.237854177 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.233059226 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.236220132 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.237229131 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.234170487 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.239078256 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.236298253 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.239237203 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.241793611 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.237158603 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.259017557 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.237814229 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.237071584 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.244199036 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.256497807 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.237929918 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.239109151 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.242928474 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.240046849 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.239979189 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.241088682 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.239290318 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.2363232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.238020439 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.239497759 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.237644335 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.238740319 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.238922906 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.238811943 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.242448024 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.242093704 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.258692525 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.238405366 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.240493749 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.240139928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.239163643 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.239479669 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.241118471 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.240781375 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258575277 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.244540791 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.240432961 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.240597989 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.24129338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.23960849 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.23882576 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.241735174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.242712613 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.238570392 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.23936388 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.240714884 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.243182823 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.240925104 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.240805003 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.24250602 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.23866481 seconds)
  done (took 91.427505028 seconds)
done (took 341.013452752 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.973243226 seconds)
  done (took 4.114862966 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.321709893 seconds)
  done (took 3.464477415 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.479612751 seconds)
  done (took 21.631903808 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.255070448 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.354400115 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.253529397 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.24012114 seconds)
  done (took 10.247184361 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.485336281 seconds)
  done (took 3.628038647 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.238354242 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.235484934 seconds)
  done (took 5.618740847 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.477348847 seconds)
  done (took 3.620911584 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.707557055 seconds)
  done (took 3.860477875 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.263429439 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.250202841 seconds)
  done (took 5.664552364 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.222296371 seconds)
  done (took 3.366829123 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.957596667 seconds)
  done (took 37.10355293 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.244583306 seconds)
  done (took 3.390547364 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.28475871 seconds)
  done (took 3.430274328 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.636549198 seconds)
  done (took 5.782001837 seconds)
done (took 116.066634428 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.234938296 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.237076164 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.23755319 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.236461201 seconds)
  done (took 10.09009671 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.295983427 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.295519115 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.295003855 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.294692729 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.295178881 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.294797491 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.271100237 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.269215529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.296158365 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.294940501 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.300819373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.295346108 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.295317873 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.269638398 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.295623771 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.300193721 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.296279675 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.295754655 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.270241364 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.296045555 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.245286071 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.29857779 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.297224641 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.244933531 seconds)
  done (took 32.050493017 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.738345229 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.316947428 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.398749388 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.296918309 seconds)
  done (took 6.898570101 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.322751111 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.322810024 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.334723324 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.373189546 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.387162008 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.334377492 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.27079016 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.267191581 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.253246166 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.323457411 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.374574028 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.313165406 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.399662169 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.245790647 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.451635009 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.24570487 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.246312372 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.322712508 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.37537959 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.38708919 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.246406852 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.323309746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.323707129 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.315866651 seconds)
  done (took 32.910270039 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.254313014 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.258579948 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.245976135 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.260415593 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.244771012 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.245816469 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.247658178 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.252876404 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.245392437 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.24552646 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.246214989 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.25955909 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.249204464 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.245035807 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.254490855 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.248743036 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.251733094 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.250207706 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.245118714 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.252679015 seconds)
  done (took 26.153120844 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.240849772 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.238866829 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.593802578 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.49848848 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.240597969 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.24174441 seconds)
  done (took 13.20404234 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.316018951 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.463692033 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.248507507 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.583057437 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.670459685 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.249408866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.248674369 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.484309266 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.783941812 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.763353259 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.307524786 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.318695172 seconds)
  done (took 18.588574024 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.247158715 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.244790236 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.248871972 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.261897183 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.301616101 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.268502578 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.256793127 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.243735721 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.305439224 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.320623729 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.267830818 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.303295406 seconds)
  done (took 20.422302277 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338841787 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244447846 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254133065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316278601 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266325962 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088577259 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24422096 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930149742 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.265003269 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517830161 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243804848 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357632929 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.498905353 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243259691 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250638256 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.221079165 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477952603 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730570341 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250800927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24548836 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282656662 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257656534 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251767317 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.469078056 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247687589 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246365862 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.508110214 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246239348 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5214111 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.264248069 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257315107 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246908652 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520380626 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88299284 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363509602 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44723351 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25058922 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267555197 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.238977153 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.251842899 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252030535 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250833669 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259199755 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246498528 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24730976 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255211358 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941024562 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.270975804 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.244479242 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.247669261 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496983588 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349692821 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.250578393 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247459839 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276162206 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250358119 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.251230797 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377643501 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849969293 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249163072 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257462845 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.251503807 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250519579 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267981891 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846331376 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.254100722 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.2536946 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.253278506 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247903704 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248827836 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267835621 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248008662 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.27312307 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249878302 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950585595 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253783486 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254484305 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798455372 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253823602 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.269198747 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481159722 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248639979 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249946195 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.247434611 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251354891 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933984121 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26257444 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.246937101 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300560829 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954009911 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.471850339 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271994752 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282145282 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.473995211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.239993073 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249635176 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.261917751 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255386171 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271936361 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940786327 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268263862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.254160831 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508056251 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.461273922 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253813638 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.232728367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709908062 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283901563 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.271014787 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260462463 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.458561916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.819611004 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272042558 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256521787 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274989366 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252487751 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976074608 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271179298 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.357296639 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25298108 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526499904 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.021583015 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258088578 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321676493 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257683024 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253099784 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252386205 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258773537 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251723025 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.447579138 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275797874 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.270456371 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.255457464 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253233717 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.260544597 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262315161 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.258202993 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.477333049 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267246522 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533396929 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253709067 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253852962 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253455245 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.475992011 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.252221929 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.593871875 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516380846 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258197779 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264921375 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270127523 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273434101 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358004519 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276247591 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.259924515 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515180185 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.259007051 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.258703856 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261693309 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261869567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260306614 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.261769448 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267995874 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827012705 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238111801 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263386345 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143351637 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.270312158 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323246091 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262515764 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.460889115 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.25300485 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274422778 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.262882719 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.262667673 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485916527 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265643856 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.25969111 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333943667 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.710787851 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.842576313 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274090479 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.256514405 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.254216696 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.254247735 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257196794 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256645575 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257474858 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461027594 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271835881 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274690511 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.837500052 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26008233 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257117075 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.267003329 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269158318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.264623172 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257309044 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.254767361 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268930944 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266368717 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.27226177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400712597 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.270727462 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257879568 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.775041 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.263537939 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259591645 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288992977 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292750364 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260640639 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042139029 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520207772 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25999569 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510642467 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263833768 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.278624228 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.257431602 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272594849 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262079569 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.267807269 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287761763 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.269762023 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25984376 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261229412 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838499427 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976396203 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781647261 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269576268 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.263702017 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262763612 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.954467056 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277307356 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259484479 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490641403 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956603231 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279142394 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71864221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.284816364 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004157928 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512271441 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.497216816 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266019849 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.262192004 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53326658 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476702608 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295436925 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264174495 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264804013 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.247036339 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798052393 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287410036 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34165618 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957781212 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279426264 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.278119065 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.285033983 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263946728 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647537146 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279370211 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260103125 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268253697 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268580103 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049716594 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268660018 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260630305 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86849243 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263412613 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.723581777 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280234824 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.467992432 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.274965921 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.265969184 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.260320862 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.269951676 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.521487674 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514341069 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267854628 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2749508 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799863661 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.141771796 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.270730688 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262155431 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990168592 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279801284 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54854008 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.272151126 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.269691867 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270297482 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264766907 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264044878 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.262320367 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269689919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239903748 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746952632 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.27303453 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26948538 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27300075 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2681744 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520796448 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.278494557 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.839561044 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496739483 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269813973 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308452881 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.26895843 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266489204 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.251160639 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267188151 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265167768 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308114667 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.491894014 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265659041 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.249993939 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272693959 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479976157 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26644153 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271286368 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501219748 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.263523862 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.280603358 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008565427 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301374496 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271359881 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267856831 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281582294 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.312711503 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337109861 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474253479 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.279421659 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.276842214 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656507422 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287377625 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268995135 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.280979744 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363353582 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281757345 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.278516556 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.040658489 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845023248 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991358576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.849582372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523358627 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272813083 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278521488 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268144953 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430615692 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269650898 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54187693 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268258143 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.280724422 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294830545 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270986083 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278741795 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51507699 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543899414 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268748878 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281174126 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27305878 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.268705358 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278421639 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.480372902 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754311808 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815875213 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272219742 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276872155 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.971939109 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564092072 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270148047 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270664346 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270068423 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.286563607 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293473234 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.27510409 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27088145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433096948 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523635394 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917935796 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.298171499 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.299148658 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.787897296 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279297877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.529743636 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268352127 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.499335082 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849528388 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959699782 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541247691 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343503003 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479252185 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.272409684 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432814507 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.273089523 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271500519 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27359799 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272935997 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.268468904 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.281125779 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856705515 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539852599 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.276653051 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.27309087 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303644113 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.28372404 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497016737 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971217211 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50157082 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283333064 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27854409 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275144698 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855802934 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528820263 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279094791 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.277382883 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50553758 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274403825 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2971005 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.790290433 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.271492438 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828223155 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.249834763 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296578898 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280255521 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.968900576 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859430067 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.286428495 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768736289 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278782672 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28710201 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552069525 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.280267551 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278919638 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554496135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.278716995 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278420847 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487022818 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.849888229 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027631111 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.295635565 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307415933 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.278499274 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277032579 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319898439 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298715365 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276454075 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.678233853 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293287172 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275560045 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287426041 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.27357253 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286008009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.27736617 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276330388 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.282496852 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.284798534 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.26691119 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288831152 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407337533 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820009571 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302645073 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.946181618 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.605330516 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.534436368 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.285348536 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.266181573 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.28243776 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277367926 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277186942 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277944837 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.285263048 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834214848 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.295468194 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.292513507 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282434166 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.27933794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488184549 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289618562 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491536049 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289098787 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296168021 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.263871207 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278802308 seconds)
  done (took 921.436182584 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.301997727 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.294247049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.303318217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.322238105 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.321495522 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.381477718 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.387263653 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.408068175 seconds)
  done (took 19.903257035 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.293075367 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.29281289 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.284631258 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.291704276 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.278395 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.740993078 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.304471111 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.292405382 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.302301339 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.288114148 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.29284175 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.275841004 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.289783377 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.284599409 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.279436287 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.29110844 seconds)
  done (took 31.277981391 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.193910784 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.396037963 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.070909497 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.292678395 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.305756722 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.281974066 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.472146956 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.295575236 seconds)
  done (took 25.495403748 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.290657183 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.289912675 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.291876026 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.291833105 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.291467419 seconds)
  done (took 7.640982712 seconds)
done (took 1167.219612794 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.284687164 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.28733241 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.28522174 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.28733873 seconds)
  done (took 6.328569772 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.267349844 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.266323242 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.267494385 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.281767246 seconds)
  done (took 9.268792416 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.96402949 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.894203941 seconds)
  done (took 5.043711235 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.767003286 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.759773868 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.766750096 seconds)
  done (took 6.482636743 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.585808896 seconds)
  done (took 2.774054349 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.180440181 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.288155408 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.956993321 seconds)
  done (took 7.615002357 seconds)
done (took 38.699009097 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.289520581 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.623468823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.439977517 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.290405268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.446515344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.438955733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.019762088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.28266787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.287045501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.292531067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.283800279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.446591946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.002188011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.628737272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.005034061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.546454606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.445743759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.283540027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.282984308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.283622522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.020104452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.294306916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.296030416 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.297023796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.445120293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436462439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.296265501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.531096785 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.293743138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.284769214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.452653088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.294638413 seconds)
  done (took 79.752215212 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.29237869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.285220913 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.296089159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.287487218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.296524301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.295686705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.286431902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.283777164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.284129829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.285223371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.307644934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.284492925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.30126939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.283833511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.302168219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.285651877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.301142147 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.301117722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.300969373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.284955128 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.286792514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.286427677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.286327705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.285595663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.292424367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.28722786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.303824165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.286489764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.28442606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.286176045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.287646007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.311210173 seconds)
  done (took 74.521613404 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.285229594 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.287147987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.289482531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.286080645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.315551603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.288184286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.289295343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.28798465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.302075776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.294412451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.286899117 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.311373614 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.286930919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.288261534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.305800379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.286682055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.296308515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.295193993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.28794868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.287141887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.303392896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.296736764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.289402288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.295410306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.298818415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.289897585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.288298126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.298539904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.295412762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.290171212 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.289445286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.288772652 seconds)
  done (took 74.573078822 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.567058749 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.295860233 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.297001534 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.289317005 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.298592548 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.29441581 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.289237958 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.572088984 seconds)
  done (took 14.097252525 seconds)
done (took 244.133522714 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.293948566 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.792151022 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.332679869 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.288249062 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.317826049 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.317652411 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.508147266 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.331904864 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.508829794 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.306234056 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.315201688 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.301467673 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.069281347 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.439446532 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.123576395 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.236557891 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.153063951 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.290212975 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.867598843 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.561627878 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.319988079 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.291252444 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.118060371 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.17860796 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.275674308 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.381414141 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.392490132 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.504605374 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.44752528 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.374557163 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.809385655 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.294494806 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.292195412 seconds)
  done (took 61.229724685 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.296879095 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.416640363 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.298145834 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.297753885 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.41924652 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.316569978 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.297490254 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.296864723 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.298394533 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.298206986 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.297573887 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.300363391 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.300440742 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.346302507 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.421237003 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.31114586 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.298724947 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.413743691 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.29847925 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.294027862 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.347144506 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.299282107 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.302314123 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.34711914 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.30042296 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.300389329 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.416013253 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.319027896 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.300517299 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.415657931 seconds)
  done (took 41.062042405 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.301640118 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.89064199 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.031064874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.312378833 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.300337475 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.304008756 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.578013959 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.301981973 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.303959152 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.304231936 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.803691214 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.303496716 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.336133165 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.05481633 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.305151073 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.301773988 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.30271004 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.300469445 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.902930176 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.313815649 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.598392467 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.302411259 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.580999166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.313640405 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.324359682 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.303064936 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.308802047 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.135477725 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.305113945 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.802917982 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.036572627 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.581549383 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.058509746 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.041510422 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.037083544 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.309078605 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.303700186 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.80644541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.305060128 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.304439209 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.579068436 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.30731768 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.039922589 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.985168646 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.322276361 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.303373524 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.14871916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.806148431 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.540979386 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.310271628 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065664501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.308765569 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.304704946 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.306970642 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.53433199 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.311140251 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.304175753 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.151424717 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.311770468 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.583202255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.30717646 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.305617161 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.897203836 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.305740636 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.893109061 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.30690165 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.313287209 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.323189894 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.044765586 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.308687942 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.002546395 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.321867903 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.304383951 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.805903971 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.896888816 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.20083856 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.307258301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.901835112 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.089664146 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.583013856 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.31057646 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.1097249 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.587199338 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.309988378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.309046823 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.308534939 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.307650016 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.383783648 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.581804594 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.939488734 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99504535 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.16569624 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.586807986 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.314782943 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.30760321 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.151847976 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.30751428 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.307965279 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.041796911 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001659861 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.325994082 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.315062948 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.010860336 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.327147095 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.584135815 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.31514649 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.048053848 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.314462971 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.384854687 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.309069043 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.315813881 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.330862205 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.585337664 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.313868306 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.309115864 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.987861114 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.83798108 seconds)
  done (took 184.404537873 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.302382665 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.302725054 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.301753691 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.301894072 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.303152468 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.309202746 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.302673956 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.301416844 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.308371353 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.301547271 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.30094357 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.310509567 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.309727348 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.302813205 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.31508312 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.303897122 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.301800535 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.318793654 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.302158347 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.302583749 seconds)
  done (took 43.307862737 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.310325415 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.850027545 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.820668119 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.314858621 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.308128041 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.312896622 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.363698048 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.308349815 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.309651287 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.599991354 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.481702827 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.327403835 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.307939336 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.309277748 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.822325473 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.302832437 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.604427226 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.86172096 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.315711282 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.858829415 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.303232268 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.310221275 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.310052847 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.859816498 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.608159282 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.593402013 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.371024486 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.861071267 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.313570179 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.309133284 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.85996039 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.317524495 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.31086876 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.856382437 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.332476648 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.324869421 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.310507754 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.368167475 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.370163954 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.606965098 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.937025889 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.593883103 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.328008469 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.487933584 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.317894018 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.299498944 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.864391397 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.334379296 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.300065662 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.311471108 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.318654292 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.829096957 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.335096393 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.83004121 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.331623064 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.313399244 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.862927713 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.83640632 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.848150727 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.483100218 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.332818248 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.591264753 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.316055407 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.86530035 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.33543301 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.314023274 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.314215206 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.481472307 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.882339818 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.596473387 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.611215175 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.609752837 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.315092736 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.370930392 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.329866151 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.677476034 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.372798062 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.736780365 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.613786778 seconds)
  done (took 119.827085902 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.579344558 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.42131489 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.718518807 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.915955514 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.309684824 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.434936615 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.420537109 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.565133919 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.315716531 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.387766372 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.950094562 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.40647866 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.050215625 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.387484121 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.409510816 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.456199164 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.700215438 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.28523187 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.973800607 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.929858091 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.312794876 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.449723959 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.862289669 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.537266815 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.309703633 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.864451027 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.215976907 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.972021191 seconds)
  done (took 51.354819615 seconds)
done (took 502.378756166 seconds)
SAVING RESULT...
DONE!
