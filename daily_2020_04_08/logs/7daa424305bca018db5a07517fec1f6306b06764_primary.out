cset: moving following pidspec: 9877
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.260398043 seconds)
loading group "string"... done (took 0.596133184 seconds)
loading group "linalg"... done (took 7.361284177 seconds)
loading group "parallel"... done (took 0.154000067 seconds)
loading group "find"... done (took 1.074833702 seconds)
loading group "tuple"... done (took 1.791173334 seconds)
loading group "dates"... done (took 1.163891632 seconds)
loading group "micro"... done (took 0.22341691 seconds)
loading group "io"... done (took 0.877553525 seconds)
loading group "scalar"... done (took 35.154641389 seconds)
loading group "sparse"... done (took 11.138685038 seconds)
loading group "broadcast"... done (took 0.878254615 seconds)
loading group "union"... done (took 12.006873365 seconds)
loading group "simd"... done (took 4.334826655 seconds)
loading group "random"... done (took 8.606056567 seconds)
loading group "problem"... done (took 1.773667786 seconds)
loading group "array"... done (took 18.956252513 seconds)
loading group "misc"... done (took 1.582434726 seconds)
loading group "sort"... done (took 2.960907 seconds)
loading group "collection"... done (took 16.387884268 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506695746 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128289635 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132000702 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119771064 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148641312 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120483192 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124519991 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087093552 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.908361987 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148094638 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114812604 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.388505478 seconds)
done (took 5.344385776 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174646932 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086953777 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085263629 seconds)
  done (took 1.278902417 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069736064 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125307923 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069761783 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071982171 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070884775 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070928539 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071151614 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071261502 seconds)
  done (took 1.65768366 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074500136 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070840879 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06954925 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071100676 seconds)
  done (took 1.395842491 seconds)
done (took 5.692791286 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.739790009 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208555449 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185144745 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.382916316 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130899784 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.171829559 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643230914 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324436267 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182986705 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081172026 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109785896 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336099338 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.122203103 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638509332 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076228904 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091534167 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141430672 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450935385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069401637 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084298588 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091118317 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130974838 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087918466 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075555189 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148470272 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069763876 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135348109 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082830925 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068467128 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210471783 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174514564 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663719616 seconds)
  done (took 10.250987052 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102167155 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09931794 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070835537 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126668758 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10290366 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074009972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079297732 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072044767 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094975342 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13372597 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095011458 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109632022 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070489608 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073968194 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086438472 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213046306 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084577076 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085588786 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074374965 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08240111 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112525938 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082532189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084366169 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083836777 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133265256 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184256959 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099179598 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102464207 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071425241 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086122346 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118606149 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132249167 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070647299 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070601535 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12810583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101840535 seconds)
  done (took 4.743388361 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.94668857 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138013027 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091868822 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132237921 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069094452 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109882281 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06959621 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085321426 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210851074 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.439161673 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577651127 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.132525578 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114867866 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104712576 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071824638 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073344207 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071369126 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.457478367 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103433515 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109356643 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085192976 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074664816 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073955993 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069930277 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07216242 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069111823 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073033812 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.116187984 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077993828 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307244378 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124559727 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075245709 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.912996222 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16672525 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069649032 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.24338528 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16675434 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092990215 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140890247 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073091555 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06906344 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069427567 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160578562 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068782337 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074340961 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070409236 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088557325 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108007313 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126175306 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069161492 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070415505 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1694274 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070708169 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082462922 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.101035366 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156779685 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068036859 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280748792 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088780449 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07183069 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067437854 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.160700139 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122845027 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070494023 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069211804 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070833215 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070804548 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360800716 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068193989 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.017012148 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073540649 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082673493 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076421678 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071486378 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074481419 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074709619 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087329784 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068147258 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075002306 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067716643 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068417619 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068970636 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086158223 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06670317 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354748188 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.171370911 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070023327 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069507651 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091229277 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100518535 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071417524 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069250092 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104751729 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072854786 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07101388 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070213929 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088543354 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073919327 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117684578 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070781956 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095194952 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095715419 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069794899 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09966185 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073321818 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103074595 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084215859 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07943672 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399963023 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068308515 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07144831 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068935521 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071333953 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068054757 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080529477 seconds)
  done (took 21.89679774 seconds)
done (took 38.944133328 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241257253 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075820881 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074745401 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075672915 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07561829 seconds)
  done (took 1.733134705 seconds)
done (took 2.910289097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119289313 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101297903 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068318715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099780708 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068537058 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106267623 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102999378 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080068288 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101853861 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068635594 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100513533 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06818522 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068186363 seconds)
  done (took 2.342402846 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085100026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086269145 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072427274 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084500139 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066707807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084326888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083622892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092275439 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088272336 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076561019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067936013 seconds)
  done (took 2.06298247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084164384 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086235167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073504603 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085846727 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068178047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085929998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086098683 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090320805 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08568703 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078433734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068099798 seconds)
  done (took 2.06413268 seconds)
done (took 7.632086649 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077729038 seconds)
  done (took 1.240785927 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.517333663 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.589760292 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080776352 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.105110847 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184392351 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113930699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.245132823 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085536205 seconds)
  done (took 8.238479794 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100549556 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073835202 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074331965 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073014032 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07231831 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070351623 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071527629 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072711158 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073786769 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070950657 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071629575 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074069654 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073306406 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073448036 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072141324 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072106993 seconds)
  done (took 2.428787136 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092733145 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090285076 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074202496 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076622073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07427448 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073429291 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075127002 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074802061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072181191 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07387034 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076086444 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075311824 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074128486 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066941079 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075361402 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077414203 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072665588 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075176084 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076980045 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07619707 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076774652 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065842933 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073043453 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076530827 seconds)
  done (took 3.075818166 seconds)
done (took 16.152450372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10388178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071320975 seconds)
  done (took 1.345966927 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079913056 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083204874 seconds)
  done (took 1.34152721 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080887911 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067808401 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090466993 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080137708 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06877852 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068185236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088421728 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06904087 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068707668 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068628587 seconds)
  done (took 1.929304003 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068361971 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076330156 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070214083 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080084488 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073294386 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066216708 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071705836 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067922914 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076164125 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06436866 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071339847 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083371452 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071904762 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085453491 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071877058 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069284008 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071383222 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06857126 seconds)
  done (took 2.491171723 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066259443 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067236639 seconds)
  done (took 1.318480209 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067407385 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064801738 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06942683 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068598476 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06542138 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064436296 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064924027 seconds)
  done (took 1.646288796 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.376945751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116149676 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301182222 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075440746 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085284727 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249016714 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069832795 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074401997 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073555234 seconds)
  done (took 2.640344157 seconds)
done (took 13.897329181 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08013317 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088453251 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09625703 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.367226189 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096362951 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071409947 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117146627 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181864135 seconds)
done (took 2.290073945 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.205454351 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641089686 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398389063 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.201513877 seconds)
  done (took 2.427910543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328485138 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091641658 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064929571 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071885811 seconds)
  done (took 1.755188523 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068005995 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070740857 seconds)
  done (took 1.333966815 seconds)
done (took 6.915600548 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068581713 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085390216 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067682445 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.180203795 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067329061 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065838709 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065684876 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067833002 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065797397 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067627099 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068382725 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069197983 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.069554961 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069224438 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067230729 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066925705 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069261667 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067403569 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06738353 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067858313 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068115278 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065754126 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065858131 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066646053 seconds)
  done (took 2.971658843 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082620819 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06767407 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071626728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071579593 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069712941 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071168747 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071308687 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067822046 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071822376 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069892799 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070137447 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070493334 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069511789 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069901881 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069724249 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070170681 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071933514 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06787421 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07002833 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070132417 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071918466 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068419688 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070273635 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07158037 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070334951 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070271056 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070231959 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068466553 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071923731 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070446692 seconds)
  done (took 3.321769234 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070954574 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06464972 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064422653 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072114417 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064050485 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065889105 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064240275 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065208517 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065337555 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06451544 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065500309 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064668302 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064329424 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065419058 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065820794 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068626518 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08073936 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064356473 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064284835 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064861863 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068165364 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06754605 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064469758 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064359592 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064436518 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064152331 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065263869 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064739954 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065550465 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064646673 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068900295 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068823886 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064596906 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072099684 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068628046 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064476329 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068994269 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064217805 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065346846 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064340862 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064448665 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064578813 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064528745 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072295924 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064583745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065550046 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064588678 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065682501 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065172819 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06683931 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064345423 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064680619 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066654485 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065703466 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069197543 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064672407 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065726589 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064742807 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065826565 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064696049 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064851443 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064374717 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067775241 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065401963 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080995612 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072522553 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064368239 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066156446 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065610508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068009141 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068427676 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082138258 seconds)
  done (took 6.005005928 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088050709 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087218281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068190256 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067668875 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063915619 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065367383 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071988459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065459268 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067667193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082853443 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065662043 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067485141 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067635234 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069371102 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065629528 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068160765 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073647139 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063904195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065234062 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069466007 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065304997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071290722 seconds)
  done (took 2.760608766 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.144466811 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071042468 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102709339 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075450581 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071694601 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076721414 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073131465 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073108545 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072802333 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071580844 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071593523 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073566544 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071914577 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069545492 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069509225 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069743822 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071418537 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069524818 seconds)
  done (took 2.610161364 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079206735 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06841564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088045645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068106914 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068183316 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069680679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072094075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074865035 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070215156 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068189837 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076250211 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07073428 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069848166 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068155905 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070065778 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068370682 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070124824 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068174625 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074834955 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072262809 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072725594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074929537 seconds)
  done (took 2.79503423 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080604775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069830479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083424052 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071116043 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063242886 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065512343 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071583454 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068355641 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071117026 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06910652 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067683647 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06546496 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070020417 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068092534 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070152309 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067937221 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0693387 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06791344 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069475158 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06337024 seconds)
  done (took 2.6058953 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084893272 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068737056 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068639894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075502825 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069656263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068997585 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075591266 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068682586 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069419379 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086548925 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068650174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068647526 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074822244 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075982463 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068803112 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076061721 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074931577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075756341 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068938566 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068995804 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087027653 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069340169 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07538964 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069001837 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069676178 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069138199 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069322882 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073515749 seconds)
  done (took 3.253670523 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069323677 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068117715 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065761161 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065884041 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065821205 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065806777 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065946677 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067615174 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068877707 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068267147 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069787315 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07017739 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069706561 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069825729 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070112273 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070060153 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070265952 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067948271 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067208124 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066522959 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067926877 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067692576 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068176666 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066127173 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066409683 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068096596 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066275339 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066276079 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067765395 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066054596 seconds)
  done (took 3.25184142 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076624622 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074726358 seconds)
  done (took 1.369538009 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065009918 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081030738 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06533064 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073117931 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071848411 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06831277 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074757868 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071888717 seconds)
  done (took 1.784796386 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082910606 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076596489 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067906703 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077216284 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076643526 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083971153 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122573362 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069672854 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076108663 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066811494 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082241726 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0697729 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.0766136 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070324076 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076543819 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077444309 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067559812 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072473155 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068703471 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066223194 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068539139 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077061742 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071780572 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063703672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069923063 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089495657 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078929802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066863319 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071072328 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075553908 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073912073 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062556538 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067294509 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067649411 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065726859 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076756458 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081652647 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071451162 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076266838 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068042529 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075749366 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063425477 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072796621 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075070019 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079189808 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067454942 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067832592 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063107068 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066711921 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070144954 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06359894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068821693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063109439 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074928133 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071315436 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078233158 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066333852 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069744897 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07076082 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070923405 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074968919 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070745591 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071566516 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067113265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078650389 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073333639 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075423245 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063441424 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062409413 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06542373 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07728459 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090472969 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07345336 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067866051 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067886871 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066000178 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071418582 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067876523 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073423746 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075162549 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067112498 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072112834 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075510074 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068581363 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070898651 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075427867 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066459462 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069600468 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066394362 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083769183 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068523173 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065186041 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06645854 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077948314 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071883214 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066789318 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066509839 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07508324 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062400343 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066422342 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066977657 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068108638 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075939178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069706927 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070289622 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07577449 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073173314 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068096615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069634406 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06400038 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.192546887 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06793497 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076786969 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063601658 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071214675 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069891202 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067840603 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076849931 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065771553 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067167072 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076885111 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075694422 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067728389 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066551617 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072726015 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069784901 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0705802 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076581513 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065857735 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063085662 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063393635 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071874479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067227777 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071818915 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072049838 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071541682 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064471818 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065676242 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072167233 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076641475 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070022666 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071109084 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076556123 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071025833 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066572589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074379899 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070442023 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067358836 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073025347 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069085279 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064802465 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070956667 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070423695 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067116767 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071552259 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069804129 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070399556 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068286828 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066127825 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072877917 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067842112 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067725357 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068564022 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066558742 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07883622 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07028047 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0632608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065125953 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074308569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066754186 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06726019 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067397848 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0703568 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067664817 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065429634 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067232833 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070275292 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074912656 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069830312 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067680333 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072851722 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079919072 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066870816 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070401368 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06689043 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068145221 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067479211 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077124404 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073967698 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071289499 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070433736 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06529653 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07311939 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075593371 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067394485 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065775325 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068060541 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071949335 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075852279 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072764332 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069090534 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06671246 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069277787 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06966413 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070934624 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066333694 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06691199 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071925965 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065489566 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072470285 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067695143 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077139788 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0701331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062401691 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068564823 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0648873 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073518796 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062430733 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06538736 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067047855 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067412808 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066201094 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070286832 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062117437 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.202490993 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077752398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069674175 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068608257 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067803342 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076588252 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070996963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071830233 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07225711 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074040449 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078718529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068389632 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073561218 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083279702 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069236713 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063861292 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074237165 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066791967 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066158151 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067850729 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066214272 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071428091 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074415836 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07366681 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062752552 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07043114 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065904323 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0674503 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063292869 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072809703 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071169792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069511972 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075129045 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067900563 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067648395 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071407112 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067284888 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067340762 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067690033 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070859738 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067409635 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070127807 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067854025 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070848511 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067804794 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064895257 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06946096 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066904208 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068967295 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072484353 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066681137 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068834672 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070500362 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067467681 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069112585 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068974105 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067601532 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071139722 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071102786 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071013113 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073372151 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065596902 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077911722 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068942719 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075927515 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070011185 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065186277 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072914152 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070534418 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072034122 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067794911 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067590412 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069679394 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066810501 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070386129 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075145795 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067093362 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079909148 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07480735 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069470431 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070867298 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069056259 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069862584 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067528622 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069636221 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068017765 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06870533 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067906917 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072681707 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071076287 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068894781 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070310444 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067882608 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069242566 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06854693 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063240665 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067530808 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067747738 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066998933 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076059196 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067153068 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067893121 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065998361 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067664371 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066527297 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063821066 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072923284 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073579849 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066888741 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073124543 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066633626 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068783692 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077389096 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061966845 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065468181 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.195385803 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067415759 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076402223 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06843484 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077835958 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069598906 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068657045 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065244308 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067993238 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066688854 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064106428 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065162357 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071736616 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067130242 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066453772 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067876267 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071655726 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067682619 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076096459 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067706628 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069473871 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067980052 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065005966 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067438935 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067901833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07153685 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067722513 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066282043 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064646475 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066507452 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069253169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06983108 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066889274 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069431253 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075426548 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067017308 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070657074 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069865389 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063136643 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070644853 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067093873 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067273292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067517593 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071467532 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073753807 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067769733 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076569235 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066605982 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069285048 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067578074 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065431165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066686769 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067042172 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066672402 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067907989 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068759256 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076513929 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065578427 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071066259 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069284123 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069350707 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074569303 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068281635 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070903409 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072444879 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068763716 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070222582 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076202567 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070996212 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071844386 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068234053 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069892715 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073353276 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067786635 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075013365 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06881752 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067918816 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069624107 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066630294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067411652 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066997024 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066832514 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073914189 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067932938 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067826542 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06752088 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065381176 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069020781 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06937329 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075927441 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070864899 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071538672 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063833986 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064891865 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068189991 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06656461 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07005508 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07085473 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073744149 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070020869 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068056333 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066441291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076746976 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07318896 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07124987 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066371494 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071546245 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067685543 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070086899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068378128 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067500124 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067151931 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071191773 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069075005 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066789941 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073139194 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07020692 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197565195 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071276892 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070242066 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069582475 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064607095 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068826901 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071108617 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073265266 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071366467 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067583279 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078020116 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06678364 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069231599 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069896267 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066613688 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072821858 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063568533 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070144665 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067720852 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067784144 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063421544 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068211824 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067195003 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070775718 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067545631 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063959242 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078545286 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077101189 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070837746 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066883582 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066422912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063986422 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063486825 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068055563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068357695 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069992159 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078621612 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067839168 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066901284 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063574046 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067618268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07131032 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071616037 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066129681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063930602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068659763 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070869013 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073224348 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066649758 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066939001 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071471373 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070503858 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065666837 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069967166 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064863617 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071889445 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079782611 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067289124 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070205645 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074231233 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07597045 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067424325 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063326433 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067457224 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071313087 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069362361 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067961772 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068004961 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082150462 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071063162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06755615 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06626643 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070865184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070230074 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076215396 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067991552 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068017001 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073317809 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069908341 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074488888 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072490878 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075318236 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071048287 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071448023 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066928281 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06885787 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065686396 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067892202 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068239273 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067890604 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071496099 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074357603 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067664347 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078670337 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077390509 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069753291 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064881321 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067443525 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067658578 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063444897 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067971541 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065614596 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065511209 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065756341 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066666496 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069290319 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071887938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068734679 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066899171 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066637663 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062281662 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070008831 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069740477 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068677993 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064480257 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066676005 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.198085182 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073159637 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070747339 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067311145 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070715294 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070948418 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069994568 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063713204 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075416259 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066743444 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070548285 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067670932 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067696417 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068377537 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071425189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072032577 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068740645 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070037762 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072558494 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084531143 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065479611 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064570809 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072889408 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065140095 seconds)
  done (took 43.566482117 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097602603 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06554966 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063673145 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063323649 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07344607 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064991494 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063710584 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064901264 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064559004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066378504 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063377771 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063348885 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070869903 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077879049 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073342796 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067549374 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063557844 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064386055 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063343557 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064405152 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070976264 seconds)
  done (took 2.740164748 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073286889 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0777975 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075971261 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082510327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07350069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070529975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075863743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070359709 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078407271 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073711803 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078644201 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070941819 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073426677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073426039 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073492228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07078362 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078756495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072057128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070594967 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075748347 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070745013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076193798 seconds)
  done (took 2.93448292 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067506921 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066733743 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069294528 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062453863 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066927076 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062877563 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069002223 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06510184 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068908533 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075280565 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066869478 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066745718 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069377681 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062882553 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067630053 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064802369 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106583997 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069509295 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066728919 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067421033 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062704432 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069799808 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06299805 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063309664 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066402619 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069383529 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067496737 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064988109 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066130044 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066633402 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066613067 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065220664 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069047368 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068391381 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066813391 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066990868 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065957664 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069483698 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063098975 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065164162 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068268915 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063327523 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067666583 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06862706 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065072185 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064622098 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069457735 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066696183 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062830641 seconds)
  done (took 4.606331023 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077474898 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105460547 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069143559 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086616572 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079517515 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072217057 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070797318 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088035259 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064441699 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065388521 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081586603 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07911419 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067319667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070404109 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072828566 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066468761 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067548138 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066067234 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069849367 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06627703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070132703 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073146724 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079484656 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079109099 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070151183 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065573188 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066436845 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069984709 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077759484 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070613692 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070633176 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071807071 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080680553 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071448179 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066225022 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06843906 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080747251 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066907102 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068895944 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064634553 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068293523 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069965346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07282935 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08123283 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066597673 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071196399 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067038495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064645624 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078272331 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068671983 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073169703 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078857817 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070194954 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066837638 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070244719 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080509921 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066977105 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065067665 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06903732 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078060348 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065101969 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069539771 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078794251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068044607 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07206145 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078859426 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071407743 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069599279 seconds)
  done (took 6.334134341 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075674908 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094574929 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082639109 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082806914 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076076415 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07586493 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076032924 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075964957 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076028084 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079973962 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076244214 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120491811 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072257965 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078376617 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076245404 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076127422 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076098259 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076405931 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07636766 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076298934 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07603075 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082525036 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076212733 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082293009 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079006524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071942054 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076525471 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076084538 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0827691 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075806856 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079145551 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075828474 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076221856 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08252062 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079292137 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075983805 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066455906 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075862044 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076481251 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076277834 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071868578 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082859032 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076215226 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07184845 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076351761 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075983458 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082394748 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079364233 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077983593 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080172978 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076473911 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0831361 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076653404 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076415485 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082980152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084787228 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082427853 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082819427 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076181262 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082544004 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082318347 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085200721 seconds)
  done (took 6.214366711 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081009818 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073766256 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081764706 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063111849 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068369103 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073176614 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066380839 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065386054 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073906987 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073773554 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075589477 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073179969 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07589698 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07590576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073281166 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076051923 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073567772 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073163853 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073609957 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073087445 seconds)
  done (took 2.788475296 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077139327 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083528065 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068426765 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072760171 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070285479 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072838289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069857028 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070703356 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068926244 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070735841 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077105102 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076295444 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068701489 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073002404 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076293918 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072988029 seconds)
  done (took 2.482970277 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082505722 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073378163 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07836046 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066827578 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068263168 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064282463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066603313 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06312863 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063657863 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07841213 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066360238 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077092044 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066836607 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06522557 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064154189 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072102694 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063960115 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064592085 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067193406 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078310454 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071401525 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066235136 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070984768 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066674024 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069704799 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071225158 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066360657 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068173564 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064702037 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067294316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070448975 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071481197 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064477696 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065364022 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066064369 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064741326 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066451425 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067137199 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07276202 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066767497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065073293 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069780049 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066681242 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067775723 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0640424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067541349 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063929883 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069915442 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064963699 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070444635 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066705404 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06971406 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06705452 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074135454 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069614065 seconds)
  done (took 5.080439623 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080608345 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070841366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063107192 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065040332 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070832668 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068477906 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070149357 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068693743 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069140913 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065265191 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069276379 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070256852 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069308155 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070737516 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069065514 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070652107 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062985196 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068736842 seconds)
  done (took 2.569611421 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072733925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068507064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074487691 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067745276 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067439033 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070088132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06340644 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065519738 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065585775 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068275636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067896235 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069715608 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065908091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069791952 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067914709 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068380869 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070614033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065780578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067671792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063541995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069506626 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065622084 seconds)
  done (took 2.812431812 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093906534 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084144829 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136339242 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080061873 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086968486 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073054887 seconds)
  done (took 1.872990789 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091269119 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099898933 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068307491 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069864967 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076046798 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071937794 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071741102 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07187571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078477343 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076461337 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071765318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081378115 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078545765 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078536519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076325922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076089586 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07185608 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07229965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068407075 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083579566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072290586 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078748763 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072059727 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071451899 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072440662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078352812 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078743923 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076436906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071821813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078701154 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076785503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072822377 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078808773 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076626453 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070800063 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078796071 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072056202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082993697 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076986912 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078467334 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070746965 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076482751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078846052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075624732 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07871802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072517251 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075808739 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072036904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071993465 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084568859 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076368762 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07815488 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076047159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078616055 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078206936 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084555443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076603736 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078010809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076529844 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07645379 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078169268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076436216 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077860424 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076391808 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076252706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078310443 seconds)
  done (took 6.374242893 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102822871 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068998814 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071706037 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076416081 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078398423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071907463 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071869538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072006825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071882919 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069038791 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105423507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072114737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078543303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07811999 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071787324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071928044 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071917188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078438068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069212325 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085011964 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071802346 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07813628 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078209342 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077878439 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076612887 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07634448 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071672558 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072023807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071559986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07214918 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076029324 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071999794 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078896661 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068904908 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078526394 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071952963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071668907 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075688127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071481205 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076069851 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078788857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083207487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07165048 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071605693 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076417246 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071840269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071567766 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069063647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071964801 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068681938 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076287073 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077032659 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076416837 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077972719 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071709862 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071727536 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072072951 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071709072 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072119014 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075871139 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078031564 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071905267 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084616392 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071760731 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071915275 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078909673 seconds)
  done (took 6.302505269 seconds)
done (took 130.602235858 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199107212 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175722379 seconds)
  done (took 1.685262625 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070368173 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096308584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077776161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131159121 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069424103 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101731644 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1005873 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078009593 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067854458 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068143683 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068022914 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070250491 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134790755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068034196 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067970378 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070204366 seconds)
  done (took 2.668712277 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09723507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15665635 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100897504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067962638 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097481795 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073515632 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068511359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080483818 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072061751 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067180977 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073222012 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071116229 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066763192 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071076954 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071589978 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073537972 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067214098 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073429119 seconds)
  done (took 2.78016688 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09674209 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091786091 seconds)
  done (took 1.52387531 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154779012 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135155531 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202240264 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.329045495 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154861067 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151448199 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146907665 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142270203 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113242171 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136940442 seconds)
  done (took 2.997481061 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100011761 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147187057 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.261641194 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117720338 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074546964 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091504766 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11651198 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081236529 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080442162 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07996086 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080369079 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076801995 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099273069 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0744636 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076513177 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076948051 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102306037 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075153276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076167495 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076179222 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100268843 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068188505 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07488186 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075254926 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077786054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077592645 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068118218 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067947233 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076268806 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076012568 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076977469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090451846 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07723015 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102195918 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072565418 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103177879 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077578684 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073970632 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076204081 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074087788 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078225188 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078487577 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074800065 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076914523 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067663189 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077029387 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06777146 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067997938 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077935048 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068713911 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078026519 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077340318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101862043 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068643329 seconds)
  done (took 5.969548077 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106168528 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106547459 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071263076 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111784844 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104916355 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071366339 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105025203 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097806023 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107346691 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071665748 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069642552 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071514971 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079896282 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081141197 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115352382 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106700337 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073709533 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070708658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107758836 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10674392 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070260197 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101205945 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096323787 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106524148 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069479322 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070917013 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069422199 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071310151 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076003233 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077603965 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069914869 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079624384 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083810937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077548711 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069137357 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069256033 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069595722 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079070976 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079029843 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078819861 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077242517 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068808178 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069687922 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070601443 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070762071 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068952941 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077980148 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079381331 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077307051 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070301477 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071124389 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07008754 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070839876 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079412773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07717132 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079373308 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079323855 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070584356 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070309282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07283581 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079727998 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078968065 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078502887 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07044885 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079316988 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072482499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080220834 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083440548 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069978302 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071260753 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069793047 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070068231 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070962947 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076458769 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077250592 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07132327 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069551018 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069611955 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079306092 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077649282 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069844459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076943861 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069259842 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069840102 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070866983 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07045193 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076336723 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078237847 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070737021 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070087755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069551661 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069484988 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068163634 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074894254 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076898164 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076623843 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07603577 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07021577 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076190918 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075536859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.203276578 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079369232 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071305177 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072001982 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07171881 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078309577 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077239856 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07886652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070222437 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070473687 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077283195 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079974895 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070582258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076852988 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079190229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077818679 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069372828 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080050703 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071112011 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079798787 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070806963 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07931615 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070263108 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078848159 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069577807 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069728512 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070823479 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078104422 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070678373 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069688223 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071295648 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069239587 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077481706 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081480698 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072112521 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077274993 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077763752 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070645692 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078164418 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069347743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078923917 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069781443 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070430166 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068803083 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081191893 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07004852 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070273092 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069734264 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079689085 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070320349 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079268677 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076992335 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069000002 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080986759 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079265637 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076395118 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07968514 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071123722 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069868723 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069748734 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069500574 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07679705 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078556869 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071117563 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069883579 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076782588 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07892332 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069234573 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077105665 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076824594 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077455213 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070003277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070049446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080118544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080102991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077460469 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077405365 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077861609 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070218955 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077320891 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077602969 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070091732 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082855007 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070564675 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081623352 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078296572 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076529232 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077595917 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078860848 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078734936 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079310519 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081916641 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068894296 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069157146 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076511868 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068960156 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068828244 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075509164 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070428241 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069622801 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079481489 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069243448 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212449713 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070185197 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079385006 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070844806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071517991 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08305827 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070449489 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071227794 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077949539 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072700503 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077152438 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080221943 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077720608 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07054978 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071440853 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079610545 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079254646 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069979406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06982183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071012334 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077689874 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077649173 seconds)
  done (took 18.710764994 seconds)
done (took 37.67745139 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191335546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.141134277 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.155995324 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111841241 seconds)
  done (took 2.020494474 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109475535 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097534251 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.08955642 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066324989 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.095208639 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066887624 seconds)
  done (took 1.89177602 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269334812 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186585238 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169719777 seconds)
  done (took 1.988348001 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.192478992 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.179499618 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.403456413 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.247902855 seconds)
  done (took 2.481177856 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134651974 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08534759 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068115344 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083972281 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125580324 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153544284 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095876722 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120850483 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079496699 seconds)
  done (took 2.359812487 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142637683 seconds)
done (took 12.248665674 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120290463 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.206053321 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097958296 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091136487 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074064659 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110311172 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090330825 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.20586206 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069538427 seconds)
    (10/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.183647235 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.17984841 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229725973 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090789195 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077149758 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081676359 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.098420778 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.203639158 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076991057 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188256313 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077435503 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.202037862 seconds)
    (22/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.168900251 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07768987 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.375385674 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.127213356 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.117386965 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077524373 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08368214 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174766923 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078054792 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076286666 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147971477 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186941251 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094122989 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07459373 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077334998 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073808002 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076937292 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098126124 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.1745672 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.179562771 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.076079929 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.166285285 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159301721 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07526155 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076050196 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066461514 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093393639 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07768288 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119981175 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088421885 seconds)
    (52/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15093789 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.151035885 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058023885 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092149291 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060406918 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.070911817 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.060650426 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.21953515 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086878075 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11618741 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080045797 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068473472 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077006735 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088115914 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075015516 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087792525 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065558204 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108755564 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193732122 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07626608 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.212922985 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078423017 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.178954082 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079229673 seconds)
    (76/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.162267557 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057731603 seconds)
    (78/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073578286 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075990457 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125181298 seconds)
    (81/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10077098 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174805099 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.22701622 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.120334875 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069463602 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072447968 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146315085 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 0.143645402 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088279409 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171865421 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087997603 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150951247 seconds)
    (93/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11398213 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055470272 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.179696697 seconds)
    (96/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189334207 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.057080641 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055939726 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15799187 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07406004 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154274604 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163884672 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075542311 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076795604 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067678687 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074073268 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05539772 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074740203 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096546683 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068428914 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132883056 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092793311 seconds)
    (113/309) benchmarking ("sort", Float64, false)...
    done (took 0.131061668 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11640054 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067525342 seconds)
    (116/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.153109686 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058662708 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057320426 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076857878 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165221498 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157908059 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076310669 seconds)
    (123/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.12130142 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 0.132874729 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071924895 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077833579 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070994062 seconds)
    (128/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158186571 seconds)
    (129/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057833393 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077730444 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058686171 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.199312544 seconds)
    (133/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073708569 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.169414497 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058209233 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080065098 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199614515 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082127097 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079131454 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188828353 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.148581399 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06928921 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069097678 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08650872 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056850034 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10237498 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075624382 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072803673 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157085757 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079711567 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094807946 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075947892 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093741608 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089468371 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138495888 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.190692373 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097668572 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106829011 seconds)
    (159/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.119452229 seconds)
    (160/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.110508891 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076566655 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107863102 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056722279 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117721264 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075164389 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.056947667 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.118272164 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.122254206 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058576374 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114883943 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070433591 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079357498 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057652374 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074741413 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066775269 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066458954 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 0.180894494 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072566444 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055973329 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076326059 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.23335835 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069805362 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.077882104 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056638953 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.058304282 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14708458 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075098798 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069881506 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175234244 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074347388 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077369709 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.057040308 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078198489 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121804807 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056082816 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140157304 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172562287 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068873649 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067636258 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068089185 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066963163 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.056058708 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057669187 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05760219 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068652148 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090884385 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074461311 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077892324 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.056942827 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059062502 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07701364 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.055592388 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096714334 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091822452 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067538569 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069398349 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154220891 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057304129 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090366246 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075387667 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079085991 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081635588 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055784683 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144819962 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077281884 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079243349 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077226339 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057785947 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.059179009 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070079201 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140245537 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114891251 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069573759 seconds)
    (234/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072210613 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077466993 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058142883 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075519005 seconds)
    (238/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071220616 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070469076 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089875961 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129476622 seconds)
    (242/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067447116 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075743105 seconds)
    (244/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06843997 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067443131 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079516518 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090377617 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071045805 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067530817 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079556484 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070702281 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068508541 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056643026 seconds)
    (254/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074420642 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056142984 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070186999 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075203797 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068176338 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091555537 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080454634 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067458522 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066183609 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055482399 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067462127 seconds)
    (265/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075070378 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067451609 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067303322 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056645397 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055252245 seconds)
    (270/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081508823 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055595352 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056687067 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074773347 seconds)
    (274/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056516041 seconds)
    (275/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081248195 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074807694 seconds)
    (277/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06004731 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13935826 seconds)
    (279/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.108386891 seconds)
    (280/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096391562 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057664141 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077737717 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088351429 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055816549 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086090011 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05684704 seconds)
    (287/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.057274367 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068858295 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066777994 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065970135 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064846197 seconds)
    (292/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066818966 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05505916 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06814391 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067689069 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073709512 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055394262 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073319391 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090583893 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066889105 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06768138 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068489283 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055426147 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108096239 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066982665 seconds)
    (306/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065524045 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.226072771 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072095057 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069427754 seconds)
  done (took 31.621990719 seconds)
done (took 32.997150435 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084464645 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093582497 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077589426 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094082702 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082206194 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081532822 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075945188 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080679988 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083750519 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083426355 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080674739 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061135974 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078688931 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078174735 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07826949 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093897632 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081912719 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077454163 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075442259 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067260025 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0749212 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067967951 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069159572 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059087296 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079565819 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073955909 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07595284 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075805718 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068771905 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069360413 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072460363 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075156786 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067049387 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081044332 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075916324 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074482825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077752801 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081143024 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071766725 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069835861 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07849921 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069897091 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076787066 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077494044 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076230335 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075351904 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076934913 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081426384 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092999063 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06964899 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076860047 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077820584 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078308665 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074325005 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072059218 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075426691 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072711322 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090986965 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075449176 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069659181 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075876945 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078095942 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075116955 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074966113 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074667804 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077206825 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078811767 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073428501 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07640281 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074509199 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068826051 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07697621 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073799948 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069718061 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079784827 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084257081 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069168031 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074983339 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076928242 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077821094 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069651462 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072640499 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071196798 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075446118 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070774431 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061149879 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073103305 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075801452 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069179962 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077525258 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075880137 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075183238 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068716219 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07913166 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067114384 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07293489 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067690052 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067023215 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068636567 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071510088 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067424282 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069788568 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077796422 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068117954 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073167444 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078819776 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066470251 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072915602 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066085364 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067118836 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079434711 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075540951 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067109649 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069622327 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0662864 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07357848 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066100874 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066026261 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066425544 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065887457 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071670764 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065971703 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068001014 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072971199 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.218614641 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068080013 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072178104 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070739905 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067719348 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073767558 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067564849 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067790854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070147022 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068811999 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072716009 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069776546 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076677756 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072262777 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076668405 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071083906 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07766147 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075097179 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075170132 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075107979 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067061102 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063549237 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070160564 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0696985 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069338182 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067330867 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068831966 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066347202 seconds)
done (took 12.813501281 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068583106 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.130761902 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092975008 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095026657 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084397393 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068008348 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076774894 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095780531 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070098856 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097722656 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088374861 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086386371 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109279687 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066786493 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06757111 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071335781 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06974063 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080943431 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.095743936 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087050345 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110643603 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067849052 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090371693 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088077083 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086320329 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092519801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068793537 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071720777 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071846402 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100104424 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088668761 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071504786 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070401505 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098449634 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094098484 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082899783 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067799113 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082553455 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068191357 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067701724 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068977849 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095940991 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079998969 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080282131 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072118117 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077573472 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069558477 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083029944 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088350214 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079621528 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084518952 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.097627248 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070440603 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084105582 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066693175 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084239114 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076971189 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069948424 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06862451 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074912484 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067969136 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071518697 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08076395 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079834154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072064945 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084047621 seconds)
  done (took 6.800757859 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084747059 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093783783 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086061686 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087282308 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069189279 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069656773 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069609602 seconds)
  done (took 2.025795639 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068477811 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087788978 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088385056 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087939942 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081887418 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090387 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076823629 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068416132 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092046063 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06935412 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088002285 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097360905 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071812162 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080940713 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089974691 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068161859 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093211033 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070197811 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073240484 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092661331 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076618408 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095870421 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074891322 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068175768 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080809289 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.0685264 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111013273 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071880355 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070829132 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071000596 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06977116 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105492496 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080556444 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075382225 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069348943 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082583523 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08141269 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072049359 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079053479 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076345463 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080579444 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069169063 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069196895 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070045961 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072181807 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078048636 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069173242 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073012336 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070431585 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087408127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068912743 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083635522 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073047475 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074330708 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069850425 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075205711 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078397886 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069912141 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08711365 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070882388 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083533315 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082537293 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081841825 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084531837 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073326994 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083213531 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083429205 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0736146 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072626311 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074037359 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085319559 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069558572 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072023489 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080226077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073076861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092827842 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09192284 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072086733 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084494919 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070684474 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071283832 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070723344 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092303172 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076447515 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071292432 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075341389 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074163474 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074443889 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070694227 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074621229 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069584765 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076866915 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073213871 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074508356 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072576673 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085487216 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073726769 seconds)
  done (took 9.022063329 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071024962 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06951022 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071246723 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070114358 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068961294 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06943233 seconds)
  done (took 1.909802041 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089743648 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071490226 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080367212 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072586055 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103335026 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086301305 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087006869 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078060006 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084299154 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07958188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085890454 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088290428 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091217219 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073531364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086334728 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07238718 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087642477 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076777651 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079055021 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073982842 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085994909 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073634082 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073579142 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08140303 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076179919 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074499306 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080590466 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081017723 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079956408 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07886278 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073921102 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076724108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072035001 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077860112 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087056533 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072112032 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072377939 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078054212 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073558365 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078867178 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087629766 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073657684 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074927799 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078256509 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078123156 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071758668 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077943156 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079706593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086483751 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078028662 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.0780415 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07236752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076210291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078112165 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071910006 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078463104 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07805382 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086171409 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073342591 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071828725 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070645144 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076369096 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078069136 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076534008 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079006723 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077771954 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071956214 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073485611 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073687243 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072674785 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077845835 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07029414 seconds)
  done (took 7.105656294 seconds)
done (took 28.312244259 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533896583 seconds)
  done (took 1.978290659 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.592027944 seconds)
  done (took 2.064754351 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.069110984 seconds)
  done (took 8.539778658 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.360490241 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471837036 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.685529777 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134497556 seconds)
  done (took 3.130756532 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718556036 seconds)
  done (took 2.198768675 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230008573 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221015477 seconds)
  done (took 1.942461716 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386728269 seconds)
  done (took 1.859809544 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086303999 seconds)
  done (took 2.560920563 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237611111 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163950197 seconds)
  done (took 1.879511401 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.426352126 seconds)
  done (took 1.901918905 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.818543907 seconds)
  done (took 6.298623996 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215306899 seconds)
  done (took 1.730058152 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240501963 seconds)
  done (took 1.718771938 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70084245 seconds)
  done (took 3.179620363 seconds)
done (took 42.462568557 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084282689 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086298715 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086003353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081927694 seconds)
  done (took 1.798198441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078245063 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07446938 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080069775 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076478313 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080321378 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076690562 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078345775 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079669732 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077289719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077917205 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077007614 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077176898 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079687045 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078554459 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075589325 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079250452 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080214943 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077292795 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080029645 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076635399 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074979375 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079506986 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079358946 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075946845 seconds)
  done (took 3.352598459 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079909513 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077327999 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079140197 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076064257 seconds)
  done (took 1.80385842 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080114605 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093143247 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091686799 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082826187 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094217191 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089671554 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073387316 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.0735539 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074378945 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08241453 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07223998 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098841744 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092012115 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082488085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084213417 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069690422 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071959382 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091094 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083280977 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08146611 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072409983 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079981859 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070035438 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089364732 seconds)
  done (took 3.462687542 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085781276 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101990967 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082090906 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091825718 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092179149 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067859902 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087920655 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094040061 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127269081 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068281242 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073279474 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067904013 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076789703 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068169087 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082023545 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110875715 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112262618 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071278283 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098663815 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068208675 seconds)
  done (took 3.223475714 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074482525 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071794849 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073961637 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069704948 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081347173 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077907378 seconds)
  done (took 1.941611037 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069852433 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069602729 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069628343 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069523305 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074473681 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070022256 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069327161 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072179733 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07180968 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071364726 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071807043 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070499172 seconds)
  done (took 2.339353017 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.180501771 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070061814 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071923051 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068225709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075511305 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071301233 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085957645 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072693616 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097198597 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071369757 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071506602 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073934306 seconds)
  done (took 2.502338303 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193549887 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077145771 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222785986 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147692886 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111361546 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116175116 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114997033 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112655602 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137729991 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09903488 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157577182 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158662555 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105640242 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134460335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089461575 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103507296 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147878015 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161139038 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105559939 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159326848 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139855482 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124123119 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141449351 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100326512 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103700784 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116707202 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073304805 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079991942 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161685977 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128272408 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13844032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109710896 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095453112 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169810135 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160210838 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134972061 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143915054 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087043364 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.109013904 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132066746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190726645 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091287 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301337503 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110563585 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082793968 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130519039 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117513123 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118776506 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102941821 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090616509 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140951956 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172773066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131094013 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086757035 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120671308 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110437209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110929402 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111267315 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168979555 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151851068 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124854075 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073108193 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109808156 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144622923 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129400145 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108319339 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123047541 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094313617 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130017461 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148464686 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120423013 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138136245 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115209048 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08837074 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118383422 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136716901 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124854383 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154731698 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122127778 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074782942 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119395233 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098440764 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081358267 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142472338 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076797635 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16668219 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099059914 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109350076 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124913098 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109302208 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110154561 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151820847 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284112316 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104260866 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071611464 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10528325 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116009163 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140273189 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088079857 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106245819 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114574746 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079236014 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13131813 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07714382 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120111415 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080684939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120986646 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12726758 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080480357 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120184677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102682042 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101179112 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128500106 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152632293 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088195657 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081732381 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157313096 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119167231 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102092818 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137946485 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15123391 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106552341 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099563695 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141638337 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167670704 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093815146 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156878747 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104327169 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084388063 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090395326 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120868569 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109732093 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121010425 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084746694 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120375097 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163623249 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079093084 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098764722 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134332524 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08297886 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08369551 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107409161 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105447556 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099808705 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100472136 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104912188 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134012415 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269984174 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109465727 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125935372 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101648773 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161391653 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090451051 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107446048 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107370642 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07503017 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133306184 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153251559 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0833718 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159647445 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122048068 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118209524 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120991918 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087054925 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138911874 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082607654 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075045977 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140371343 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114880849 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1122555 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147708738 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117140603 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123202407 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11679857 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128629665 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127855333 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125357166 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106040972 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092400634 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114002791 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127152462 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076977661 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094534979 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084627346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108088159 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097784129 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087443621 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138705627 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120704184 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111191482 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111982903 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099970537 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143276486 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0801604 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125626247 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119493572 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098079694 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149292099 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145809023 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13077036 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101184625 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281460054 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07374189 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077213145 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089120218 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12210512 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084322921 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084983421 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112252392 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140452237 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128505523 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134858674 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124222721 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120734938 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151039824 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075462845 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120712694 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142388773 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121787629 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108471528 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092875284 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100258045 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137557398 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103724619 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170097138 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1126317 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122875388 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151139335 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104487435 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083843223 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106275632 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133163362 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103949801 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137583505 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098132016 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088290172 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107017255 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082647798 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101080927 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126720514 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117426022 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133482696 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113503959 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131857807 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078872124 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111159159 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119017165 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118380097 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068303399 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115312256 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149483436 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094933422 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113887777 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293501967 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081441734 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135866959 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167731744 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141635584 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085309114 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105742143 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118399965 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12196257 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117339327 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13705763 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103563453 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13321785 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109306339 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08766422 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089159771 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096783013 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103734885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096313473 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10198288 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110637062 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.0979125 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132500419 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105738545 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111246652 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118755233 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101501954 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094920851 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096431561 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166408506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116495528 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162361307 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10037151 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136442721 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157965605 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076747332 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080475997 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080257835 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137458592 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085616074 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126919581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112613745 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118077952 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124232886 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13809603 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098174484 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07353953 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109864252 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129329784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119174554 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097081444 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100703611 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15294687 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099049414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078529904 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258239099 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118859486 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106695773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164865799 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069228198 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108633817 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081066968 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0840618 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124183299 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146060131 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085631679 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103614989 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123108114 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113007279 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123939299 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099230332 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111214587 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121598718 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141106137 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124474377 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090310418 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109891094 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12302562 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14800728 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101955434 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098416715 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165838563 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145222623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152692288 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08735089 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112711056 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11244132 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108463641 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137690311 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088121553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162330012 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086211109 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134013278 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102541436 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090436967 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125517532 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109965376 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088854925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139246342 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114009728 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08317038 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079149526 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112499641 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115514224 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101680659 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075965592 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283187104 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077199654 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131359025 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156248496 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082194308 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104189025 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098377935 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084813446 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108439369 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104619429 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088916687 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099997717 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162715421 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086507262 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140949365 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129981851 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109338779 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1292661 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102361316 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642248276 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08158084 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148043417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116783313 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165631451 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099316486 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116126925 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108975236 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118151246 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138049035 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101156358 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174352063 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128014971 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114551949 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07989297 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101321093 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103004364 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087853344 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10630657 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112004527 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113315332 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093642481 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114549823 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121468094 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083942962 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096113387 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148977309 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112370577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13790918 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136439759 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084648343 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114922374 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132003277 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230070471 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117042313 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145545227 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105362622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099663504 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081952274 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098878892 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151833215 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075531615 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151475706 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120295509 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109107192 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110973236 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108643811 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126627506 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118909393 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11921974 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092156748 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106881348 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111121327 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082477007 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078470329 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104173827 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108632526 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098817485 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096483662 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100478666 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145460384 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074410676 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09764381 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113596808 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137984481 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167781229 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091251074 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084364358 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117245791 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114254238 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111302573 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118902389 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081119726 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082424176 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081275807 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.085337458 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107751661 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111693911 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112790492 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108831356 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158503856 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084413075 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218893732 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094051472 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102801327 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074945631 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079152798 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094974295 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095131614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252283262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112212358 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154210019 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096399486 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091182971 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091892762 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077022973 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084704698 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122625799 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106983177 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115698466 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101395574 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067960577 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104872527 seconds)
  done (took 58.369731424 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109945701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085107896 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098076519 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149683146 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122397882 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202338268 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160833654 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19332707 seconds)
  done (took 2.714741177 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070199135 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096141154 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103071938 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085357251 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069110009 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072771831 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.218716483 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083528979 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068546295 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095774887 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082176287 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073217057 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.40332334 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068774979 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071235636 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068769059 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069998381 seconds)
  done (took 3.38222255 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379287857 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.938846151 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.339918321 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080549396 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.626189883 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096314967 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.826139432 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.179097136 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084436945 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.888739729 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.417663201 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175301335 seconds)
  done (took 24.626084738 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08441714 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077855476 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090184728 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091365947 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081382449 seconds)
  done (took 2.020129556 seconds)
done (took 113.062357056 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085424918 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411741033 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060021215 seconds)
  done (took 2.09189487 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088295701 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086051481 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089000258 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087339143 seconds)
  done (took 1.949744388 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077197764 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078911467 seconds)
  done (took 1.749273221 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224879366 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172791613 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100876612 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086584356 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081476779 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.0859743 seconds)
  done (took 1.849494451 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075490628 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07678332 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07511883 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078481026 seconds)
  done (took 1.895956145 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079233869 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058645319 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061967719 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06403569 seconds)
  done (took 1.855856579 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088931991 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084545661 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081962946 seconds)
  done (took 1.84915505 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100832792 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088758575 seconds)
  done (took 1.780659098 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083678312 seconds)
  done (took 1.67780206 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095158285 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100019882 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132241665 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114187986 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138494857 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11517671 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086783692 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087334595 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080591005 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088003287 seconds)
  done (took 2.631144506 seconds)
done (took 21.499758307 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080254727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.00168723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361553397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091697423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670750848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358752958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.789983026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094246948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139334176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07018284 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086127659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652400446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.783548358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.968353055 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.771956275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.966779784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653195979 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071533791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070729157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071468332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.777168903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070875519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071140316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071672466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652749096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374191114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071448915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.966362429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0710516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.089773379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358546103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071398331 seconds)
  done (took 13.976394327 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072981532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119321227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075293101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086365943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073607466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072150754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075226808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071803822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122334523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072277001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087926664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071407902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075188674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071362077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090475247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071535322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072436558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072027911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074142317 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07140507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089900017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071395502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07163501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071923194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071450965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082851644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071597819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071542925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071885522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073552637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074520307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071981266 seconds)
  done (took 4.101184894 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11554314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12450932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077506804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10494556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11348551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073474525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144032102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096443747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128731254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074631908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09159373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073189615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104601176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07407265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090620314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071570627 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072424579 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072176729 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071707333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07155268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090615296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071457188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071942272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073456692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071420619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084529293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072199368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071807927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07172856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073445861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07513222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072081627 seconds)
  done (took 4.356780717 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074764965 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076999026 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084091527 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085380196 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07195992 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074573586 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076417186 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072120682 seconds)
  done (took 2.228238907 seconds)
done (took 26.25644896 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08137782 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072686025 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075850091 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090755085 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07649593 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079481946 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070260187 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079110664 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076110341 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077653549 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07871635 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071513915 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075870347 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07282422 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080027336 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073811387 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084084135 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078065216 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083872214 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083987883 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076367325 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078504098 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079863492 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083353347 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082490448 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08072265 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079942638 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075236444 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071233538 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073898467 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079253584 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086400608 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070559346 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.0802612 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070453958 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070894301 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074277502 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070657808 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080596116 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079306024 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072185062 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078600966 seconds)
  done (took 4.843134687 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091135816 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095004505 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088627927 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067550772 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072855748 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069744314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091999308 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064473848 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06471212 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091347463 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061493652 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063983184 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06752521 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059136232 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064892514 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062402865 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06666099 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060436896 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066378444 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066744363 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093992979 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061652645 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081130634 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069069855 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061525699 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066694281 seconds)
  done (took 3.485676666 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076372399 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085023539 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091255016 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140094988 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109757418 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079357101 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081010209 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094109916 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095187431 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069280896 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07351187 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094747253 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089142552 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076116159 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07019438 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086332609 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086779586 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071577941 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075101066 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09323868 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087335876 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086902798 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092431081 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086358664 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070006311 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072917967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073929677 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082663042 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0723949 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079115253 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072695073 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073157003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071564761 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081138942 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074323293 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072519571 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094763399 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079756059 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079985074 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070814377 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078396826 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071081143 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092559605 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124423077 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072229914 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078388694 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076433624 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082336777 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072199968 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098112561 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084335726 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071732782 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073828019 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069622355 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069682728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072832582 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071733348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072496017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078686576 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076191491 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093622342 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074973338 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086047059 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069549545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078278704 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06952549 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071017181 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069145258 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093608461 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072821063 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108179739 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0733101 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073196723 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081519157 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081344455 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079788275 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073062935 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086674649 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080569807 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07346715 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078188556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073248603 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072643944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096947518 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072398784 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071746803 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071635851 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075758338 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072901977 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071127629 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08281325 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06997726 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07269545 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086397902 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069808167 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071999659 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075244131 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074068719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069944896 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081002657 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074091529 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071065202 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080059566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069641701 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072296911 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081091806 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077557163 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069433087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073449509 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074629436 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07072527 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070928297 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071968233 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071135175 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077644163 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076424181 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073268027 seconds)
  done (took 10.871462962 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160705929 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150235036 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073483707 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143446745 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079258785 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080696832 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144567317 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09586583 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070794204 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072025364 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070622377 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108382451 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104220684 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114859396 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080386264 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070088646 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091493804 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112916143 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145728882 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142320215 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092732668 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07844132 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072622636 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071911187 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072003121 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080080728 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086775974 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078857878 seconds)
  done (took 4.404232901 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082340963 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104065081 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077542049 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092256308 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091986758 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071310947 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072582966 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072327946 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085997639 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080182853 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070596492 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075221048 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076615108 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073126648 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071154461 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077217167 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076757092 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07129171 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074657315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075186655 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079741288 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093883643 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075638553 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074254953 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077434377 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071735091 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069342505 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087680249 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072950031 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094979806 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06849514 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075035796 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083477597 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071359922 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069904475 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070655957 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070620826 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070595888 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07195989 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069227026 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068861368 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062101281 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06940952 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080113047 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082617661 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060687524 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074355301 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075422596 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075006624 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068224036 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072637632 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072717246 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073268317 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076971794 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074315185 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074937681 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071297493 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.080317835 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078306086 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070209457 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068000484 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069210355 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074456942 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068867009 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084467966 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074496046 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069467428 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070383833 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072193561 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082983606 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070894609 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075779723 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068520748 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072688122 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074506295 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071689526 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071268874 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069368153 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070752124 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070483307 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060061465 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070537281 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058067379 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073246562 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069008886 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069418962 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070468477 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074949169 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080871248 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071355581 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076205868 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071045149 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06962368 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073235564 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064325079 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073092001 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080264073 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083493097 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070677258 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068575903 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082335053 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07480178 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070055389 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061597107 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074133549 seconds)
  done (took 9.433567295 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092882445 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072469511 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083846021 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090900446 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087742063 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078283689 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080494679 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072695663 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085798597 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077172018 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079732948 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071370752 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080423516 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079769267 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073087304 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080093404 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074534943 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08500653 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084878728 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070931237 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078212112 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082225199 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091199569 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082692487 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081224843 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082420918 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090454634 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080071073 seconds)
  done (took 3.928647172 seconds)
done (took 38.566793239 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.715713397 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.860457648 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.683138881 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.031486014 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.96753428 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.71010493 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.895397411 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.679443133 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.035842388 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.712015843 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.033192786 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.775944803 seconds)
done (took 64.838245354 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.714118079 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.824830514 seconds)
    (2/2) benchmarking "String"...
    done (took 1.923042382 seconds)
  done (took 5.36580889 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.001541475 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.260208536 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.924809399 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.67824623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.683328209 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.977178049 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.474912787 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.202999928 seconds)
  done (took 29.820079277 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.824107307 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.905676838 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.34966071 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.3827825 seconds)
  done (took 15.12721293 seconds)
done (took 61.727843705 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.677020555 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.735140745 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.715670011 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.665050831 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.737384915 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.695419141 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.005908948 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.785818574 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.678559953 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.669507161 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.680382614 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.115765597 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.678718053 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.943844284 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.678794763 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.688433302 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.695466768 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.154532299 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.835898417 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.699553404 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.688922144 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.699884552 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.682274205 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.684225833 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.722573458 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.680387082 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.078784725 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.682333956 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.509468313 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.680017825 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.726680099 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.145833659 seconds)
  done (took 201.137234541 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.679139506 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.744015534 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.832706211 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.68815443 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.232895705 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.868850392 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.787057829 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.254974277 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.686178563 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.709365271 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.931476483 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.680712774 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.961586734 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.656114953 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.708657457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.765977329 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.861113967 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.967702478 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.714809197 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.83715616 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.7005127 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.790636575 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.753823209 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906709409 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.686979646 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.786651552 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.688390241 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.702610339 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.881515964 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.838129989 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.687039538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.707028687 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.891285705 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.554815104 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.683176568 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.694038261 seconds)
  done (took 167.142246232 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.898651549 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.681267482 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.680288201 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.6803199 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.686710222 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.680884829 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805610714 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808739904 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.392219213 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.826081479 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.734898298 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.680486103 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547003192 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.679881611 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752473915 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.696032269 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.682909953 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.696755161 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.709013486 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681375948 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.681475538 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808320764 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.69349066 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.681191435 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688792249 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.682178204 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.68616667 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.991927108 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.681464662 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.93401132 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.681982184 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.687849888 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.929977251 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.68323103 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681457363 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.612109139 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.481293073 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770321478 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.685170347 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.687490016 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.68144712 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.681624207 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.8998144 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.683154759 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.681637123 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.68222942 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.685901646 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90290637 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.685592527 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806724446 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.685766063 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155246749 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.682113205 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.682199158 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.618698592 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.275326226 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.68745543 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.685162983 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.682795712 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.682576315 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.688764845 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.542271927 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.75646679 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.684485281 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.685639711 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.689126961 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.684723061 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.805513085 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.687447801 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.335482017 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.742897069 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.933304193 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807854157 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.686984134 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754032155 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.782064342 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.684466268 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.683093162 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.683763022 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.684203978 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.76518074 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.684372916 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.812098538 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.684723301 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.691522282 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.685251329 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.735288626 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.752991558 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.6843614 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613563283 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.686869551 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.685367068 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.022466692 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755304056 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.684196438 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.684018666 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.812930699 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808720204 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.389804828 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.688553109 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.684864988 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.509051835 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.688759707 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.822306753 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.685895274 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911472652 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.68835795 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772883101 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691920942 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.68749197 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719134157 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.686464585 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.745293824 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.685996358 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.004060656 seconds)
  done (took 392.713463973 seconds)
done (took 764.558511232 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.287918384 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.256546243 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.356307561 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.27164568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.248888856 seconds)
  done (took 13.046296241 seconds)
done (took 14.663978991 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.774277175 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.78092256 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.710024529 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.778129631 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706484853 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.776784823 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.760183472 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.71114502 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.74461864 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.713529094 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.7493561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.711949102 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.6978529 seconds)
  done (took 24.241176952 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.924553368 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.922322418 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754952616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.943176845 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.731465664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.923811692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.849731309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.858140303 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.842135494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.704775086 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699208015 seconds)
  done (took 21.779964616 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.937415664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.932628119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758100318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.927335097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.732975327 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.92566897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.852561723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.844339449 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.836706096 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703829435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700805166 seconds)
  done (took 21.779095458 seconds)
done (took 69.418675677 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.694421511 seconds)
  done (took 3.320692062 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.721398512 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.885922517 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.701327704 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.699329473 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.694954917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.697835809 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.699352795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.695218959 seconds)
  done (took 15.422900856 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.694964038 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.695108957 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.694880718 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.69430787 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.695661474 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.692438807 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.692271922 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.695027142 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.695335107 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.692865935 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.694217502 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.695786065 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.693182452 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.693814916 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.692806361 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.693396845 seconds)
  done (took 28.734197961 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.694881363 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.693651012 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.692768523 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.694986461 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.694480494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.694621095 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.695634417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.693662944 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.694699087 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.694066924 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.694893015 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.692834444 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.692899689 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.692126176 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.693200548 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.693956654 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.693826905 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.695386481 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.697842802 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.694394868 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.69553312 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.694046829 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.693800879 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.695181148 seconds)
  done (took 42.293517123 seconds)
done (took 91.392023649 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 5.267231355 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.460468386 seconds)
  done (took 11.357559834 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.697499523 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.698369122 seconds)
  done (took 5.029927395 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.69722058 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.697367145 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.698552964 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.697213938 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.696792163 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.697377498 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.697041374 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.698920487 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.697669516 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.697738045 seconds)
  done (took 18.60669872 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.697769314 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.697143509 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.69482044 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.696679467 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.697381805 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.695451443 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.697597696 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.69692185 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.697734041 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.695878386 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.698455458 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.696946275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.697534019 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.69786638 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.699220134 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.696399196 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.695997174 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.695348303 seconds)
  done (took 32.17603173 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.697772589 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.697458765 seconds)
  done (took 5.025780986 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.695986329 seconds)
    (2/7) benchmarking "second"...
    done (took 1.696883513 seconds)
    (3/7) benchmarking "month"...
    done (took 1.696794918 seconds)
    (4/7) benchmarking "year"...
    done (took 1.696653374 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.697483852 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.697452836 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.696161074 seconds)
  done (took 13.508015535 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.699257203 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.845739362 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.910934101 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.59647586 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.701507251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.703629123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.835078095 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.704237913 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.70504559 seconds)
  done (took 19.332626888 seconds)
done (took 106.658172099 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.629419433 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.69943568 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.113841952 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.750471777 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.748224008 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.00912506 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.712955008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.912803756 seconds)
done (took 42.201581885 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.699248968 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.499132308 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.543877769 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.720020667 seconds)
  done (took 15.394563188 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.686068472 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.013792303 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.705715435 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.534842837 seconds)
  done (took 21.620754098 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.064365387 seconds)
    (2/2) benchmarking "read"...
    done (took 2.043325557 seconds)
  done (took 5.746156192 seconds)
done (took 51.087443037 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699453837 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.700328811 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.700704916 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.698653432 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.700776057 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.69886043 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.699925117 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.701379021 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.698551149 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.701376982 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.70122936 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.699330583 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.699740647 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701238782 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698479219 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699087659 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702553802 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.699963185 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700344237 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698733138 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7016634 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.699692775 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.698873941 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.700339699 seconds)
  done (took 42.434048664 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.699830162 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.698433142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.700426881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.699769765 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.699286664 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.70080082 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.700223387 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.697530375 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.701561777 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.700088594 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697920015 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.698094204 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.699320595 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.69783277 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699903782 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.697455174 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.700619241 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699777407 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700802216 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.699478055 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.701805818 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698103798 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.699284503 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700561339 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.698483992 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69884955 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.700541873 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.699955718 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698681399 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.697129668 seconds)
  done (took 52.615293086 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.704109532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.706641439 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.70080563 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.701032902 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.700889934 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.699764576 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.699465698 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.702212049 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.701052403 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.699833228 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.700063936 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.700356515 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.700970328 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.701189919 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.701977734 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.701195091 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.699992174 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.700618094 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.699781912 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.699064161 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.699334747 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.698049429 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.697940096 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.697389251 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.697257459 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.697941744 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.698760194 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.696664597 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.696723457 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.698063859 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.696937422 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.696377384 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.698033288 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.695317214 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.695647346 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.695805425 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.700325371 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.702611163 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.696326345 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.695479254 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.694398643 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.694800598 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.695764107 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.695626418 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.695004977 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.693991286 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.694715775 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.694932149 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.69504455 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.694942785 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.694796534 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.69500988 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.696239113 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.695944492 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.696074575 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.697109662 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.69611105 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.695561657 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.695373356 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.694790585 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.695226583 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.695767316 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.694704414 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.694165804 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.696889801 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.696215503 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.695901506 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.696917324 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.696603508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.696873092 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.694907625 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.697500173 seconds)
  done (took 123.864391103 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.696142674 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.694707446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.694411742 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.693208236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69498798 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.696669722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.697359212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696937106 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694619643 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.696863577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696029371 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.69414544 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69489704 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.696036124 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695656022 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.693078201 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.694878275 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693671674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.697990549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.696466034 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695731516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.69517454 seconds)
  done (took 38.928384438 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696715754 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695974019 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.694973751 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695672006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.694868302 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695711305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.696381154 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696992792 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696899381 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696724519 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695201215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696436181 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.694789509 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695233454 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.694620362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.693941443 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697598203 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.693675968 seconds)
  done (took 32.151091365 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.694363236 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.693888156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.697564813 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.69399591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.694835058 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.698406507 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695050649 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.697522317 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.696847183 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.695114046 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.696716436 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695808911 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.697221118 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693909376 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696842646 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.694771847 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.697542975 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698915571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695612879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694624123 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.692915867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.694995879 seconds)
  done (took 38.93714255 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695581817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.690601902 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.688322379 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.687766592 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.68833004 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.68969229 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.691736755 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.689313049 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.690925261 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.690170658 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689093251 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.689895564 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.688153818 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.688723314 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.687450697 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687257585 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.689603695 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.688579717 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.690839089 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.687388714 seconds)
  done (took 35.41711722 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.690799779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.690575459 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.690387272 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.690101424 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.689701001 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.690266255 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.690060394 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.690661568 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.689935499 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.69229188 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.692250763 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.691353342 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.691351404 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.692248792 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.691236443 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69166382 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689387259 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.69018731 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.691072482 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.68953309 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.69022263 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695678149 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.690765233 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.691483077 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.690934989 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.690840106 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.691360047 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.691863829 seconds)
  done (took 48.971357061 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690633906 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.689134411 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.687729166 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.68832429 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.687441753 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.687894989 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.68826128 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.688761948 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.690909032 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.689498345 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.691235083 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.691096919 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691676641 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.69069831 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.691029321 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.690198022 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689962275 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.688978509 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687991798 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688566753 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.690980085 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692625399 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.689772894 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.687774116 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687653262 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.689718198 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687054998 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.689123152 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685421266 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.68274157 seconds)
  done (took 52.296606116 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.707906436 seconds)
    (2/2) benchmarking "in"...
    done (took 1.704866625 seconds)
  done (took 5.030490354 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.683831062 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685747504 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.686572847 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.685011451 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.683997077 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.68810001 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.684582284 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.682345761 seconds)
  done (took 15.100705381 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.683268215 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.684324243 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.685272683 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.685948238 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.685196212 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.685072775 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.69070651 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.684579867 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.68723119 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.68578268 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.690273049 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.691717934 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.686273195 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.684298402 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.684497531 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.684912088 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.684627052 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.684151928 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.684319365 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.68447063 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.687338222 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.68652903 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.685675561 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.681270955 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.683886873 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.692907964 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.687492996 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.682291358 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.682545314 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.68801974 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.68450997 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.680673195 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.685085094 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.683149689 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.682963509 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.683171587 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.691216045 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.683696446 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.689673653 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.682430793 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.682251498 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.680206772 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.683707349 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.685496604 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.684908159 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.683963462 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.68342613 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.681466054 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.682785853 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.686226996 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.686985496 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.681691275 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.680294077 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.686738821 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.684624024 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.690126892 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.68349406 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.685098786 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.692194757 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.692437885 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.695874423 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.691677715 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.684614617 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.6822931 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.691582191 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.705161037 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.689685506 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.68178184 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.680517242 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.68417774 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.69007945 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.69736231 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.694114853 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.685515447 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.684676678 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.683271599 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.683315021 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.683545041 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.691811301 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.687924917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.683216198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.683487635 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.692584255 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.704968147 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.683144704 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.683676796 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.683772315 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.68366018 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.682758458 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.694100336 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.683521097 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.683497722 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.682457239 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.682883507 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.683813796 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.684671101 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.682483036 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.685640827 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.681828603 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.683548246 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.682894236 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.686793283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.691618083 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.684009365 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.683931542 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.689526405 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.682420756 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.683292351 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.690325798 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.684426163 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.683652457 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.683572207 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.688209232 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.681331366 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.685445454 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.690493529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.681728516 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.683251206 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.683050719 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.682295139 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.690792015 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.706774092 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.683171608 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.68324197 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.688256929 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.693299446 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.683475615 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.687860948 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.682725436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.679699195 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.680398426 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.683533307 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.683646812 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.683050701 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.683158572 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.68493703 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.683643962 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.681973215 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.685188475 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.684912834 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.683803794 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.683704758 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.683825944 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.684426908 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.684058006 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.685670963 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.689068797 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.683614348 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.685193925 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.685313662 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.682482118 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.682980218 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.685520075 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.68308844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.683128808 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.6828874 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.683393793 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.681981371 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.683689784 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.682707548 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.682055197 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.683752995 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.68792631 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.684275192 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.687333155 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.682673427 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.681384395 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.684149352 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.68447944 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.68297067 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.682652094 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.681925556 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.685730749 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.688712854 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.685741966 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.683305621 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.686585633 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.683724314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.685060733 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.683834566 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.686604642 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.689225445 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.683391155 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.689395384 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.683610001 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.683137862 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.684155266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.684402054 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.68326668 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.68384211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.68656439 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.690073168 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.697193934 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.691072183 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.685285013 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.687090201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.684568759 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.686876876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.689902627 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.684437822 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.684879247 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.684332519 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.684392028 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.685067372 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.686673129 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.68449197 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.68474477 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.683573382 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.684412863 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.683661824 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.684494712 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.683796466 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.6845031 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.682075849 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.684100609 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.684402679 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.685738524 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.681990943 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.683811587 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.683523441 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.684420232 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.684375263 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.69247964 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.680806864 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.685177056 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.685768789 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.684658866 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.684589662 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.684653566 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.687557626 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.684774278 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.693166902 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.685907756 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.6863592 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.690609613 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.685069212 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.684191036 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.687669133 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.684101591 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.684303604 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.686413598 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.691493336 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.684466925 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.684476995 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.686375169 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.684114799 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.685083193 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.690912561 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.68238554 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.683152411 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.685329646 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.686754177 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.682731894 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.686218922 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.686277586 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.687152767 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.688293563 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.686998645 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.685450505 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.686747951 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.686782977 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.685456243 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.686162506 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.689119715 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.691730088 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.691322344 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.686350742 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.688677228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.687324986 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.689677188 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.686509934 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.68572965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.685933021 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696953051 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.69227581 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.692354042 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.687917315 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.685574 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.691662377 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.687338862 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.690141941 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.6879365 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.687882275 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.687997818 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.687429368 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.683675534 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.687022135 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.687080538 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.687725911 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.688001259 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.688607437 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.686269484 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.688136521 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.689046528 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.687644535 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.687307023 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.687924544 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.688183502 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.689225689 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.690936531 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.686332452 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.68723453 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.69458084 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.68802911 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.688857414 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.68726021 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.688028064 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.688608656 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.690274672 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.688553138 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.691682562 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.693738704 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.690113883 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.695259183 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.68929165 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.696733781 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.689139989 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.690204405 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.695376772 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.687377838 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.688167824 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.689486859 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.69044877 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.695614383 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.690281141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.688137259 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.691237823 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.68926113 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.690975595 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.687831363 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.688887409 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.689455293 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.689132245 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.698329922 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.6913118 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.692010234 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.691774905 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.686735144 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.689556479 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.688482018 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.689167253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.692190648 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.689448237 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.69044374 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.690181525 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.690188392 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.691586644 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.689320221 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.690146761 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.687637476 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.689919908 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695958145 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.690796708 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.692962705 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.68977633 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.698071325 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.689570805 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.697507239 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.692158776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.690997521 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.690544977 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.690283513 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.692658825 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.69042851 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.692667342 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.691248081 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.690417803 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.693933321 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.689731534 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.692959781 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.693698309 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.692127604 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.69222055 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.699701025 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.709042926 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.693170254 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693114519 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.688262012 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.691784322 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.694172261 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.691781183 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.690750142 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.691807549 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.700359157 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.698016599 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.692708313 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.692153112 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.692044784 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.692542508 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.691835791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.690999975 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.691383792 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.690729821 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.692285251 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.69179526 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.694892381 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.692116997 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.692845007 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.693593664 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.693204072 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.701712997 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.692571843 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.693139488 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.691758279 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.691352776 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.693718135 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.692098742 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.692164349 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.693239627 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.69396643 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.693013122 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.699240507 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.697833319 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.695877675 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.692481415 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.691911599 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.693579967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.692938776 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.693366126 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.692603866 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.692296073 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.694114101 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.693610828 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.69512041 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.691966342 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.695098849 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.695080289 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.694223686 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.695277438 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.699241516 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.693149039 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.691044453 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.692767789 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.693106746 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.69308041 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.694316845 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.702511491 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.69715705 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.702119563 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.699454666 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.700354821 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.694781797 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.696111926 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.699866164 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.69229245 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.695231067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.695971003 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.695380608 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.694416424 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.69669777 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.695526676 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.701943291 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.695442349 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.694565553 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702569361 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.695191791 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.694614449 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.693976794 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.698955816 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.69406104 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.692302816 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.694877167 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.694439089 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.701793457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.699129824 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.695150543 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.696946516 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.69261367 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.695981268 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.69782027 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.695227165 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.695595822 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.692273246 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.696241694 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.695029723 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.696030544 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.694578665 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.695737001 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.695859568 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.697144019 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.699896274 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.692307392 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.699547422 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.695468546 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.696165806 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.695727076 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.694808949 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.69561597 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.694983895 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.69607863 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.696997226 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.696850658 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.699644024 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.696608618 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.696172058 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.696330494 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.696993885 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.6981717 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.704015237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.702463617 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.694101275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.695596662 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.697664947 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.700176281 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.696847453 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.698263818 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.697147482 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.697830211 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.696080678 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.696513875 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.696083567 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.699668295 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.710187903 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.697146577 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.697075886 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.697599463 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.70207568 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.69893468 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.694564455 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.696610209 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.699322505 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.698381701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.701954769 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.69801232 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.705766668 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.697110141 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.698094183 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.700409136 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.699482085 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.704077895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.701308913 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.698629002 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.698222929 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.700981433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.710854178 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.69798816 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.706608431 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72246454 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.699077494 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.700143045 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.699195653 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.69980709 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.698838729 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.701150176 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.698707771 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.697832537 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.699443697 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.697642811 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.69811199 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.702766341 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.69978662 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.698034641 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.699608601 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.698982791 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.700730876 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.698788319 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.699307637 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.701165606 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.700036417 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.698505033 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.699314087 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.699930188 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.709895922 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.707421035 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.699956078 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.700576438 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.69717836 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.703685735 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.701900236 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.707089316 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.706655554 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.69953844 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.698754445 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.701480114 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.699326269 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.696078577 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.701336506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.698913748 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.700564006 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.697889983 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.711337301 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.707468843 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.706986733 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.700481392 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.699959806 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.69937313 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.699961838 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699546281 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7004355 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.701436146 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.700093208 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.704432795 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.700106262 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.701137061 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.702459875 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.706689905 seconds)
  done (took 1009.404065477 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.698207078 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699098216 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.698955014 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.697952872 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697668554 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698696459 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698516018 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.699836314 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.700271907 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.699277892 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.699278503 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699210738 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.699601849 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.699014453 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699597903 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.69889682 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.69946039 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.699300088 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698255041 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698378507 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.701333253 seconds)
  done (took 37.31463999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.704089596 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.699821064 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.700374591 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.702313811 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.700501041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.701055246 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.69876832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700371434 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.701390623 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.6991168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.701933788 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702058824 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.700540203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.700370498 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699580712 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701755462 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.703730952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700802916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.701929961 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.699772658 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701634878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.700176906 seconds)
  done (took 39.057928886 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.701429617 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.703285433 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.702153673 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.701142667 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.704140408 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.701355833 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.702615467 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.702583926 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.702290803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.7026339 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.70218893 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.702333502 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.707511306 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.705491735 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.70509675 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.703132296 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.854671703 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.703318216 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.704597426 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.705414289 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.701581143 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.709550457 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.701237308 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.70192259 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.702163865 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.703190502 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.702641267 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.703142099 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.705546316 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.705320524 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.706878463 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.703948513 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.704277133 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.706529857 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.703506724 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.703591624 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.707022312 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.704571404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.70174168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.703679122 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.714194754 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.721294281 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.706398886 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.711326153 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.704153997 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.704379144 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.706130101 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.710446869 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.701752799 seconds)
  done (took 85.316506253 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.703244871 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.704012836 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.701502897 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.705219956 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.705078679 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.705596187 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.705138943 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.706707602 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.702572109 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.702838568 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.705365963 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.702524821 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.702651902 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.705704515 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.705648475 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.70205611 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.703202909 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.703493355 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.70337965 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.704400463 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.703652435 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.705491563 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.706416721 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.703641635 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.705700241 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.705080495 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.703461765 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.705303506 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.7048043 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.704529118 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.706889395 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.707404147 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.707315538 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.70628836 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.704255416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.706130993 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.706501336 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.70526304 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.706356057 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.705404945 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.706251133 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.70644779 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.708447722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.70802758 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.704773727 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.705450206 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.705418913 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.705534677 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.706082782 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.706155094 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.706162735 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.705284491 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.707345016 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.70442469 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.707153699 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.708827407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.70524154 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.704948256 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.707068705 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.705923853 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.706228289 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.707065745 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.704880611 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.707074994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.706132332 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.705148496 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.706219293 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.706546357 seconds)
  done (took 117.603851661 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.707560851 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.708024068 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.707905625 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.708494044 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.708365454 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.708464078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.707794927 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.708724277 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.70758858 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.709851431 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.707766404 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.707696935 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.70903258 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.707951158 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.709913606 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.709105806 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.708866923 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709426792 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.70830693 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.708311705 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.7099444 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.708945956 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.709111646 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.708799283 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.71052609 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.709864867 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.710225418 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.710516243 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.70942513 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710016123 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.709666093 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.708819721 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.71011265 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.708825495 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.709199126 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.708957407 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.709095699 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.709459692 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.711081961 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.709767907 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.709593781 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710637698 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.709262604 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.709783476 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.710190093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.709541228 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.709710208 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.709946106 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.708597458 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.708904292 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.711070971 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.710586204 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710988484 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711371896 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.710483296 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.711136784 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710730208 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710870429 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71022563 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.709865159 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710275016 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.710703909 seconds)
  done (took 107.628922161 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710476555 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.710729186 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.708501954 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.708573863 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711228007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.708983035 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.710315432 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.710135789 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.709407937 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.710054271 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710840337 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708224945 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709348881 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710406707 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.70892746 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710628261 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709512526 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.708998836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71136354 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.709654004 seconds)
  done (took 35.838952063 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.709939209 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.711265275 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.70849146 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.708549737 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.710822802 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.709261844 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.713057594 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712866357 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710766102 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711513926 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.712775357 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.712105286 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710722462 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7086882 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.711440943 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.710361188 seconds)
  done (took 29.016669714 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.709417609 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.7121715 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.711989971 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.712230488 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.710259774 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.710293028 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.712363108 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.711040641 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.709827575 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.711899663 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.712512985 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.712205544 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.711001846 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.712251804 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.7105451 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.712702995 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.710011371 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.711727081 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.712195675 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.715237291 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.710435332 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.710517231 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.711194375 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.711439191 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.710776829 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.712670228 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.711759086 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.711769151 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.711301518 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.712618613 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.711475425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.712360271 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.711473862 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.711195915 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.712985621 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.710359004 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.713439284 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.712903286 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.713473219 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.713408075 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.714559147 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.712015323 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.715119172 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.714573304 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.712820257 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.714203291 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.711771849 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.713083507 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.712748199 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.712327126 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.712710153 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.714570443 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.713519336 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.715015762 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.715628397 seconds)
  done (took 95.819728191 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714812911 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.713830652 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.712921379 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.713690183 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.714759383 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.711891202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.713599579 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.71171433 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711967243 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.714004615 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.713961313 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.715062045 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713001414 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715130559 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713355642 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716147085 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.712727078 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.712766736 seconds)
  done (took 32.492479494 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.71301251 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.712412308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.715604272 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.712615474 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.713914951 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.716008656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714742125 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.716264185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716382667 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.713821376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712756639 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.715609976 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714883008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.71473305 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.714489886 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713169772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.715362978 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716216916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.714409661 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714441948 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.715929057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716285613 seconds)
  done (took 39.370931325 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.715595031 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.714762761 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.729857188 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.73097579 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.734833983 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.742643612 seconds)
  done (took 12.017283444 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714395983 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717393004 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.714967067 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717259051 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716890563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715718366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714791961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713410601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715823392 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714755365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714177929 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715776452 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716276487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716911314 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717532974 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717439036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715633675 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715587831 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714275287 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717168099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714630531 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716459518 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715483749 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714329455 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714657799 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716105076 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71839333 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716657616 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715093408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717554073 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718172778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716043145 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71723608 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715156758 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716834776 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717124591 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715673268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716765549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719178178 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717266714 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.717979466 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718224363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718694945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716297475 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717648247 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715810403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715506453 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714834908 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717124879 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71894993 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719374535 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716326443 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718921122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719522199 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719653773 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719787145 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717238397 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716389186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719162911 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717474179 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716503631 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720040419 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716778294 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71662513 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720231781 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717880785 seconds)
  done (took 114.959227546 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717238335 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.717386376 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717841397 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717096081 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717533525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716827005 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717473119 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71744085 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716412717 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716022069 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720198905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718337088 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718186293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718950783 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718317346 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71787042 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71770906 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717598101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717311177 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719924263 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717239359 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717448983 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718433612 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719479503 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718886574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720547424 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718787046 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718795476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718909286 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718038211 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718081852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71828747 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717546753 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.718822074 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718171566 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717434729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719003026 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718872996 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718413648 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721361765 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719506492 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720821831 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718499129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719535298 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719039521 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718566976 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719486945 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718648382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719349974 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719083266 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719214647 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720506765 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71942859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719752036 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718915468 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718764569 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718683807 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718994065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71896906 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721406509 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719585487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721480628 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722777591 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720715335 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72037636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720898629 seconds)
  done (took 115.096843096 seconds)
done (took 2358.313519725 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.808441822 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.759937234 seconds)
  done (took 15.22244481 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.883909171 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.835122346 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.722458198 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.728101386 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.720377166 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.745570157 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.737605842 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.722445206 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.720681488 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.721209813 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.720763657 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.905525316 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.738460432 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.72178003 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.721506617 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.814496497 seconds)
  done (took 49.818221317 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.724747389 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.726410508 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.735301857 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.72722075 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.725301146 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.736910967 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.756789365 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.728878932 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.759490669 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.73777898 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.793836003 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.73461329 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.72518501 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.773094111 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.737499362 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.73810036 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.816371459 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.797652292 seconds)
  done (took 33.131558792 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801272491 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.732904109 seconds)
  done (took 10.194696275 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.746807283 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.754682491 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.763289445 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.727985814 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.747158054 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.722734369 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.753094362 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.742603956 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.735826989 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.75921401 seconds)
  done (took 69.112503309 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.730822442 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.724840834 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.726265361 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.723013264 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.717529925 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.72561195 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.724906575 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.722342194 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.383265079 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.757912296 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.731152086 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.73016585 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.724537573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.727283461 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.723579836 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.746011087 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.869653434 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.722142685 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.722848935 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.730697172 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.725678737 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.786555792 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.737956592 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.726186054 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.754781308 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.386143152 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.732416349 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.733313159 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.864166963 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.724246686 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.724407122 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.725400915 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.727021303 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.080598694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.072723012 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.725013224 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.738956996 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.734648461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.723736912 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.865219059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.726636137 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.733180596 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.290498864 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.051711183 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.801748553 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.768052229 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.082724109 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.741541798 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.727733897 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.756735463 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.727561304 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.726037151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.738537103 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.200102203 seconds)
  done (took 124.388843968 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.726533334 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.083127006 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.890606557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.723136845 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011634983 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948243545 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.723120711 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.771861199 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.724135806 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995349252 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.978672418 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831539866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.724308922 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.722011492 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.725301548 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.722420289 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.897066077 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.798015631 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.724071403 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.721220323 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757719351 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995748329 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.861959175 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.724967255 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.752003868 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.933140219 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.858225426 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.829205117 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.576692741 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.723556223 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789962164 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.72335588 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.72519153 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.722751905 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.883129097 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.819830441 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813097997 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.724086191 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.722199712 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.722086362 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.39525673 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939645228 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.822345362 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.876384383 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.933854992 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.948996894 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.632443848 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.723980493 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.567329771 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.904868413 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.952972741 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.99814317 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.869593439 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.725808122 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.171181008 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7220886 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723754225 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.976952936 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.888332707 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.823586078 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.725908386 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.722786129 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.723696898 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970467281 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.726907636 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.825748328 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.72768026 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.726708326 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.823575317 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826511775 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.876425064 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956252129 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.759599043 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.995829843 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.529551649 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013682012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.793590666 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97702664 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.724934869 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.723820261 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805990233 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.754716681 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.980716322 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977142114 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.007088203 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765169241 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.547967696 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.724509069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.979399745 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974776425 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.000998883 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.946225082 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.96309903 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.157980381 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.725002418 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.725167824 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.421258699 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.873626526 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.726622933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.084826757 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958038013 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.592084082 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747320611 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.033895767 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.880434904 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.728801852 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.367293913 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.725659718 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973191132 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.773387045 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.726393923 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.725839194 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.978619914 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.771998061 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.724406604 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.563179066 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.79136242 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.729117838 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995310878 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.727972145 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01760339 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.729830126 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965853662 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.264839824 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761624578 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.918071514 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.94742522 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.729229696 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.97457352 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974433316 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.862521727 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.967327166 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.578692389 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.727516358 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016434426 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.72910077 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.725888884 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.89827999 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.727457735 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.886654344 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.728793467 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.035360577 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753479939 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963493406 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.730080525 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031235677 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.763952385 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.780432953 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.730072283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85665747 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.727770047 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679283115 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902834238 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.732789231 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.727717644 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.466120942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.72822387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.878524174 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.961680915 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751913291 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803647102 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.497816034 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.726532206 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812108316 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.756017278 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.12919873 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.727984491 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.981451681 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.72985865 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.728106697 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.72738346 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.970406082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.930752256 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.732064237 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.730730021 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 3.111166311 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.72859548 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729827109 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.912097518 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.141068761 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.727463286 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935224436 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.731028617 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.873351412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.730818085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.056540892 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.079121172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.730409208 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.730049868 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.726363037 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.730805487 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.730873388 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956852366 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.763422084 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.265690832 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.868927763 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023904657 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.047902891 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.008835511 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.782142411 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.732981815 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033356193 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.733048276 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.797272422 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.731833752 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.753367467 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961838995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.731292745 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.997345328 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044951943 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.614819042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.78136531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.731883211 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.729669969 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.729503591 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.898210344 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818094723 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.73293956 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.72993688 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.855819459 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.869350254 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941913858 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.731997437 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.220976268 seconds)
  done (took 875.520583343 seconds)
done (took 1179.036167549 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.729904373 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.732763596 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.721833257 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.732188033 seconds)
  done (took 28.586649229 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.737586884 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.734544173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.736790701 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.734389103 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.736300045 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.734195735 seconds)
  done (took 12.080812249 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.737086115 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.7328413 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.731907861 seconds)
  done (took 20.868632505 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.805375934 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.116957224 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.861665928 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.149135388 seconds)
  done (took 9.599122107 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.738328943 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.73564205 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.736622114 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.737904271 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.739993344 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.740247776 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.738421022 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.737074429 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.740755687 seconds)
  done (took 17.314875764 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.710771081 seconds)
done (took 93.820656999 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.1471311 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.695959206 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.10656036 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.798193324 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.942576853 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.562926195 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.75380418 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.244988637 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.839505068 seconds)
    (10/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.833819376 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.286334576 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.720953371 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.745466526 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.756487337 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.731529345 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.788092826 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.068257743 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.877216465 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.73560312 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.882572497 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.094195814 seconds)
    (22/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.858717686 seconds)
    (23/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.820385987 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.716948246 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.054090834 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.862932584 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.762563437 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.87815608 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.838168742 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.763822522 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.351797829 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.756039088 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.052982858 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.581124742 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.832993152 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.7597494 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.825336798 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.758816888 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.874475011 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.900766393 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.279775682 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.916866662 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.246459216 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.887673916 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.878324272 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.759456082 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.817363625 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.47159014 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.74308702 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.111221918 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.940947826 seconds)
    (52/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892796163 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.231230629 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.070910882 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490378217 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.733862851 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.606670448 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.73893279 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.812346492 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.117347544 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.916642602 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.652439695 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.253919464 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.770084502 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.08758738 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.777084808 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.902529191 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.850165295 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.732426064 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.821991593 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.777619806 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303549046 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.853055823 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.327962514 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.770909792 seconds)
    (76/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.054109941 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.134425658 seconds)
    (78/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.880654761 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.770639786 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.860699134 seconds)
    (81/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.331977053 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.757907733 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.832603004 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.97427776 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.753591923 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.920982498 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.052857275 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 4.669523916 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.157632801 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.752146116 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.914981214 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.833553791 seconds)
    (93/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.77636294 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.112723018 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.961123718 seconds)
    (96/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.740562986 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.054561009 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.087780732 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.117636733 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.770902047 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.993171081 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.035295238 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.838992938 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.838498994 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.191926761 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.193718522 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.121533161 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.098101593 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.831640045 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.199764397 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.873973745 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.755709567 seconds)
    (113/309) benchmarking ("sort", Float64, false)...
    done (took 5.66209979 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.85394155 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.208552477 seconds)
    (116/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.840723696 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.29166914 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.860881045 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.781949955 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.749307238 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.931728501 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.973233484 seconds)
    (123/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.735473211 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 6.921334336 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.89271524 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.773466032 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.755381873 seconds)
    (128/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.989067471 seconds)
    (129/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.987157788 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.87918522 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.922688987 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.740205046 seconds)
    (133/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.159318888 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.235665009 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.38368692 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.760257227 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.73432668 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.826703119 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.865313896 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.332049007 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.138623067 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.205326194 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.112275231 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.615678366 seconds)
    (145/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.871886645 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.720556377 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.999081328 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.835104898 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.831847899 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.928218635 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.748314015 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.077786243 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.080293798 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.824297351 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.764623923 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.092997813 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.870286251 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.895725853 seconds)
    (159/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.118983368 seconds)
    (160/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.847836892 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.785351968 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.882662121 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.950175095 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.760585894 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.771831265 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.819231718 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.94697544 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.746035623 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.745177552 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.988936706 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.74966268 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.158300805 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.264553264 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.014002371 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.772525323 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.934143998 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 6.752849813 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.848872085 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.737054063 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.073834361 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.471128632 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.885237547 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.039342529 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.930516135 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.914811383 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.759305604 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.896185368 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.100905096 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.75503351 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.737160275 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.08911126 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.739537307 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.877473222 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.962095083 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.099448001 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.757465063 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.757283453 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.753802774 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.543149883 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.025478321 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.28622427 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.741174451 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.390972828 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.951442005 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.098911561 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.911014779 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.756137124 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.791309514 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.860455364 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.151594443 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.93777106 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.957305828 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.8654936 seconds)
    (214/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.753567248 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.994526821 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.006585851 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.089518369 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.198797911 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.702035528 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.830222435 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.769725219 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.275009124 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.208637641 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.758263115 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.976038918 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.860498958 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.982901921 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.077709819 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.363871608 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.757979891 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 8.004760283 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.749973444 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.089581341 seconds)
    (234/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.83997212 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.762029048 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.1760205 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.782633528 seconds)
    (238/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.771084177 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.172182089 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.771953302 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.88431077 seconds)
    (242/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.979453088 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.777469103 seconds)
    (244/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.755050421 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.263698059 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.891431688 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.133169845 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.849190984 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.40962342 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.463962409 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.849794453 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.828663914 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.743064699 seconds)
    (254/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.44684732 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.843481623 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.85447985 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.761821055 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.708875584 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.443694509 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.610815215 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.027025011 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.862924915 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.716249039 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.757556396 seconds)
    (265/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.888247127 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.076061165 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.061078436 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.382264923 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.87262213 seconds)
    (270/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.675246602 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.211945239 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.834515498 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.109278692 seconds)
    (274/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.841317537 seconds)
    (275/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.284802288 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.789660606 seconds)
    (277/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.744902023 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.331126072 seconds)
    (279/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.871745359 seconds)
    (280/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.801023576 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.961841132 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.756879049 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.203378415 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.16943629 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.705025081 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.222783007 seconds)
    (287/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.066606137 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.01985822 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.046125237 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.845904551 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.198434459 seconds)
    (292/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.999926061 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.145637217 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894092566 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.75662432 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.064380391 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.176503441 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.796828854 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.432125934 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.923649436 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.898986961 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.892501825 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.843159281 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.748017019 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.140965045 seconds)
    (306/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.886633208 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.988154355 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.762887707 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.955881114 seconds)
  done (took 978.341852532 seconds)
done (took 980.064036418 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.795184945 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787896639 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.770890514 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.792839418 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.893442981 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.802193792 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.782602534 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.775213455 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.799116865 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.800662576 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.769983832 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.801161564 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.774023545 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.773223482 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.771153727 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.786556619 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.090504859 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.805959216 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.789853135 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.783610198 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.790167 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.770639174 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.802875234 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.802279313 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.776830256 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.774678824 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.775934253 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.792532732 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.895369445 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.776113054 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.775881827 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.786146486 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.091201837 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.805403202 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.768805013 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.79317559 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.784770876 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.78329839 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.777423138 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.805650085 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.17401426 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.813627276 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.774760301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.775326588 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.77466386 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.779376641 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.777278472 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.782469664 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787988575 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.789044016 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.168263385 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.830243306 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.776983236 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.774123132 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.785648434 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.776054482 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.782180028 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791185593 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.795422763 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790911393 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.07525909 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.811034595 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777284642 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.791515824 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.783051169 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.20466902 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.811741921 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.781422894 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.17575138 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.821184136 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.206875928 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.82599216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.777999297 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.7901655 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.808297395 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.091679948 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.802474024 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.775407118 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.784624488 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.774704037 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.786250575 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.79004302 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.781372529 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.777224266 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790094187 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.806798262 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.785965162 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.777435022 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.786005163 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.794570808 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.782647825 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.787095613 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.780264843 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.774019758 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.787030745 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.784801665 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.779980416 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.779295416 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.781302405 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.787407877 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.174948993 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83162544 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.773243629 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.7742105 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.776863461 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.790994468 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.17535122 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.818403151 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.800508717 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.804587573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.779393905 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.075068482 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.811376226 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.793195883 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.786632745 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.78170034 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.774489306 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.076418683 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.202945066 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.832969659 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.7793762 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.772691678 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.793604916 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.780574219 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.774393417 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.094377747 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.810744356 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.793666661 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.90039269 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.789115198 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.811738914 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.775200333 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.781533759 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.811787821 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79472319 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.809725326 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.78291995 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.794709222 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.794998187 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.776508868 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.789843345 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.789381995 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.784696505 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.78609691 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.774806092 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.812922613 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790786934 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79047611 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.799016251 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.899270318 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.775706191 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.077786748 seconds)
done (took 279.628964816 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.85505118 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.773118537 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.881137042 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.774401106 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.86162682 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.864271502 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.772602484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.773858939 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.773258551 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.153804715 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.773173393 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.773005628 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.775562257 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.7727605 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.86089295 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.774885517 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.77354457 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.116503907 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.776664838 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.856662378 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.769322808 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.773577595 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.776947651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.156319013 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.76997136 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774677081 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.851397679 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.776892164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.119615093 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.769902384 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.778613581 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.120698011 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.871883068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.793313499 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.786971151 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.783500632 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.861899294 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.780449953 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.858775865 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.858099743 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.877238747 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.816567392 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.773210059 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.76875906 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.779539148 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.778891785 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.77475359 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.805531181 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.777066401 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.774875899 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.116625592 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.786520092 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.784752583 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.774696199 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.775543237 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.798961607 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.77520755 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.779389721 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.878130093 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.779805411 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.841339336 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.157955123 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.155345233 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.778035947 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.778745114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.775636344 seconds)
  done (took 178.139881934 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.843619587 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.855361822 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.845797528 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.782601811 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.828233815 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.851353162 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.781522127 seconds)
  done (took 14.496905729 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.782713098 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.778270219 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.830667263 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.832142472 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.778302743 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.940225913 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.778560949 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.788922661 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.775612419 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.832711432 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.780093344 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.778280573 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.784814082 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.778030101 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.831857323 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.790369744 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895719573 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.778682877 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.778403209 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.928589955 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.77682048 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.784519784 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.813751924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.790860156 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.781508362 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.784926273 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.390624645 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.779716542 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.777602025 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.780005056 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.77724918 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.828948617 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.781458188 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.774964527 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.776815471 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.902736916 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.780769033 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.7777321 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.779900904 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.776903606 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.779600011 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.78026392 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.779921338 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.779197522 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.780224643 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.803313696 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.78008657 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.780186746 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.779062309 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.780863033 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.813820595 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.780728902 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.777657183 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.778490807 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.836806255 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.788048282 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.781009668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.778205283 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.781368407 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.778135106 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.930884163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.834408131 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.77936831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.832783624 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.780221209 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.780205062 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.781422007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.782143988 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879435116 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.780995175 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.834476014 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.778764328 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.948615193 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.803282594 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.781648864 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.783421304 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.784704121 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780003067 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.780416479 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.788233332 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.780301499 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.783409759 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.787998229 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.779406798 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.778441888 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.917773786 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915122838 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.779821607 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.794354148 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.790046589 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.780449238 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.817868075 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.782511021 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.77924767 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.839620441 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.898463743 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.837570403 seconds)
  done (took 197.156497076 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.787623152 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.790135893 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.783614378 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.799395317 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.783887299 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.783051463 seconds)
  done (took 12.439484616 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.785294325 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.783922591 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.781946524 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.78145475 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.782096525 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.782983758 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.782683422 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784925733 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.787178592 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.782872355 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.78450893 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.784022692 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.783630969 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.782457374 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.783521749 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.780905446 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.782801903 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.779925805 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.783174479 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783141618 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.935856368 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.783447756 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784597632 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.785405648 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.788209636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.784448602 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.792229806 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.783010894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.782887903 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.792873236 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.786730108 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.784838667 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.785073394 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.790070849 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.789299732 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.785401599 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788264337 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.785673579 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.781357656 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.785038905 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.78502814 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.783370102 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.784439646 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.784766329 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.787751123 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.79106796 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.790245356 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.793650885 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.78499757 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.785818009 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.785582246 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.783879505 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.784578287 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.785320581 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.786082264 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791348261 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.791662528 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.78522504 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.785425954 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.786036972 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.787289629 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.786458943 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.787150242 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.789675537 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.78221951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.785646831 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.78529717 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.789646131 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.785660563 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.78592326 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.78866852 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.783903557 seconds)
  done (took 131.42732925 seconds)
done (took 535.375077928 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.911231732 seconds)
  done (took 8.626898623 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.790355447 seconds)
  done (took 8.547119997 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.247556499 seconds)
  done (took 9.964214272 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.790744268 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.81008581 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.788609454 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.783089301 seconds)
  done (took 28.912617261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.010189549 seconds)
  done (took 8.72634719 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.805546782 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.779805983 seconds)
  done (took 15.340134833 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.861359549 seconds)
  done (took 8.578203634 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.896273187 seconds)
  done (took 8.637038748 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.800103418 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.787893079 seconds)
  done (took 15.318782198 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.76939737 seconds)
  done (took 8.484719936 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.405533462 seconds)
  done (took 11.215705589 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.807029164 seconds)
  done (took 8.625655652 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.825385559 seconds)
  done (took 8.542243649 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.817350224 seconds)
  done (took 8.534823886 seconds)
done (took 159.760791119 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.783876025 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.785853915 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.782928929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.781533585 seconds)
  done (took 28.850319179 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.820444196 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.820975026 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.822911422 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.8312703 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.82356658 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.820044865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.812378116 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.813033601 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.831432866 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.822750758 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.82132312 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.823419167 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.820499552 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.818954039 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.825045149 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.823175675 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.83162502 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.839857649 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.81219114 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.824268864 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.789405066 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.831236556 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.822619636 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.78811189 seconds)
  done (took 45.407463771 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.008409176 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.856969324 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.954706297 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.841571492 seconds)
  done (took 9.38140455 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.841493924 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.840531123 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.852413358 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.896172767 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.966739153 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.850711899 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.815486315 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.809715158 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.795931573 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.84262068 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.932108613 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.836384605 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.997209827 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.788193336 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.03696892 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.788072104 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.789505864 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.839434413 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.895694232 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.957391718 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.789855028 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.84255341 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.84485429 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.836563164 seconds)
  done (took 46.405837955 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.787160996 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.795446613 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.794941139 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.788817631 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.788115283 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.789314815 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.795818245 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.79070614 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.806608545 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.790526754 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.787875611 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.78936766 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.787364421 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.790157075 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.788282237 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.795713232 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.798971536 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.789475631 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.797201132 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.797226062 seconds)
  done (took 37.568927114 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.784173506 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.6363839 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.135034763 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.038728142 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.785231574 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.786149252 seconds)
  done (took 30.886849559 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.803394506 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.795124392 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.788721505 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.846626444 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.934712916 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.800888098 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.790599635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.802364932 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.838146757 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.858070105 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.811864225 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.819631768 seconds)
  done (took 23.610213264 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.7861352 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.794736096 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.788059901 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.810440546 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.80062416 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.79720037 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.796773617 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.785010894 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.804087952 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.811261833 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.798716428 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.80267205 seconds)
  done (took 43.2993328 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873948908 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.680091912 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432830969 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5222291 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792288027 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996438667 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.785161868 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961204974 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.790167463 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060589256 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.350868226 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02152951 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040403213 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786757255 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86042683 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.268751411 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092685851 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022126271 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815888266 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579231322 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902338531 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.200045015 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.589300606 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909376606 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99696313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786685692 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.048435799 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.788642317 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920565652 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823973207 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796441059 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787903604 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060843838 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001950506 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913232079 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798242939 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.424394658 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.793794065 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.780264678 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.579838762 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.478555691 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917546139 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794829302 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789166253 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.720928822 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.176727407 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967715486 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.793181816 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.489816107 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.788570247 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799355262 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880108978 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.792529053 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.61202346 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672050104 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.794664478 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.787878768 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794814294 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.522744554 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901108969 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369190367 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.730656877 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.893553565 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567905198 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264140613 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.942467111 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.791830287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79262121 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722043644 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.566778421 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910960036 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932783585 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.819328982 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270089154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080697141 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.405950079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867560525 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083072513 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.613254176 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.731266159 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024581181 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30774498 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723190478 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.759757747 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.722218071 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065435187 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82828876 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.725037552 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832697141 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962217348 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.802491466 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811335005 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797754561 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01446704 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.633933224 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792121802 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.29933572 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069383678 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813519283 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961867053 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72348231 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.794783528 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043978131 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.002589124 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.955099217 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.274209846 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948057796 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792378 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.880437039 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.589701543 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808435122 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.066795434 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855942297 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895362689 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917699663 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.792868195 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10297368 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823598315 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.967736834 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.367103067 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056747529 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.132712208 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821679589 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937707027 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800285237 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.792036486 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596476431 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890672345 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.793763744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.795744681 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.188871825 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80876476 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.795073522 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725641137 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.45868516 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.36135631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.461047002 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01651815 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.765677294 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072917894 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725416077 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938399821 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.908517821 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.017370408 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.438295553 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.870782771 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048768795 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487375201 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.974935966 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81018004 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810331324 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951250208 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814358153 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.257413953 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053819524 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.797730935 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.798937605 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.669888044 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891634291 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794594789 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.799484564 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585401593 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078660703 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.826796142 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.802910697 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.734353226 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.807705355 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939175078 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800758998 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.805173914 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395554252 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593013653 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.806173853 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.453653101 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026733083 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806040225 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.601393612 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977907434 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.880158975 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077084074 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860913636 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.727746742 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.498272441 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.502735652 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797019168 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730838242 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.79742882 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804502666 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806329954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.189430794 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075250114 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846050882 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.598058544 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.90752136 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807055451 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.801567109 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797396978 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.376385751 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913957353 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311084761 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.810281835 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939825792 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.811223221 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.729930133 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.801359597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802272181 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.79745473 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.798461803 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871279464 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.589068162 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125830601 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05462167 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.430151812 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814498115 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.602405392 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.923033394 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889375384 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.29468268 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905612299 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.810361589 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865966002 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.808335862 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.605794405 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895171939 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.528744113 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098674975 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12081611 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234809663 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.313338847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346820448 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.971354368 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032056195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.798772268 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866260563 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982761947 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74252405 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88698605 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.442452419 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150915919 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813015252 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033278344 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177580647 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.37703893 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95668919 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009873886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868899042 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458974939 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847378804 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.647866693 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951719505 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.377463881 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019159016 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96752121 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.314811783 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93038452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.799465333 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266605441 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886105435 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.800988358 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.799902769 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.23118482 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.370126301 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166212628 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.811114112 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800820842 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161334695 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.078924095 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.892585101 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734099477 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.81188688 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.811481741 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.802725869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.819386659 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.680419199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.066279057 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81067194 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033081052 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.012901009 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076613851 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.778025114 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.806993398 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802043466 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115532184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494383407 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038650409 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.165197526 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.436779643 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808108256 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.733953319 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735602085 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.508788659 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.80788589 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.774402868 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035084554 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.909538882 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.687184551 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.088002053 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117376152 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055672543 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.816459557 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073789093 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089803213 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.451591108 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828130994 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.897629191 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.292716939 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.921588479 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345743237 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033895235 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592758679 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.030426898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451600219 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.227299945 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.798740607 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010491404 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343420173 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.347134864 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050298114 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.527863203 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.807642949 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160793853 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864170864 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.369204006 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906909865 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.903536399 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810973611 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88862199 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807892115 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.810033384 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809624242 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845240511 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.376568535 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934889294 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.818062197 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892423391 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919370521 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.440629334 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.8133243 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082753011 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159177763 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138181834 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867261055 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.804932551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806581481 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737406194 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952874984 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804594192 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078333415 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.940632145 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.000324568 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82872447 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.316275486 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.996069962 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119363533 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077864193 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804857878 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804446111 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872932249 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.805366987 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814085013 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.013858899 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039409033 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160604091 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.105167417 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.842842446 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081896656 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079888417 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.80572573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.805635899 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132218025 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.819867676 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.315611124 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.846957911 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.370404008 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098307112 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815623247 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022752706 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.830118277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.003998088 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.258063809 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597199596 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165201989 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.027765771 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.865373235 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082487275 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209674086 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122270355 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893935627 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815978831 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.621812206 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956156698 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.720854811 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382622882 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.807642203 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016819632 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.518503256 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815244786 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086197386 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120170038 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.80529218 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.753846607 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855947116 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.814856761 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029700842 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078926356 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062678453 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816761822 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.813153748 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.630250297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084695644 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869864736 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739063165 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.812967941 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905015315 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055373145 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838023994 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.33280754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.510296105 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108843777 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.73222316 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832109727 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067282064 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258318453 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142048974 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.390166241 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044851531 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837538515 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.671800708 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186069759 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.813331449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.08749609 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187134319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.812802524 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.327994609 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922613868 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.087896559 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137752505 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.820943514 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676624219 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.850470244 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032751802 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366463462 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749984363 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822652948 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.874647747 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.809882878 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.939441499 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821332113 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.785658231 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.704526405 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.631465095 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170307066 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.81524131 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.80159534 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.308741604 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.216838323 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91964326 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9640686 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819731205 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.51057814 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.115403673 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063784552 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333983774 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.889657178 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.81453626 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811436798 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7354437 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811970178 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.201608079 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114210197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.181541163 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.922530226 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.814269281 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.025059414 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021957439 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.375198449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966349077 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387428138 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924218228 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.197656099 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.812800304 seconds)
  done (took 1695.701110151 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.827977299 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.927852814 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.826643579 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.851985398 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861145135 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.83848163 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.927977232 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919110777 seconds)
  done (took 56.728598959 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.811613643 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.99388007 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.820162141 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.812423841 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.829102198 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.812191305 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.026694527 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.831105829 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.876945429 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.82091127 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.814057423 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.815387181 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.117416891 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.837467962 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.811804487 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.80553044 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.341975558 seconds)
  done (took 74.002767285 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.812891863 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.876105169 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.849278639 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.834427184 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.131256545 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.818549451 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.420192679 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.8169287 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.817783401 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.186817735 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.145666187 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.899838678 seconds)
  done (took 87.360173734 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.811574149 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.810675938 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.810105562 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.808398088 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.808652791 seconds)
  done (took 10.79105573 seconds)
done (took 2191.72116363 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.024048173 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.99533383 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.030913029 seconds)
  done (took 5.764973149 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.949119079 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.997753844 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.11530667 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.407781293 seconds)
  done (took 10.211615578 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.10089544 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.184672067 seconds)
  done (took 6.021849909 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.170073761 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.829705007 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.185131626 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.800221911 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.799202307 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.80511345 seconds)
  done (took 22.143584806 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.798834339 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.801412774 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.799694325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.800506008 seconds)
  done (took 8.931825852 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.781918176 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.470956818 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.781001292 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.79999885 seconds)
  done (took 20.564607917 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.543718747 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.921383256 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.487266699 seconds)
  done (took 8.681616875 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.312361115 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.774351556 seconds)
  done (took 8.816633418 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.976309746 seconds)
  done (took 3.725563707 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.846322494 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.088120022 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.329603458 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.345916772 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.428939663 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.646141266 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.165515095 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.04728683 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.262157322 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.274627052 seconds)
  done (took 24.184992218 seconds)
done (took 133.985502936 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.456849762 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.164960034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.01290542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.040313168 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.060191503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014100544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.221701102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.970757389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.847077309 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.833687588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.986872081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.056276828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.164448475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.149372759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.175193945 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.147792797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.045715351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.398208477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.856129382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.913787945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.234477408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.820636047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.829258888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.838010657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.049263607 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.967250438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.304327946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.151025897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.003864662 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.308459621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.972322192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.065194478 seconds)
  done (took 167.80895964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.813456243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.575130959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.816040195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429200144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.565096054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.815128783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.8164956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420229833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.438317088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.417764034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.38772682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.554041452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.818477273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.727382894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.817980193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.802051741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.588858638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.816602989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.815127766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.815737877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.815517381 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.37822068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.230909998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.395784387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.580508984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.817494908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.814392487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.797568538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.815828566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.81518456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.816711282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.815073666 seconds)
  done (took 207.095321447 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.814701007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.815189296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.816749963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.815517753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.814854401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.819035225 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.817405427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.81551827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.814958677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.815946921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81704039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.816128461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.81829772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.817117919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.819182436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816590271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.815786594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.819641444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.815787034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.817493464 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.820910597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.816666262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.816153783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.816992975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.816781131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.817094306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.817528068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817408999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.817133126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.817428503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.816039801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.818074694 seconds)
  done (took 219.892978761 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.069788338 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.822452742 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.823882337 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.787640801 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.823945358 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.822186055 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.765823467 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.071595865 seconds)
  done (took 18.740601531 seconds)
done (took 615.28487425 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.274072659 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.12022707 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.981196106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.851723901 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.105069638 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.879338144 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.845562071 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.9069348 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.454157146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.91284285 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48127115 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.865186349 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.56743843 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.874251339 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.951738253 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.90390066 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.386440345 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.475877624 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.006155366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.919700837 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.993124977 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.801119225 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.925966394 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.492544359 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.592374374 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.829606388 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.907679555 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.397116733 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.857580385 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.986279017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.561706992 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.158727759 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.859579087 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.841329274 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.898132822 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.877901979 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.103273549 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.855439142 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.943934972 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.603043172 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.923367858 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.36758506 seconds)
  done (took 100.292979846 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.815844173 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.813674791 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.811789364 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.812870215 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.812644303 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.81323411 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.812166521 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.812578517 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.814905431 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.814319835 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.812608569 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.814606199 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.814110936 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.813149809 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.814122289 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.813584237 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.814572051 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.814244341 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.812884735 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.813849114 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.815199611 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.81445034 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.827546262 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.813914234 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.815071853 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.81517205 seconds)
  done (took 48.937142871 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.824212661 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.977665683 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.089495994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.84830314 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.825919153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.83018449 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.844413043 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.830558511 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.82918721 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.828299578 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.916496826 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.832779901 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.842944333 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.088968764 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.843363243 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.826113299 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.826791051 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.827162826 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.984321428 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.844166273 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.847131154 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.832137532 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.844997489 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.839747194 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.827405975 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.826960772 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.830781931 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.256108969 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.837773065 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.917880382 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.874209469 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.851269863 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.225504869 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.100381942 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.883957927 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.835635932 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.827157983 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919749212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.833003237 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.827789705 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.846486194 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.832888927 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.088669626 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.280475224 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.844280299 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.826975817 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.265102623 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.92944659 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.868726665 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839017719 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.092114806 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.847028807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.829600906 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.829579976 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.866037405 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.83492494 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.827300066 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.115943402 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.841749512 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.845385064 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.834391571 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.82893891 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988238466 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.839152198 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.980571116 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.838713323 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.834953042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.830582088 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.089928754 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.847804887 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.286648724 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.843851936 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.828694936 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918260506 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.986230063 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.29468219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.844156743 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.992849633 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.246192404 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.85497457 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.836677424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.246723815 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.857468956 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.836101602 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.831839349 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.831599699 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.8311904 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.877353654 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.846170381 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.203672326 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.293570687 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134389288 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.856837837 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.845741087 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.830591712 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.115860925 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.839497445 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.831030708 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.086879594 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.296663727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.847225318 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.836590364 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.273584774 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.848789793 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.849634241 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.839614088 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.096687252 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.84828905 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.879355014 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.831714428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.83690242 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.833716613 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.849842332 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.839439661 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.83080988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.265744853 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.939391275 seconds)
  done (took 226.798552158 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.826488721 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.830427542 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.828657667 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.83025918 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.825385857 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.830777113 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.825212336 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.82536919 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.83124073 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.825436702 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.824191623 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.82755206 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.829513272 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.835537152 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.834987551 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.830825331 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.414136945 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.82716227 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.830687168 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.825353284 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.473252588 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.832382665 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.827754508 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.826285835 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.827672602 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.826129834 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.836802567 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.830608886 seconds)
  done (took 166.203534985 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.834050235 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.94792939 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.851183097 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.85985135 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.842358818 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.830712313 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.855860102 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.848934796 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.839201296 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.831555203 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.83179918 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.894351793 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.845392109 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932109414 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.866692934 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.865054019 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.937169672 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.841955417 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.830505806 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.831996551 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.862425156 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.829210594 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.893986387 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.962347022 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.850842928 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948944646 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.837279759 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.834758417 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.83229542 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.950109142 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.848839411 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.895237341 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.86596524 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.851622048 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.956334499 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.950978625 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.940783139 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.86509905 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.836985184 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.831508681 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.832708916 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.821206832 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950608191 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.85314969 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.834175127 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.942541708 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.852822011 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.834637559 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.843027019 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.83275484 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.847213816 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.85246754 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.901352447 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.966776599 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.868372435 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.859219912 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.860153229 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.129719847 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.843116243 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.934821897 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.830165842 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.951418517 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.854155477 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.822627972 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.834293881 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.839142238 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.863187116 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.866795679 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.938639723 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.843082836 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.934786713 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.872358307 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.841265412 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.833462062 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.835990844 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950420624 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.951870716 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.87148598 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.873096889 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.866631572 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.832378631 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.835632539 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.823767907 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.852035483 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.83831535 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.949998306 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.952086276 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.844057165 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.836216079 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.836890594 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.837365769 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.86274378 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.962588331 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.87162879 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930497174 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.90489432 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.910994204 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.850584924 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.848729667 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.840289956 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.899481348 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.850956333 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.847759743 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.178826763 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.906345613 seconds)
  done (took 198.87178348 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.310764848 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.892514838 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.89421002 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.151675813 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.179704721 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.776495869 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.886069881 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.889312793 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.913817336 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.080000529 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.963036829 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.904134895 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.874642813 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.859709172 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.887673238 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.909882968 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.901713114 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.210291414 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.980178108 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.030885979 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.866292682 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.153629051 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.160283479 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.285196841 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.92239274 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.229917176 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.560945112 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.029863392 seconds)
  done (took 60.47837745 seconds)
done (took 803.323997253 seconds)
SAVING RESULT...
DONE!
