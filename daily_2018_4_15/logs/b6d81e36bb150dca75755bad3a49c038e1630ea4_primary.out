cset: moving following pidspec: 12803
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.418687238 seconds)
loading group "string"... done (took 0.507679076 seconds)
loading group "linalg"... done (took 8.571026175 seconds)
loading group "parallel"... done (took 0.175714488 seconds)
loading group "find"... done (took 3.03895918 seconds)
loading group "tuple"... done (took 1.875328473 seconds)
loading group "dates"... done (took 1.345075427 seconds)
loading group "micro"... done (took 0.191151521 seconds)
loading group "io"... done (took 0.506967836 seconds)
loading group "scalar"... done (took 50.756959347 seconds)
loading group "sparse"... done (took 13.753346997 seconds)
loading group "broadcast"... done (took 1.302140205 seconds)
loading group "union"... done (took 9.229696634 seconds)
loading group "simd"... done (took 3.033858391 seconds)
loading group "random"... done (took 11.363686731 seconds)
loading group "problem"... done (took 2.222829118 seconds)
loading group "array"... done (took 25.093976761 seconds)
loading group "misc"... done (took 1.111949181 seconds)
loading group "sort"... done (took 3.745729838 seconds)
loading group "collection"... done (took 19.417156612 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.620863067 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129720472 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206648123 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287300066 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238466593 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.172437219 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145831782 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.237962276 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.738609518 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202839716 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139845847 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420728105 seconds)
done (took 6.356614233 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255817546 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.246365563 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167057585 seconds)
  done (took 1.173512669 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077210816 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160327831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109353778 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096820707 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096469077 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111980463 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094622657 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112493883 seconds)
  done (took 1.546736421 seconds)
done (took 3.813961505 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.504310701 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.874716599 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.491134628 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145544267 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315636032 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.298656102 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271988404 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.19945082 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093594002 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090695054 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176875299 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.385378957 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.38894877 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.95276821 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09009452 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095703595 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133944296 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.765049746 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08123734 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.123053855 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505172822 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19507502 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116627745 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107995127 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188059815 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137135593 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162156085 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104495563 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664311149 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13456153 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179715536 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101285633 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161375374 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.191425231 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214096587 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096157068 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679272664 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202816792 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101648948 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104160505 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679225941 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120691113 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191446495 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106969362 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.08956536 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184997062 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117506738 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08104504 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094483726 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103211449 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160598459 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.440477384 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108218191 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171496485 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095399068 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.684621035 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099305627 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278325171 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128573316 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.100514775 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093125 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090543958 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159403394 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096656313 seconds)
  done (took 20.103207755 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147867573 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167847596 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079162243 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157677753 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124357478 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08119736 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103431146 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079224971 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127170249 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181482486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140554945 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153821176 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093980037 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091851375 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146478249 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233659228 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108453827 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123107554 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091016554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090814512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141329929 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097390177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110371234 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094643445 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171146998 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206335733 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109850582 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125205427 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092044272 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098771482 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142564641 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148092334 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095477527 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090927039 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1896144 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110366154 seconds)
  done (took 5.324447128 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.220442312 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105731435 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.113923924 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.227853115 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198306549 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154019721 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184952058 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15667815 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.275545562 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.224254872 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166817533 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135232207 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099657649 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097952306 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083810377 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080328538 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.152123802 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.461304233 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193314166 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15170021 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167560891 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118936157 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083590877 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104523614 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087970448 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113535888 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122746874 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322046589 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.186774195 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114257406 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.145847379 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086408265 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100647293 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137446463 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195969224 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.146137108 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126243643 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114118158 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.089676737 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.228730927 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104265552 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097335089 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117681213 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132470874 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117072653 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110221217 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112775811 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225596802 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.106533725 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117400182 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08475963 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.06493332 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199231569 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.128017908 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08559116 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293746981 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130274871 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102448077 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111671346 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.787370288 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13580052 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084506447 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080404681 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11809108 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08092068 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431123325 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126429294 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.176689584 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087134379 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162332022 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097978546 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123528051 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08737175 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104637017 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111320603 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083426441 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.105325149 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081050515 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086564822 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099857661 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091240689 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129077629 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088098308 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080804188 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163276988 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102139163 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108535478 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127992112 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092165981 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.10485848 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1144451 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100653936 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089893864 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165132856 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09922449 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.13108297 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116136452 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130592056 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.103880775 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.229240903 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087391695 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12253284 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102807439 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128967536 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104648345 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082097206 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10340249 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081378612 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082325654 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162719451 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09131581 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081966049 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106421509 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096714282 seconds)
  done (took 28.674714004 seconds)
done (took 54.862998294 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.43888644 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083110626 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081286438 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102182541 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082924523 seconds)
  done (took 1.622355624 seconds)
done (took 2.430721265 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.324391078 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192509626 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104179592 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190660577 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090367638 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196532369 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182895935 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095686815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208741703 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086042778 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187087507 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085026685 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106840388 seconds)
  done (took 2.889014477 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105138201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110555318 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.11979857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105026963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086436455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101600777 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121577695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112688618 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101342923 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114759439 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086692762 seconds)
  done (took 1.972484341 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101263573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108017917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099585398 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119148802 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086280872 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10044447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117459273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110641032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098602452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114038992 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087816003 seconds)
  done (took 1.957804668 seconds)
done (took 7.626677599 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.097667142 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.613316536 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.149813194 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.212123289 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351320955 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239540194 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.575762874 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153807762 seconds)
  done (took 14.349705842 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.123138918 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096487632 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.115053545 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09271003 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092966395 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.158411137 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093484349 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096400604 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113477636 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096369634 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093823995 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.113887329 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093553139 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091143549 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10932542 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097340462 seconds)
  done (took 2.550270634 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145629475 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142385808 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100977334 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10056928 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114979194 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101048111 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102528659 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117562874 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096179453 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096495767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12198627 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10130682 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098981598 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113044758 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101436017 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119412947 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113846913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100795357 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118387983 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118717932 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10199328 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096839369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117542719 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101506275 seconds)
  done (took 3.541740992 seconds)
done (took 21.254229683 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150923739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104066629 seconds)
  done (took 1.070072891 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14339565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159904492 seconds)
  done (took 1.122418558 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114102745 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090415138 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14033824 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104121878 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09207545 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108742816 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117188323 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109578982 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092346676 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092925583 seconds)
  done (took 1.882844922 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096210894 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096019636 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123374678 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136932528 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118075838 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095248142 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095416298 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094137291 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115427727 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091853265 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095921143 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127685097 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095640505 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128392289 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097156313 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096971576 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118894446 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095949516 seconds)
  done (took 2.741080782 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09299584 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094291293 seconds)
  done (took 1.012079463 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095148982 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090974472 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094057238 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112647848 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0914185 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089890691 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109362001 seconds)
  done (took 1.508727336 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489963408 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.383087398 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357006552 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111049555 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151245454 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.353963682 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154120456 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106064415 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.125297772 seconds)
  done (took 3.093903883 seconds)
done (took 13.253678511 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092621982 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22471805 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.613831358 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114530702 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091528006 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162047123 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.295245221 seconds)
done (took 2.421145518 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342375157 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144229601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082563885 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093535598 seconds)
  done (took 1.486736151 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085521697 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100173553 seconds)
  done (took 1.018582949 seconds)
done (took 3.336965827 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091533311 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090622991 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090277784 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.109224691 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.092231821 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089590895 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.108151268 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091850317 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.122101982 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10910462 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090407664 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089487439 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087871317 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109130497 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090367905 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089205976 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108408792 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090826207 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089329144 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089362793 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10709294 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0903913 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089350482 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107758957 seconds)
  done (took 3.190064868 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108167636 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09222716 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110837785 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094805865 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094340984 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.11099388 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094912014 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091098024 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111902571 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092311282 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095177577 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111600236 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093848769 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095743545 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108874463 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096784319 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094916553 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109010308 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093569685 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094329401 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.11074547 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094128416 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094948212 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09471326 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113340825 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096080767 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091743642 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109891312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095497129 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095057245 seconds)
  done (took 3.822850164 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101517768 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087501669 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089807599 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117472931 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088328778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091122538 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106253891 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089499098 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092805442 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089080702 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111605855 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091102338 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088510592 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10945225 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093272841 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092538831 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117576889 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089651243 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088379689 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092358271 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112699651 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089225962 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089968119 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109961659 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091044672 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088321135 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.108410894 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091714837 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09294065 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090658039 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11180794 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09442214 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089932028 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.120776004 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094194176 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08966314 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114240876 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090217012 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091982847 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087226453 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105982529 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091051954 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087637194 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114553594 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092442851 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090527965 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086471918 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110441742 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091062217 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093460065 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105791865 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08876606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092441198 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109325715 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094791347 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088412265 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091501893 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106362078 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092450913 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089537813 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105465495 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088899195 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095175049 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089907605 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125705274 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098176551 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087725587 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.112486617 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091509827 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097213339 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111364262 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102546554 seconds)
  done (took 7.844186065 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104084244 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099793862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091788211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110903024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091552136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090702393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114314474 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091624781 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092601913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115652146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093276771 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093572097 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109662724 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094061368 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091657061 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091464068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116183358 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092291742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091029795 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109997231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09293026 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096464184 seconds)
  done (took 3.018088554 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238025384 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098589355 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139471858 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123073031 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110818277 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123038642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0974639 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097249919 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113911195 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101907198 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101141178 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11438808 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112596558 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118635781 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102277974 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103239231 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114247945 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103419029 seconds)
  done (took 2.957369584 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106608674 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094264123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132238515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094080726 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094488008 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.114203913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099009824 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112428057 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112718375 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094427889 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100867589 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112229465 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095220875 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094852316 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092921732 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113192021 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095356458 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09300545 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118446525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098193155 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117128405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102520423 seconds)
  done (took 3.134532247 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107622514 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09331112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128769203 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09712404 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092666977 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11062723 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100329582 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094361645 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11750699 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094453222 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093780753 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092409058 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125570841 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094283373 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098113418 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113407435 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095190679 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0936169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112010968 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093398818 seconds)
  done (took 2.895139358 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170021603 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127028109 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109089972 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116111939 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128134202 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110288072 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116013949 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128564065 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10882739 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138931641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109639143 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109666944 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13569264 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114807986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127648678 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118401888 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11674861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136138458 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109908253 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127169868 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12118042 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108320314 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136825273 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110342549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126022813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11095015 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109595862 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132061152 seconds)
  done (took 4.263018671 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092940162 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093287883 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091303382 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110544928 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092322081 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090606505 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.109804904 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093717516 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091897278 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091067648 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111109144 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093054223 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091957845 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.109373384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093497245 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09173237 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091601497 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109963468 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092958626 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092037876 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108568789 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093168105 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093018809 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090694376 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110773592 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092601048 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091354773 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109433939 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09400698 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093245899 seconds)
  done (took 3.760398058 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105306584 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102563571 seconds)
  done (took 1.060715249 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099876637 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108286795 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091642594 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111323382 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100549524 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094203305 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120304155 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099708163 seconds)
  done (took 1.679471535 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14386577 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162681813 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098389261 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105396529 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164818637 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15347437 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13527853 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097210174 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109578645 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087357442 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157480465 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087189084 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092990086 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109393961 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094739236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099368632 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111572323 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103786065 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099857286 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.11292151 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099175758 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098171303 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113594958 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105162998 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087478528 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114696183 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098464004 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104516282 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109303244 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095619875 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091431254 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.11142008 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09773357 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097222214 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093109053 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163737268 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099773839 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109741366 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095068775 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096862107 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.146727936 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094231804 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093667986 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110874491 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097194792 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097911763 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.117020307 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094470302 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085107674 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107541285 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09519653 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088120527 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111701551 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095755444 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093389129 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119111313 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096469621 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090008276 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10783539 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090781075 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091512139 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108150875 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097594506 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096414367 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113322473 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096547824 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093139853 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112132447 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096044162 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095358453 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109663489 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110010409 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09499154 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115603977 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099063497 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094382849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108255063 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099190683 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092698843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111996134 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098251766 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122288936 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112777355 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091058122 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08900452 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118692266 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097370715 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096403218 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086358598 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122911967 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096375704 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09495816 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105333556 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092910333 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087921843 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.115735102 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088386429 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09419343 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.112268714 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099436431 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099022879 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111292527 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096352321 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098882454 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117489359 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093177164 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138064536 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110597161 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090681194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094707332 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117971986 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089147314 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092839635 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.112753475 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091369047 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088962819 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.11644608 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095014421 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094321518 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.116107735 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096774537 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095120672 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11440255 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094790985 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091141873 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097308023 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121044296 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0964051 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094743525 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.113419387 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094805438 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092811736 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.116442118 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091774973 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098811289 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109501847 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093415341 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095341949 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116840106 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095969842 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089373135 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112108576 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096563239 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093410877 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.115945861 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096310252 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089453926 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105254784 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097205726 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089284441 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113950483 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102458455 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089167316 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113655443 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091772315 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101736349 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108617226 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09978003 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097120389 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099214336 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118297206 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087307796 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090661374 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115048996 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096438532 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090238683 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.115315636 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095360868 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101303573 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105696323 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098528147 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086563554 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109003496 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102327268 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096502186 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097831612 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.11001666 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133227862 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109272528 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118529558 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094595683 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093384831 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116339403 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09390825 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096903815 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119440742 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098878808 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090614968 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111732325 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100275858 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089511156 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.115355096 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094035301 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095039289 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10604369 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095595261 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086048166 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115856032 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098206546 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099107109 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117683956 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098123079 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09378981 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102594269 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110746488 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099413164 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087035086 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.118302573 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105756607 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101441496 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118813668 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09747906 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091646546 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114291014 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103483579 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096049917 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113267079 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09673092 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087402416 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106745357 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.111825339 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096898643 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091042886 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.115100653 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097481039 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096336042 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11310082 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088081083 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.09749887 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118216996 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091898134 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095562287 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111341741 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093661492 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102231647 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.108140535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091920734 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097026695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.118743437 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095631883 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094096372 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117193519 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101290806 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097370423 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.11646643 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094605421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102749493 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112325108 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096498485 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091417212 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107108706 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109524995 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096955266 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094688359 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112267925 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093431991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099171856 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120752923 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100798652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093151695 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119013015 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101994074 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100467697 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112873029 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100817716 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090906503 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106188375 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092972305 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087519426 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096910019 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111961592 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100304963 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092479627 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114376922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099069185 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096534441 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113227019 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101024594 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124574568 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.092886951 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088866136 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092676856 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116103826 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091778728 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090843534 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115897252 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097261265 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099588811 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118229215 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091950679 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095170178 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120701966 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093002971 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101356855 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121582422 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10265565 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090896366 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.121002621 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094362337 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099190585 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108334633 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096750726 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094572365 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113951574 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092964739 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093947495 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110456457 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090241858 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09262367 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101030427 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114921021 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099643127 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094262329 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11365031 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092606017 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090931533 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122281832 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095506764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101068453 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116136099 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.091042189 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089334991 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119556466 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097514642 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101419277 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110351516 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100487287 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102413369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09897587 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116552853 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104880451 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102912541 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121893846 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102090336 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08920221 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113861733 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100745247 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095689661 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118621217 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098808917 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090033137 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117120246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102498185 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096498967 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113578704 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0903364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096402423 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120780276 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099837015 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099733079 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096872834 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11778385 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091381178 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098827206 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120075716 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09707783 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101406477 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115447755 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099900183 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092309853 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.120644632 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09742722 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090281705 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107630936 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094574977 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10204531 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089565423 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119728514 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.1016126 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091659397 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114329646 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102055639 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091632353 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119283149 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101908588 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093565133 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125363626 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098708492 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093861191 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120007927 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102442763 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089263284 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.11319419 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096723005 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101843486 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093687273 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120209019 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096243732 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100343489 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.11970315 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101627138 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100856121 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121552589 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09116139 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10256277 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120206757 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100258224 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092813652 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113545147 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092910725 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095301652 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120835094 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.095255451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104363885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120820284 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096978524 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094616969 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10097815 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116487783 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102781331 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091958006 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119046917 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090493193 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098055156 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116696433 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103314354 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092729188 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110574949 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102811503 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101057475 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121983716 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100822517 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10445372 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109604954 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091483389 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099371321 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11157996 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105997966 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099420058 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.114204743 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09692885 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098138751 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097504404 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122449817 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091083211 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091981285 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.117807507 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098885944 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095425401 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110888725 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101924828 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095332223 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118141936 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096929873 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090210303 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115795686 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104117655 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094325206 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.11133809 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.095576524 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103629128 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114516128 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094996305 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090300374 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120248043 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101058765 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103219633 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111773977 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099256059 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094461813 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097798158 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.126165078 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094932285 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096399855 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115340477 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101677731 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100627315 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.11075586 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094881607 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104850264 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121660342 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099750179 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098417056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115805917 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105908583 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102992631 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.119150984 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.092376763 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091511771 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114158717 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092576582 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099274469 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120276033 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098242524 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094883001 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100638924 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120882351 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100736438 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098638264 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111736658 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105103811 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094492485 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119657973 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.092250855 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090113277 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.118188446 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104165082 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095446764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116684749 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099809584 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099084422 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091823481 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.116027682 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101646457 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100582034 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122889198 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097577079 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094177649 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.11919046 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108280685 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097397053 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116040015 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106621367 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101903652 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11848009 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09694552 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100851414 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122892334 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100146546 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102491998 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114069555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097774234 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103097059 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123868463 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109095497 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095730538 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11026104 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103388876 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094857531 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090167411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122322738 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104628521 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10275776 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117565212 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095285126 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105326473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122646567 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097811934 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093812408 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115642016 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102475978 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094592542 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.12083544 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094553702 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103238896 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.123916739 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104412042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105604466 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110804296 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103944638 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099887876 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124888668 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100216984 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091693214 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09137081 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.120040444 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104537904 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10263709 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120624927 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102072995 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101427627 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117617333 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098845156 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095101552 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124315765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103349657 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098850924 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118356656 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.099310015 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09967276 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098684131 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.124255424 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104841891 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097505553 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128366815 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104416125 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095496847 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.116498624 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09945026 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099089555 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118714214 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102797134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094986714 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.113049272 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103340421 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103729979 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115941855 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107892737 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104508237 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115571611 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.102145331 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104580168 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101722848 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.120673242 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099395099 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100291436 seconds)
  done (took 62.699011141 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148388432 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105805016 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12089688 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100535076 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116579956 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122309164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09977983 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10113943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121281279 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110017338 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098617607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119714679 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115480368 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140753425 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11939377 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109598985 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120483363 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103026339 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099116483 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120281034 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116518405 seconds)
  done (took 3.317276303 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118641663 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112781207 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132264701 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115078189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105183501 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132775999 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112366086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132348723 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115024033 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107417379 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134934441 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111291422 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128385654 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108692221 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108685283 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130196131 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11402601 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1261112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113794748 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110985413 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129515002 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111492553 seconds)
  done (took 3.519547444 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130452268 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103660604 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097225805 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119931384 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103144507 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099979472 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123604357 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102995719 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107971867 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114977816 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093509844 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094969622 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09815786 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121015977 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095422312 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100365416 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128473851 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10403785 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103303593 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120124591 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.09168318 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099964054 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10002086 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112218011 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106790568 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104071201 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120232339 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104234304 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091611751 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101275327 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.122196304 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094219915 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090555229 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11220099 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092620065 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102521202 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123028806 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102411942 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100607777 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090934279 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.12157468 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104231329 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090353989 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120260473 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100569164 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093490986 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.12358942 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.10259311 seconds)
  done (took 5.993467671 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130325408 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166255084 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104963419 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137584133 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135882945 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109615421 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124916747 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138921802 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101468398 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126561717 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115961942 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135698007 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106891119 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107342405 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127225964 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106051124 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.344338937 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.123373869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110688594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103045739 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130272377 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107451837 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114546388 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133745151 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107569186 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103445098 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125057568 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108110411 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132856466 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110021812 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10658527 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128392429 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115388654 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106529614 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124825881 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106479144 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115277463 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125712273 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106442879 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101224344 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126481624 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107527434 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105413254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136536273 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107218904 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124066304 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106575561 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101951516 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134338693 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105090304 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109829391 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134827564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106808498 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103713621 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128442031 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114660846 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.126297423 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105129447 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105816121 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132624594 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104032357 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106847687 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135013459 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106207942 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109658139 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136003548 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10660806 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106060599 seconds)
  done (took 9.230062908 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134716495 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108031424 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137125711 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11656643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106632604 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130096256 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108364211 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127510037 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109805397 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112932468 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127490072 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198655757 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126146599 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11241324 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106518136 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128867985 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107860655 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127149191 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109547354 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107187404 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127253998 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117128395 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107289832 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135279278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119095536 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124317984 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109914208 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107781473 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136562522 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109601064 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119035072 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128893075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108804302 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136841576 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120805619 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107602157 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122592525 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109503631 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10699802 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128617276 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105788526 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114633425 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129538702 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105350462 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107380632 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130214115 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115121138 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140549057 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113505954 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132692598 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110315797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117218749 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129116272 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108379168 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116199762 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145288851 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11619116 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136406036 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108936512 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114648521 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137979028 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121327298 seconds)
  done (took 8.403971987 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102604039 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100743589 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10079378 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122042335 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101505776 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100687063 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121447906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102463492 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10181098 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100467407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123899007 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10169071 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101016697 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120375959 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1016367 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101510224 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100323459 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123261787 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102052456 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10058322 seconds)
  done (took 3.054093987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111979852 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119050066 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123228341 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111275287 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104154101 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12996371 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104421012 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104303834 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125015369 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105858629 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112126653 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131981431 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105688637 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10863619 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132836801 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110618225 seconds)
  done (took 2.765616594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123996213 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119978758 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190728567 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104757604 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125034455 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110621299 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102834774 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126149448 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103246455 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108264759 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.12926569 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106966416 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103761158 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104261303 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125756468 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108029689 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101878733 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128259842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104942633 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.191034587 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107132929 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105365527 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125391325 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107674901 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103641324 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129472674 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11078719 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103605428 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129259148 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106027894 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105943808 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132070962 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103662183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10717206 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126344318 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106276094 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103754602 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103650078 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128804335 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104499636 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105183337 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126168004 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104670689 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104589681 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123022988 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106493746 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101603957 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131588937 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106023264 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104747574 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124362716 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112041165 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108267798 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132456203 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111665619 seconds)
  done (took 7.300039957 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116147313 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103964141 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135883954 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102997206 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105004653 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104928929 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126261206 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105256229 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104211463 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123890755 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105862398 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105252452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126655271 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106563155 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104261726 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125888374 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103242727 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10514587 seconds)
  done (took 2.942599436 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109411514 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104252552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107419541 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125155189 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104557859 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104676991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12500719 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104373377 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102213826 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125014008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105970332 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103946664 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102102885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12639625 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103610788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102483459 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125993167 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103736918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103100223 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123178018 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105382619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101885329 seconds)
  done (took 3.352332662 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115972783 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185817752 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109940358 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195168224 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100640745 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09863734 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.132054685 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101173974 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115354958 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.122938255 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100308234 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097993862 seconds)
  done (took 2.410020071 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132151439 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141534144 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12544923 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105012213 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112093915 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130055747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108506303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107393481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139636437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12001505 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128973012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117348551 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114795831 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137788996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111893153 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133437731 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110007623 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107864482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125676325 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124525781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10814157 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137770579 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10915034 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129723479 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110303484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115881125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13646621 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121099853 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129274196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116821967 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112754575 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130944547 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117155803 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140247518 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106187225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115245364 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129477323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126055311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111828222 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138533436 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104560185 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134446653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118822638 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11350174 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138447157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109364821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135069321 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109890549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108693083 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151899816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113758374 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138301733 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114853611 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116163084 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13847706 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131161346 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14222999 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117298756 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133892358 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120327936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11589593 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136266275 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116560812 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14218912 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114678839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137223659 seconds)
  done (took 9.068458634 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14837019 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106330734 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130884976 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121413 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137964695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111008466 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109085331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130876313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111259817 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105941636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174126399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109650239 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138430053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119294588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108057293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131768092 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110249493 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116543485 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128348288 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13058967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129796503 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117792709 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11749351 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139597013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119376754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136302005 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110222741 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108813291 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132981101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109519679 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13469326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110558911 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11758781 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127195521 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119031055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109075242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130413674 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114800815 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10815911 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135635899 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11742169 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144984446 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109580691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108989404 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1442298 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109864285 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130083611 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107918388 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10886106 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127594629 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12179979 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140391205 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123153891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118045123 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131824644 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109675422 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110095194 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131090324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111476936 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134614665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12037462 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109474048 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15161369 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110692501 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129970351 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120597592 seconds)
  done (took 9.028580105 seconds)
done (took 171.542517515 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151976751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187000649 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147355118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180942001 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096622727 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129600554 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.151173568 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149051206 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094468696 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118519197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095828812 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096840997 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185519674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096441453 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095820461 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120890675 seconds)
  done (took 3.02744677 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195791832 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.309444354 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110099197 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121707442 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102639424 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100532563 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121278569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103694151 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099437751 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129807976 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101253802 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097010763 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129366677 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097877904 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100984055 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122081 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109471519 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100327218 seconds)
  done (took 3.191443893 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120971204 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145365513 seconds)
  done (took 1.212147259 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132194244 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214302419 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282989251 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171126769 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122832142 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142474119 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149920566 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135436281 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188971309 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136262006 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114172772 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120768349 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.127458178 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105657222 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.14042986 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099492378 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127784797 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138001468 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11461065 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102241503 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146218846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105941201 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12691718 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11763651 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179692404 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136347324 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104363476 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.126272231 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.10474218 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114450523 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13115128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118907052 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.135449972 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158735161 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126408197 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157300647 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130208824 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101195819 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.135264461 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102977058 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104762833 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125583802 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116553648 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098952367 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.127145858 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109384277 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104302581 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.12702849 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109419332 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130876995 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.111676976 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108470366 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175706886 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107964982 seconds)
  done (took 8.031769597 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.867650884 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141279316 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100914304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.99608125 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152439638 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114386816 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.865973231 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12436463 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2576572 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893998478 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116774344 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139845252 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242821616 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28293428 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271254567 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359829304 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.731837218 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135964887 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133080612 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164544822 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112501769 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126461931 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14629322 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516823185 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104494187 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101879326 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131123895 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115595897 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180495009 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103483705 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105230459 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200264675 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295024116 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213092343 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101385282 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123577138 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102100569 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188415708 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274570283 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220741582 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198320358 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099954751 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100282766 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134482748 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12200301 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098886863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182638282 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194035106 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194092967 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105710146 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.138123733 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114493748 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131291327 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159811213 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120820662 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3658454 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372158493 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100716316 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133128359 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118001255 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27126283 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125632601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241674008 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129316022 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219350372 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123152774 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834043097 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186341039 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104292597 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109332014 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131794474 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108895329 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108410409 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192945481 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499030432 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115044675 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106353733 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124733339 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237223854 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102597241 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101060971 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185055896 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101722443 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133621667 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116072143 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135828034 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190969013 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251780988 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136364918 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1124006 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129174471 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119133945 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102417646 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235567222 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232887569 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179200038 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232404185 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11193138 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184996077 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187165467 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109329523 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194029775 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109073552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142081205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110847801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225745344 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159012146 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106021353 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130880947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112550039 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159895367 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107134753 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111773422 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190087824 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.5611342 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186730919 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099709558 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106919724 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134769984 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158806569 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132015856 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267552617 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111135035 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188512326 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109086105 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.123724143 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111281937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184307823 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112890965 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134806027 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111200007 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134694739 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260818807 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224363623 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138699812 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256509622 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.201773541 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111445476 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197029356 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110905354 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193395248 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111804717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134283752 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10454885 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822979652 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139873195 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112442117 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107247515 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208941072 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101626448 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125887877 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104283183 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099034563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818631411 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127435197 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101620467 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104998858 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13173899 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112570272 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111273247 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130105218 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159393815 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2714772 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116582679 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131090632 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104163935 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181114556 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104469729 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103180804 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125174262 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105576281 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112457597 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130784875 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107430922 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193860229 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178884779 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234335144 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.658782942 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104019667 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102906648 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269492607 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104394594 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329588484 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133266286 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240519037 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186426061 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102158532 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365049525 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.19050339 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186030601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12991968 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191769118 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101728339 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11163847 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183237776 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102303242 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133201932 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157871453 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140512737 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115453045 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.303310697 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105216865 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253293927 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.102244216 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190610948 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104585181 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111224547 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353380675 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104823065 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119986904 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182919213 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129519952 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105061198 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.628010716 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103210704 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137191033 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113137732 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239420711 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187100413 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1106095 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136121273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116750173 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18381803 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232038063 seconds)
  done (took 48.451880903 seconds)
done (took 64.858301336 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267741776 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177927194 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282196132 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179151765 seconds)
  done (took 1.948573226 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.243647622 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158844687 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.201866267 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.123113777 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.206964239 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.122695261 seconds)
  done (took 2.029587782 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177383764 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17083476 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147357056 seconds)
  done (took 1.46627634 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200984237 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216879811 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.32453229 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.258695824 seconds)
  done (took 2.063375201 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264095255 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117750526 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.13129349 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.208244146 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.222466259 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206266766 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124793005 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174554423 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131280467 seconds)
  done (took 2.593297871 seconds)
done (took 11.069354779 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.148387498 seconds)
    (2/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.353839577 seconds)
    (3/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112461829 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.380782709 seconds)
    (5/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134807633 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.314031011 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.219846945 seconds)
    (8/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.138033203 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170002608 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.239871531 seconds)
    (11/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114336046 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109475631 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.102298582 seconds)
    (14/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.264848442 seconds)
    (15/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.307646216 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.226122751 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.283189537 seconds)
    (18/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.198471383 seconds)
    (19/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197208218 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.25907229 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.213304256 seconds)
    (22/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.248256016 seconds)
    (23/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.151108567 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.123976382 seconds)
    (25/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.167667253 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129132804 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.307421974 seconds)
    (28/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.173178036 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.219394234 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.193325838 seconds)
    (31/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.18100366 seconds)
    (32/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.186588384 seconds)
    (33/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.247599335 seconds)
    (34/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075820399 seconds)
    (35/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127419856 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148094734 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130587703 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.253443787 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113541877 seconds)
    (40/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078736654 seconds)
    (41/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131456919 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11094374 seconds)
    (43/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.229514737 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112839249 seconds)
    (45/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.171012651 seconds)
    (46/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.164678973 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170714475 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084528978 seconds)
    (49/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076230784 seconds)
    (50/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.189063931 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077438926 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116814936 seconds)
    (53/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.165095368 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110866006 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.354144049 seconds)
    (56/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.123349638 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.145527396 seconds)
    (58/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085412984 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.144538835 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.248985341 seconds)
    (61/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084298486 seconds)
    (62/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.1259722 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.103836492 seconds)
    (64/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082508207 seconds)
    (65/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.133342803 seconds)
    (66/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083627883 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.107470792 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.256508114 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.211529775 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.190325233 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.106760592 seconds)
    (72/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.129763326 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129516129 seconds)
    (74/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.154045014 seconds)
    (75/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113568656 seconds)
    (76/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.186685264 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202800158 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101114224 seconds)
    (79/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.188177967 seconds)
    (80/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.138894199 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077494883 seconds)
    (82/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08378356 seconds)
    (83/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102482853 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129867668 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085392573 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112646381 seconds)
    (87/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.155491666 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107543497 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124219191 seconds)
    (90/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.104276421 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105509731 seconds)
    (92/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108198794 seconds)
    (93/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.141433458 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166271934 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148546648 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102511519 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111791612 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12770564 seconds)
    (99/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139049317 seconds)
    (100/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.143680878 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150521836 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113495209 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112914779 seconds)
    (104/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.140026033 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.101700235 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105781392 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084570063 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.14344866 seconds)
    (109/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112188879 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104050847 seconds)
    (111/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086536801 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101652365 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087034986 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102189665 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104196019 seconds)
    (116/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.103244602 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.113080671 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104528996 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135682154 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085080226 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108920001 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079082108 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.127012953 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114359552 seconds)
    (125/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080660616 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130127548 seconds)
    (127/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.104880188 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082812329 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125344444 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123694912 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150153875 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086058024 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084436327 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080608795 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136588248 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105470562 seconds)
    (137/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104138043 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.102283862 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086642711 seconds)
    (140/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080812573 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104111116 seconds)
    (142/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.104261564 seconds)
    (143/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110235278 seconds)
    (144/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109938872 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108939034 seconds)
    (146/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136356139 seconds)
    (147/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082488975 seconds)
    (148/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102020636 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077390252 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125630266 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085772062 seconds)
    (152/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078285029 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085139672 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.105108848 seconds)
    (155/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112844977 seconds)
    (156/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081965262 seconds)
    (157/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107353771 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109286348 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086021535 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081826862 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12473845 seconds)
    (162/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.107696547 seconds)
    (163/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111296472 seconds)
    (164/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086139957 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078054485 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124549159 seconds)
    (167/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079685165 seconds)
    (168/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081270766 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103298419 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131367899 seconds)
    (171/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086679353 seconds)
    (172/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143955817 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105557775 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.126988472 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078565111 seconds)
    (176/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.083616327 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103196653 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126719792 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079171551 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104581342 seconds)
    (181/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.136856088 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125274221 seconds)
    (183/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078002132 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078987008 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081599786 seconds)
    (186/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103221022 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085708755 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079567127 seconds)
    (189/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110037016 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.127964646 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105631437 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103797019 seconds)
  done (took 26.717754111 seconds)
done (took 27.695162458 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.207623263 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128553356 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112953427 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110520192 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.20307997 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117770419 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150052126 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114114077 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120884251 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13469195 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103049211 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123481652 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135388045 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.181242926 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113191312 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.130765701 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104071676 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12111374 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151690425 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12820471 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.203579765 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104683788 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.120931926 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128121727 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1794853 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129594121 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111959058 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112122403 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147799546 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113575474 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111859484 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128168074 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128336647 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126700475 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126005301 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112670746 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102467216 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084800365 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.137561711 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113328997 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123223948 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137083422 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112901988 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103704147 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.137806041 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112626123 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103313128 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140676226 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102487557 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113064288 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129929563 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128582201 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110695574 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126290515 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103532303 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10427703 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146517565 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105048171 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124200145 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126221009 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106979024 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104392587 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113831297 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12963884 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111292278 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102574878 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.139725785 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11547742 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11104159 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12940703 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104720501 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111923892 seconds)
done (took 10.002026446 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109937714 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148302598 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202084144 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213731162 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132123441 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143754113 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119054072 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127273569 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140531736 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12387155 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141289435 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160309055 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184802661 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.147527186 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120811072 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139870113 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116493621 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112128472 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.210190956 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1283923 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153321555 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12108634 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130188672 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147655252 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108032399 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153765079 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113063273 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115556347 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129539448 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127025073 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127908717 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131662718 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112349934 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126172974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150207531 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119301491 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119128917 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140600271 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110154336 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107977938 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141800532 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122953817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.130700468 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121859898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115789312 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146563339 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116778247 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120177179 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132645744 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117028496 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108557265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15787603 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.1207484 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125604828 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145315852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121666205 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120780296 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145182221 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113434804 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120656315 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133348415 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109729235 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109543042 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156483195 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113425614 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120782079 seconds)
  done (took 9.765953233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127895397 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137720064 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142436405 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119696064 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112739674 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126279156 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102900213 seconds)
  done (took 1.895287234 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104623881 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187902322 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211456392 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212609024 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207634855 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196048143 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152557072 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104070082 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137797618 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.140874701 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187476355 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242692336 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.137727321 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12145351 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214879646 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.1043854 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.217277244 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104367208 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117482127 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.216014918 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119852861 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160457847 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117762679 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103127368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209225647 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.1040221 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264796475 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147789426 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113701059 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116470662 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143292616 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184127559 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209844791 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117719911 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136201884 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1875165 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207663393 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117442225 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.224525946 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106784862 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208665558 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116584149 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.144488486 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119219928 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117908702 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.198179134 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122330768 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145953432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118284597 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217857883 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116163114 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212133574 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115517357 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117703259 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.13975846 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121163206 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124829617 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145559059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191611612 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147071108 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186018422 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214743236 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210096767 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214625129 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129009566 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214241206 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179851782 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142145784 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115005053 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118785599 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.215456828 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116687549 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.142619993 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176105662 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147422474 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.188185322 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213767511 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114562759 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14308326 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108796948 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115755395 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.13059548 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.179498829 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145009445 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117891087 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122567089 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144773824 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12077607 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108960356 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.154455912 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118260413 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140040893 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124751644 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118303113 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145918818 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.19266849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141215489 seconds)
  done (took 15.995442592 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108437025 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10513697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10961253 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131178001 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10685558 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105961432 seconds)
  done (took 1.705353227 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144226569 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119147537 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153238504 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120933197 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.18793766 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.193499117 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.22276344 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113413726 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160324655 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129326024 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.218216319 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19402736 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219610415 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12173305 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.223930255 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144813965 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.198896099 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141726333 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128687116 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116557803 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144963143 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123337741 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116483597 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211458907 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119718774 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146878955 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113260085 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126248868 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.155153402 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115708772 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.146969004 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141847739 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112114975 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.1385691 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.199283285 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137096492 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116519232 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121272058 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14740398 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122168055 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.223163499 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117417869 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124745631 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.149257884 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114652103 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111306612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150746167 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113262179 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22482898 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121734106 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149626226 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120639075 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119744796 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148415229 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113566949 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113610945 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.15021969 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199144402 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149566371 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113150828 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.145104315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122519708 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114111668 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148043106 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122666047 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122884842 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136502636 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121968909 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117161831 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145245405 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124185175 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12027245 seconds)
  done (took 11.423478761 seconds)
done (took 41.802777754 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.659544498 seconds)
  done (took 2.699601079 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.892441002 seconds)
  done (took 1.93234053 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.371760132 seconds)
  done (took 19.442760909 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.428900353 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474737117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.131006345 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151263767 seconds)
  done (took 3.222082625 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.821867486 seconds)
  done (took 1.885741111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284624418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261612696 seconds)
  done (took 1.587694639 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734522269 seconds)
  done (took 1.792400689 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.512586115 seconds)
  done (took 2.558758652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.286122104 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24322196 seconds)
  done (took 1.587736659 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.610955231 seconds)
  done (took 1.667444456 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.734710307 seconds)
  done (took 20.794702364 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25873588 seconds)
  done (took 1.320248495 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289466416 seconds)
  done (took 1.353797806 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.628266708 seconds)
  done (took 4.691696993 seconds)
done (took 67.588834726 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117121416 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119169647 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.141743563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.117625836 seconds)
  done (took 1.547178535 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125601568 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1192798 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147753106 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119509912 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124503431 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144327387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120221194 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120940895 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118083305 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14767137 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11995624 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117883931 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147671591 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117894882 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115898772 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147563764 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122829007 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11842462 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146308912 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120855817 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119856933 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146906655 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12294438 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121316974 seconds)
  done (took 4.139509016 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116596704 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110468378 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110875912 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135306291 seconds)
  done (took 1.540361651 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128704038 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13122307 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155823094 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127275168 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13054912 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155162752 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11899523 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115888663 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143918192 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127844287 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135476931 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157761573 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129673476 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.144976855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1305015 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113348506 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.144838743 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131618005 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12437828 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.152305195 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121129734 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124778329 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149544345 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128607774 seconds)
  done (took 4.287396588 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192518894 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130358305 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175831638 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1618028 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178256216 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.1165113 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145332362 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150921582 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12551169 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.146481661 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122687363 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16310181 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150049211 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121999782 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119841326 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15016395 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132416982 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.150145833 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167178275 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124041697 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152333389 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132219935 seconds)
  done (took 4.280461473 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123848731 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110541651 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129813221 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112640264 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123934187 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137767967 seconds)
  done (took 1.81317792 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10955014 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104533391 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103474205 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12892483 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109013543 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103819346 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127710183 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106363444 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105111341 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104502583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130040726 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104360259 seconds)
  done (took 2.405190238 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334356466 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109484485 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136188573 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113026111 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115155714 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106533935 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147891676 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109415957 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270241545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104959979 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133436218 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197703521 seconds)
  done (took 2.953284415 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201095004 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147460099 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257488541 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370049257 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188222824 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161138122 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294572198 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192110142 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177234019 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164882833 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21011508 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161808576 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179295904 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186057207 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165366828 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158504137 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188634901 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208753281 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170036457 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235628761 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158730139 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200790797 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190197767 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176016758 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140324379 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188603596 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119856049 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152495169 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169458687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190245226 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173660915 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17791362 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141486185 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215746203 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253226477 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197860801 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272468928 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134941099 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19166162 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191316486 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259077933 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168924716 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189518155 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179173085 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129355835 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21220952 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15133332 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211507501 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134723824 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172544398 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209195901 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178663414 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203049046 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135814848 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310710099 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160247851 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143076029 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1907024 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187609265 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227939066 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202907775 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125114692 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201559617 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191861301 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240403491 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167259611 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16357291 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152378965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166493082 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232677261 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208424009 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161352312 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.233864459 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156308874 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174025148 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195050103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155483576 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232701492 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196992763 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12131485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149507437 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163472047 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126201794 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214921346 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1248367 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241876012 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132972063 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344233759 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211239616 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155918489 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189244018 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159333099 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192291423 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146878047 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128924201 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143814806 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187974087 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158597106 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153087802 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157198035 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139420595 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152813742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150792864 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149096736 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169251694 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159459798 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163605951 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194497727 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133810797 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206184024 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148915525 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189889732 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167726008 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221628049 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13245303 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161732629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245460041 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170217664 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162220566 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177296972 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224087204 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149012652 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162212017 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164258244 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220836486 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142526629 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227089668 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164542859 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1367414 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162796775 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173110068 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187891889 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154399228 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126714527 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193113832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216603454 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126436726 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166505259 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181816398 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160370812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125427655 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135698996 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163267647 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142690556 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176192213 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139667574 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178355782 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168259479 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189924207 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157280397 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16102196 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173365756 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158523589 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168867214 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17458127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121053671 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199192798 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198000967 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157352177 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180756339 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190019552 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211899383 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172686244 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156968502 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183070605 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154717445 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122770072 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160397073 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198380114 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189437373 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188712329 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209600523 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194310984 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163616787 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176023804 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195469208 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186215012 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183845209 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144407712 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199585418 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168347412 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.14751137 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127646268 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127662261 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1646438 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130781075 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13765905 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205001856 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19078577 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207345935 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169337113 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165702988 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1935492 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152322196 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161331309 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202049699 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139814663 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216526637 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189590744 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206189838 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168007423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165189866 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121022374 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15687974 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134381764 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190203703 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138068609 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161940647 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144124555 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218177601 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171238883 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175206748 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220292905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165006559 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229324529 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120487386 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190458619 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169289781 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195893734 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183179196 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161689075 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161888856 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220773443 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141153668 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221046497 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16710378 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207164444 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223143499 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164214721 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159597991 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14905345 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188497945 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138802161 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18999166 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146713496 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128908165 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180175236 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13734176 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169958692 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21191558 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145045438 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206002127 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158828648 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200465621 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125600201 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170716686 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176187036 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173316948 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105960478 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196962294 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195218929 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178606252 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154628844 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200910529 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130684341 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345517347 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213197261 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178077852 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162775931 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140744479 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198596367 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164162692 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189585311 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186969952 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168652927 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205589186 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196961703 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143595854 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161153376 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149448112 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178741611 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13926747 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180939794 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162492114 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172371508 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212540563 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138876524 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16848226 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204860684 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14453808 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177946784 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138506123 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251559477 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195496278 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172336015 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193255005 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16637255 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211858711 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123720823 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155330457 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133599466 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212487946 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132402675 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205051112 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.172173013 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215614581 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204152728 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162624187 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169972922 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127727129 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193276925 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150692739 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216553204 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136583235 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.167417367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187625056 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156077714 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13109027 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189246613 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271689421 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175262364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172505517 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.13451058 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271746219 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158366517 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133833578 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191553636 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169988861 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161611752 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183630536 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20298216 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144089458 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18885405 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136770322 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207638484 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187659633 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196362037 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202274779 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146585024 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1911813 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160861395 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204905347 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1471977 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.17620308 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159383301 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223612406 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179908023 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.16095076 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16958046 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198310536 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170006143 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202624819 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166681011 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182908679 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127001613 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195134243 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137140223 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154544443 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162124244 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199091752 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157431431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178821631 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198897651 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131847941 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126569324 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175932047 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164968376 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169005289 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129283385 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213406437 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129412302 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210433328 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234876307 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131890195 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166455038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175456602 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12952194 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167623129 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145063461 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160377135 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175666196 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182971394 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160733113 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175930231 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194044231 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191458965 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158602296 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172116634 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.33105884 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128388834 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219494445 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14866387 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226824968 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17924191 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176169486 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19902238 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150184725 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19410633 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147572347 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249790596 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165849963 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19706605 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131807294 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171846539 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140432262 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162175555 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155401085 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195034298 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143383146 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13580636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196764524 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145393159 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176512265 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142970106 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22962709 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149889076 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21598704 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217894317 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138766416 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203928889 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176086082 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158385455 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163771156 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200232702 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145268054 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181932334 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134448983 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165832828 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213681052 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.155555411 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161557736 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201975679 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169970495 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201430071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136524962 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206762452 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14192257 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204602925 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128704428 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181889047 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173304999 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161945876 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130031668 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171199688 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187820011 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.191494969 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145393202 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175478803 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226057143 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124456605 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16107928 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273350577 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190368388 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221597615 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138525803 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13797028 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175001667 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158791344 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194842923 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171430504 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159725241 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131896949 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172926336 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159142636 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144394087 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197864273 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162688428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215235813 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13615103 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282205971 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143475356 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197383402 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118550757 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129662958 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168604399 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137547149 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141024962 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214153521 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242152587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.189184415 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150021645 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136176098 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155912691 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132218781 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191406063 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153348436 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195011596 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149813058 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103920152 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170265902 seconds)
  done (took 86.633468677 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163322759 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15600568 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170698051 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224020504 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197368764 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293518677 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231758007 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247838286 seconds)
  done (took 2.837536214 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121296118 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161493095 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143614786 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145407162 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11122321 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.446899868 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158914504 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123545524 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162715634 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153099654 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.1372291 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.53459823 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118170641 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144928861 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12308641 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137094322 seconds)
  done (took 4.073103432 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.697360397 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.556045173 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.073600099 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.298650596 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.263765342 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.204024237 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.76174739 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.198092343 seconds)
  done (took 12.211224339 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.156150156 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148845486 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.419243388 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.752024802 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.206084113 seconds)
  done (took 2.845530295 seconds)
done (took 132.616514842 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124898432 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124492174 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123015833 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154263785 seconds)
  done (took 1.680639731 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176967638 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090835054 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093248891 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117551512 seconds)
  done (took 1.644682398 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428150444 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09066806 seconds)
  done (took 1.710588227 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154167966 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136539361 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167024513 seconds)
  done (took 1.636943653 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14105416 seconds)
  done (took 1.306481296 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131332843 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128480545 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.23164356 seconds)
  done (took 1.663123293 seconds)
done (took 10.811398987 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12491496 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925516348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435058108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134234787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711906816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429460213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421285692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177121932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176917013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139963215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133714377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688975306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436053315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.87518383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.421084676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.875534313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696688361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111640832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14667814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112619232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.428523273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111449879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112276004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111862487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721147911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419799483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109530542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.922692812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109833575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141716605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.401608194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110796676 seconds)
  done (took 21.029962176 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119562978 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167077284 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146626437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11399322 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113892246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140130444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124607728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125045819 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206189384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110234061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162217841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111510773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115839671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14067104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13573542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110165819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143123571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114144574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119476575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141954796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133915857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109793512 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.14196529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114828273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110682693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161317886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111724105 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123744254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140648874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114824064 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116736848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142193089 seconds)
  done (took 5.361091447 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159100392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176787763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149389245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149233685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187685791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114207412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225697863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150660534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20672533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114920772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132262355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14094331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150772522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11183775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166976587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111386897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14102829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115902206 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119393475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14103774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135376319 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109781584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140368123 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114601081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112036168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162905647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113077079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123908393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138875416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115832012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115971026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140770207 seconds)
  done (took 5.662712629 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127425676 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125733772 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134104996 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164344278 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121153587 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123506794 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154540825 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121480864 seconds)
  done (took 2.246782216 seconds)
done (took 35.468458632 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136917407 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130868664 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131342823 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157798982 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.189889753 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147979401 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129294964 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118680817 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154906866 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134043226 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110747681 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.147500367 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133417629 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121662043 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.221698824 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128064784 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.227363417 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.191636146 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.149269202 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127114494 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12048169 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.225741803 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124419995 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.149001896 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.193471563 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113138583 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216520934 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120688097 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151504564 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113536272 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.223536275 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124891594 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119693376 seconds)
  done (took 6.154687474 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.210987634 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.122309653 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149800935 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12130018 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121805099 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149777328 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.212135726 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148777401 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121618454 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120436462 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119173437 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223812264 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125286179 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145947009 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12279439 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109380847 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.24209157 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122906413 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.11050387 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.124012734 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116673001 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119854269 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254640726 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.11572941 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.149430953 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122247331 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123694376 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.125203658 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151941814 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122710514 seconds)
  done (took 5.513607619 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12719409 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133208039 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166232851 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189824418 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148965512 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162182456 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140638002 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135591863 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172082691 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115056274 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129060444 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180327602 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13209839 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123411763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149199264 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13334252 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136557398 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14630727 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123277058 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131289652 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165000775 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132834746 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138247524 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153013802 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113773391 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121475072 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155503799 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12865286 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122742911 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159844388 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116592908 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11820047 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.146933991 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150313231 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115704175 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158110795 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140436121 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126496681 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158926103 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147407727 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.146843192 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119053752 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139866163 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.196437057 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117654528 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127551607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.155028394 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132105292 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113674571 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13342616 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18775668 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113977752 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.164859295 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114644323 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112431799 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122757609 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147145268 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117745612 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128910293 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147384979 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140581385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121384734 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155946719 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117387504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124795466 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.143839138 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115024548 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118571767 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169107939 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124209882 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150599663 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.143322508 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127998647 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127048336 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.153524937 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12829653 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113940968 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124897219 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156033982 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120903369 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128136471 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147281034 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118996768 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131184651 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165988951 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129837553 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125426159 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15827553 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119167036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116214856 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161868609 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116883822 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118816001 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156884018 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116554911 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118103763 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155929312 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128524552 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111689021 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168920059 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120538966 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113990264 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138736453 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149117376 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120390035 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124083997 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186599122 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11574491 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125070685 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.159901436 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11488383 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122579211 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14876432 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.1149442 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131992443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.161957499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121845162 seconds)
  done (took 17.222484177 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.324860705 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.276402357 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216640609 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.246430673 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127660678 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.240616035 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.303887969 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.308447485 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114990893 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185592151 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167908319 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.27607403 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145703552 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145608843 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31016868 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.362876668 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176481726 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153918554 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181884667 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129537587 seconds)
  done (took 5.59778128 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141107462 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150085929 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16747811 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143610284 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125852876 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162285119 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11459843 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137908656 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156949571 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124733253 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116964112 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16314927 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128303035 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13124972 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160685984 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146707496 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12295644 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151343076 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139376548 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119736507 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133376076 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141207631 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.152804386 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.139496352 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133864807 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154884105 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.116250394 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121319236 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12209967 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15476524 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12016334 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.162659425 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125007953 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109564528 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12695128 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160995848 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122276556 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118128365 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.148954989 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120170494 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131011693 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.158203641 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12497075 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099946077 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133735193 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.138463914 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.131600273 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128238342 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106837431 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.165465369 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128144685 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128957067 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153014293 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138648389 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121299659 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162245112 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127455292 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129335342 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151863843 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114741564 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11304975 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.148776264 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.126091121 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129979116 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.157180451 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136777417 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132284289 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.146190661 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120894936 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119476032 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.148496338 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.131329497 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136208521 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.154458737 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.124419917 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126885707 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.153440579 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096423373 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.1242769 seconds)
  done (took 11.902740616 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145957364 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125212233 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161285559 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153004717 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12851746 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.151369024 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128903882 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135654007 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.15889763 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136997714 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131096883 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.157789134 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.138972875 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125826666 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125360387 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162076014 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12836961 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182598377 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135686937 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142269068 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161421153 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120993306 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127810706 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156771636 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144739678 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126165132 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173361087 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131271383 seconds)
  done (took 5.216881059 seconds)
done (took 52.788525256 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.337982391 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.542575358 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.305573889 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.305535726 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.307292814 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.342694219 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.306142306 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.306594293 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.84783777 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.276152759 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.306982366 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.304028403 seconds)
done (took 29.692708148 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.411053323 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.874538964 seconds)
    (2/2) benchmarking "String"...
    done (took 1.601527283 seconds)
  done (took 4.672980677 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.300480282 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.299210544 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.542421547 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.29524464 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.296450634 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.297725421 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.298645294 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.295192769 seconds)
  done (took 16.520742487 seconds)
done (took 27.102543497 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.358267725 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.472753408 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.528572132 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.297257589 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.302623504 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.320937422 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.295303068 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.319697617 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.305502908 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.299905704 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.710608651 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.549975052 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.310888324 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.668129352 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.301174314 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.30301207 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.319604613 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.519446593 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.300258624 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.329374469 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.276269289 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.277963191 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.338683393 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.303127182 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.307088728 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.301914915 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.338223929 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.297255166 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.482099468 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.304104521 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.333723852 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.298905107 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.349303093 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.303418299 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.31358 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.311163959 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.486516738 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.308874092 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.285263785 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.322188784 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.488493876 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.305577093 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.300404853 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.29828446 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.302483293 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.352214378 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.29965597 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.416951403 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.320751162 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.302701294 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.30595075 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.671013384 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.308224737 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.308679231 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.300211343 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.517915226 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.317257382 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.354695294 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.327141214 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.316011861 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.302042064 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.303195656 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.323116276 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.314806528 seconds)
  done (took 149.908468071 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.301796042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.307079572 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.303742795 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.365691985 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.299741512 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.303666464 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.307505085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.302624519 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.303865854 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.323709841 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.304288927 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.300415351 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.307869126 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.268568945 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.312086258 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.325536295 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.305872166 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.305452196 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.319361575 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.306949518 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.305169248 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.30540747 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.304794812 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.30464989 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.347206385 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.38191409 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.304534561 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.304438132 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.316919391 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.30654974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.344589565 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.350144202 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.933572808 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.177385393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.33180779 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.327633569 seconds)
  done (took 84.024725717 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.306253851 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.304941498 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.303945304 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307548733 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.340661776 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.30685954 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899825122 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899949363 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.286704862 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.416831387 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.712308194 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564528044 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.306772499 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400708015 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.318092724 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.303119279 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.307130581 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.324505834 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.310237469 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.330932722 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.307063651 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894003063 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.316920026 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.486646642 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.318603306 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339279234 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.701325562 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.303221946 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.310805181 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339549359 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.645329376 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.35737272 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30738887 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.660965645 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.732112644 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421068576 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.309375684 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344889905 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.310834899 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.593701966 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305324326 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.308376079 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.312987244 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958393769 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.31074262 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.901367014 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.309844501 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.283938302 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.310913392 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.306789088 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.309846424 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.230510617 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.019501063 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.310067165 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.30790813 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.311320127 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.308574492 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.307668809 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.34190803 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.215424508 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.40590288 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.309877887 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.314569592 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344724169 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.30992044 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.499467616 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.313389303 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.330793164 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.370387779 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.417653965 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893097643 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310419046 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406093607 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425787777 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.308255323 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.309314409 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.312844406 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.311278729 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.311830693 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.425623455 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.310930228 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.003997802 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.48608867 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.322504344 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.722698695 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.41385776 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.310347338 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671315074 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.312934657 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.314190696 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.025046687 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407348883 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.310365559 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.312639177 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.308447673 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.001508391 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902786722 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.561442344 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.314715782 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.814876657 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.310116366 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.17734667 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.887483298 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.986171263 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.31543473 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425258575 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.490108824 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.325021229 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.314128756 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.715062263 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.315010324 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.370367438 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.315589062 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.715129652 seconds)
  done (took 385.555798552 seconds)
done (took 620.683997067 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.205752293 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.147800226 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.295418842 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.166664877 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.141594656 seconds)
  done (took 12.166404374 seconds)
done (took 13.374569589 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513923392 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515990108 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379318716 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518144632 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349211921 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.534210752 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.496110039 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.335637354 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436951265 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.402673553 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435500764 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.367368738 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348554167 seconds)
  done (took 19.842214214 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.60936721 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.323971804 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.381884025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593828542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.359019604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607327973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.632622894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.325039002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463781681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337263629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337204741 seconds)
  done (took 19.180771434 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620624362 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.326119675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383495704 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593529749 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360845323 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.611861208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.650955641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.326696041 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463763145 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339153178 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337897299 seconds)
  done (took 19.225847458 seconds)
done (took 59.458420824 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.355402833 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.413178491 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.349650827 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.334423837 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.33213986 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.333794893 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.337194526 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.334997295 seconds)
  done (took 12.001624482 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.337061279 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.33097654 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.334315175 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.335389219 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.333425361 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.334439765 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.335335546 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.334974937 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.334071587 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.332392293 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.334763901 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.335092562 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.336183627 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.333701754 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.335252916 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.33831384 seconds)
  done (took 22.567734011 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.336097857 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.334076182 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.333960341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.334684061 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.33549974 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.335775554 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.3357442 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.335082944 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.334789713 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.335132223 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.336845198 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.336415255 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.333945835 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.335438805 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.335484956 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.338991608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.337822403 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.336201462 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.341199158 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.338503258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.335560404 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.335074554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.335048602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.335623716 seconds)
  done (took 33.275439303 seconds)
done (took 69.055083862 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.326324532 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.321483896 seconds)
  done (took 5.858297364 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.393619102 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.396198925 seconds)
  done (took 4.004425821 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.33711332 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.336255512 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.335987733 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.336367296 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.338114183 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.33694076 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.338351937 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.339003417 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.336333242 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.337878078 seconds)
  done (took 14.587968529 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.336138682 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.336871395 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.335928208 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.336209267 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.336839682 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.3382608 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.338093475 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.337115174 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.338471942 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.33642147 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.337432719 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.337372813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.33810965 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.339132287 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.335748363 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.33868916 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.338572909 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.335487188 seconds)
  done (took 25.288178068 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.353910232 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.354434582 seconds)
  done (took 3.923898631 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.465579343 seconds)
    (2/7) benchmarking "second"...
    done (took 1.378422099 seconds)
    (3/7) benchmarking "month"...
    done (took 1.441609263 seconds)
    (4/7) benchmarking "year"...
    done (took 1.43546496 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.38031726 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.358482016 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.380051556 seconds)
  done (took 11.055055104 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.339868002 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.548606589 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.677064217 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.904461575 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.340259554 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.342661138 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.270911064 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.341676594 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.345209985 seconds)
  done (took 15.32673411 seconds)
done (took 81.258335692 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.3253057 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.413143997 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.350796763 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.340653176 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.648164613 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.349737317 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.325119211 seconds)
done (took 16.970017023 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.306666823 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.30294546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.299836164 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.342003421 seconds)
  done (took 10.465682265 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.334753176 seconds)
    (2/2) benchmarking "read"...
    done (took 1.645621384 seconds)
  done (took 5.196979912 seconds)
done (took 16.8789476 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.34112889 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.339375812 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.34045366 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.340525086 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.341159594 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.340652891 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.338974552 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.34030807 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.339984944 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.339221233 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.340733383 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.339853822 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340815293 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340802861 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340589774 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341812344 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.340784162 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.340588349 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340316489 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340421498 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340758273 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.342678887 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.340147442 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.338711093 seconds)
  done (took 33.38704218 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.340901662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.339390889 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.344467336 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.339529201 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.340241243 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.341953224 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.342910103 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.342638841 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.343047394 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.34358528 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339486435 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.342877499 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.339251652 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.340833582 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340770061 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.343434078 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.338410282 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340575831 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340123848 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.342649887 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.342049065 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341350203 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.341400059 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342222228 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.342580977 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342822672 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.343832217 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342261824 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340585781 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.34306244 seconds)
  done (took 41.467250291 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.342882215 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.34325066 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.343266098 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.341221448 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.339466031 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.342045143 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.340943451 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.340579866 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.342798509 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.341700112 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.342303174 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.342496634 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.343752062 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.340941597 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.342906857 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.34274749 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.34372552 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.341791819 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.344521194 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.342637131 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.341423563 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.34057396 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.343964856 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.343430042 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.344295325 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.34294447 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.342752236 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.343266286 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.344410029 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.342257636 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.343218413 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.341855934 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.343600762 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.34395845 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.345115734 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.342536001 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.346209913 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.34474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.346563723 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.343635502 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.343699674 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.344735508 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.344332002 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.345779631 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.346115642 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.345808041 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.343718965 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.343870108 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.34532068 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.345088061 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.345023879 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.344344294 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.344607713 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.346748168 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.3455905 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.346297017 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.347678225 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.346271817 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.346681755 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.346668897 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.345141242 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.348460694 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.345064932 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.344841571 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.348181771 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.343795615 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.347033943 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.347362993 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.344910873 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.347232968 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.346520931 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.348025532 seconds)
  done (took 98.003738773 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.344893986 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345788308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.346144682 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.346697627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347703914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.344007697 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.347005007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347362689 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347572225 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.345897312 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347113466 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.347901998 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345917901 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348855762 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345419507 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.347671512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.347594845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347748806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.350203402 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350405856 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346813395 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.347014528 seconds)
  done (took 30.859297859 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.34802528 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.350184317 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.347059023 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.347213701 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.350955359 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34836767 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.347375478 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350184631 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347669294 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348997037 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348128215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347608067 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.351346294 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34652928 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347106107 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349217919 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346509438 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348188236 seconds)
  done (took 25.496713004 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.349574611 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.347053374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.346611637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348697382 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.350760981 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.347597627 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350374843 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.348215883 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.347546831 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.350385499 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.346888581 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348757532 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.345794077 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348145288 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350580213 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.349633997 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.349841425 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347803239 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348969686 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350258572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.349017399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350351898 seconds)
  done (took 30.898936849 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348553601 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348198641 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349319066 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.351418491 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.348011438 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.349522798 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.350467979 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.350514383 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.350845805 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.348846058 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349894584 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.348832799 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.349994713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349418556 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.347437455 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349310521 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.350713329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350520319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350690018 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348805105 seconds)
  done (took 28.217744351 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350003535 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3510609 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.349969153 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350476171 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351815888 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.351641238 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350304615 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.35025048 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351411655 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.350461082 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351940809 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.358165937 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350594871 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354350738 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350407046 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350253752 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351670359 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.35277466 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350071655 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350597136 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351754602 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352978864 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353138851 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350692801 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.353037445 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351188821 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353232523 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35341973 seconds)
  done (took 39.075206425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354422185 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351900415 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.350471001 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.350851592 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.35334905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.354306113 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.353904093 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.353275855 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352681445 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.353642047 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.355283326 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.354928619 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354071066 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.354351577 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354631762 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.354408613 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355814277 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.352870768 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353295525 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352188272 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.354280151 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354444178 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.353214285 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.356716623 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355672167 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.354666957 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355902715 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.353342038 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357520155 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.353605703 seconds)
  done (took 41.850930156 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.374496944 seconds)
    (2/2) benchmarking "in"...
    done (took 1.373850236 seconds)
  done (took 3.978631397 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.356716201 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355889757 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.35787574 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354834394 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.354572686 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.354592971 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.353138312 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353155311 seconds)
  done (took 12.07029125 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.34762535 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.357128001 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.355433867 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.354222194 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.355374164 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.346400018 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354183976 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.357756159 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.347906367 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.346621337 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.348600595 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.349166168 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.350685402 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351715729 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.349336821 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350216087 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.357320746 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.357121826 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.356591657 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.358541286 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355425215 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.350063283 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353931068 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.35902741 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.347737624 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.355487033 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.359268414 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.361567525 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351025093 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.35704136 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.35494934 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.357670574 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.357148869 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.358452855 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.360367446 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.356954655 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362512238 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358630237 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.359259048 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360413697 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358947723 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.358449923 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.352935509 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.356369837 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355397377 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.362635361 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.359275692 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.359130886 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.348899033 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.35272953 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.358595555 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350364127 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.360961646 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353246557 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.35653797 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363863188 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.366103626 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.352166329 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.351929751 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.36025448 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.364758104 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.362368853 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358327526 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.36217154 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356928009 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.362354074 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366670353 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.364938394 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.360956873 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.358394432 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.357949228 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372145072 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.363746581 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.36385227 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362465415 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.361092968 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354674974 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365953113 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361020121 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.366141699 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.366904849 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360584748 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.357173286 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358475398 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.355447032 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.367039356 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.362664882 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.362715128 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.351727492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361780433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.369382331 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.361705371 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.351804885 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.35724583 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.358658448 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.363799437 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.355123532 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357285446 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.364843485 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.361640183 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360465263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354299407 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.359030095 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370303391 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363943074 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.359779464 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.36935035 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355297909 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.364934252 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.370381196 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360347715 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.356052947 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.358600596 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.366820683 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.355913976 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.36170778 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.369187727 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.360581659 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368061938 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.363733625 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362243502 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.368174294 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.371041378 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.361778188 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.358765591 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.368349417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366373441 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.360338336 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.369281244 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.362501521 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.363040627 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.359354909 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.37113555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.357369085 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367897209 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358518101 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.369714441 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.362900219 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.367288886 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.359624573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.367662553 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.361007739 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.362009214 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.366836205 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.370822217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.363121241 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.373514779 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.36492866 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.364399058 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.367337953 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.369455044 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363950257 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.360635479 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.371186252 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.360098039 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368402621 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.359630447 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.368192217 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.366835804 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.367419432 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366481301 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.359198154 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363647605 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.371439403 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.365874994 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.368302019 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.373209668 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.370087482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.369029955 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.360366605 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.369215492 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.357513866 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.36251703 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.369409232 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.369655707 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.369288168 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.366191054 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.375938848 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36661591 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367341541 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.360577044 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.366838448 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.374815555 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.369002146 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.375643206 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367421223 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.368633627 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.361230623 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.362806843 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370554453 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.361056236 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.371357485 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.37199856 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376266001 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.360953967 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.371759077 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.360286333 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.371624653 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.367002629 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.378470732 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.367835453 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370568004 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361912101 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372912379 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.36388931 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373229724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.359785502 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.37107736 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.371316129 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.371413586 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368527714 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.363286493 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.369288314 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.373272693 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370332899 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369914059 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.364589616 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373003979 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.360814318 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.365978687 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.374939875 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.370578075 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.369816176 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.377663781 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368695211 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375097487 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.372888205 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.366773298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.372100753 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368503927 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.37034557 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.375087959 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.372807621 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.36854956 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.376827613 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.37208857 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.365809617 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.370327194 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.380322816 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.371440784 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.365505429 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.374698777 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.371502106 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.371107934 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.371645437 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364922471 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375028584 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.372818181 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.382342283 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.365284792 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.376446622 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.365328952 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.373527941 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.369531927 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.375723602 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.372668634 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.374683105 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379823436 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.37237673 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368191974 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.37975362 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.372570066 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.376084797 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365393871 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.376849694 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.375282154 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.374646564 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.371772694 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.371430015 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.376658598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.365012968 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.376920575 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.367714671 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382904681 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.388641579 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375969179 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.379685076 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.37898172 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.376826243 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.379110478 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.367070485 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370301972 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369771664 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.37222589 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.37181194 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.377080037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.370026245 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.379297992 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37220667 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.377056842 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.37638604 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.375834973 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.36841799 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.379120241 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.37504764 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.376295885 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.36525501 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376178524 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.370599609 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.376998894 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.376174682 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.373057609 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380845372 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.380429632 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.373989186 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.372359643 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.372226905 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.370545047 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.372743289 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.381122171 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.369523013 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.377789305 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.369052667 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.372656887 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.373663776 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.382511005 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.385888921 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.370798813 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.377662579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.377061526 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.369228029 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.371274913 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.378131364 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381322807 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.389059668 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.369353344 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.382831946 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375981735 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.37857143 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.378612369 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.378813594 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379475693 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.379654122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381939037 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.382258478 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.373352554 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.380706887 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.387810023 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.381054631 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378350328 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.369798903 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.381409978 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.390056678 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.374774785 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.377693853 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.376732871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.380961364 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.378845379 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.377965723 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.379793804 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.382042315 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38410065 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.383205228 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380731057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.379247874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.38322934 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.389960268 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383310619 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.390521679 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.375089465 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.38546482 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.378409359 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.373450028 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.376046277 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.376404509 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.383150886 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.37111391 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.384335913 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.378132571 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.3746169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.381597474 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.385896278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.372917883 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.380246406 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388596175 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.374489237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382844754 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.381896163 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.373463795 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.383134862 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.381827403 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.371565059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.375446532 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377513023 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383858325 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.375625326 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.384794146 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.373847905 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38606113 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.383073625 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.379388044 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.380561528 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.38218439 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.373314919 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.385630103 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382274235 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.392866637 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.375404566 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380611555 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.378717259 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.386935611 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.390276596 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.376154267 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384654723 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.384769567 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.376576546 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.379176019 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.386369057 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376849612 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.386879206 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.375830661 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378850747 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.376552398 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.38495335 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.38796462 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.387490117 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.377121925 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.377648505 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384943217 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.384218495 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384855307 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.381854244 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.390653472 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.376498467 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.375969093 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.385186986 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.375780167 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388500973 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378696563 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.380211656 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381462027 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.387160833 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.383451947 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383568829 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.375697158 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377427604 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.391137556 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387097627 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.379102595 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.38237305 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.386417853 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.376900776 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379321185 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.381341509 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.379268632 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.380750736 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.3879518 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.380741775 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.38125727 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.382161273 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387283147 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.389873668 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.389001022 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.378712199 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.389822406 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.393819167 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.390739016 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.379701933 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.383123369 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.38168203 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.389166209 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.390038665 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.377361774 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.392819954 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.389776998 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.388095605 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384524549 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.38713003 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.37892556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388718981 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386585553 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.38323796 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.393321424 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.383698274 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.394289878 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386488824 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.386447659 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.37940579 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.380215428 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.384025828 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.383497172 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.389155705 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386718287 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.391027407 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.386377353 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392539037 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388189933 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.38514364 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.386914511 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.379116396 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389161463 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.381011916 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.39023396 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.388657211 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.382869166 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.388718362 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387895179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379499639 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.384304169 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.391934861 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.387399451 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.380115739 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.386664718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.392567525 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.400299591 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.387398441 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382553573 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.385339621 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.392971794 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.388349271 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.391017652 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.381812249 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.396329241 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.400343091 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384714276 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.385933009 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390586113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.398332339 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.388249707 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.389170839 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.385111702 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.388538932 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.39323021 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.387634965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.393086188 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.395593393 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.385603915 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.392476886 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.382404425 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.387090248 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.392093945 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400454096 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.390785392 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.383128818 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.398142124 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.399373735 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.387035053 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.401821629 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.396778676 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.389740096 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.395956701 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383685969 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.393836462 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.385258326 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.396530561 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.391111468 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.392167585 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.390936397 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.382949218 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393874615 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.398274752 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.40123599 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.390891968 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.384605418 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.386001453 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.394768815 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392410331 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.392210395 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.392186881 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.392386891 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.392327243 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.385196145 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.402711176 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.405640814 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.398176808 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.392161221 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.391042255 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.391059626 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.394627124 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388032176 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.396113864 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.395076282 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.392979688 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.389174403 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.403461708 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.394060602 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.383920705 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.389273224 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386411996 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.397474475 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.39627457 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.409826084 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.396256257 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.397050725 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395591041 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.394171919 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388574366 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.397034125 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393639095 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.388476326 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.389590124 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395909711 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.394215199 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.394003203 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.388347365 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.395525623 seconds)
  done (took 820.782471241 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.394378182 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392637271 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39177142 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.395557975 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394440693 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393536677 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3944187 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395764139 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.393377699 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.393586554 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.396337071 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393999998 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.398204564 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.397143507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394008106 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.394142316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393707747 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394345321 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.391179899 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395124898 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.396819313 seconds)
  done (took 30.546687006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.396164953 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.393010265 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395474941 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.394744976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.396632089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.39438813 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.394829566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393935742 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.394276791 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394526629 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.395430766 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392500297 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.393624131 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.395071458 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396520045 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396889548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.3951655 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.394411767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.396487463 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396700933 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.395651684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.394751404 seconds)
  done (took 31.952993238 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.394043153 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.395420717 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.386286757 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.397125773 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.394934582 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.395288735 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.394734601 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.396505186 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.395211436 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.387477576 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.387620978 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.391583157 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.386018655 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.39642073 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.387106869 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.395846074 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.391264344 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.391205037 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.392006831 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.392609984 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.397998133 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.40339143 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.392256191 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.382025002 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.392897006 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.392162587 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.39047601 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.392642499 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.383156786 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.393936305 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.394147979 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.383467161 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.395084631 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.396201669 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.385692886 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.396218432 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.391835367 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.393068404 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.391366895 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.389119964 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.403501374 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.391798696 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.395326565 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.406885926 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.391101208 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.385279738 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.395523393 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.390809876 seconds)
  done (took 68.108432986 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.389787723 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.391147134 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.391166655 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.392409893 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.39135935 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.392244241 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.391330534 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.391066736 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.391189641 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.392463775 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.392380553 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.389538207 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.394259035 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.390308076 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.388520467 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.386547384 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.389387029 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.389213981 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.388943776 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.389138883 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.39104009 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.389278501 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.389429943 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.3882843 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387709347 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.389470668 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.388710263 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.389163368 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.389164955 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.389189059 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.387801074 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.389814616 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.386697719 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.38948323 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.388182552 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.387231481 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.387241092 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.388616383 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.387727849 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.38690576 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.388502038 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.388584811 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.387132971 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.387594937 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.386863449 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.387976722 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.387831298 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.386527809 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.388815112 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.389080356 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.386431518 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.386133239 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389495733 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.386070668 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.388414473 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.387707704 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.389372999 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.390497261 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.387043674 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.386878471 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.390168235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.388974041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.389725302 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.388162636 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.389330148 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.390109969 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.38943114 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.389163688 seconds)
  done (took 95.714364843 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39127133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.390766738 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39121358 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390899957 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390811334 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.389579516 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390718071 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.390084867 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.388458128 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.389323108 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.389349216 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.390086679 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.392394975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.391671998 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.390453744 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.391059761 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.390979651 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392397563 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393628286 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391988546 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.390873129 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.392022499 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.390969604 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.393291101 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.391275342 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.390406584 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.391139479 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.392318976 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390472879 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.390768285 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.390391921 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.392343348 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390257822 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.392995289 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.393004252 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.391308302 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.390877005 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392907381 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.391246737 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.391293874 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.389330698 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392512057 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.390416087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.3919351 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.390791824 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.392831919 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39235201 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.394224125 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.392374396 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392745369 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.391506517 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.39272171 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394453869 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.392535184 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.393085403 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.393887686 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393957454 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.393827643 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394885081 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.393235283 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393862896 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.394694877 seconds)
  done (took 87.545941149 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394711604 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.393351436 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.393206441 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.395083275 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.392458522 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.393299158 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.395238325 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.393941743 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.393770549 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.394405236 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396724649 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.392530243 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396882644 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393204412 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.393479677 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396597662 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394982727 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.395880111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.394754411 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.395138421 seconds)
  done (took 29.14685071 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.395298469 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.395402995 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.395131657 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.394782436 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.394442034 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396408381 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.396382783 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395707817 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395035719 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39370336 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396257178 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396775523 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395170572 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394963417 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.394804764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.395307879 seconds)
  done (took 23.583911797 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.395754115 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.396718901 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.397442592 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.396264995 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.395507532 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.395268349 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.394432465 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.394037899 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.39772307 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.396859502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.39744211 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.397199818 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.396374826 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.39865737 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.394730559 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.397424979 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.397170984 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.395797348 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.395524641 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.397544728 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.396853551 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.398172808 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.398473729 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.394619576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.396607348 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.397523046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.396896538 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.397278792 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.397531006 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.396746745 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.39803625 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.398376501 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.397411429 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.39871084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.39859624 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.397380554 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.397136104 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.398113431 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.398217532 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.395823789 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.396880288 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.396816355 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.397808798 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.399297118 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.397050481 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.397516721 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.39709871 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.398310866 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.396601746 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.399238662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.399302555 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.400222399 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.396690144 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.397422383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.39560697 seconds)
  done (took 78.103584669 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397328585 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396622694 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.401458505 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.395192107 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.397896281 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.397149916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.395256313 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.398745311 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398374076 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.3947111 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397929531 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.398656921 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.396748362 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396086743 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.402098235 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.398764346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.398454751 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.401650355 seconds)
  done (took 26.425101824 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.400149658 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.39814216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.399198167 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397347803 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.397965316 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.398996722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.399143852 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.399984463 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397098979 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.398923416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396524368 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.398581477 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401005343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.397736348 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.39842499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.399677773 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.399133694 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.400171313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.397101833 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.39978084 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398905116 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398846854 seconds)
  done (took 32.034718518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.388948164 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.389299694 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.388311047 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.404125622 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.397654028 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.389746367 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.388300588 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.389161864 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.406483052 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.411534461 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.406444121 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.397648035 seconds)
  done (took 18.020292116 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399940481 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397703207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400117501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396442579 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40069849 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400958897 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398734609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401822571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400831665 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400006188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397260103 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403579823 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399614489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39774766 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398241413 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402122678 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40074601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400655864 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399650719 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403385813 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398791783 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4031637 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402287377 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397242206 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401457938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400459072 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401295688 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399852962 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399898528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400052012 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402994212 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401514916 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403408017 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401562148 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398332175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3997549 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400704964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402324492 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399529771 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402862037 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.399649624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401864577 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401569652 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400893609 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399816785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398670276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397870931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399848691 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401200392 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398138846 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401632558 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398043118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40069725 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398744975 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401193485 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401544641 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397787391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400551137 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401637735 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401539841 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401643498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400519383 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404158871 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400878164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399798042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399906527 seconds)
  done (took 93.692088149 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401289772 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401527804 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397026947 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401120215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400983252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402531441 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400260002 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402222158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401184559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402020937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403639591 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401224552 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400931666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401986751 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401637014 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401114203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401820361 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403143095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400452452 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40139804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401240113 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402201253 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400585895 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402878117 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40397872 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40194759 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402365833 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402935232 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402674638 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403136444 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405207378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401258986 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404113954 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403724092 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404645249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402602265 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402941356 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40478978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403528893 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404851145 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403506423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401017277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405713825 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404316461 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405996715 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403600605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403650645 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404475272 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406118919 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404520801 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402358257 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404299692 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403903477 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404369778 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401349594 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404364176 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403475467 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404449422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40442833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404303975 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406580018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405336458 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406954963 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405751354 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406086882 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405443205 seconds)
  done (took 93.87265118 seconds)
done (took 1916.050547499 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.561968585 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.517326953 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.395632133 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.409446608 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.392847019 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.393923189 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.403002596 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.391500852 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.394395269 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.394197793 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.394227988 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.588225221 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.426018634 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.393296546 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.397514172 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.491515639 seconds)
  done (took 28.211125159 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.42709614 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.403881767 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.515632725 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.402562489 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.425670775 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.591689881 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.460119634 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.401818332 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.574757453 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.417252026 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.399103028 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.419772789 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.401095558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.400374351 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.417528682 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.591864112 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.659789685 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.399349648 seconds)
  done (took 30.577453215 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.856627669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.390059148 seconds)
  done (took 5.517224196 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.420931587 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.401822772 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.400978905 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.399141892 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.392923196 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.401820062 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.400452094 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.3932123 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.413241055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.523951762 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.406145356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.410870232 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.398900769 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.4033044 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.410804592 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.444420211 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.567744427 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.410746317 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.408861673 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.407136094 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.400937647 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.500049631 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.443822359 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.411060035 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.529273516 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.394616488 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.40596265 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.411465418 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.518692658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.410693266 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.401503558 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.401218876 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.405165322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.371131849 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.945243362 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.395900813 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.436462858 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.410662918 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.41252699 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.555951895 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.403101465 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.410018286 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.40732079 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.941412831 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.511099558 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.521828141 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.397644599 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.416465954 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.403863159 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.469270337 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.402727061 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.405612483 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.46369039 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.215065495 seconds)
  done (took 89.220543869 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.454360285 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.394424887 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579641579 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.416530872 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.403167642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.39004424 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.392228925 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.6826361 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.394217157 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393085972 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.709375463 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.019015377 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.393608353 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.458767912 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.431851589 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.444928671 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.394737927 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.395364786 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.396069388 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.39463508 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.967287311 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.393812405 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.392354052 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.466140688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.436040575 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.934504473 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.393886384 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.403416628 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.410598927 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.392532249 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.985663991 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.396250907 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.445610027 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.394988394 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.68753794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78824044 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.752487538 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.398312781 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.41980676 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.391881085 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.416466729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929474425 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.774931243 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396328778 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.393401889 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.929190549 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.397770806 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.40603554 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.394301754 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.669601832 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.395102156 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.395869525 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.40131228 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.407441136 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.394565302 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.453603884 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.461084505 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.936570283 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391332451 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.394314462 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442141138 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.397635854 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.401092171 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39462743 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.396115109 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.768455381 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625802291 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.399758526 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.769482682 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974021731 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.39691338 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063758144 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.395138858 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.40282699 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.428391564 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.394611934 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.397237403 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934476297 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.426566366 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.391547241 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.746674965 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.401810911 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.699857701 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.412604414 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.396909773 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.97797295 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.399208355 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.444111054 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.400619441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.396927875 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.395949211 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39826784 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.686781772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.442466587 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.393614471 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.395874223 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.422844992 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394878817 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.41277729 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.398056308 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039983997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.397383462 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.396517046 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.417713217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.395870863 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.396913473 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.395334593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.401920073 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.679283887 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.394214647 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.403013735 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39817647 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.393164108 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.389094387 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.473069642 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.405181424 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.706277237 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.400385018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396687575 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.394579169 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398832409 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.415062179 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391706058 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.413213166 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.393527449 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.696275923 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.41288606 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.396601007 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.397079738 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.396096747 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40518088 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39148028 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.449491457 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.39283883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.181356738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.432917821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.393212887 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.395590532 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.398353077 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393945375 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.407651499 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.394649186 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70032126 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.683349173 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.621186053 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.395851308 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.396298009 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.201844413 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.436419761 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576055728 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.413333139 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.394167746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.677339734 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.621070913 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.396826493 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.391237999 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.399000595 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.672379998 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.406130124 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71325517 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.994842512 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.397460568 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.397754871 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.187084638 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.209053712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.398479931 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.40132473 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.691100468 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.411274202 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.395627247 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.398252875 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.398236897 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.396221242 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.397881905 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.394497687 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.396130945 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.396136086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.732977738 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.592103468 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.411591806 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.39788632 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922635666 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.422602363 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.394192094 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.399721507 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.394909187 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.396884657 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.448687381 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.400147244 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.436486259 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.399349317 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.396784831 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.948507664 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.398547963 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.398293904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.590609953 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128994113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.398030927 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.397694068 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.39808115 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.453915529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.950554451 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.426302482 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.692203472 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.405270718 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.438471646 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399196614 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.415090123 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.948589511 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399192218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415532733 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.129881011 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.399176704 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.830896933 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.395317699 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.406674802 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.045525465 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.398543632 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.400252536 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.405888108 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39795198 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.731973137 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.399584402 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.407033026 seconds)
  done (took 513.106214678 seconds)
done (took 667.897871291 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.400712224 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.395250355 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.399622791 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.400502773 seconds)
  done (took 10.869239261 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.418827345 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.405179787 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.41546125 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.403827879 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.416535203 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.405768429 seconds)
  done (took 9.740067759 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.396668011 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.40026439 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.398986889 seconds)
  done (took 8.471037929 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.600706621 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.414451307 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.756191483 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.409898523 seconds)
  done (took 9.45588501 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.418266616 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.416059733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.420782459 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.418337617 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.419875094 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.417811105 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.420867529 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.419633063 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.417765001 seconds)
  done (took 14.041625569 seconds)
done (took 53.851584905 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.440435499 seconds)
    (2/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388090998 seconds)
    (3/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.435172746 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.700416445 seconds)
    (5/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.547950159 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.380085056 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.551885291 seconds)
    (8/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.433178837 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.468678588 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.386891876 seconds)
    (11/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.55522847 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.436080478 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.379372251 seconds)
    (14/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.568631721 seconds)
    (15/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.434920914 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.40436058 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.397611585 seconds)
    (18/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.521108507 seconds)
    (19/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.394918078 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.638981595 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.431425672 seconds)
    (22/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.633113362 seconds)
    (23/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.747426783 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.637549869 seconds)
    (25/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.466143117 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.484968192 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.40062846 seconds)
    (28/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.397919789 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.376103909 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.407932453 seconds)
    (31/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.439856481 seconds)
    (32/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.473631337 seconds)
    (33/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.610378179 seconds)
    (34/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.384716858 seconds)
    (35/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.47043304 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.648604513 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.487888591 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.495032196 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.499353711 seconds)
    (40/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.385057987 seconds)
    (41/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.459382073 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.520513067 seconds)
    (43/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.38271978 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.482168724 seconds)
    (45/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.382196647 seconds)
    (46/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.56872828 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.510820492 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.386434812 seconds)
    (49/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.401014831 seconds)
    (50/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.382851905 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.378185874 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.449686041 seconds)
    (53/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.515977122 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.443860404 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.471191096 seconds)
    (56/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.563290286 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.512312928 seconds)
    (58/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.414218486 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.607315529 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.826947977 seconds)
    (61/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.624131693 seconds)
    (62/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.755198251 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.563531985 seconds)
    (64/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.563817568 seconds)
    (65/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.480560062 seconds)
    (66/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.57189401 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.705274444 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.384774811 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.640246176 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.569576548 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.539965795 seconds)
    (72/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.505688427 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.514251329 seconds)
    (74/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.420612085 seconds)
    (75/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.488389992 seconds)
    (76/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.596432264 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.641871101 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.472765425 seconds)
    (79/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.656725019 seconds)
    (80/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.527183747 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.48016217 seconds)
    (82/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.712831485 seconds)
    (83/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.435154332 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.49912982 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.596104405 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.531625984 seconds)
    (87/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.405864264 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.511009972 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.493542122 seconds)
    (90/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.565635184 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.511023435 seconds)
    (92/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.514358247 seconds)
    (93/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.431942232 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.701150816 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.534310513 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.52214358 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.443988536 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.645266643 seconds)
    (99/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.504438859 seconds)
    (100/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.49165284 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.485284685 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.439161037 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.552785265 seconds)
    (104/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.617259659 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.385903482 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.538886996 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.54142671 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.556174111 seconds)
    (109/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.448907073 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.533790966 seconds)
    (111/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.387373069 seconds)
    (112/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.386341376 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.424665009 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.516667742 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.648303921 seconds)
    (116/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.438733878 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.449117123 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.406244203 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.449800314 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.612569354 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.488115899 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.469865794 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.5514821 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.489037318 seconds)
    (125/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.502729339 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.48926678 seconds)
    (127/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.387464828 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.551507026 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.546026704 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.50046018 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.563244781 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.630125559 seconds)
    (133/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.715585109 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.567705205 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.477671018 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.562803986 seconds)
    (137/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.413810286 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.391238942 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.62919931 seconds)
    (140/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.478604617 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.40831233 seconds)
    (142/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.653507996 seconds)
    (143/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.428430707 seconds)
    (144/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.434681309 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.439805154 seconds)
    (146/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.452439737 seconds)
    (147/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.635994403 seconds)
    (148/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.467362998 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.388128156 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.542132817 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.570869893 seconds)
    (152/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.38823884 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.392363514 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.692236502 seconds)
    (155/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.452527965 seconds)
    (156/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.571615432 seconds)
    (157/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.591193733 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.564044462 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.827350117 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.410554965 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.517100092 seconds)
    (162/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.522812876 seconds)
    (163/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.4484831 seconds)
    (164/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.420231534 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.596017051 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.496988436 seconds)
    (167/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.492404098 seconds)
    (168/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.498085834 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.50969272 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.516735206 seconds)
    (171/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.40845507 seconds)
    (172/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.654740191 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.412193345 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.531991816 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.389937217 seconds)
    (176/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.61440824 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.563733482 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.587907465 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.389624327 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.407712273 seconds)
    (181/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.485361499 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.608450253 seconds)
    (183/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.390632278 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.539146424 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.641839931 seconds)
    (186/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.512990176 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.652667419 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.395120193 seconds)
    (189/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.44455085 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.515803789 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.565001814 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.515864252 seconds)
  done (took 338.827483872 seconds)
done (took 340.10352791 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441519553 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.511720269 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.422070204 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.422626521 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.42349437 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.407450496 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.440784902 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.425463215 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.436158182 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.435429649 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.407384151 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.425971798 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.436084958 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.432952691 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.455886372 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.424087011 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.422281607 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.432559997 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.435048132 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.438427005 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422904686 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.424640926 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.447513795 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.421845798 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431012395 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432492469 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.42836214 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.418738893 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.42557074 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.435375944 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.426414656 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.425841282 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.439861387 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.433834689 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424001661 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.432984597 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422326539 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.515691569 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.443843865 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.433527704 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.43224579 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.440272413 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.427873697 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.429528274 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.434612222 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.451999677 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430942192 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.437329079 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.42864506 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.409799831 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445875043 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.435406671 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.433028973 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.411541299 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.416045018 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.441801877 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.435092442 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44532922 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.433467512 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427993369 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.461436681 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445987861 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.436806839 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434177691 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.433864195 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.44080096 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.433792836 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.441434579 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.430566962 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.42789695 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427766773 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.434327623 seconds)
done (took 112.546736979 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.548538504 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.422112733 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.584291904 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.433199036 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.589284574 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.550629769 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.431901003 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.43330628 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.433503288 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.22518724 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.432134507 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.433973448 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.422456688 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.433093522 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.546592102 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.432868485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.431510374 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.122745399 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.434279454 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.563127437 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.422542663 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.435251323 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.435242956 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.232036613 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.423269399 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.419108624 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.564932223 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.434649441 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.134795637 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.417329155 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.422382074 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.134873558 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.566925593 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.453573247 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.441842264 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.444077302 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.591745858 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.437037862 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.549677297 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.55034117 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.584322904 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.472694658 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.41830219 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.425521808 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.437692316 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.434904979 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.434454769 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.462260708 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.423568306 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.436349057 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.127016413 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.445448575 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.435685795 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.436170595 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.436261693 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.465582706 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.437802276 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.435615552 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.568715785 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.434833495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.553314752 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.236835986 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.230417543 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.437691506 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.422767227 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.438879084 seconds)
  done (took 114.780238227 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.498029565 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.501919049 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.536220774 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.428321058 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.477880782 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.538230208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.429181628 seconds)
  done (took 11.701243315 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.434588905 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.436008974 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.477037785 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.476849375 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.437573966 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.602350332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438183621 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.440104057 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.437592038 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.479368471 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.439045016 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438657407 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.446761391 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.428221151 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.477353662 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.44087043 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.547129575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.430204542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.437048297 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.582582542 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.434879875 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.446557571 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.478683267 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.440664564 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.440861719 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.436155147 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.212504852 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439251193 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.438613687 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.440291671 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.438719306 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.49582131 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.441374406 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.427270522 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.440576337 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.545419113 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.440329471 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.439915012 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.439810513 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.431889151 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.439700746 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.440132058 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.441094461 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.440579158 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.437505777 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.45206613 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.436872807 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.435719492 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.438835656 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436666372 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.482959884 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426604978 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.426022491 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.425120276 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.470617133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.434883783 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426539258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.426141021 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42635362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426541371 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.570404451 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.461987373 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.429149482 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.465171282 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427350954 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426960918 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.426264289 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.426183801 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507454676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.424886129 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.46687364 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.427294501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.599866336 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.443476724 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428813327 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.422203285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.420528199 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425569858 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.415844036 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.421391073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.423690413 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.415620674 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.42164922 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.423696001 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.423910398 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.570259901 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.520747721 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.420019907 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.425614884 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.420302765 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.423140283 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.465426703 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.415479714 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.416570419 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458524972 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.529369493 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.460111073 seconds)
  done (took 146.814604815 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.423355527 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.414971271 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.408368811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.431324454 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.406611177 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.405022233 seconds)
  done (took 9.772439069 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.407078615 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.411809779 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.410719048 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.41111039 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.412285993 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.412291856 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.41160899 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.406202152 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.409791769 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.408339842 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.408105716 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.408031258 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.409242255 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.409204024 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.407621274 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.404764875 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.402771208 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403719436 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.406599495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404394536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.392609125 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.404806646 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401546287 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.39268502 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.401787737 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.400612499 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.416738337 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.400934178 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.403436445 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.395381857 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400187185 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.398330719 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.390745359 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.39273322 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.400109117 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.391207888 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395832231 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.395816345 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.393099503 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.396859449 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.39472244 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394995357 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.396388658 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394100387 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.384784099 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386460739 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.395684137 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407329238 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.393118219 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.393266419 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392815653 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.389369247 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.390681531 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.390205226 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383684381 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383487224 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.393686355 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390922308 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387182714 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.380511923 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389259021 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387447497 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379931842 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.389521835 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387702564 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.385800106 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37759547 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387657469 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386292939 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.386086995 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386772348 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.386572455 seconds)
  done (took 102.867344318 seconds)
done (took 387.223768656 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.729575269 seconds)
  done (took 3.984524613 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.649234812 seconds)
  done (took 3.905638838 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.92685054 seconds)
  done (took 22.436001841 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.455483195 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.362090361 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.366853917 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.362607603 seconds)
  done (took 10.797352091 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.615586039 seconds)
  done (took 3.859482942 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.36885929 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.368173863 seconds)
  done (took 5.989604591 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.537834704 seconds)
  done (took 3.783565673 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.561423592 seconds)
  done (took 3.8072378 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.378022271 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.370269283 seconds)
  done (took 5.994523871 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.334964797 seconds)
  done (took 3.577843683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.108204829 seconds)
  done (took 20.348740544 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.381965843 seconds)
  done (took 3.625277055 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.393145042 seconds)
  done (took 3.633348492 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.781177678 seconds)
  done (took 6.021936817 seconds)
done (took 103.021814312 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.351004557 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.352784874 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346345518 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.34275718 seconds)
  done (took 10.623939132 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.422581541 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.425720365 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.436527008 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420610063 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.418564797 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427508557 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.385737733 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381842654 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.415838048 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417847031 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.423942115 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41427487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.424692465 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.387204944 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.412708343 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.431517015 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.413757961 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.433742618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380841571 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417812332 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.358956934 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414081257 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.410303831 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.358255186 seconds)
  done (took 35.072728894 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.871825421 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.415841909 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.50329803 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.398155017 seconds)
  done (took 7.416544045 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.463194701 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.464347924 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480909287 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.517584521 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.543086401 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.472925325 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38379097 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.382696554 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.365070429 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.460539709 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.540642487 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.458589223 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.676941075 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.35916411 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.672092634 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.359800102 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.357016597 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.459804222 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.513036658 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.539539205 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.357071196 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459000601 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.465287975 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.461837762 seconds)
  done (took 36.44113739 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.368444284 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.377180015 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.360234612 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371389472 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.356215208 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.359889063 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.359021342 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.364822352 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.356622006 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.359590201 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.361973014 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.372847443 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.358340415 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.360830035 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.368214097 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.358657189 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.363748084 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.363268863 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.367359848 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.35651109 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.356528 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.364809061 seconds)
  done (took 31.215272856 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.344090827 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.346061232 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697544634 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595567031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.345505139 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.345126573 seconds)
  done (took 13.90100399 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.416488552 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.555204285 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.355313772 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.682298643 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.770567321 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356806899 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.351198869 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.587515257 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.869722364 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.86116943 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.399864986 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416101655 seconds)
  done (took 19.852093782 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.355550229 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.352687097 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.360247157 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.367915581 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.400775007 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.358089362 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.356731142 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.340849883 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407656486 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.414343256 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.357608823 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.40278434 seconds)
  done (took 21.711644051 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437845837 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354729248 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368561949 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361415218 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352029699 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355475265 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37724565 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.041733906 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.356481984 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633556726 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356434715 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442625297 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59813481 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355775734 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358426585 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.324143286 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586702593 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848512974 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355864849 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363169512 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392029802 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372395811 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362225188 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.562317388 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356153696 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351378768 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624360965 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353575326 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63721583 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617376356 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613778669 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357075219 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632375014 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988153444 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463996654 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558615261 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365764265 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357669981 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.336756668 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.359466319 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379206267 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365518871 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614355397 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357561874 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357251361 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363367383 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054734241 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.366551981 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.354195859 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359204681 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618659554 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441305203 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.364174626 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357448023 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380249685 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358614135 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.367162084 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476023474 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997378063 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357093995 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366188674 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.363018785 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36963797 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357839266 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03221671 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.368966185 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36509537 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36309729 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355161098 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364273571 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381555269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354992991 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.385232309 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360120522 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134843858 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359705892 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365166763 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904412895 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374511169 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.35921821 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578481553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352005974 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352914476 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.354997306 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35502508 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077792058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368502979 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.3298795 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414654054 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038317022 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.555086038 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370461962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383056064 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574549092 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.324554413 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353384082 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.348584834 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36467112 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368191363 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044226049 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35366727 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360502314 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600910115 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.56402175 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362752999 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.314917481 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820911681 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354347754 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.382754558 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36014455 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561029645 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.974989433 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621402653 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352111386 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384563078 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354568506 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137687784 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360560502 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.362073148 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353781929 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633038661 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.175357557 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355674807 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421957515 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354922063 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354657621 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364123129 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357598543 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356664146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.532370096 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356885165 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635284223 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.353148039 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351880954 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.352644564 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359053618 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.352006071 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579722404 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360202535 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629579905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352305021 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356004107 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352507776 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.571182772 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.353490823 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.359822264 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698388762 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368685456 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374867621 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624642708 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382044049 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465712142 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390653108 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.369432844 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605480273 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.363278466 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.359125824 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364307273 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361349874 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359831853 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.361508897 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365206451 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979931062 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339005383 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360659447 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359577331 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371113574 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429299681 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365611062 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562493516 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.365998899 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358707527 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.363676207 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.371440608 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584943685 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623689143 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361643225 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53715697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.82779152 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981401637 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380538407 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.360429467 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.362171543 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.361052562 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361892974 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368707132 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363603249 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569837358 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623859191 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369873912 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991993695 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368510138 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36859467 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.370431321 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621945171 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.370750105 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365512131 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.368432098 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388158558 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377456589 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625584811 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584114639 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.380487703 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362291451 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882655387 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371162481 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366741402 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367706584 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39048174 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370948717 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196043881 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702829822 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366769378 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620664384 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364826303 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.386926346 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.365557869 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366464838 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361389536 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.385569846 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387418988 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.571250572 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367378583 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382009844 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005494663 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154385645 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935080587 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37322196 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.366185573 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366319707 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.066483091 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362761498 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367261685 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61194473 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06121546 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361520464 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831135187 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.372721979 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102794862 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625141994 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592929064 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378442423 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.368382577 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63328741 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578937699 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398086088 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37211779 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371151165 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.33536766 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914084618 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363853289 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542764221 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065003129 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363823074 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373591782 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.424743422 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366098382 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743931216 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364255458 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372964386 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36643051 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380984679 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200747001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372876763 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371913514 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029978646 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371070219 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.834626682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366349389 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573764775 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62619859 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.604277625 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.37657303 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.372102707 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.61356491 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629249644 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370385697 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376959259 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948184648 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.228163789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.37937992 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375667178 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158176914 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377224953 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655811694 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.373805173 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398107349 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370873327 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369627354 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372516452 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.371085391 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380031867 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349577242 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86217103 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.380423818 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363989558 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378929974 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373441303 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623923655 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390617553 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003766491 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601098155 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372823692 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402445516 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.381932062 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381293353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.341675938 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374439752 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37584153 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41542315 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590359537 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375824289 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.344755768 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384737039 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580786628 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375519192 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380552125 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592233508 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.373089466 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.39625034 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174592629 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402449713 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377426523 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377094254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378978893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406717362 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448571706 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577437391 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.635221235 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633142329 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749199348 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370118642 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378656523 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.393203136 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457827344 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375637772 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.390385299 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.367750156 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999177731 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163175073 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006670477 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635552884 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376120184 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384021277 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377414006 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613859722 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374967987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652998233 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3751669 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.371575019 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394987348 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380305507 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390734183 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58666022 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65132005 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376540649 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377241086 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377328329 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.377490421 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638472045 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.59228429 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873698779 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929228936 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378214457 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379786944 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073965678 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650090906 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373876697 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376875514 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378264331 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.383445911 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388047753 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.385433044 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38750361 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598227894 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63863471 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010649155 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631360375 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.552423377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.311665402 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378416952 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62794936 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208831888 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577089136 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012779384 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111058153 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633467193 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452243672 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581979131 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.377583499 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615663285 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.382519159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378586322 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37897411 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379112498 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.376790973 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.634388823 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011377229 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63181338 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.38254775 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.377875869 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411068639 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.582050599 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602242235 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108219977 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601912456 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637543997 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385957699 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379303658 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019418942 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641139409 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377503312 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.378557701 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596450907 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37735629 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417931167 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.250297614 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.375524729 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932733254 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.594299889 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401955924 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38285243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119385862 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016235282 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.393187343 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878875536 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384384734 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382443582 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660835681 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.38513908 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379031376 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66356479 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.387285232 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392285654 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584062095 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.00735694 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119924001 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.384409145 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377598697 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.39856382 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380356329 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420959415 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379333725 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376603267 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.760040794 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377412073 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382129052 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39080332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.389289897 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381247777 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.383731354 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382194736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385594854 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.380909099 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.365203219 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385059773 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505219119 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926867928 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380345923 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.004184838 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.715515819 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630485989 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387783145 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.35507581 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.389944783 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381151408 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384114144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378858876 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37374659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934057154 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.387635246 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.64472746 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391683502 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.595449167 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595970617 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393037805 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584749948 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387014213 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405112228 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.353805395 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384331056 seconds)
  done (took 977.941679059 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.386821346 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.395829235 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.394456224 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.438495328 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38905582 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382883477 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.382333447 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436291791 seconds)
  done (took 20.463034625 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.37543773 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.386350222 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.379558488 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.388036539 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.37581991 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.913469265 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.373665991 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.381991866 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.402113119 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.382087596 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.377032632 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.045130843 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.381639396 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.377004771 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.386098414 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.388659731 seconds)
  done (took 32.572704661 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.057858507 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.379437176 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.84843482 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.391333503 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.413453689 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.379362072 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.502358948 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.370061432 seconds)
  done (took 25.604562835 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.390943375 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.390855286 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.391200996 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.390856061 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.392164426 seconds)
  done (took 8.215989472 seconds)
done (took 1242.272391388 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.396333969 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.39545233 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.393180557 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.395100674 seconds)
  done (took 6.840894232 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.358624717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.35467516 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.358662882 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.372884048 seconds)
  done (took 9.707382038 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.0549719 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.893898978 seconds)
  done (took 5.211024768 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.94112991 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.933985921 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.93111008 seconds)
  done (took 7.07150811 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.672428197 seconds)
  done (took 2.936694452 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.36168733 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.377970887 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.114863935 seconds)
  done (took 8.115481615 seconds)
done (took 41.142924403 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391620277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.138683665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.534830038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.389148503 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.536543122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.536756708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.628833199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.386687148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.385801622 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.3820383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386393399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.53955487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.6145607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.146348181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.616935493 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.14660504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.544758711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382154058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.377034314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.374885745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.61877543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387224311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.379868501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.375390777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.556204983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.52880901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.383037905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.14075783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.383787634 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382741398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.521565997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.381234724 seconds)
  done (took 82.743384059 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39128998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.377961364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.388244807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.387638023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376408067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.385305109 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381142052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378011311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.377306628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391185716 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.379539068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394758498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.396669217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.391672529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.377560193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.378213043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.392230881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404135373 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.379173056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394725816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.379503303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.379846577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.382809155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380684806 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.384911863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.379591977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394113003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.380233306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38010028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.380663268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380563609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392731261 seconds)
  done (took 77.582034227 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.384337604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.380205635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.398033654 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.37804786 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.381033551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.379501024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.383470759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.395069705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379534723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406684769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382114818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.37907945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.380755403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.379856407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379452218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.379642954 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.380883923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380377592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.379279036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395910697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.381407546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393385077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381129145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380566048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.382867343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.384647202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394057303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.381668174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.380206844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.379845609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.388256171 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380405896 seconds)
  done (took 77.557804088 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630681724 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.399611584 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.401922668 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.396790602 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.405951445 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.400982411 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.394461491 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.631076935 seconds)
  done (took 14.929400599 seconds)
done (took 254.075403032 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.405274317 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.872739128 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421619336 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.396994524 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.414460716 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.422250299 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.610521889 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.418413209 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.614598316 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.406766153 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.410156509 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.40042094 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.17344838 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.541566305 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.201475313 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.318217923 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.255849248 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.385816321 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.937140401 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.674320745 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.420892419 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.396098405 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.196373232 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.259851868 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.377461161 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471693869 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.487306677 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.619493331 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.551739599 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.466515084 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.884810429 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.399024845 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.41035769 seconds)
  done (took 64.493407368 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.396576918 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.404070112 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.404348435 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.402674164 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.404356999 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.403511116 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.393858433 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.405277508 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.405144561 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.404055044 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.404731509 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.404547681 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.404097211 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.405059498 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.405367599 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.379063138 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.397013102 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.402319022 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.395920783 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.382489624 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.405006986 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.405627876 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.405061337 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.40488559 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.406609756 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.404545137 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.405231094 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.405936797 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.405399917 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.404762726 seconds)
  done (took 43.328542476 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.405342181 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.942036951 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.112661833 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.400132415 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.395917104 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.401364189 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.676206872 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.403080795 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.398312445 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.401644527 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.849568289 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.403469799 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434074356 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.124251838 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.4013132 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.407154171 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408824225 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.398597305 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.94551369 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409033747 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.673788156 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.409284148 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.67475826 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.410526716 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.402344493 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400180083 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.404569555 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.226645578 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.420831227 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.851356617 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.145785394 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.668109338 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.159181833 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.164586058 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.146671293 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.412812539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.410771432 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.859613068 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.403865264 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.399840853 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.674533808 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.403877766 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.125221325 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.0747277 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.418313393 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.409953016 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.259717159 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.857885448 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.631794444 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.408442941 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.158849131 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.404908713 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412270027 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.40222382 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.632945283 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.404867856 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.401194911 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.230793106 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.403496292 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.675344609 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.410792873 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.40230913 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.942783801 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.40212544 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.943018025 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.404440597 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.409824897 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.403117839 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.131183594 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406357451 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.093404747 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.418182216 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410155875 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.853704932 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.943571081 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.307931098 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.403237821 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.950954195 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.189961419 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.691916373 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.408748353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.196977601 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.695523198 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.408456825 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.414031999 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414851504 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415332718 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.480853405 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.67221144 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.015501519 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.091261181 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242271336 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.678207032 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.412762661 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.406120414 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.239655735 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.410144105 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.413472949 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.125831089 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.095303527 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.423182599 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.411798623 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.080057266 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.424061907 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.680314835 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412477457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166060847 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.408577729 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.482675942 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.414886514 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.411843173 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.410379524 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.678439026 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.409067144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414503312 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.078218808 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.881291374 seconds)
  done (took 195.175047676 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.402593706 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.39584543 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.399836343 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.394558252 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.399927927 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.409326715 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.397726389 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.401255539 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.407163404 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.400469844 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.400619807 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.411839055 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.406600062 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.39961403 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.399758954 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.396125843 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.40034172 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.401283708 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.397465811 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.402682516 seconds)
  done (took 45.304247821 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417397457 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.945876789 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.909331789 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.417507843 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415859959 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.406448161 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.461095183 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.417164767 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.416366059 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.696493039 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.571846806 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.418609503 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.4168853 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.416553706 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.910405735 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.39260436 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.695013006 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.948020789 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417603752 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948340899 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.391276997 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.418754937 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408115884 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.949279401 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.709982223 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.68162533 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.465693182 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.948299835 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417899942 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.418843422 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.949260997 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.419040718 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.40966634 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.937748694 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.419097619 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.433155001 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.41754986 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.464837886 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.466768882 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.698566438 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.955037457 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.692988568 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.430891615 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.572319196 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.419997313 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.388972437 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.956788 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.416037865 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.390177645 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420976261 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.425584764 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.926680441 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.411977059 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.925153932 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.420027913 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.418741841 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.952492297 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.928294462 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.916286848 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.572931997 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.410167803 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.683438117 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.420245211 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.961450074 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.416919516 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422153733 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.419240752 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.575114674 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954601576 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.684745113 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.70194957 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.70328052 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422918179 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.478730944 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.419180667 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.702859885 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.47590506 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.79753941 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.702997814 seconds)
  done (took 127.243530055 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.678493291 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522332722 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.778151037 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.971553187 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.9098157 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.545119462 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.523452452 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.642264547 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418162491 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.524156507 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.056353798 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.505518278 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.152243265 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.474168488 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519555144 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.536833559 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.800044158 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.357044654 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.037324603 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.024363708 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.416469438 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.528177 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.938559684 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.609396816 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.40427323 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.968656543 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.325136977 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.913176582 seconds)
  done (took 53.366400353 seconds)
done (took 530.179890379 seconds)
SAVING RESULT...
DONE!
