cset: moving following pidspec: 17125
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369652526 seconds)
loading group "string"... done (took 0.566004005 seconds)
loading group "linalg"... done (took 7.709065853 seconds)
loading group "parallel"... done (took 0.171793066 seconds)
loading group "find"... done (took 1.29573896 seconds)
loading group "tuple"... done (took 1.980126029 seconds)
loading group "dates"... done (took 1.430856442 seconds)
loading group "micro"... done (took 0.247586452 seconds)
loading group "io"... done (took 0.983359549 seconds)
loading group "scalar"... done (took 42.036678184 seconds)
loading group "sparse"... done (took 13.680734475 seconds)
loading group "broadcast"... done (took 1.039845367 seconds)
loading group "union"... done (took 14.66545655 seconds)
loading group "simd"... done (took 4.775709778 seconds)
loading group "random"... done (took 9.674420125 seconds)
loading group "problem"... done (took 2.015143594 seconds)
loading group "array"... done (took 22.6848242 seconds)
loading group "misc"... done (took 2.046289547 seconds)
loading group "sort"... done (took 3.449572291 seconds)
loading group "collection"... done (took 19.614063071 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580087515 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146034477 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149862768 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131317237 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205608067 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157258199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157394692 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099461986 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.011472349 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175242051 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153332501 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.527034244 seconds)
done (took 5.246174239 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.221373556 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096269541 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105551367 seconds)
  done (took 0.899705087 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078515854 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149149401 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096594525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080221148 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097378555 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079416135 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096300048 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07969414 seconds)
  done (took 1.38260433 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088870869 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098913935 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083016301 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099106196 seconds)
  done (took 1.074382831 seconds)
done (took 4.36591173 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742049198 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272079706 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204873752 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464996333 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201869535 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222438051 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679835602 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347782286 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.258768826 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101426851 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143432895 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386767666 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139005007 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680247864 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089900036 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124473732 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177542575 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442901183 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082619976 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110716413 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116879392 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14226871 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127991101 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09095858 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183383779 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081634134 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194469007 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108189383 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081108275 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275012087 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20253922 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681389369 seconds)
  done (took 10.906826413 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113442721 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133322027 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096979247 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138152583 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135811344 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099689474 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085135276 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096267046 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121218025 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175662993 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12955607 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121282161 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095784805 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082313295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115287886 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244494798 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119909469 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100367709 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100343774 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088572942 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137280864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112477648 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108932572 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095386237 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165587365 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221164602 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110804012 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126414604 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096734851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111785933 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143705032 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143974998 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095184229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080218457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17265393 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123713771 seconds)
  done (took 5.150428423 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.089025138 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19529965 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124841945 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173745091 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081668902 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14653477 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096820024 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116528436 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260911131 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109329853 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488227875 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143452405 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099058382 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097972146 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082570204 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098302557 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.556968328 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158318098 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134953323 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099872876 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104173092 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100347165 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363035482 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082070299 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095373277 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082761621 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083078393 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164118786 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083525119 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141809437 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122845878 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10042505 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118108123 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20758939 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129240142 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108261572 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135857087 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099434381 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079765409 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180149687 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104801154 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077578292 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098968866 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123001387 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135263928 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120414458 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101509514 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098807995 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.206952911 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096004202 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097413796 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.93953433 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182679784 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102598945 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097716905 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296703472 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118688453 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098535872 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0792332 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.284186465 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190352197 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122019349 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097305561 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082878384 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098140609 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083636789 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384570994 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100845761 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.643860882 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085122498 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108490549 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084309448 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099206862 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07790217 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108636476 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105404924 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100477024 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098931827 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082564731 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100205804 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079647003 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102150464 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109495857 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.220737358 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082606767 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100192011 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078635356 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119785927 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128666152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086389389 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097639019 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133638328 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08632873 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097659456 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137138151 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082161403 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112143817 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103045102 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144431561 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083593877 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.148768129 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09673296 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125438258 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102074637 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116677675 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111200418 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098781203 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168551651 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079829005 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097973919 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081525391 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098093071 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082806588 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101880094 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110586889 seconds)
  done (took 22.828510667 seconds)
done (took 40.674883749 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.336201709 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106413193 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107167861 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106724262 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104197803 seconds)
  done (took 1.538052738 seconds)
done (took 2.284493646 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291739642 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175480926 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095949908 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166498141 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093520491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166718095 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158826066 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094378891 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220969068 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094302121 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164014012 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076670985 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097216956 seconds)
  done (took 2.674745606 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096399823 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117863404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084282771 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113557769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07825011 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113518065 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094186378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119041382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112124063 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087486813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095368024 seconds)
  done (took 1.85865001 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097031485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115273416 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084558345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112583237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078828807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113225657 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094813094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119649936 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11441202 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088319019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096034904 seconds)
  done (took 1.859269416 seconds)
done (took 7.129293587 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094080601 seconds)
  done (took 0.835369844 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.93650115 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.792836163 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11228797 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152733505 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.308459748 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194606729 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476394573 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128067347 seconds)
  done (took 11.059792517 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.116561399 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117922326 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104863775 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087274563 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106636227 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08402189 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104466919 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102371102 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086743752 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10322889 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084601015 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102925738 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101767054 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088047835 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104573751 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086803365 seconds)
  done (took 2.397453629 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122632605 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120523543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108390073 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108811595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087377469 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105705333 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107025822 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089856152 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105250471 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106452786 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093367831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10912062 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105750075 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081786749 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108316516 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111456209 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088068804 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109545586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11017562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09287249 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109261393 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098432857 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089559447 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109303714 seconds)
  done (took 3.34251763 seconds)
done (took 18.378346906 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163690956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112200818 seconds)
  done (took 1.02686168 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099295062 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116166929 seconds)
  done (took 0.969183399 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100363739 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098608622 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126493911 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112515728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082985232 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09934134 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123239804 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0829459 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09962844 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082471185 seconds)
  done (took 1.765717008 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085503221 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.113304252 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104343938 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097869554 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.1089094 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097240284 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091545505 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10148009 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113477824 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080000275 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104698877 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117867302 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088548495 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11916307 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107710108 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085819516 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105487845 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102044988 seconds)
  done (took 2.58126407 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082811198 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100390564 seconds)
  done (took 0.940326118 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08422563 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096699264 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083615323 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101216662 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096906407 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080376465 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096193664 seconds)
  done (took 1.39596245 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.50134424 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13903919 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267614298 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104443479 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105623666 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309054405 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101134474 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086813575 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107167298 seconds)
  done (took 2.54093872 seconds)
done (took 11.972628467 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096654736 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119106661 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116246243 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471219411 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108362241 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099724018 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149414643 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256006126 seconds)
done (took 2.180773424 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.148471956 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611703133 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.432287827 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.239092845 seconds)
  done (took 2.047889878 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.413070782 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101332596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086478955 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084109721 seconds)
  done (took 1.452482742 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08270006 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102297608 seconds)
  done (took 0.950439449 seconds)
done (took 5.365619115 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083405358 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098879911 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081394837 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099649728 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.080453999 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096911539 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.11670194 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.102647449 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08177318 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102432167 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.100360178 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082446184 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098814293 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080841309 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09714586 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083374006 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096282113 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080381701 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096416609 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08035131 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10002312 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080361642 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096741528 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080437767 seconds)
  done (took 3.001424849 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103847127 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101845249 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105948977 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088923816 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105225915 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088475638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105966205 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100149017 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089570322 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104061141 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105311052 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087405618 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101975064 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088234912 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103486759 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104687346 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089092366 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101198885 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084827541 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105815482 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105591845 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083455769 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105511274 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10545303 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087812621 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104485507 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08574487 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101852707 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105594919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088386076 seconds)
  done (took 3.708171567 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089029176 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0967787 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080782562 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105250822 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080696668 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100009492 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080292332 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098426524 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081306887 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098365422 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082117516 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09834858 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079743813 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100524539 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08140777 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10253239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115496276 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081455446 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0981487 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081233844 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.1013517 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081095433 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098959833 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080477623 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097245064 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080079097 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098077283 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080000507 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098612155 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080253033 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101603281 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083037477 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098058445 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086789682 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102799903 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080093461 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102691984 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078933407 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100017281 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079707633 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.099152389 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097325918 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080257656 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104388279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081542666 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100318388 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081608208 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099184807 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081227938 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101462701 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079731654 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09748837 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082003099 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100155821 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084147336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098510908 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098671627 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081022383 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099099745 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080288351 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097421209 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080750364 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099772142 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082120708 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113914519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088757557 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098872185 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082918208 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099086987 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082558256 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100536604 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09481066 seconds)
  done (took 7.361515029 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086162281 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109212112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082964891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101519038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078732351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.10045754 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10299467 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081883997 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100221562 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087952587 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09925656 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081811815 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100963474 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110678982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082504919 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099998357 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088178056 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097338728 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081939398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104511903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081024352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104121485 seconds)
  done (took 2.84227011 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213955954 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108619196 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146926905 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110003115 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086039653 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109584327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104704869 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090383983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104938193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.198280809 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103869341 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105502958 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086763214 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1041952 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103470538 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088353183 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105164664 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088471503 seconds)
  done (took 2.837825107 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096810404 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101527411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105135589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103110617 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101509119 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086904538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10762083 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11031143 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086422245 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101787562 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092598752 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104802656 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.1035003 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085445307 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103440112 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084519196 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10480431 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083005617 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111982846 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107647529 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089737012 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112281979 seconds)
  done (took 2.964442853 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100150966 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104033296 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121770009 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087391658 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098402322 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08327184 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109293155 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084184688 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110307483 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103217592 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085003942 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10076703 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091676181 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102086054 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107081376 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084477466 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103207184 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083629458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104056629 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080112235 seconds)
  done (took 2.726226709 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106085671 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1042991 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102379577 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095282189 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103426688 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084319877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114882558 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103298349 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084569139 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128055748 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1037165 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08525958 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11240428 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109262392 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102484114 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095733004 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112484836 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112378961 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085691978 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103870105 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128787606 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085144717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113829123 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10342681 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085135885 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103625841 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10260831 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091335244 seconds)
  done (took 3.647444505 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084420608 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101598134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084928355 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099248418 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081315206 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099427513 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081801373 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098714699 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084112286 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098654285 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084528801 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100906298 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084103239 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101514047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083971273 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101871577 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084066854 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099479688 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08096638 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099311048 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084449908 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10192936 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083072329 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099665016 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080659275 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101484563 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080878364 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099964412 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083599027 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099386858 seconds)
  done (took 3.535570626 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094097009 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109990918 seconds)
  done (took 0.987472172 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082773726 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117828876 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082321944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106227681 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089261165 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104092138 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110302618 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089758435 seconds)
  done (took 1.567217276 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10022525 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113950701 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085671036 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117469762 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112445021 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100993842 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174743171 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103924837 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089483296 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100360828 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116370073 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083012611 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106779166 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083898984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.1090745 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090301529 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.10073328 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108581625 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087876668 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.104428345 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086480611 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113458786 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085923226 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100826007 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103799823 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094059813 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116434177 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085056837 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107709714 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109418304 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090551584 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096467436 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084658539 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104260866 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082254148 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11337448 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120200801 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087391384 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113383867 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103154069 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09765091 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097891603 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089580583 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109900408 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113006602 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086151327 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103264692 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080219439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10086453 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087022138 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098634788 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084833372 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097789852 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091623623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107741548 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11424703 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083828959 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105295658 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087752584 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108644449 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091230659 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107311332 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105690479 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084864144 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110556965 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09000369 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114451938 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079072449 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098972346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100235389 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095881319 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128330733 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090614573 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10626941 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104359549 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083514851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106010573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086143675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110993098 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109215936 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085961059 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110918185 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091947285 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103979919 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086705124 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113771241 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102274261 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087401 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102028395 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121333744 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083647158 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100656975 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082962954 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114273326 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087965641 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104497498 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081664164 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111002151 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096217777 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086188973 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104830625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085387352 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115951895 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109378964 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092430118 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113812052 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091583617 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105519078 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107052068 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081842758 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104459467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08753072 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11132673 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079125329 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106976207 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08579462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104847103 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112492783 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08425053 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103791881 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092935579 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11004802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083324442 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101542201 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105710256 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086202345 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10778252 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093924296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103227972 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079301165 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099878099 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106404182 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085855783 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106385245 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090936756 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107492506 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078840599 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102250339 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108524933 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095036846 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103894581 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085888197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110993896 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103859441 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085353576 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110157819 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088008898 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103060068 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091331568 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105312866 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079881644 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108087306 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105875585 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085076906 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106794525 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089352419 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106665322 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085194527 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103357331 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109922674 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086587899 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103336784 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085237916 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102472185 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096350902 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106640459 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098597745 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083018537 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111231427 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082850372 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103364905 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083860048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106511927 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085937915 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104073723 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102903593 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087954436 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116604116 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090104882 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106838614 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109626031 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097758369 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104608127 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08750241 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104366373 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085208951 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106898417 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11379957 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091520964 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11044297 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086380572 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.10268912 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109591806 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094069677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103029865 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082796263 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103539813 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089275609 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110329372 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107430285 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086883642 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102653871 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085728292 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109475337 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087449561 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10621366 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102558169 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09149941 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103579936 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093096656 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106292246 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114721915 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089607841 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099908458 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089030086 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103266532 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090852383 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100215104 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101234355 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085329059 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104867028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084732528 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107550017 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080589315 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112416046 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092576075 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105291666 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084001961 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105792461 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110661723 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087631484 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108321133 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088987275 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112362823 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115070794 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084533745 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105849546 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095400208 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104369895 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079083561 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111027816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102201242 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086327629 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103378768 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084461111 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108688653 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095236691 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113834901 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098231659 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089249224 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103417785 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085030944 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099871354 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090057195 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108176697 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085861854 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111390712 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105170466 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089047966 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10876642 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086354315 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106449278 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08677772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109076941 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10445492 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089715336 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103159888 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088865903 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103816558 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083246276 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107777884 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085643325 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105000521 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110612669 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086193475 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104013093 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089121203 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107048081 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085594765 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10629689 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085227137 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109045565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104849991 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086435799 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107633831 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0814551 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11205727 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085714947 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11317867 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085518489 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102994668 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110126105 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089083813 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110677582 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086464836 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107149778 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105456512 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086674003 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107515115 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093760407 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103377849 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098282087 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114948774 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10507745 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090493161 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10481757 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088197521 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104877832 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086688618 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10785133 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085177806 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105630687 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109502198 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088853705 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10477914 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088534657 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106709087 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085781962 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107096277 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079876404 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104687809 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08479988 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106461966 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11657778 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087174803 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108479843 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083840221 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107571662 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103728949 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083575447 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114629838 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095775123 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107558279 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112557067 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085853707 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106726932 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097768147 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099973295 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083255063 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103727136 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082484181 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.122415145 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104574959 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095981714 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105225584 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085114666 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102938208 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086236193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104980734 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079605972 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104325653 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108969041 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089758187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104192315 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086704704 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108693592 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087387402 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117185815 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10393215 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087562424 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106404849 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083182991 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104933589 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085392274 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108619504 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087361436 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10351488 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081983341 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106586137 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10527174 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088380245 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104239425 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088246698 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113096113 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085615955 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109702214 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109068019 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081513132 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107583745 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086695031 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105463505 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085266912 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110281114 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088964793 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108125496 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114875043 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086617064 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106127374 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086113255 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103847345 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085635729 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107135458 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104988014 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086199279 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106897548 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095872097 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103583468 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089447483 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10688295 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08612638 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114473768 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106867964 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090622282 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114528527 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089286902 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108432255 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113962246 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091449617 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109512097 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087314767 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10846056 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111329188 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086211171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112845967 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087737061 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107377076 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088015513 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104423265 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086715151 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107290574 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085066085 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114383246 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106634181 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086162458 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105476895 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085247478 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107067757 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090172841 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114302813 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108065614 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09100523 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100974289 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083999269 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107376544 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084302969 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108442337 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089556018 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113710879 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107723425 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087783199 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104217506 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096643609 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112931044 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089815657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105334351 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108938021 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088587648 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109117089 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087878469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106617776 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087963167 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110740921 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086573622 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106889137 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112431209 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088914439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106445662 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088088214 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107911376 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086410074 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103110742 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.1064585 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089841435 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111544632 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090340598 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107109207 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097678583 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107514631 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104218489 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092197484 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106318825 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091786736 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103034349 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087548647 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108970113 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086806651 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103316885 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104827675 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085635221 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109247177 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086283511 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101874442 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098374437 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117059787 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109458489 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086682569 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104245033 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082314045 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101427556 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08646715 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108196545 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088663901 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119165833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105233789 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086891271 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101047873 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087423966 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109981566 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090380533 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10483829 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081872872 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106578729 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0892542 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114461779 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104789379 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088285117 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11001949 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089181288 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10529659 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090565718 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104057104 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109363178 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101320248 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108214086 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088002986 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114827946 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114575732 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088659428 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102398415 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088416804 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110387821 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086378891 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109147909 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107084787 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104491499 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110947796 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085699187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106660621 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088574756 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107373404 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114879024 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089815699 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108048965 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091474634 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110670464 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116428778 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091409121 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11573259 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089582175 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111749332 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104907269 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088604379 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104426538 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086720803 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108167836 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089237263 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113193838 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115419219 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087964866 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118367534 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096514736 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113002635 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083503514 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106764946 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104907515 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083910629 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110235895 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086097437 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105137359 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08609447 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106231429 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088367783 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114370527 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087212576 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109778441 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106392233 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082082847 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108330419 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090582623 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107586925 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08456925 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107384648 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087755924 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111944671 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110742145 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08911768 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108061007 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090121911 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107307324 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083079605 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114553473 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086243759 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110652208 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085512902 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109364714 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107818844 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091730156 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113608543 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088559011 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110339705 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11853008 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090391469 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104109687 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085423522 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113997879 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084591809 seconds)
  done (took 59.932746523 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152253471 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084240018 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103494701 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083642173 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117307927 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102900706 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08325529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103972171 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083843214 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106560788 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081930208 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103370882 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112351438 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128820689 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097190857 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109169554 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082206414 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10574538 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102249115 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084879003 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113973542 seconds)
  done (took 2.981849295 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108968483 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122497436 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120286421 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122976997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093757411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12048414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119414993 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119524462 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103784984 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11655699 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123969375 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119506237 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095039394 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116323071 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115346498 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097480085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123811833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114426953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119996174 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099719763 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118515903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119692693 seconds)
  done (took 3.347324331 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088605472 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106396913 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088908877 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.1019111 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088286456 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102591091 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092166045 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105801634 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090378528 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107364636 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083953067 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.107605922 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108161763 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082509896 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106180644 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085724486 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156982946 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112533374 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086608075 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109626803 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081349345 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112086431 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.103149527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084053571 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105060218 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09176734 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108357857 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086077335 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108198436 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085548734 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108435306 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084425217 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109595348 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107423245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087398646 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106165214 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08830674 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107575015 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083907409 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105793858 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088714318 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103943383 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088184588 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110570778 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084963884 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106635077 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08787221 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109928566 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.081349679 seconds)
  done (took 5.666781427 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109572897 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167010157 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090470497 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149432486 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126118831 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115041206 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090629707 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148206962 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107681497 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086206562 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129165606 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127226152 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108491198 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093748664 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.116319485 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108445698 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090328843 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108611013 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111253819 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088368618 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113660679 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094472078 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124755221 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124353353 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112626157 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087050729 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108895515 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113336818 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102842239 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115647708 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114171275 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093705753 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126637664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115938126 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087039719 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112718241 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127249097 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.1086246 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091002295 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106975049 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090357198 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11543082 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115273811 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106963596 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110454582 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114754795 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089036672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107258658 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122918923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090772036 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120033687 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125541733 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091163907 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111064272 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114364646 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124791002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088907506 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108020347 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091359764 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1240567 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107211691 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09245529 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1247891 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112175522 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116357088 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104126984 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115939592 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113616555 seconds)
  done (took 8.499259822 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098099026 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116489475 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126082931 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12575236 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09582495 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118157969 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115502266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094536099 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116046166 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122186805 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115992042 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139021495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089268549 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1192823 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115104173 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094447616 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116812225 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115852865 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095603528 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116653989 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116868085 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12536887 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095768552 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12540606 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148017874 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111695218 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096026136 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117447278 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125844686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114317292 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127796622 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09443797 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115858029 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125767006 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128617596 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095241025 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109171596 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115116689 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096848416 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116764008 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110631877 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106920896 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117633706 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110665436 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0952222 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117430455 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126354051 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128704187 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120184201 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101955198 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116500832 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125897361 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114410907 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096538128 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126647942 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152817313 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126781792 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126694196 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115745176 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105480908 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127033653 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134422151 seconds)
  done (took 7.997586127 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112173761 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120663677 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12423657 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104604254 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087356401 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113975675 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086501214 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108309781 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118653013 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099841611 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123613954 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114075508 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096123017 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12390156 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115314043 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118285605 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093981554 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115031261 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120698702 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092181763 seconds)
  done (took 3.035920803 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099433207 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129752022 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088439606 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117434715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113223187 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095806586 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113386069 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112212459 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090982362 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11270987 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100750555 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122792436 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111453578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095775303 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12263536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117552827 seconds)
  done (took 2.596943999 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105513185 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123103518 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12514974 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086492078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110332877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083850034 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.11186761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106129921 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085444794 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12752977 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088695451 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114803969 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109685278 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088357686 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106565028 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092420318 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107837991 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085931174 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11153581 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124808229 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101427524 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110448443 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088926224 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114741038 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111292114 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095587304 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112270254 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108254486 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087901135 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110580207 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0904678 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119716435 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106561305 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089727801 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10843907 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087535824 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.11073273 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089431412 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114950168 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109514785 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088366214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110897212 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090342312 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112763073 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085200352 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11199748 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084362704 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11819815 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107510458 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089715189 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110623102 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090475714 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112603279 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120785173 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093697155 seconds)
  done (took 6.543741451 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104507558 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11470214 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084945592 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109652888 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091397284 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113840485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113055789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09304883 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112102086 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087575551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113862492 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092901381 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113855394 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113755146 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092152211 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11435802 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085172814 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112897451 seconds)
  done (took 2.722428667 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095735721 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110689701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09744852 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111815697 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088427187 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114745871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084908907 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110673258 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108212997 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090578254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110472674 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092070823 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109715468 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091649694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111624483 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088712982 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113833283 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1074629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090082827 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106057981 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092842827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108968253 seconds)
  done (took 3.094788444 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123383197 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.131136042 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097162898 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.238286497 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106372511 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.138924745 seconds)
  done (took 1.692653735 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115403839 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127327921 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11117181 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112585801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121722301 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091254328 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114582271 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113719431 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122205426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106456767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114199333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125045643 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122417351 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101670991 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120336588 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120045139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111842601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090977978 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112562856 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13457956 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092606896 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124507173 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113504988 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090734527 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115518763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122559545 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124175466 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107285334 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113897083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122732683 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11968369 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092334323 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125175551 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129197972 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092038675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125107163 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114258774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134875022 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118777852 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103251229 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115476365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121005201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103059618 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120544268 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12396102 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112734399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098446215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114562049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113138125 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141044582 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099300608 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123694383 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120565607 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12343118 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101974835 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140106414 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128898395 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123602268 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121331468 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12874166 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123243686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099477129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123293648 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128261957 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120237367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101314018 seconds)
  done (took 8.506187439 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108441307 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132430629 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113911045 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128918979 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101934156 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114452767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112600659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092099995 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115017043 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111910157 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159152875 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092428729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124174301 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124161955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09220605 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115016035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11352064 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122642126 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092518121 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141852578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114733976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12288958 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101241919 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124486505 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128737721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121404838 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113539737 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093234828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114635663 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090853038 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12159641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115640257 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124598154 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090629772 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124486123 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113272218 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09006346 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120511932 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115064245 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120475659 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102791904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134198641 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115250466 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114080862 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106984766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114773269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113688411 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091109431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115157206 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112204992 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1069439 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128851921 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129851672 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124622814 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113981326 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093499548 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115705865 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11406018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093038671 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121066377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123514146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092092175 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142441161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115144103 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11499513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123801873 seconds)
  done (took 8.413744998 seconds)
done (took 160.973766875 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222386109 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201419622 seconds)
  done (took 1.285142762 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.093700586 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143024652 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100401032 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175740099 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085169288 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142084778 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138380196 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099212781 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108457464 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088124801 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.113924836 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091495971 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178429875 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085853737 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108339543 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107440628 seconds)
  done (took 2.729452673 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.124215017 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.242232754 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131628153 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10968207 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091898445 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11303213 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086036219 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119050307 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092899581 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113021227 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092471966 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.114897113 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08878624 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.114374144 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115586085 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093847228 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111466177 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093783714 seconds)
  done (took 2.918119126 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119390072 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155103121 seconds)
  done (took 1.147687397 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.247951076 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163472287 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231300728 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476092509 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.276697953 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365980404 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20431702 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.213829372 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163755255 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209845825 seconds)
  done (took 3.419019191 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124181944 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188035778 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322616251 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156143639 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107004596 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131470832 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160144583 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132236986 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122898029 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101450688 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123396538 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119493753 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138256073 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094585701 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117557873 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117272085 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122632878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11526699 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115353383 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097364738 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13982436 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085957859 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11702215 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116287212 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097951579 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121969803 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106821643 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086372057 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119477015 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093169551 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115882241 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126480715 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118126501 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156300801 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122964304 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158428994 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118545845 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091835631 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117611136 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090220857 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121346142 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119016154 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124478089 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098482334 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106382468 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096862546 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10938322 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08467739 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117658211 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119264005 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093933239 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118938976 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155960584 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119936501 seconds)
  done (took 7.468293963 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79665385 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156322942 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089020262 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880940095 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112229008 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127968475 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777831919 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111532171 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25618824 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.753954251 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133543392 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096881156 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23289547 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260155067 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.999538415 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315050249 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63890355 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126533363 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152068658 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15465749 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117243571 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115675008 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13420222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429192833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117236637 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089868927 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121650876 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11936396 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162373469 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125559299 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092790698 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200495045 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249944214 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204796471 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095290496 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112117671 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08863698 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193619401 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243809023 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217392791 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181526258 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10901676 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089516066 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124513751 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132067785 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087680971 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18606398 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175843885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170661622 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115477429 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096245084 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12061797 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12187462 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163537201 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123368409 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31862873 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313953178 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090209499 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122482723 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125598213 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242124571 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124880183 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225788461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138893513 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191055674 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113254251 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800380744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17043406 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088719032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118821654 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12080967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094025131 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122765705 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168127533 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392956761 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124384153 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091720936 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113979185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226746789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104130119 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11283534 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163954322 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117598752 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097423425 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128169853 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123748726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17055086 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234171199 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124345919 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120041651 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092831637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126061715 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118116456 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210755588 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22012269 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163767061 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20930433 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123050141 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164268826 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193432496 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096164791 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.199906118 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09765527 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127340338 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125219737 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220436568 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146400375 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103405776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121255302 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119990179 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149007867 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104753869 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119951347 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170601392 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479111651 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169035383 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109403656 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105776627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121549711 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160836792 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119651124 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260895831 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100535047 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192123846 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097599661 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111503551 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120754969 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163507637 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121216005 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100247865 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123461174 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119544504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235889566 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21751533 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099050025 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245800311 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186011175 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117810382 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173765356 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121791769 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168545426 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119121241 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099980293 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118515058 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792690617 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100975394 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122671144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116016827 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187779555 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090593899 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125053548 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124741843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086911413 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773867674 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126530165 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098890263 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126160908 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118661571 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102484905 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120534018 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116320967 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163233041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231493733 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118897466 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098203541 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127784829 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160286761 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118308799 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125746769 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102637902 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127584844 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122445277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09149848 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126202587 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167740624 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184901413 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21793426 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579555587 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112383776 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101512284 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231202708 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112981732 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28778338 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097486447 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226365665 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163353012 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123663125 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313576795 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166639444 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186918522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129177811 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173490591 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11016006 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095826597 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.188765859 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089660318 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121649969 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162741006 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126383761 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123554945 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958132555 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091439757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224698749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111143456 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170822071 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117697295 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097586264 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295754532 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113991799 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128391252 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16621403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11549717 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103185939 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.731589487 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124932512 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101469312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120459321 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223999291 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16396659 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121518971 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096568679 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123389924 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162881493 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.2309657 seconds)
  done (took 44.167004404 seconds)
done (took 64.001279497 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286732086 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216870997 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269941583 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170761223 seconds)
  done (took 1.923944212 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181148009 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157887621 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124104853 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112905912 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151931823 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084579232 seconds)
  done (took 1.71066014 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372035987 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279416794 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243163243 seconds)
  done (took 1.798452248 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.32693084 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251538527 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472878236 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327363871 seconds)
  done (took 2.384017133 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.219380485 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138589081 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111004896 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104037516 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20210813 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249311008 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144578887 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205433682 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098247323 seconds)
  done (took 2.423508199 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198707031 seconds)
done (took 11.340498867 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.245232986 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 0.290808371 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172513949 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125895194 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.295760136 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.127411401 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.216813801 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.125377191 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102798081 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.157324002 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.254067636 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.230475632 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126560254 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154643135 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122388099 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181812942 seconds)
    (17/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.165197978 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.287635376 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.256620235 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157195754 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.214539914 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068685112 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.120511299 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096335571 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.247811353 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.229902602 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.141821237 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.139554809 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 0.171759437 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.184358584 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114379973 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203431722 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119960709 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067037312 seconds)
    (35/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.184595431 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092808463 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.129468434 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150751875 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.230461246 seconds)
    (40/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066759392 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181943581 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.166624883 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096452123 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112212065 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065518448 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114301873 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.171291477 seconds)
    (48/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095315216 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.17353253 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.226901806 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119971394 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110483553 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.202387231 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.121076789 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.170503556 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116162247 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.145453144 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108765755 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.159155336 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.117006496 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.199359244 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12321949 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111028785 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112273908 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095799881 seconds)
    (66/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119445595 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 0.171462631 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146208803 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.198500199 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116088181 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222506725 seconds)
    (72/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109844559 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167859053 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118475494 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067081041 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137250134 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101967476 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.10089555 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086258675 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113866893 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.089893191 seconds)
    (82/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190809133 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103401585 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137306146 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136753088 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.129281712 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.202432114 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.152195799 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113593348 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120260912 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224187458 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071234054 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.193262084 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115189998 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091222803 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.149081844 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151877391 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.162447036 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091773117 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.144565625 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.123203954 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117902384 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.178784457 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 0.191325832 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119375695 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068038393 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.093784787 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122006472 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120907987 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114229425 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.137531749 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133169963 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192945612 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096952538 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111192245 seconds)
    (116/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.285030917 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139854145 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185471728 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192614135 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131124833 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109661799 seconds)
    (122/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099868619 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.140106225 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12015592 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096172104 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.181549346 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117687351 seconds)
    (128/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.116077688 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.098942415 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094915352 seconds)
    (131/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.075368774 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.093047438 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140114079 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087687795 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115356407 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091768467 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111237796 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093516829 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.147345795 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091439082 seconds)
    (141/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112172589 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109358947 seconds)
    (143/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136773273 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121728508 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068570943 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191224353 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108136091 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067096088 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185563747 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093829539 seconds)
    (151/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114500949 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087958868 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.111315862 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067960618 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113094853 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094914016 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.186813374 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066968868 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122034041 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066481565 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068780788 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117925702 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117753078 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088936681 seconds)
    (165/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.074997705 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.135047905 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181205288 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.12377123 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.135752048 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068187738 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091267929 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.21273007 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075828208 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.199873753 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06648282 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116466955 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068833628 seconds)
    (178/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11560096 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087851545 seconds)
    (180/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119942915 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068587088 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.134278814 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085065126 seconds)
    (184/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140980308 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087096892 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136009183 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0676094 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091023512 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089542495 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067880282 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118093307 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138232015 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097471188 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066655961 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120829333 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110881247 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108983326 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108191541 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122011386 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101830753 seconds)
    (201/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093497612 seconds)
    (202/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118003111 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102455926 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090648338 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086574766 seconds)
    (206/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.1093974 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086465811 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118214026 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094947171 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091226917 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.116391575 seconds)
    (212/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.099926031 seconds)
    (213/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.114641531 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067694897 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173224526 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065972287 seconds)
    (217/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.141723833 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131289134 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161024555 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215208659 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111117087 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0917203 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125762138 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.135359275 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091160215 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216605892 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212850619 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109190917 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091152136 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113010509 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067323222 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084936547 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090738418 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.187738179 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214096737 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088009967 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145128123 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.126362419 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174583213 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109407923 seconds)
    (241/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089226512 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076496578 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136735494 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110161057 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.098051661 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067131535 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091570262 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066877751 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067463238 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178741105 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11151026 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086032831 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116404834 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087122049 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118143973 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124035642 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098799576 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117229408 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087443813 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225729837 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.177722227 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067928664 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066535757 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112097164 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067239699 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120401177 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066881891 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180739987 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067652194 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118851092 seconds)
    (271/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069860067 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111732293 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066934647 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109038773 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088784238 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116027925 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078737724 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112377248 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.070494261 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094089644 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117654622 seconds)
    (282/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068135524 seconds)
    (283/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.125098082 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094029158 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.182659601 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111202152 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094338807 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109441466 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068699072 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144127518 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095553341 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138322223 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087826191 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.0939305 seconds)
    (295/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11194123 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114415937 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091527777 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.101484469 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090161685 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096541326 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110266723 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111460397 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094680128 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091988655 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078419071 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119887833 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105542618 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.092752782 seconds)
    (309/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078831172 seconds)
  done (took 40.027785291 seconds)
done (took 40.93352034 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106674912 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155714989 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095547859 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137811484 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123658346 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091994135 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119370363 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097748972 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124956905 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125950796 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099334554 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093814276 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097108861 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121334041 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096997814 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140720344 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123295693 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094486613 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119327563 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086808708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120511852 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085881541 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113255095 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070283468 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122956353 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093966545 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.1186844 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120692707 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088431012 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110360369 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091883884 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118221459 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087541064 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124386728 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094091226 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119800485 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098248943 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12299952 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089685562 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112664089 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119051194 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088290216 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117071092 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095428461 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117214877 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093041949 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119369028 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10034687 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141211474 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118337181 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097608554 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123177639 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096961746 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118630942 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091673734 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122320752 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092207787 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141214722 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119896708 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09289672 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121115942 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095924501 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119994764 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09556426 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12308995 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123725359 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099453294 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116673207 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09821125 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117156883 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087844381 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119854405 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090183829 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112238007 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096494541 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123515882 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085297691 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118060116 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117331412 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093032933 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110868281 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090951414 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114247809 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09436424 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113107079 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070949809 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091084775 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118813432 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110242596 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098127623 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116694249 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094213041 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113466499 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099499053 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11183326 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092573851 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112067132 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089237197 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114685567 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090803635 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112024913 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089458375 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121317439 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089385488 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118225148 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124031012 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088551125 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117278003 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087430323 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111124911 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102037438 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122981733 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087731616 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11737345 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087856612 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121330719 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086352826 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112451802 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087037538 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112771201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092477457 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113581679 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0888002 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119715317 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1257662 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088218178 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114925733 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091342967 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110768658 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09319055 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111890026 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087896334 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114792841 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078622803 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113735652 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088101762 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118915222 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090406053 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119827702 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089930312 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120943374 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091434417 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119013468 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093595429 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111164019 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074493535 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117827399 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089664343 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113822986 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087833073 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113956259 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087390411 seconds)
done (took 17.098974261 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094876014 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191338928 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152031758 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143381388 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108367004 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11366962 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.1226731 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120456784 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114741974 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144056762 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110474657 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135781575 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148514592 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087686435 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112684697 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092345774 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113921244 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10293702 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147977576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13352069 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16499008 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087326352 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149632095 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.1368264 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121467719 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116217183 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112769286 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092209445 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115692044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103333914 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134307501 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090421373 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113495217 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135416805 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105466984 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121415637 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087529684 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120278222 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087227139 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113403696 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142783973 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108644671 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119132379 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117786674 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09234238 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114865503 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090664072 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121618267 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099300516 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118670908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126865705 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157287892 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091487413 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122754946 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087171837 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124963297 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121799145 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090925109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112964492 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091117045 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11190278 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092192743 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128027044 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14444024 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093015035 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123366716 seconds)
  done (took 8.704810924 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.112476587 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.162386343 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104977631 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132147267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112210787 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088444623 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11351132 seconds)
  done (took 1.794929859 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095861045 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141370064 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111431612 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137053666 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132424733 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109148001 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124212823 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088439777 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134332626 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089701418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136443651 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154320201 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091017603 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.1224235 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13853793 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089097214 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138704114 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088706949 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118942442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111881275 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11827763 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135023018 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091326795 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113914944 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103078174 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116274187 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163470493 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095125089 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1149719 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092406631 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114915296 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167418734 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106062861 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127316058 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088465235 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129346971 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128685111 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088113774 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13128267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094500651 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128918965 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089183747 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116848306 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087439357 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119512138 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124361727 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09080244 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114767348 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092671991 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136469428 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090536397 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128592794 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08980359 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118677823 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090129385 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121438026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123299321 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090976092 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13514263 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090954013 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134105606 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10488847 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12945335 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130311587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092168302 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128979174 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103002516 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117592314 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090810003 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119036396 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130876131 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088453895 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115762667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100223856 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115795711 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113584269 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139129012 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09014127 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12614215 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114018681 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090664134 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115876594 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11357926 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118876742 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089218005 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119314169 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091586172 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113319828 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088262203 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11875442 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087528236 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116487692 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092323719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116484106 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117040707 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107265892 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115481744 seconds)
  done (took 11.925488634 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096712752 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118682718 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092379097 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116071569 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091490119 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115932909 seconds)
  done (took 1.611533664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122384572 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123359685 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104311819 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122089315 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158069794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104377485 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132091403 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124413668 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108361195 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12948735 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130583762 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105888583 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137350431 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121769252 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104897164 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122502556 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105410722 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127547949 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128640874 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096311053 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13832725 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121548176 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097323182 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132989239 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118929015 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097589941 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12619725 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103294801 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128117764 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125231976 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096738827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119072554 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096665454 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125011618 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131147213 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096845551 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121516996 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120076744 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101725296 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119257547 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105548099 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123157981 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127504726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094712333 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124647204 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121644888 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095318109 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125388855 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104022932 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120459752 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119551014 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096696261 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119709162 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094676267 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122215247 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124137229 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095150052 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130536929 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095978574 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12300433 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119129907 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094238413 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124587328 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093084325 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131313611 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120467646 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096400893 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122601623 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122822873 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096911681 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120433884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093571793 seconds)
  done (took 9.312292191 seconds)
done (took 34.315375894 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.699557336 seconds)
  done (took 1.678429136 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.719959238 seconds)
  done (took 1.70417558 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.93806637 seconds)
  done (took 17.920063984 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510927143 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589043702 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.898973013 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181196766 seconds)
  done (took 3.161129133 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972734137 seconds)
  done (took 1.971903914 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.307085502 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259180178 seconds)
  done (took 1.55341903 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784104059 seconds)
  done (took 1.777240702 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.364412947 seconds)
  done (took 2.349440998 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340935458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187252139 seconds)
  done (took 1.5260541 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559682392 seconds)
  done (took 1.556235532 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.846943609 seconds)
  done (took 7.850397414 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.276188502 seconds)
  done (took 1.286359131 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309046253 seconds)
  done (took 1.30945677 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.523801806 seconds)
  done (took 4.52404976 seconds)
done (took 51.158180337 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106146415 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127641664 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102963645 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124928163 seconds)
  done (took 1.455693418 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107886669 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123982318 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101529962 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121673945 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126380226 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096956067 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123043859 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101787275 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121153831 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096101263 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122349114 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119981281 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099465896 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123497199 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094039936 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124282757 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099973519 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12306271 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124783926 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097172353 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118986081 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.0978731 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125794735 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093861168 seconds)
  done (took 3.68902793 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106991045 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123689897 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097970827 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118267164 seconds)
  done (took 1.457150007 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106256062 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1485514 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138704777 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100677006 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143731725 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136104089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092516537 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117336409 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094754547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125385814 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090649395 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149624615 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138534308 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099418417 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127432187 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088330529 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118581259 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137106776 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099684429 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126379254 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095465881 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125675276 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090755193 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141154999 seconds)
  done (took 3.836481609 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178122177 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134481609 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139727097 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095418784 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161390955 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142002706 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089098287 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143992614 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088266557 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134131529 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117862185 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135637201 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130218608 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088243783 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115737956 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087848387 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130146668 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129639645 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091262251 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128314308 seconds)
  done (took 3.470964242 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10442486 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121364127 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089096099 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116457568 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099683812 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122108637 seconds)
  done (took 1.663242363 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097424524 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.123235977 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091970456 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114794534 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095773877 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115367651 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089986139 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11504529 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091466817 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114740271 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09085389 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113536084 seconds)
  done (took 2.263721097 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.475643084 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093912586 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121848583 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113767743 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09741863 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11539761 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103809273 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119538842 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140372478 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090197249 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115738033 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092069581 seconds)
  done (took 2.690486473 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240483453 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12676961 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288944542 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369160016 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157783837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178240236 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283365762 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162875931 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224793094 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16831359 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205369422 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226812723 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153065051 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190196679 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139256503 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119533975 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235596315 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24836205 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155132764 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210289674 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229120152 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167787156 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181721579 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152652436 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13851565 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173023166 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095056184 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131924394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234900214 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177594362 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188504843 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189586364 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120964284 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23781293 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255281095 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222630718 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287294413 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109347098 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176343656 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169983491 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264154267 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138327399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205048377 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156190173 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133194722 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190736693 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192884688 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178740877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152977818 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112872675 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221745369 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239473379 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193220277 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138082223 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303754291 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151748335 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175753398 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221984777 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228869251 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228518976 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187238025 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120969902 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189190417 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218524767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185773575 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176352873 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180632209 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148751758 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227879633 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18900372 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165449639 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219837019 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186152421 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141364038 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170497409 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174241845 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172492152 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259660627 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183511182 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124091951 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169351034 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150944229 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132622381 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168749453 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126136839 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239565737 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117603384 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164613761 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245465636 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159956211 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161494463 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205663488 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231403789 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121509743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11178744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154736928 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155857879 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193792757 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142890728 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159757611 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163554505 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130198192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186585795 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096332016 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211520572 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090042762 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172918312 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21144115 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099034215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161920415 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151905187 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151305501 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17394446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226470851 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115623003 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133684939 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236949755 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178900171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15186102 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180254488 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201526505 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145871806 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150948581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199944835 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245259757 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140244037 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202982531 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1573669 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136528848 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13265388 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18250934 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156114894 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160812172 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107344095 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210172099 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208777553 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126350818 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137920493 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194382362 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134650161 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104552248 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189022893 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121852723 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140056059 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154068048 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154811829 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183260334 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177643079 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155334536 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164465373 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153427052 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253333294 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143547293 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152271016 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148822489 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093686426 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220218018 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200420319 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131186954 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206125527 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172193337 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234380443 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170388045 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135930772 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178750944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104166123 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121841774 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193655991 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168574176 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161226699 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.225497346 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201518484 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207687117 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185052164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174363277 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174031816 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166632977 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158986523 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13991386 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160824222 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173178633 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123129715 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117572109 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135024122 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150215276 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144184632 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106720372 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225082164 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170436709 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217815557 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160632876 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123222916 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207840205 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102826189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173709354 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206174633 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120034201 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228174533 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194282648 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216149352 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117265856 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231148557 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093143756 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126149102 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142888541 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172560885 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134297548 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109166468 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164776877 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209586369 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182955749 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177830515 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240350008 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173363191 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190822237 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122640812 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141346991 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214013309 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178463425 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193020927 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11703381 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15005893 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177946335 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158891821 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25639905 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16882911 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17704545 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236094519 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152107547 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132053641 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125157024 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223398402 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155887132 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178136284 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149071038 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140561785 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163519838 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10706464 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161948893 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213280734 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163717177 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190480923 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152040853 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185063189 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129334231 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164122314 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161269326 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165825354 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081408423 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20319947 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204392918 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149874988 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169343083 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217615818 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104822359 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309076998 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245244622 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196304448 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138565706 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158061406 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162397102 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165865626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17126556 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17946934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159564678 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189179358 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159155164 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138809301 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142163204 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149444688 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122731777 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133663994 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149775219 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178086298 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140264458 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185514893 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16429998 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15961593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201043455 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12413332 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145085969 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152278238 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21586087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211350483 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211279066 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151963344 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181757061 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236142242 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098306784 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134113077 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135508607 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178981823 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108907472 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224068711 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189827206 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232326837 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183123811 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223092187 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113469238 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121980759 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157547005 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17626533 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210041829 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152616744 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160702843 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235004492 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.147902259 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105881852 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179458219 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318506804 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119953579 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228034441 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08037471 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278334877 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126560132 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134119258 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163804313 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208569493 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138400409 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191510746 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172893782 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171621182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166862452 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151248003 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192971852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246306423 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202277261 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208753297 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105837876 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156844837 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178338996 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220453657 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157953294 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113514656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234223044 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196730132 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197247643 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14331073 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171858618 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169979592 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158370585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216564419 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10674442 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236659426 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135255228 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195722933 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154919293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146000682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177594748 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215855582 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11568518 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217397547 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185307273 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136165496 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106141813 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169767179 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206381395 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158780719 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10024803 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208934546 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098043403 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222399892 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231373989 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136387639 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156642248 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148982766 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107933757 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156924069 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186540086 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11382187 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166089088 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204007513 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136830567 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191450286 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232287855 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169280422 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17611271 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146556905 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692810394 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132604611 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195457955 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161271486 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236070204 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150811864 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174942865 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159299865 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170043513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197411452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161664114 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23156325 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193446329 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207331402 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10476634 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160096913 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164994004 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144862523 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151752761 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169152147 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162069196 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155703269 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178598927 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200591652 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107428259 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141382673 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200229962 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160979567 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211130213 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179688131 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112196469 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174057148 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218564535 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133662938 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181245805 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236867208 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114242795 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154002914 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135226426 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158932125 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262698687 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098091989 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236281429 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185968465 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160320126 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169806793 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149685581 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193992006 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187444327 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188324391 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14980261 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161977619 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157303452 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110919345 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131513955 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15639057 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168791669 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150465353 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159911219 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141357201 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220124622 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096704754 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14715748 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293036211 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221140328 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216624205 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137303918 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135879115 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164076415 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151252933 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181443845 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1805329 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137114261 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108799732 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137759278 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158832528 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114526864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157991915 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197514744 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169409071 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23790064 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.107954025 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281933958 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141851018 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15684333 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08802662 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134123554 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152156202 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148641475 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161176508 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193863988 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265112088 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148967544 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106190898 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150715206 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127554777 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108625279 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16703659 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163724822 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206665844 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146453343 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082268199 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158195816 seconds)
  done (took 83.805612662 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170035302 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132361633 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146831236 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202625375 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177860228 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271176525 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210141366 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254920038 seconds)
  done (took 2.666525551 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100167649 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147067958 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159179908 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134010373 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092538179 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120225007 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346089169 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134118473 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116641639 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121455738 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174020692 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093665294 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.557141935 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091356966 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120104313 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107976853 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091559264 seconds)
  done (took 3.799803929 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.484659596 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.720297578 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512194668 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098204737 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.205773466 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113084111 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.781300836 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197113923 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115222113 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486245583 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773525336 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166899173 seconds)
  done (took 18.760328257 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.105806721 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.12767825 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108199269 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136609691 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096332375 seconds)
  done (took 1.686548375 seconds)
done (took 132.237600426 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.111350746 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421069806 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072656346 seconds)
  done (took 1.635614539 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114534148 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138650669 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109258312 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137257498 seconds)
  done (took 1.615635023 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105374986 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127855435 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108928528 seconds)
  done (took 1.450047885 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326037603 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192040084 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165544447 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112570954 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129974832 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102955469 seconds)
  done (took 1.457751148 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104617486 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128184001 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099049576 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131648568 seconds)
  done (took 1.579556496 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102170988 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078743209 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109909655 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075715656 seconds)
  done (took 1.474650349 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121340675 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136717084 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104402654 seconds)
  done (took 1.476852411 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.137752585 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.142129711 seconds)
  done (took 1.39523493 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113685835 seconds)
  done (took 1.22311135 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.125700378 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.173476041 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.19148268 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165442296 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231111555 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166111217 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141703426 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114468749 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131283437 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144370962 seconds)
  done (took 2.704037572 seconds)
done (took 17.916516228 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110652771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519256482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413629245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116573446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725748783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380532492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034017181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147070277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167143477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094152547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139617451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671271664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023865621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472553249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980902059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37447026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676711971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122414551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120051148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095066794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018240006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091960025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122827908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092681665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705785319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426761253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095957583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369542934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092081235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127466695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383700618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12422307 seconds)
  done (took 17.137307815 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102367011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177416174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099386621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138336076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123880572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09436376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125560237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094234119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180856756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126138188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111251704 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122803983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126710982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094976105 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142848378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093891979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125976657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092656389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122020358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122481281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113325983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121140388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094108471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122694043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09441899 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136248949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124132232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093965119 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121996239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099245867 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129001449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095845283 seconds)
  done (took 4.880175786 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148656133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184786018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130180941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127509557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170392441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125509514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.2005818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118722512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183860446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124316922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140626864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093272052 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158404906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123474831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115309725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122530583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097625433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123213362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093295841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124915393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141078531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093984573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124244072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093661239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1243767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107793929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125614684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121715334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093582475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128825495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101088628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125051197 seconds)
  done (took 5.211729227 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104382643 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127373879 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109767181 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140036029 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096810574 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126203033 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09748053 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125548838 seconds)
  done (took 2.05100521 seconds)
done (took 30.390049315 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118527893 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134778301 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107399018 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13629169 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102566802 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133577077 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091840343 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135735479 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135489761 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102370841 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138918438 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092293087 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123521321 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092396014 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136668605 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097393485 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13301034 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102040457 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135293415 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133588969 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095617685 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134740398 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103686549 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135169978 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104708261 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134988272 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138600734 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099940579 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124194894 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095121135 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125945622 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104313915 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125673179 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106033861 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128446479 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097041661 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125600958 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09428791 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135299828 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133753996 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100595907 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134400816 seconds)
  done (took 6.075711283 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115362009 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147436568 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106812322 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084612848 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118144232 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081061711 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138990142 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080032908 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111415491 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108483968 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074628846 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107475178 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079035713 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102430086 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077999693 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075321557 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109783206 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07707387 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076932453 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107172183 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080267959 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073036733 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109907569 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079053295 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075075131 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111218864 seconds)
  done (took 3.63347838 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107687598 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137945375 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112583222 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186263695 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162884479 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100428371 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134848126 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141223819 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109972069 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121804306 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09685027 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15079604 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120774711 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130782996 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122305503 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108632291 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136812354 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093909067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130080287 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114017754 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140221396 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102438011 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114413675 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134151625 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092145615 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124854223 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097012033 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136680096 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097844614 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13286554 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126942562 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096699157 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124681315 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104613719 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12728067 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094974621 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142548255 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13282 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102305301 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122380046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096393421 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123410456 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113309145 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169606764 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091737727 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132036606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129700525 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104491925 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122356418 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110510101 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133142061 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091863259 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126664619 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092483142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123545728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106533959 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124545399 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125045529 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103005395 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126076259 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105236715 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127843577 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109580284 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123121099 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100889216 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122826688 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09329837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121999986 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145074355 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09437899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165379698 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099999307 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124762297 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132002017 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101687658 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130135915 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093015483 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139816518 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102496146 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127325275 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102474175 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127281156 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095968328 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140580674 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125271682 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09580415 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123889825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100217448 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12633986 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093758778 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137070458 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092493174 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125938353 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140064796 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093193538 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123461735 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100225181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12794016 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092316134 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136682748 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098115489 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123775219 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132900616 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093569631 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125378022 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103866583 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128061034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091105323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128462754 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100274325 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124150274 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093986652 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126465648 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094051104 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132138138 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129583983 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097886069 seconds)
  done (took 14.965691812 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237256752 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216898544 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239432497 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26331279 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136447871 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115367493 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21381498 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157726068 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124801544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162224721 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16292452 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184184609 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140071216 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181230872 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142149629 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122610109 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112494794 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166296579 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215633733 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294152699 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113966441 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134122643 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164635552 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162470091 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107212977 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134289936 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140321849 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106117648 seconds)
  done (took 5.801107149 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.117250779 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161664166 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099292197 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146260935 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150078155 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093585607 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128658668 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09489709 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136110698 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137245551 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092923092 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130951485 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099761649 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133510349 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124405153 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104391947 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133764474 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094675597 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127253711 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097707984 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130417675 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101897179 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129872509 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091494627 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132986511 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121956595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086856814 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142857642 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092815376 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146295551 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122341216 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100434717 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134177778 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094418956 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124325011 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094769734 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126621659 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095068368 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125909954 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091626707 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122799851 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078323229 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123739665 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106806558 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129724883 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080058644 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130942547 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129409567 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09618541 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122730297 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097365169 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125686948 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097669309 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13268036 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098728092 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124445273 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097023948 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117179042 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10041623 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126345801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085068679 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121771546 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098867423 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119721831 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102560053 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129091328 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092552067 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127090279 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097956314 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131087941 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096101953 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128119446 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091252085 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127148906 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096230587 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12960092 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096906502 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122642081 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093454615 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124717989 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076240993 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12466115 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074505313 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12826236 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091638517 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123934493 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095817349 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131409849 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13783578 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095488658 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13323203 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09444873 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123704858 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09675781 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11441152 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096833281 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139890306 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142451173 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09527601 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122250126 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107965152 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127510298 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093656817 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107044082 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102591814 seconds)
  done (took 13.074444138 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135853749 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154506183 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09621236 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143681049 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156536349 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159040327 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101929029 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131622268 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095647344 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143486611 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094373457 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133249701 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097414211 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138419978 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158105448 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103134662 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127316741 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107606752 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133108624 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17122938 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112320745 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144626995 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108747327 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125424613 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099517647 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141442657 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164035206 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108589056 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137958068 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142995509 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109021776 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162729873 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113349268 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129670926 seconds)
  done (took 5.544056135 seconds)
done (took 50.214681617 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.267686626 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.447675035 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.222415578 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.210498125 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.223249909 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.231576768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.254498482 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.221764398 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.233407568 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.217790914 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.472457905 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.90192596 seconds)
done (took 59.054412604 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.2721523 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.363195247 seconds)
    (2/2) benchmarking "String"...
    done (took 1.486121445 seconds)
  done (took 3.993580977 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.67248832 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.182973386 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.484382605 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.220540564 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.223039986 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.51347239 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.863610105 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.569182312 seconds)
  done (took 28.198636919 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.22229886 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.610805863 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.922744638 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.917534444 seconds)
  done (took 18.816602901 seconds)
done (took 61.104727745 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.251932109 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.303011654 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.231264843 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.198176807 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.336026725 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.246277101 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.47732631 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.225138561 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.24255266 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.206428406 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.241708282 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.239410103 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.229433843 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.538903054 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.231501417 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.224201965 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.247980941 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.700491553 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.635805558 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.235901557 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.223969338 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.234111499 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231528864 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.224387649 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.236262711 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.224278113 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.233051874 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.234180087 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.844062686 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.227276724 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.239831839 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.710039657 seconds)
  done (took 191.248396106 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.224097877 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.415042023 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.524700782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.277282512 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.630774306 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405489598 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.353445447 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.871158469 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.24344954 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.231839861 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.322545556 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.226475259 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.418191611 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242054768 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236012281 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.316308503 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.552488396 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.443180152 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.246877294 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.497259361 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.22579171 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.227997388 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.163593188 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.317429826 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.246292321 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.312751365 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.243463736 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.258938387 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414515977 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.504530743 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.228085792 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.24580993 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.85260638 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.084511962 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.244768659 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.248580382 seconds)
  done (took 150.645421369 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.522777802 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.226651695 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.227136901 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226468614 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.261129855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.22928726 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.817313431 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813257041 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.728675228 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.439356741 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287390098 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499542476 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.222749375 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323023064 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236458908 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.22421843 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.242565044 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.270976106 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224582731 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.227740328 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815255174 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.240216642 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.26847654 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.228994639 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.228976672 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260664753 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.622374092 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223722467 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262069403 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561118799 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276079646 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222100728 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.632373281 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.236765049 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.223792303 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343435417 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.229573193 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260945956 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.225664782 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.510200525 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.226983584 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.22803388 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.227011668 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.232279999 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879023248 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.22326651 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.820594736 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228883759 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.182253921 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.225575865 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227344005 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.802064591 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.854844685 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.240311847 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.228193017 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.23042277 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.227668012 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22820442 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.262651669 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.802115025 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.323516692 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.246145518 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22957164 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.233840784 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263720629 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.228363844 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.263407179 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229404568 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.635514237 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.280189445 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.335021158 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.821617141 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230584855 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.229512019 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331374601 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348935355 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.224816137 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.229216034 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231228844 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.232014787 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.341537561 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.226745606 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.6544853 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232016393 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230749069 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.290075249 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.330295599 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.227500121 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641751499 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.232839837 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.231493003 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995707882 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326909823 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.226830812 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.2309688 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230851108 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.65584276 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.81813622 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494963427 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.233007059 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.823973698 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.231404765 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.679096477 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792556623 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.931655968 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.231124689 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347001107 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231877469 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234243434 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.232606673 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.261450208 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.248690333 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.291756161 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.226602829 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.636004028 seconds)
  done (took 349.734278533 seconds)
done (took 694.299808672 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.886514549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.878672337 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.001238934 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870934318 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.833223832 seconds)
  done (took 10.622320725 seconds)
done (took 11.782336306 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429549962 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.430715405 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297699583 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431369782 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265261366 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448235929 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40558981 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.252889258 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338628121 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.319880087 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338712716 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.29035344 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261452155 seconds)
  done (took 18.662169489 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568022253 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.555304946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297029673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.584523287 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272816403 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567748487 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.450640249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.456910127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.45844847 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268518899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248542441 seconds)
  done (took 16.883498848 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.567501727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.597362873 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301050108 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580814649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.277633824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57185134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445461004 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.458633378 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461145305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.266578282 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24825158 seconds)
  done (took 16.928936372 seconds)
done (took 53.634819419 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.243844257 seconds)
  done (took 2.39747706 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.275688854 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.439623256 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.258570547 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.251500986 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.245899879 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.24748838 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.249419143 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.244161952 seconds)
  done (took 11.367207192 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.241039858 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.244354603 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.24410589 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.24493998 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.243732002 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.240407241 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.244723469 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.241178575 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.243676309 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.241976141 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.242925655 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.245084344 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.240725631 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.245806294 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.245453462 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.242569928 seconds)
  done (took 21.047875119 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.242940669 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.241289008 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.242596455 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.244085049 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242021845 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.242984165 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.241508102 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.241148829 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.241520044 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.239908967 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.243312649 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2420025 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.244365567 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.242676742 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.242895022 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.244745513 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.242909589 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.244533485 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.248019762 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.243553837 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.243272067 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.242634604 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.244641035 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.24382503 seconds)
  done (took 30.991317501 seconds)
done (took 66.964749387 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.455899024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.011221032 seconds)
  done (took 9.623956325 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.245078738 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.245877433 seconds)
  done (took 3.648714887 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.245378516 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.247298692 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.247339367 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.246339664 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.246354619 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245530578 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.245549112 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.245592591 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.247342775 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.246122899 seconds)
  done (took 13.620431193 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.245894511 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.24597537 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.245549326 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.248126018 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.247380555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.245093809 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.247857677 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.248566208 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.247841805 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.245024269 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.248181731 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.246168202 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.247090353 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.245817322 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.246429258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.24652489 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.245705396 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.246021985 seconds)
  done (took 23.597757542 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249507844 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.248632707 seconds)
  done (took 3.657941313 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.244207137 seconds)
    (2/7) benchmarking "second"...
    done (took 1.245593427 seconds)
    (3/7) benchmarking "month"...
    done (took 1.245571213 seconds)
    (4/7) benchmarking "year"...
    done (took 1.247485007 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.247511665 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.246289143 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.244919131 seconds)
  done (took 9.879409276 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.247710609 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.435337681 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.512818139 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.859565121 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.25117737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252586551 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.105145489 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.252354226 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.254964554 seconds)
  done (took 14.332989555 seconds)
done (took 79.525578228 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.295488875 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.257572683 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.436609279 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.242724731 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.25918672 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.586492579 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.268813065 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.36911829 seconds)
done (took 37.884628834 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.248698795 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.022734649 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.023132438 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.236694793 seconds)
  done (took 11.442909294 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.231808375 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.207450928 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.229152999 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.268447036 seconds)
  done (took 18.099902398 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.303406249 seconds)
    (2/2) benchmarking "read"...
    done (took 1.632246833 seconds)
  done (took 5.095675753 seconds)
done (took 42.056556738 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252978293 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.251543936 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.24884406 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.252464422 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.248827028 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247303193 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.251024582 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.252399026 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.252787823 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.252259549 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.250755702 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.251769362 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251938417 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248639475 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247526011 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251778122 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.248434326 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248666424 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.248993344 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249981969 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253442729 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24735536 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.249165007 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.249206691 seconds)
  done (took 31.171702035 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.253712885 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.250699526 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.252506559 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.251899152 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.249712747 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.252856949 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.25380589 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.250370565 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.251615945 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.254588713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250748821 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.250744726 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.250720916 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.250256533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253146842 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.249882699 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.25178287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251767974 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251600547 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.250260107 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.252821654 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251496953 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.250551803 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253638268 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.250390995 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251345102 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.253464515 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.249213543 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253207584 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.252149744 seconds)
  done (took 38.716547434 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.259025568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.26289955 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.252575024 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.25332835 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.252556308 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.254189862 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.256434566 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.25474232 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.25563105 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.254190162 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.254900509 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.254952172 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.253208711 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.254005545 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.253616939 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.254478654 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.256997957 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.253940174 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.256171174 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.256076808 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.25510173 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.257450987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.257280061 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.253881495 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.257186798 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.253582752 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.254242872 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.255281651 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.254595783 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.256982918 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.25651932 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.255575125 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.255938151 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.25779373 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.256181671 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.256701222 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.261371466 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.263663003 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.255745857 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.255025974 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.258767074 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.257344401 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.256873873 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.25719243 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.258506955 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.255295554 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.258259804 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25481041 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.256715958 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.258695004 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.258485246 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.258735952 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.256950451 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.25590882 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.25778456 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.257608678 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.258315797 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.257971074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.258700829 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.257741906 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.258862194 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.258428634 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.256492612 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.259306786 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.260170701 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.257612193 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.256758248 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.258361044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.260324989 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.257392414 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.258977484 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.259554193 seconds)
  done (took 91.653487412 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.261053707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255693571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.256114348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255706927 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257020727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259939863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255793857 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258563338 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255230078 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260999008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257637236 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257032986 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256153691 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260873634 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259090124 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.256940745 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259973207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256754212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.26055634 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262113524 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25836067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256825335 seconds)
  done (took 28.845797604 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260125495 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26330715 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.257057184 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261257253 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258374748 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259636289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.260284427 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.260696015 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261204819 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264420239 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258026464 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25986807 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258905498 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259141924 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258565876 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262080354 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260460971 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260701673 seconds)
  done (took 23.853743226 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.258791654 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.258999589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.260403758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.260116809 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.259486613 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261955014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259155363 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261698784 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.260346952 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.260011537 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.26219224 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259926928 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.260458657 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259170267 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262450602 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257958135 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.260081492 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259990475 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262272739 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261603385 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260695697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263538981 seconds)
  done (took 28.903593418 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263701742 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26216204 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258667752 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259334452 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.258449071 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261969196 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.262112111 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.261278522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.26320156 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262425469 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26226915 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262661011 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.261702098 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261781382 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.2616221 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261720245 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26525623 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260058311 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263110117 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260319537 seconds)
  done (took 26.406384371 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264207932 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263596251 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267570598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266638926 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265710947 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265369351 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265958186 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.266509124 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264734896 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265837673 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266010521 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267095414 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266230406 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266760865 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265873546 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266477458 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267204064 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267542639 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264995814 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26814895 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268378534 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266359069 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26845659 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268824808 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265917847 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267264379 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267913802 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267587894 seconds)
  done (took 36.637517924 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263962899 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263838599 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.264098256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263771386 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.266816934 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.266583309 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.264780126 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.264071604 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266573339 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263981462 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.267523324 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.265937774 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267717537 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.265403716 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266366418 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.264713206 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266735949 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.266136234 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263793295 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264596925 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265574225 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267194023 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.26637372 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264184045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265684812 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.265912863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266932946 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264472613 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266091466 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264451753 seconds)
  done (took 39.140831351 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.284679262 seconds)
    (2/2) benchmarking "in"...
    done (took 1.285939697 seconds)
  done (took 3.748238171 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.26538412 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269846749 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.2700553 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264603343 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.267497329 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269568362 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.268775564 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265312394 seconds)
  done (took 11.319310755 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.265256633 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.269143381 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.268274215 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.267806214 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.269709247 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269402045 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275784294 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291073218 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.269399744 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.270943211 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.275676114 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276961013 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.271799436 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268489888 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2679259 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271908994 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.270320859 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.269989971 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.26844009 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271167044 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270805565 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269266803 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270454877 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.267465173 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.272061875 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.279670573 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.291882219 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.27013817 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269827544 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.272734479 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.271089767 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.268882252 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.271922731 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.271773777 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.270589691 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.271297004 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278809786 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290790702 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.275557386 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291066764 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270628594 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.269199213 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.272845383 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.271294706 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271311677 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.272710409 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.274324765 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.266881802 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.273943237 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.276097526 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.278692707 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271915414 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.267204266 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272745339 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.273546971 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276814429 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292866776 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.274104864 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.280951805 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282084804 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.305150356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.296809173 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273193357 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.27510621 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284081524 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.297550381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279639294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.290471443 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.270252315 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.273045804 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.278107884 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303204642 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.299483437 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.27195296 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273711178 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.275056432 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273201478 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273262786 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279316671 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.294376478 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.27289297 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274139564 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284852407 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29974183 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.272828409 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.273574214 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.274647302 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.275490066 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.275122839 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283966676 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.293711421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.27452987 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.273863149 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.274091111 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.276961979 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.276004471 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.274253786 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273677897 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.272717761 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.276570946 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276367372 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279132321 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.283405367 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276547532 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278178611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.283348774 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.296119934 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274772605 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.280662125 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.276771997 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275657456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.277689649 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.2800079 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.27194049 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277608235 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.286296554 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.277350794 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.277694508 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.276309323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.278187795 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286084696 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.30603552 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.277114841 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.27816004 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.28058106 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.289856172 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277928118 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.278912698 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.277624219 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.272930542 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.272663173 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.27640711 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.27525625 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.277589123 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278936229 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278005563 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275731104 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.276000728 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.279649512 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.278086557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.276512414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.278465914 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.279646542 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.277620159 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.27897992 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.279134993 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.282627505 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.295600965 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.278307557 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.277826333 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.278630479 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276881951 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.277649306 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278973106 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.279342579 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279231262 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.278586559 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280920141 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279427816 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.279209757 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278344359 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.278899965 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283513845 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.277625082 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.283804331 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.279918258 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.278324775 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.281405875 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.278183641 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.278568327 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.279208525 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.277125429 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.282447404 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28883882 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.281303235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.279318291 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.281445445 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278399494 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28086008 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283470197 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.284827113 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.288130699 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.279912724 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.286487904 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.301638785 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283240929 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.28198311 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.281513607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.281979943 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.279956947 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.283627325 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.289903254 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292006681 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304025455 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.28071014 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.28644545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.282495211 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.285830674 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.285548082 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.2814953 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.28152323 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282853958 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281481509 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283311983 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.28577258 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.284353801 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.284764372 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.283235112 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.282374605 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.284031521 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284416698 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.282872898 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283138814 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.281065074 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282292125 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282688368 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.282433954 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.281167896 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.280479961 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.28428565 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.284724301 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281261304 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.291172553 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.27943053 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285641233 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285868676 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.283186779 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.282133276 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.285618124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285521384 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.281723734 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289894941 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.303368482 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.285106996 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288655891 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.303459761 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.28416234 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.287242888 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.284231839 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.281519559 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.285903952 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.29394936 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.284953415 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.283403176 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.286357754 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282901384 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285340699 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.28832997 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.303400871 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.281966615 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.283030446 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.286246043 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.282106755 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.287241183 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.285502868 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.283868351 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286751732 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286066416 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.287710205 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287554469 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.285486256 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.285878433 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.287445336 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289589492 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.295761115 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.2907692 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.286054978 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.28659225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.289856345 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.291315446 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.286572116 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.287315289 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.288926537 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.297056579 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.311664944 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29177373 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.306064742 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.287945005 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29097829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.308554904 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.291412733 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.287903044 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289064671 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.286621125 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.286768357 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.28627202 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287013528 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.287735942 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29183391 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.288677529 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.294386013 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.290153984 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.284935168 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.288261522 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.290068738 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.288656468 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.288493032 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.287820702 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.287588699 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289109252 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.286003275 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.288905091 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294953644 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.306652239 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.289346968 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.28927842 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.288455728 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.288994748 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.288428526 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.291265847 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.291464205 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.298697031 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.293125275 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.301578677 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.290366593 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300433458 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.289330892 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.292042022 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.298186519 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.288585434 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.288906735 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.290124043 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.290444693 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296302651 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.309877518 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.29154985 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.294401309 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291197743 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.290616939 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.290154491 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.290730924 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294025971 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.290827463 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299953159 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.311761309 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.294986006 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294197565 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.289745679 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.291096314 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.292588694 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.290989037 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293262708 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.290952873 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.290717641 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.290359209 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.291651953 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.294185145 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.294014501 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.292757095 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.291630481 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.294832781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297157424 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.312607524 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296726689 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.292902953 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.299505336 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315813752 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299527836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.312942527 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.291081837 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.293349405 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.293829683 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.294768447 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.290221411 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.292821058 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.292581009 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.29172178 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.297074567 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.290819106 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.294839482 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.292966325 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.291992236 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.29293862 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301973054 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319513641 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.29455438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.300004411 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.291143935 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.296750455 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.298893511 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.294432174 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.29355214 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.297271889 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.304944108 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305451714 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.294135802 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.295697108 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296213689 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295057225 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.292425721 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.296234862 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.293560471 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.295258912 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.294509695 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.294903501 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296308521 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.293814637 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.295516499 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295127235 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.29474805 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.304271308 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.315533421 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.295167945 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296126864 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.296825356 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.296612548 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.294898974 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.295518859 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295650595 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294229665 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.297573041 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304396474 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.304966186 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.298217481 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.294071896 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.298650995 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.295657338 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.298532329 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296247 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.294906496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29854116 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.298600445 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.296042083 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.29747876 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.296918744 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.296296934 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.297340812 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299304942 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29932079 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.307338918 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.296100264 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.296468118 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.298806684 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296337329 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.297445808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.300006273 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.304097944 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.322140176 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.3093621 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.309630749 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.303502311 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.2972657 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300020688 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308045957 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.299236138 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.29827701 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.297149817 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.300164658 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.299620196 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.303358572 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300017427 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.305245426 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.321943888 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.296886391 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306471034 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.320658333 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.298209921 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.299937415 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.305792076 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.299515789 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.298265243 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.299971929 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.299564613 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.307582005 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.321057735 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301758797 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301074514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.299422538 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.302615438 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.305225724 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302872598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.301644393 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.299158132 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.300623662 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301010767 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30042188 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.298254726 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.298280527 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.300517654 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.30253476 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.308671738 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.299531526 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303134914 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.300571611 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.304481205 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300747615 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30193131 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.29844082 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.298323304 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.299107242 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302273086 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.300497332 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.304212456 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.301016963 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.303549327 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.306648049 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302268319 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303511162 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.315964357 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.312111125 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.299601812 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301117891 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.304068321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.302467083 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301974972 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.299791511 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303426579 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.302415 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.30260831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303984835 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.304002124 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.304485711 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.319486995 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.323593366 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.303965849 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.302647331 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3046336 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.304056772 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.299795811 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.303258507 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.303657745 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.306750243 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.313313223 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.301631832 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308835248 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323087625 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.305574511 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.30707671 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.307249678 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.314588391 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.306160123 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304935245 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.302365277 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.309357071 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.322063891 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304347557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.312905179 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33665571 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.327071525 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.305341924 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.303852181 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303665195 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.308004095 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.307162403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.306135659 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.307277394 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307329125 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.306120237 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.305284935 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.310514343 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.304794182 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.309376026 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.306703896 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.305669727 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.305290461 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.302076614 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.304839155 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.305646839 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.307010875 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.305995956 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.304705459 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.305373347 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318686557 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.332218206 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.306059058 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.305002052 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.301156471 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.310633706 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.308061646 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.318445252 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.318354985 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.306864625 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.305350351 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.307180094 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.306197 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.307600543 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.30701924 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.307546392 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.304771962 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.307991199 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.317956643 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334181117 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.311953502 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.306991806 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307847251 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.306961951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308302546 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.308060028 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.306609083 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.310284873 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.310671928 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312989953 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.308460637 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.307731899 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.310165875 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.317733984 seconds)
  done (took 770.955688918 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308439475 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30591507 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306066627 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306700594 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307320973 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305594091 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304928157 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308582103 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306882168 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30773358 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307357621 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306307099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307585673 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30806383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307925225 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308589694 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305858109 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305477433 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308284236 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306848049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307747702 seconds)
  done (took 28.662013108 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.308185145 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.308964067 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307882294 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30950733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308793939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.309211486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.307021623 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308307038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30996734 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307940013 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.308927588 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31169555 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.308057153 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.308303135 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309237586 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309760896 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.311296084 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308007467 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.309700453 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308600876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309908315 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.307759049 seconds)
  done (took 30.012922782 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.310901497 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.311656264 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.311934173 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.307318949 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.312314089 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.310724805 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.310272838 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.315013534 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.312275193 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.311683931 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.310692722 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.312567402 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.318497252 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.318135676 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.313209326 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.312071882 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.456687725 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.313944085 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314754695 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.313275042 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.312405341 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.315722772 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.331462589 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.308780967 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.313143134 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.314273138 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.314688339 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.311345948 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.314675707 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.312931617 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.318282821 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.315236899 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.312813652 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.313880824 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.311372023 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.311811126 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.318527004 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.312434883 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.310430663 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.312556694 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.321183569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.336183916 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.315131593 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.319877248 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.336686636 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.314578432 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.316474603 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.322935999 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.312708293 seconds)
  done (took 65.79847215 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.314863598 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.310727485 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.310759983 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312920526 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.315223164 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.314879614 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.313958551 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315409583 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.312864099 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.312628023 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.315031958 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.312783761 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.312216991 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.316154489 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.317171884 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.313034255 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.310502768 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.313211876 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.312354837 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313066671 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.312889291 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.315077667 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.315587468 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.315042235 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.31725057 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314269161 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313078038 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.31796768 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.314166284 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.310804439 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.319333796 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.317117912 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.31652162 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.314459484 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.314160871 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.316958992 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.316445463 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.314333023 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.315662736 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315592468 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.316974359 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.319085284 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.318564365 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.31636985 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.314488876 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.314947585 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.315847064 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.314734329 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.316429565 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.317332723 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.31887267 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.314732066 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.318062127 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.313049923 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.317666253 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.318491286 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.316242195 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.315460308 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.317070001 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.31597631 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.316440965 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.317655053 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.315525552 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.318092913 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.320002218 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.316206819 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.317942333 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.318236357 seconds)
  done (took 90.665918793 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315787716 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.317263585 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318931088 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317398686 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320176224 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.31815027 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319683325 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.317438671 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318256895 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318539966 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319353312 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.31991626 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.318504017 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321109286 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.318746787 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316781101 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.319970353 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320606503 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.318271199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320002489 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.317651505 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317576256 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.317834163 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.319205225 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.320106996 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.32056346 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.318796636 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320596775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321050154 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.318873603 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.31929675 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.319731868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.318968206 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.321077386 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.319884726 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.3217139 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321655731 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323127273 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.322839076 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.321083086 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.320329154 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32014771 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320652561 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.321897135 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321558669 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.320228746 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320489414 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31929448 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.322192241 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.320649184 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.322060839 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322713922 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320375407 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322859462 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.323203944 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.321587741 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323140027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.323207697 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321838755 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.321486437 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324885513 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.323182815 seconds)
  done (took 83.078088617 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323698525 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.324655561 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.318228201 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.321832462 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.323182097 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.319066377 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.323227773 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.322673209 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321594434 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.322387627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323758462 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321634676 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322389013 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325013555 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31988887 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322242264 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320415173 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321024408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321476362 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.323215824 seconds)
  done (took 27.667330213 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.321658077 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.324546432 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.322914502 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.319992669 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.324202735 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322349736 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.324967345 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323419909 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322321166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326140335 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323519794 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.323282008 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320664018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32256323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326311926 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323838816 seconds)
  done (took 22.400625125 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.321190391 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.326632919 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.323683676 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.324837244 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.324281426 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.325172222 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.325015624 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.321670118 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.322460231 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.326483692 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.327696632 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.326022104 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.32629774 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.325962313 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.32410925 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.329641805 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.321964618 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.322827376 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.326373433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.327743412 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.323110647 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.324337168 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.32555233 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.324766334 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.324705658 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.326241911 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.326304996 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.32411819 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.326541282 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.327434799 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.327188672 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.326022926 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.326166625 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.325538831 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.327779065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.325251418 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.32855447 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.329946804 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.329630864 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.330085942 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.328317408 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.322751112 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.326654994 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.328510158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.323533631 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.327294581 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.324885271 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.325195053 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.326317572 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.324935932 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.32906935 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.32824301 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.330353988 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.328900066 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.327519591 seconds)
  done (took 74.162086013 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329445672 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.329124927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.324659415 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.328105645 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.325326399 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.326707988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.328740533 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.327542815 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327269442 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.327224144 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.324812363 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33064182 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325970227 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327218496 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327003709 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325976704 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.326380231 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328035666 seconds)
  done (took 25.120691898 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.326721092 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326700532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.328673222 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.325589315 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.324960501 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329469201 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326660565 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.329048068 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3311495 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.327086166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326063553 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.32962242 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332132211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.328284457 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328764982 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325976517 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.328334197 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330527226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327404423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326493805 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.33086538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329555292 seconds)
  done (took 30.451741822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.326328979 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.326660753 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.328073441 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.346105225 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.3502748 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.354972229 seconds)
  done (took 9.262571858 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338667446 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327948069 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326679576 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329048981 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327479568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326154366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325989892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325943651 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330881771 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326332813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327763657 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329980899 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327607041 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326088953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329803832 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329682275 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323409823 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32610675 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325816881 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328190987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324765486 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326410285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325449628 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328566896 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326218844 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32380161 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325587354 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326355642 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325058239 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329390363 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331070608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325888747 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328070358 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325738605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327043127 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327625394 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327035937 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327829127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330088487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323657067 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.327365145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329794205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326751079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324831949 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328663137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324826014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325720353 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325509454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326138078 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327818582 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329970683 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32389101 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328775556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328131973 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328021612 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329469389 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32683341 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326220406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327995864 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325514499 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3289325 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326678133 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325536733 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326616021 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329088647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326387885 seconds)
  done (took 88.862711705 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325331722 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325070746 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327107067 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328970057 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327436316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326444568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325958834 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327596219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327483475 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327618643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328663669 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327088978 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327261304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326418641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327505528 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328023881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327831458 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329257825 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327462674 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328259716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326965977 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327160484 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325756829 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32694257 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32956483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329050369 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327570502 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327149243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328081419 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326871524 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327925537 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327588374 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328928765 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328500572 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328318611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328382865 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328563924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32930689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328147862 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331161444 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328823996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332575451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330398024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32947887 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329851134 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32993516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330551713 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327569234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328308025 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327916037 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330578257 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331013415 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329733669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330224119 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328921602 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330049241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330803114 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32908439 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328115096 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332641444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329957246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330148955 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33489419 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330790995 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330055184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328586423 seconds)
  done (took 88.924351109 seconds)
done (took 1797.591222377 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.351316555 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.375106278 seconds)
  done (took 13.958929671 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.491955575 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.448857939 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.330724516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.325265078 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.324426392 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.325218464 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.332255928 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323817073 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.332200952 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.331864293 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.328682514 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.520002286 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.328922373 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.324385067 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.332211278 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.426230009 seconds)
  done (took 43.065149257 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.360634534 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.337043469 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.456292736 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.35751756 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.359571912 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.529336855 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.390669041 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.338147721 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.523352735 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.382071323 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.067413662 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.363795805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.337525701 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.56232713 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.355406102 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527734825 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600628956 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.068967503 seconds)
  done (took 31.154621922 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.814974988 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.330389018 seconds)
  done (took 9.380356616 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.328448128 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.328643311 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.368042083 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.330496352 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.391526487 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.411886266 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.362162581 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.352267084 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.367424519 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.359092718 seconds)
  done (took 64.840302283 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.354768651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.334213176 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.33478431 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.333529493 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.327067495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.33487069 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.332954657 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.333339289 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.14529965 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464183646 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.335825828 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.344120162 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.35558313 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.335384986 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.333720321 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.372876797 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.536237267 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.334460387 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.334040917 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.339225248 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.334706878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.418787279 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.376499994 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.333037032 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463633478 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.159141702 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.340553926 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.343838445 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.518358448 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.335652172 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.33248658 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.335681631 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.335823854 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.958272513 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.791430652 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.351889223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.358874536 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.345251312 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.332168095 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.488946757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.335777024 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.340572511 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.327029 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.778552625 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.496331669 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.454671505 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.667555516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.353268732 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.336411807 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.396983785 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.336438714 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.337074231 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.368881979 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.120713685 seconds)
  done (took 112.062133201 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.329705214 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.72502345 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499051558 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346332679 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.129697027 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.074448564 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.34394073 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.629681727 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357445271 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32537079 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610703073 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854814364 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.344072365 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.381737576 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.807669642 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.402543518 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323487785 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.22915295 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.341532483 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.328063658 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832142432 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326460923 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326120339 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.443703676 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364037389 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796458701 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.757327747 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.749069391 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.34640781 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.323377405 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80424452 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.350983889 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.341271209 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320643565 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.594540111 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699969155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.687485507 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.348494829 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343567602 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.32351399 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.33518028 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790645608 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69558901 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.337127601 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317851827 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782726518 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.34032158 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.33277429 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.332645013 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533547938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.962688958 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32647916 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.689283093 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.32600328 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.688460152 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38207124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.419358108 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808122651 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338131751 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.415784119 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.380207123 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324855348 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321614381 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325990491 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.315991697 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656233171 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.72261299 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322494053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660595239 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.786105313 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335102711 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.835697237 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.228122107 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332273836 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.384123893 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319903476 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.967028904 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801482668 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334232683 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311759163 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645458534 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338951338 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.594077839 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.335384973 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313191742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830785256 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.328229965 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.332824178 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319287853 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.338223172 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.103193349 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32381522 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.588219346 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.387960859 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320037504 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320418107 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.367459814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318257913 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.331131825 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.326344004 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832615819 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335024339 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.287622799 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340515831 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321951276 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319767637 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.323945001 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32295586 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543981437 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.878510246 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.339799363 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320076257 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.323332781 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.332468555 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.44550244 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.325271756 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.620078235 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336941195 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321619266 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320702881 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.069858446 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367178935 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312867578 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.326292747 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.202437554 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.528589991 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.34398223 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.317228597 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325229256 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.337939493 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.553257575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33976819 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.401571405 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324397603 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016439529 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.357164878 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.363076627 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.682619468 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.332848957 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.219879382 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341700528 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324279488 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608735335 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.585911563 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.618428966 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321759758 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.330112364 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012867678 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.343630876 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470299864 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343073602 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308060733 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521976158 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.532356989 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32581509 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.955363443 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.327029018 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540400583 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.33134173 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612857373 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80431944 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.338471842 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32802667 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023850069 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.012354358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.075301889 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.331221832 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.595074818 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.300166147 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.798397487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.32742257 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325047181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.88245792 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329331125 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333884629 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.324966111 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.328405611 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.460146632 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498424984 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.515987919 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332252397 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766427271 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399012867 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319456975 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.348368799 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.327656254 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673515761 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335130285 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.326660075 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.365655354 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.327582523 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.328322608 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792991639 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.261503 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.327489853 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477978646 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945545376 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.340317854 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327920083 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.042173724 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.539961232 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.855440911 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.383836233 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626093705 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.346920659 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361216324 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.019385721 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.405553803 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.784721884 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347121104 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.326177396 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920033935 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.340336741 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.384799836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.327180368 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.326949349 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850321962 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.343312746 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.333531895 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.553827198 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347031933 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.574657666 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.330351487 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.369759338 seconds)
  done (took 1109.266154391 seconds)
done (took 1384.9691935 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32673778 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.321270387 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312171525 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.331915303 seconds)
  done (took 26.530130987 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.340981743 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334470949 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.340178499 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336252113 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.338884518 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336658364 seconds)
  done (took 9.265462264 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.397815493 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.325257407 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.331414541 seconds)
  done (took 19.294470078 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.529295568 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.604063353 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.669814914 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.499516702 seconds)
  done (took 10.542566048 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.338271525 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.339696148 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338227079 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341834998 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.339132871 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342452028 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.3398795 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342052208 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341131402 seconds)
  done (took 13.302233916 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.149986469 seconds)
done (took 85.329661185 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.261470269 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 6.346950817 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.518321479 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.331990834 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.884029609 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.345243598 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.356564044 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.347436257 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.576136233 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.416836974 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.33795901 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.325875464 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.390278673 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.314147344 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.360716271 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.698495931 seconds)
    (17/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.344951112 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.385137271 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.880210675 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.425362326 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.90711224 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.873271467 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.799457338 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.359440384 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.901563411 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.187896867 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.236848181 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733683675 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 5.335648767 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.189562854 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.241532311 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.315904966 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.071201597 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.840666215 seconds)
    (35/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.316221118 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.463287766 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105957465 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.954083921 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.326635421 seconds)
    (40/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.191646 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.334595168 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.406239284 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.466318036 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.174155593 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.288096209 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249224249 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.163853489 seconds)
    (48/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.420163491 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351812082 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.316543343 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.448942084 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.272523523 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.323252099 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.598840927 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.320225514 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.382508764 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.334053273 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.90189757 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.659745518 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.69497693 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.318181891 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.444675113 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.261401247 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.393299454 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360917782 seconds)
    (66/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.38163849 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 5.587131191 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.309923548 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.350899524 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.463420026 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.336587827 seconds)
    (72/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.34407335 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.318532756 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435830919 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.317200117 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.735413785 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.535496869 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.347156971 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.906823819 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.976497103 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.528874115 seconds)
    (82/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.321586003 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.490439288 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.799843437 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.037290118 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.337000029 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.723663865 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.525595785 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.381972618 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.342728038 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.153646663 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.336564573 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.318588169 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42124736 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.400421962 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084558164 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.31985458 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.454151869 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.627608422 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.328558631 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.43769851 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.336994104 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.3736614 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 4.38488833 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.569150814 seconds)
    (106/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.318526371 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.701576254 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.323318216 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368000342 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.326860625 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.796010453 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.739859784 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.355852993 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.439336817 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337196464 seconds)
    (116/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.113533737 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.655536742 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.32301289 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.336913076 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.719911512 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.747330401 seconds)
    (122/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.441905748 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.655924131 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364606715 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.367571952 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.849889216 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.378369838 seconds)
    (128/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.931722737 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.746980103 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.629283656 seconds)
    (131/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.080663859 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.32611688 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.353969491 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.365515207 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.551562988 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.090017111 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.333386041 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.625229873 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.694102509 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367419512 seconds)
    (141/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.354922972 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.890471859 seconds)
    (143/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.3446215 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.426405279 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.353586203 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.33425245 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.752479682 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.558496558 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.316567766 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.473407197 seconds)
    (151/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.467389085 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.459723069 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.425263579 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.658710467 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.090964897 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359702474 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.361242365 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.386846428 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.346545312 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.740747318 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.78837951 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.056901198 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.357371567 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.401942476 seconds)
    (165/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.70332654 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.720530505 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.341651212 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.748644805 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.398864828 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.324761461 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.317700124 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.770555791 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.335978799 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.42064381 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.613388005 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360310773 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.90453188 seconds)
    (178/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.423056028 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.354736652 seconds)
    (180/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.435691926 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.349909895 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.811819369 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.094754173 seconds)
    (184/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.96344313 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.164468034 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.352395551 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.323860955 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.331620682 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.474406833 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.342360683 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.366185274 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.328217895 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.405532012 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.879727143 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.371473967 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432086947 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.390972551 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402184736 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.548956526 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.097471581 seconds)
    (201/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.708411254 seconds)
    (202/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364368585 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.553028993 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.121044556 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.72120504 seconds)
    (206/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.34188052 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.156389742 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.992833693 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547102478 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.327411566 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.554944771 seconds)
    (212/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.612681016 seconds)
    (213/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.521364818 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.329653092 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.102715229 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.116578645 seconds)
    (217/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.940984835 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.787619848 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.328516838 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.35153026 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200806172 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369877322 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.049590147 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.24137531 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.430633382 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.343604857 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.339615026 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.801945268 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.409638876 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.407902726 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.054082091 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.406394804 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.552855324 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.363010501 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.436150768 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.98174183 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.337863625 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.63763704 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.338440726 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.08691679 seconds)
    (241/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.359012302 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.594309748 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.778664612 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262064668 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.432551398 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.330078588 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.154111034 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.163114805 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.472392175 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.468816274 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357429448 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.548797528 seconds)
    (253/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.379797881 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.355642855 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.376394097 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.698180061 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.390495471 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371203368 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.59979664 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.378086067 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.741651313 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.336302787 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.522246316 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.714740794 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.343148774 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.752371806 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.373868092 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.366924087 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.963954071 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.488567115 seconds)
    (271/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.330013058 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.386943606 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.520265975 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.430859044 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349834455 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.365311262 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.328533112 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.691831491 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.346044421 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.379122971 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.48607703 seconds)
    (282/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.330658477 seconds)
    (283/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.436488074 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.438673752 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.44187858 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.431885638 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375777235 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.478349347 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.331055396 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.418995784 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.166675398 seconds)
    (292/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.425472345 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.459520367 seconds)
    (294/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.342257644 seconds)
    (295/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.375327126 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.409408837 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.394777282 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.719473237 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.412324443 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.328826463 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.428643782 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.998265302 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350017483 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.329860561 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.70599613 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.372578095 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.24246918 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.93198802 seconds)
    (309/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.610537446 seconds)
  done (took 1035.454374144 seconds)
done (took 1036.703490416 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.384362506 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381816597 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363323248 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.385755542 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.479258892 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.386098357 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374124935 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.365606603 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.412350444 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.412662786 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363489383 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.386332551 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.366826924 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.365849274 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.364133148 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379436402 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.37323221 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.366752544 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.383562995 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.375738032 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.381200879 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.365232525 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.4147503 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.384626108 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.369351891 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370767871 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.36900716 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.387079512 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.478013613 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.368544858 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.367597395 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.378247181 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359303855 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354887071 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.361286015 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.388846736 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.378842978 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.374996035 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370154946 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403250843 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.757892034 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.381850462 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.368210964 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.367283911 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.366576999 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372288544 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.370286426 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.372837348 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383151105 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382297722 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.762150611 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.399285908 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.370177902 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365502277 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.379212851 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363981176 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.369366327 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385095782 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.391653788 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386865149 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.337728909 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.364058101 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368531672 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.386891102 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.373933811 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.80707981 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.379564048 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375182193 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.739056366 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.380624721 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.764929415 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.384729591 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.371216429 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.382071815 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.400564578 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.354420301 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.356208001 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.366188121 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.376839416 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.369704652 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.38003072 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382234819 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.374989181 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.369040869 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381765691 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.390580959 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.378965471 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.372137131 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378805739 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.390750319 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.379416919 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.381876431 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.372986484 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.365131818 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.380142459 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372727444 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.374690267 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.372461713 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.375475329 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.382171254 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.755208862 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406975192 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365638927 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.36660864 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.369047067 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.385807764 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.752064674 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.379054447 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.392695105 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.417842482 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.372753077 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.341280587 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.364878527 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392828085 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38112473 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373418376 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365512876 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.361861429 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.761344008 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.403222771 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.37404224 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.372084466 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390976192 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.373345298 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367944964 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.365802742 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363792629 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390025898 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.494748468 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.381153613 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.403051621 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.369283768 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.376740473 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396366042 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389433007 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.404873117 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.375225264 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390798701 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.389984099 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.370564332 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.384467997 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.385086388 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.374490355 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.379376628 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.368320325 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.395832422 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387811595 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38809602 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.39467266 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.492558277 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.37058873 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.364907959 seconds)
done (took 230.194261632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429316059 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365295951 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.459859485 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.363940991 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.464760709 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.464606514 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.3656192 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365365664 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366940026 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.744296633 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.369318687 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.367182455 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.363408287 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.365190443 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44767402 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.369828286 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365436323 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710365508 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.370379542 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440630608 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.369792634 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367889962 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369618065 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.748561416 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.366484593 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.371449178 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440569587 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.36922033 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.778473754 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.364687184 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.366599887 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.780448728 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460596306 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.389533251 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.381225519 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.37779911 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.468504825 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.387307058 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450297824 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451309512 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.461895869 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408173727 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.362989766 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.366143194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370576227 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370834635 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.368377666 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.397130315 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.365404625 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368391679 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709923846 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380922294 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36898407 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369400442 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369129493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.39990106 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.369582153 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369554156 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.46195029 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.37135846 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.435352566 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.750670721 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.749425692 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.3743399 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.3716774 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.371163416 seconds)
  done (took 150.950858478 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436434179 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.445225155 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.483278406 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.386564826 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.424313056 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48650187 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.389573746 seconds)
  done (took 11.320624742 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.374677429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374264632 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.421077814 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422972583 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372742203 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518166892 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37395293 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383970763 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.372271884 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425099297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.371537685 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374411486 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.381743972 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.37338893 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420382939 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.386306667 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486937513 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374655878 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373589218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.531813143 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372251808 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383126026 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422424463 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.385586183 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.37762057 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379152975 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943865227 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376547508 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374742048 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374286507 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37280531 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.412382911 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375732426 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.373132781 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373802224 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.490345589 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.374830394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375064062 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376229959 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.371045641 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374485833 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375154464 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.376530678 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371389487 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377367216 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398588752 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.376836437 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375757413 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37639313 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375232032 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424686684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377727359 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.374143812 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.373642842 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.432038571 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384919788 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376156596 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.37525705 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377276376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372234756 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.53319735 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423473837 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37558766 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422762405 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377266435 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.379207727 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377964985 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377635421 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429553486 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.379148331 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423648251 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.375941919 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530468419 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400953738 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379954287 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.381148195 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379465397 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379244907 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.370562593 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382469451 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.377769504 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377553394 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382447718 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376381886 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376813685 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.481119671 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487024637 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.376711332 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.389980623 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.384406444 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375556725 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430952506 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.377750255 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.372732945 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429771648 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494800269 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431332393 seconds)
  done (took 157.32162028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382929271 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.386320977 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.380904136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393854081 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379976991 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37943154 seconds)
  done (took 9.579544843 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379489196 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380379598 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381148562 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38083561 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379424994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.380807344 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379440736 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378336281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.382029906 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3808383 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.379643199 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.3806735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.380254045 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376718949 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.378383778 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.378616712 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378885976 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377912883 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.380418547 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380670928 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.485079751 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.377734962 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381047798 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.380940287 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384028162 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381449301 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387329327 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381314826 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380256462 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385274789 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.398908537 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.383050173 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381121693 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387171537 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.384346826 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.382209325 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384046985 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383420039 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378072137 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.380746129 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381373606 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379654098 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383957453 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383732963 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382760525 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.385566799 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.386147456 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387549868 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.384415258 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383599361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.380750113 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382449025 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383304072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384627569 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.385618683 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401384011 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388451923 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383230091 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.38113863 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383980267 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384938824 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.382260879 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384388153 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.3876302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382215265 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384894279 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.382480117 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386875944 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814580734 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384259248 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386130638 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.38269056 seconds)
  done (took 102.37872634 seconds)
done (took 432.825496323 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.727625906 seconds)
  done (took 8.0092685 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.477114822 seconds)
  done (took 7.759903651 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.25779476 seconds)
  done (took 21.545494022 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.466219521 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.420716253 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38440815 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.376305503 seconds)
  done (took 26.927371574 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.627441414 seconds)
  done (took 7.910924702 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.376721361 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368465266 seconds)
  done (took 14.028880807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.388760348 seconds)
  done (took 7.668379855 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.084874792 seconds)
  done (took 8.371015929 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.404879765 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.397990788 seconds)
  done (took 14.355586252 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.357734857 seconds)
  done (took 7.639038615 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.2606242 seconds)
  done (took 8.543327638 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.381713923 seconds)
  done (took 7.66698411 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.430480995 seconds)
  done (took 7.713132471 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.177737367 seconds)
  done (took 9.461080742 seconds)
done (took 158.888472324 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.380633125 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.383124649 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.377591178 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376570206 seconds)
  done (took 26.798644025 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.425428806 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.421646314 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.421322598 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432258669 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.4196883 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.415676055 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.41335124 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411313769 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.431463483 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423017839 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.423703481 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421190615 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419030871 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417100087 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.427850471 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.4186159 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431767025 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.424394438 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.413067708 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423465234 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.386903105 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.431643525 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423024457 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387037182 seconds)
  done (took 35.346045318 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.908678458 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.459933816 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.539820287 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437762341 seconds)
  done (took 7.631096866 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.436892541 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.443044568 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.452851588 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.491825025 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.516052844 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450539662 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.416591833 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.410270097 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.397088908 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441265602 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514104984 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.46071161 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.526095073 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.388327944 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572234159 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38847345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386732386 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438253411 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.492175767 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.505674013 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.389476191 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.442498759 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443875288 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.455176573 seconds)
  done (took 36.143565249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.389431697 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.408530116 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388271642 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.389542578 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.395807505 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388391519 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.388604058 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.391569122 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.387740028 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.395684937 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.388634411 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401588062 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.389170299 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388377833 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.395051335 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390836549 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.396684611 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389073179 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.388750076 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.394434229 seconds)
  done (took 29.133324771 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.382149673 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.237486296 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.735362799 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637470237 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.382250545 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.382405694 seconds)
  done (took 28.044711609 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.453057916 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.597815462 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.388643247 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.739881486 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.829838998 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.404079064 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.391843502 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.62123031 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.928551732 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923535074 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443592318 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.454484983 seconds)
  done (took 20.463020216 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.382352254 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.398370977 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.384994371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.413780871 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.441165107 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.408006832 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396778731 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.383503384 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.441506807 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.462000873 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.408677728 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444641587 seconds)
  done (took 38.254431465 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468795371 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43425995 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.340300426 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439270585 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105310041 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599440103 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424333771 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838740786 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.387636476 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661162546 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399689077 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476925714 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643248317 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397913574 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385524365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.356578964 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627323387 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848701473 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390346561 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.409038151 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414322967 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392163244 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.45843306 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.416458341 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601384319 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.529388462 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648846174 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.165552976 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680355265 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399191644 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398677537 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387361707 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666432068 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070747124 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500282409 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398703525 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404133631 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.01731862 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.383228184 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.309982606 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255380186 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391046681 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399145925 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388958937 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322078211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389203907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840171817 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.393252343 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.101523168 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388920439 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400928234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487322832 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.394872809 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.980618168 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447346806 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354146283 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.387354954 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484103879 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982075351 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774955719 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39749079 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.324685358 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390878645 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.388139548 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020317317 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.507221659 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393935169 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393504495 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325943819 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.353531776 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407185718 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536794111 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405283274 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.0412737 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080509103 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411285166 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320610265 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914242927 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399578964 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.327323909 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614500389 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163874485 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324053543 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.32698444 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31500253 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062748439 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381871408 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.734872556 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393535446 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836564281 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379123197 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390896721 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390857916 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591712126 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.249601604 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363547351 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.283576728 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503001696 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376239985 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.818313444 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30070926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360096203 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620103487 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.573838884 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37674608 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347634363 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584907728 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379354572 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37967264 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365107678 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.374543854 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.925402234 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381001273 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.745116664 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37877487 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.139366867 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066054404 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367992499 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.467241339 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371077362 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606142778 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.094254726 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24802606 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43163702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366935343 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362477001 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.379422524 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954815163 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.245506265 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.3588282 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373176147 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.373790185 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.362655956 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307893459 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.358193438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365424045 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.141708022 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587712684 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371758229 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63947543 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29984644 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51128073 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366860469 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.581201289 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561235029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.375336393 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624095897 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369194314 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373012162 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370542057 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378081549 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46065773 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378287996 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.368298878 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616802252 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.362527483 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.362463181 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.36989303 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140176838 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36367899 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.362930177 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359428936 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932055564 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3421031 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360212048 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355759313 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.372846221 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427025344 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367345078 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.37141165 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.149359206 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391813493 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.355131164 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.361091675 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580766827 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366163451 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.357452978 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437871809 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.550523141 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926896865 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375374716 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.290285356 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.066719185 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.049497904 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356487702 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556725804 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35686352 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369558216 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366749446 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372746485 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913798921 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365758498 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.287663092 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.362584364 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366775375 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.360184276 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356091899 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.122088716 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.770175355 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357715381 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.368354147 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50059833 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.369360894 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289866871 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.873680342 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363604783 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356078488 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.130497037 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391371354 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.295426944 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840886404 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608989679 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362833281 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363753789 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.457560087 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.386473913 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.355217772 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314471815 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376873606 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.390059806 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35898068 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.368612485 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.346998177 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.721387504 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924768848 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057779525 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896542211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27755421 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.350879183 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.258176065 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.814971187 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291355158 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.016086708 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540872612 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.812726652 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303982499 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554552381 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.545118291 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115920589 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369474688 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585397891 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269309895 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.320641677 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385615247 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570045567 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393305494 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36379081 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28783394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.636691837 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600988559 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275254439 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438467593 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798081524 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3130926 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.146007001 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.412959633 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.684725 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537178982 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.905809691 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.748477587 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362174427 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361213058 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84058735 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363400566 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.885463789 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972896353 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3700639 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.558816064 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289186714 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.370320802 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.371195447 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.359581434 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.63938669 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.352011273 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.607527781 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3718805 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295726742 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366536061 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88178739 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.230930856 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367089822 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36031158 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076494814 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369351069 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65063566 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.377765409 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.126716029 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372430519 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296382947 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297360895 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.054545966 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362756717 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338054969 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834408744 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.365831586 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366212461 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382415728 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204548133 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618665175 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.375393434 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935430179 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603801418 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362116353 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385228516 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.463138871 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349117526 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.36545093 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.24340852 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598816437 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385196496 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585973126 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.325822591 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.270104833 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.424194346 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577178058 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.244737426 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369378427 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618208159 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.086583294 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.369905663 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072048208 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403294655 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374993109 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375266828 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358018125 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399458704 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453372817 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374324138 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.37425846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.373936192 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533402325 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378821475 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366659993 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.380370529 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458616146 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.7877227 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.135029068 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.128783566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940789893 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122887116 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965017929 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394729198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365055233 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366902059 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298316706 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508577639 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.893390871 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638007484 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495728901 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.35624232 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391146613 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365021212 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384526824 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577578184 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642328929 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.340506399 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373540044 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153012322 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.251279026 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37744675 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.578002947 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852876818 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917002639 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47559274 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373655512 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.814997357 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639841513 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.456276326 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369365506 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958865191 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.382533259 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.692903878 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.390299138 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370696261 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514792009 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377768173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049273507 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.394859565 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.523754307 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.141115423 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.333964383 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623460683 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.848299706 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379957611 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946601608 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07392806 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633029434 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438541884 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378567738 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.477918958 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516536821 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.373825221 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257300754 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370443006 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223105299 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.080842901 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379109895 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947349183 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647523529 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.369783396 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.375730828 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390875589 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.381158284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592116404 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055142005 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583491443 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380648914 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370994889 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.941485439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951640631 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398030534 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303397668 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367405766 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623225631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622627619 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391859584 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.823478206 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.082057722 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90506029 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.344487927 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396093196 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383069054 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066178051 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949745129 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.153808949 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855752781 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.028104635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378372799 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645443491 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.375819186 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38205761 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647470993 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376447555 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384211727 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382950429 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.950357389 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146970444 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.385424906 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.451261348 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.309409355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.604705398 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436173552 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307241397 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363646977 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.548151733 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370291936 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502930716 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37507514 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.377117944 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384414882 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.105225328 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645059299 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.370704027 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.367185809 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.353569516 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378818233 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467373304 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618108211 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370869646 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046889708 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7250668 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629670901 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384435277 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.35297177 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.377897347 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375373244 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093313341 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37774464 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368387793 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924635985 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.368078192 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.383488518 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377452441 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.589170772 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586627841 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385309773 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386091805 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372277569 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388563191 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.274644483 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143191829 seconds)
  done (took 1654.912976132 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.389003784 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.416315368 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.395136754 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.387790186 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410993707 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480149561 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.435841228 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.507039175 seconds)
  done (took 52.699666463 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.376546494 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.527151653 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.404539794 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.377886301 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.383778664 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.37808999 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.8209641 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.39689288 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.382346413 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.384170508 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.389651995 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.386087881 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.009451556 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.384050681 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.386129455 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.36037738 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.384753464 seconds)
  done (took 66.019468705 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.374916022 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.954472814 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.482369271 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.377944838 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.468272203 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.386255705 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.295750553 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.378987721 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.383030518 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.711769593 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.035982295 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.402519282 seconds)
  done (took 85.533406994 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382197459 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.383528587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.383789205 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38477041 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.381251249 seconds)
  done (took 8.196357563 seconds)
done (took 2090.469236855 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.624020488 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.037700834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.012098891 seconds)
  done (took 5.329867262 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.520719506 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.570878343 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.692585798 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.697915644 seconds)
  done (took 7.760256141 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.652359736 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.760553211 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.566987525 seconds)
  done (took 6.258188169 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.758623294 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.3853602 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.393290196 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.376483565 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.377248542 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.37961052 seconds)
  done (took 20.413476366 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.380276748 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.383553457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382357642 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.382508288 seconds)
  done (took 6.809378033 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.35726133 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.072893238 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.359302383 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.377378635 seconds)
  done (took 18.445545146 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.126688782 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.138754916 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.123275465 seconds)
  done (took 7.668338133 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.3891795 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.213461021 seconds)
  done (took 9.883094392 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.662576838 seconds)
  done (took 2.941167366 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.51109311 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.709342374 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.399742099 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.307681587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.427525716 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.133349666 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.983370068 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.576399321 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.281015633 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.512280389 seconds)
  done (took 28.123026898 seconds)
done (took 132.082964023 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.166285638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.753682719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.590388299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.139146331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.597653955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.588077271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.584366635 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.106614656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.713675856 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.64227771 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.171699617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.598065566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.531384613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.761152441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.5308863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382805227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.614285896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.216308963 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.813385941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.012174611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.579799502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.775337044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.000183907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.795928168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.599389849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.536469556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.358513265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.375345235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.996551453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.448079437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.538692372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.199818344 seconds)
  done (took 191.002403875 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39125237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.370691326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.371280586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.396752809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.372022893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.380588307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.386787572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.38545291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.389208004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.37924736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.38373055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.374306698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.375306187 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.388338917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.389590481 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388164865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.372100098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.381780859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.391315603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.371269923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.372531755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.373135306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371739362 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.387963831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.383229052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.370911834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.382804044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.373040433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.382198985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.372367719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.384234886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.380689812 seconds)
  done (took 205.457656132 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.381051493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.381660706 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.378231624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.380656246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405034668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.384395232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.384763193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.38526016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379726851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.382931735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.384272413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.374684723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.389173926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.37459985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.374250185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.371992961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.389974619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.395397431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395391323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.383465658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.406968256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.386778963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.37298089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.382398199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.388324321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.382567009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388684744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.374682012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399436078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.373936044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.382610694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404199465 seconds)
  done (took 205.605605064 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.585161974 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.392045311 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.393330534 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.353635576 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.39405079 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.389697079 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.39180539 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.584141753 seconds)
  done (took 14.769788486 seconds)
done (took 618.124919056 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.692035575 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.396292095 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.58710034 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.413454757 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.16187327 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.428659285 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.411893003 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.580618168 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.317806894 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.584146279 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.659436776 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.413828426 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.813221862 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.403519107 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.665989555 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.50706069 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.306891511 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.422520034 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.71590105 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.941088846 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.67442871 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.871221095 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.598148988 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.309377056 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.819313364 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.857410372 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.130257498 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.291513449 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.417721703 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.732917331 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.042402098 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.379640245 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471075007 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.466187046 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.526177668 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.504641915 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.366956799 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.464411691 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.604190137 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.63938553 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.915129459 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.135023535 seconds)
  done (took 93.930302296 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.378359552 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.378251328 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.375832887 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.377374661 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.37652215 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.376009953 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.377698654 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.375807638 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.379050103 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.377017574 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.377129559 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.37761401 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.375100827 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.380417074 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.372539623 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.377185622 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.378322822 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.377969585 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.377139095 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.376742459 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.378835541 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.376316563 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.37827208 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.376074354 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.379389374 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.380134545 seconds)
  done (took 37.10338387 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.398294044 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.649714669 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.804372535 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.401713417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396084388 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.402923805 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.472792669 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.399081392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.399341627 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.400140172 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.566739232 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.401135444 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433004129 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.828232656 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.397464579 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399389634 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398378479 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.397752815 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.660750661 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.405623516 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.493223701 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398359788 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.474263844 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.407631707 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.415185866 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.399209305 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.403408469 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.911388429 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.4143086 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.562434577 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.178315714 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.470202051 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.868045838 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.832078127 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.1792268 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.40053402 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.399638302 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.569842542 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.391326317 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.399155665 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.477194658 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.399761679 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.819745971 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.010597549 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.414550273 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.399275674 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.944705284 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.586592229 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.639916561 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.408055248 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.832413044 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.392342805 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402695528 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.401946762 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.641080599 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.406321777 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.399466748 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.926274638 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.419834165 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.476350893 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.402607818 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.40060078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.664051715 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.402291677 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.656897751 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.39910206 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.409440384 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.420863264 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.819608021 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.394229181 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.038633013 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.407468237 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.402720356 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.568623899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.646345032 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.960271114 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.421894753 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.667290318 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87259617 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.491808301 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.406828601 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.901500585 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.494529683 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.40718652 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.406427768 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405280405 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.402056588 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.447969248 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.477073625 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.967110968 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.037661616 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.931519448 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.488380734 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.4129368 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.403676109 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.927787741 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.411461909 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.403753396 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.813924701 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.02913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.411324356 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.410522184 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.047515607 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408520437 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.480187152 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40687955 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.826417923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.396616831 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.452146567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.402118475 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.410620312 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.427558428 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.482217252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.403636488 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.404397471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.014410132 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.593284087 seconds)
  done (took 183.477079314 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.409824904 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.387761032 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.398816811 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.389511452 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.397355634 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.405320931 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.398119852 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.399466792 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.401816791 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.396903789 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.400047431 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.399730014 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.395760116 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.400923645 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.401432644 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.405724058 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.011277616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.401257412 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.406217952 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.390611519 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.187586027 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.398544212 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.397729161 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.407128288 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.396670468 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.396545245 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.400825272 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.409488136 seconds)
  done (took 153.89139472 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.404715525 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.969327556 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.421555821 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.533960505 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.425556448 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.404730805 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.530523429 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.459575347 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.42143229 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.407534451 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.40273661 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.708325367 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.409931904 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.919501894 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.592238906 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.548610644 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920302556 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.419992715 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.403182097 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.406210506 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.533354485 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.40961819 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.706555271 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.97148443 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.425612334 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.969741863 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.393925479 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.40749121 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.40514122 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.971796337 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.418039703 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.70817754 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.479900337 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.464444367 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984324504 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.935689005 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.93740733 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.552123211 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.407113374 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408950446 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.408448659 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.393098277 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.972036135 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.425830691 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.407251664 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.960282028 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.428436796 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.410595195 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413563194 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.406218219 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.467100697 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.481580375 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.72990691 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.980444742 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.496270594 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.422246979 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.534015522 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.789816897 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.409782133 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.922100869 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.393451986 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.977291118 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.427967434 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394834148 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.407979942 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.414489792 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.555394894 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.539202792 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.925034915 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.425518248 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.92691034 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.570526056 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.411178418 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.407484838 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.410367273 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.977814605 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.939792093 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.570411018 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.5416318 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.597114209 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.393866934 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.411147908 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.397931848 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.482329791 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.409422789 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.980527681 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.9401087 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.425954999 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.414265319 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.412270672 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.413975461 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.584161613 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99343184 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.500367613 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.912752199 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.728324589 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.70366981 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.402838915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.467614948 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.423413164 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.713070353 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.402201385 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.465484398 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.85609194 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.71284645 seconds)
  done (took 167.327241885 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.652178831 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.594482379 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.497021972 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.541129625 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.99655779 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.966009106 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.652718411 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546540712 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.5196809 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.665100821 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.540345591 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.491856244 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.583766068 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.488806274 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.130657504 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.495768381 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.51687194 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.548258366 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.518770858 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.422141009 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.04362927 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.692358028 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.579593818 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.254365263 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.49707224 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.175813484 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.971246735 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.98563439 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.58890194 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.726761972 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.953872684 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.535922265 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.35668516 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.0856421 seconds)
  done (took 67.122813456 seconds)
done (took 704.149465318 seconds)
SAVING RESULT...
DONE!
