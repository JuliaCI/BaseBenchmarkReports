cset: moving following pidspec: 21419
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.226165813 seconds)
loading group "string"... done (took 0.459259754 seconds)
loading group "linalg"... done (took 7.520439323 seconds)
loading group "parallel"... done (took 0.169484283 seconds)
loading group "find"... done (took 1.143392574 seconds)
loading group "tuple"... done (took 2.074171185 seconds)
loading group "dates"... done (took 1.316769146 seconds)
loading group "micro"... done (took 0.243790828 seconds)
loading group "io"... done (took 0.650000199 seconds)
loading group "scalar"... done (took 40.501586988 seconds)
loading group "sparse"... done (took 12.416526661 seconds)
loading group "broadcast"... done (took 1.103189673 seconds)
loading group "union"... done (took 13.570233778 seconds)
loading group "simd"... done (took 4.755326408 seconds)
loading group "random"... done (took 9.596248981 seconds)
loading group "problem"... done (took 1.976697046 seconds)
loading group "array"... done (took 22.384319025 seconds)
loading group "misc"... done (took 1.431340947 seconds)
loading group "sort"... done (took 3.572036438 seconds)
loading group "collection"... done (took 19.32798844 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510197277 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135589978 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132502629 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147220255 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203028078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143570647 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157213953 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112707606 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.966030817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184763322 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15358126 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511534452 seconds)
done (took 5.100926933 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221347967 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0933081 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102054071 seconds)
  done (took 0.867102873 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076702043 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144420996 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093330173 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078039509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093999352 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076991334 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094980086 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076787211 seconds)
  done (took 1.337023767 seconds)
done (took 3.183349505 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.729061247 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275360468 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201507648 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45872017 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196752399 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212225016 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668798185 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353269134 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250394472 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099122802 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14316217 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387398452 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136340595 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675626198 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089795519 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122356775 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175714232 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454834273 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082300841 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109338278 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116532888 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140970122 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128586274 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090187221 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18553069 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080879262 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19297628 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107602362 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079506259 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289150135 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200079913 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679599735 seconds)
  done (took 10.828819972 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110164491 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132944978 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09705292 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13746321 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13231098 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098437788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083946599 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095810918 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120148876 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17477398 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129163616 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120605686 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094231365 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081703111 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114800646 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242534795 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120283194 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102281014 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100484831 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102805521 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12060775 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111554718 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107452061 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092561552 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165419783 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219747217 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110690755 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12501385 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094988528 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114199029 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14408472 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14175063 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094704428 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079761292 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171128533 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123993362 seconds)
  done (took 5.101239817 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187191117 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119102389 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167428246 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162507252 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139367598 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159187407 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113067431 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242514726 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.12571099 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.126381021 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162133994 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140136733 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113700083 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079236249 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097242295 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119297303 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078508411 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.634540839 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161210725 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132701021 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077223311 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112389431 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102206088 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083251793 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103836413 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0787793 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098105941 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10648374 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.320614591 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162539724 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098065784 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138156619 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119445712 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080754891 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133505322 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207265095 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109408395 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133387401 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095868727 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078600367 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177085917 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10410263 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079178928 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120829655 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133375007 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13305335 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096297798 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08051097 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204116743 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096163969 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112445287 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.967507252 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180517802 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090601802 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095416345 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324142215 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099883347 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097578016 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077174685 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291801668 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.179838906 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097836147 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080320892 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096482263 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080458978 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.419796307 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096971959 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.895635708 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081994005 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106915817 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082316659 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095667218 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104005843 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086714392 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114540532 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07934811 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09929341 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078858067 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096608796 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081554017 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108063891 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101154794 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079590464 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165124873 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080242849 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113984022 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126794244 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083024003 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094882711 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129764248 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083054144 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09697917 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131595453 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080319196 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094290103 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106894015 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082828935 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142018539 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09620464 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197753654 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079393445 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124184951 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098513445 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11355141 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111046284 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098617498 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083879956 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095477629 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076356468 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164643607 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079186263 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096585277 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080282707 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109984485 seconds)
  done (took 22.7426686 seconds)
done (took 39.35136187 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325234761 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100872987 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101382207 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101166351 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099039503 seconds)
  done (took 1.477797128 seconds)
done (took 2.203162128 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.298558172 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17167562 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094442264 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165452524 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092939102 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173102587 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159858636 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110526435 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217865182 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076111761 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163122798 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093106471 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07527802 seconds)
  done (took 2.640987656 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094827965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113683545 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081520626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109499136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076402538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110807159 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091562269 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115933727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108739364 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083685146 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093330104 seconds)
  done (took 1.80170901 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093432241 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111790452 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080824907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109935728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076361883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109951852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091568446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115273447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108742077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085084986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092244205 seconds)
  done (took 1.796774898 seconds)
done (took 6.953400034 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090409622 seconds)
  done (took 0.807839925 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.914846618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.948452787 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111668487 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148110851 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297257187 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190133068 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47230759 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124950503 seconds)
  done (took 11.134371605 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.143577491 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08464934 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102236405 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082952327 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101752393 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084891575 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098449208 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099151908 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084317851 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098011383 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082765603 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097830466 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096954541 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.0855961 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099637994 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084831646 seconds)
  done (took 2.312206338 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118373008 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118377712 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104838163 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107703421 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086714863 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10354873 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105520067 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087730424 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100524616 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103030903 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089625621 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10466428 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10342295 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079340419 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104885623 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107327106 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084995656 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104501438 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105449268 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088699432 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106253254 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094083667 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086065188 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104922745 seconds)
  done (took 3.231757962 seconds)
done (took 18.207928665 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157818041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107255971 seconds)
  done (took 0.993328925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093805216 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112143627 seconds)
  done (took 0.932049153 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097336753 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094448602 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119974165 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109643399 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079377717 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095934735 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118081658 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078694326 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095464297 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079947396 seconds)
  done (took 1.699003596 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08192298 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10880408 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100727798 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094115196 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102842609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094386402 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086931582 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098302287 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108684535 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076099029 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101483271 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113944157 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085231932 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115486617 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104081148 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08299511 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101620815 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098862727 seconds)
  done (took 2.487800206 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078874504 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096441705 seconds)
  done (took 0.906423088 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080461349 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093251152 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080438236 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09666335 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093144356 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075930352 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094463278 seconds)
  done (took 1.34546592 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.467413705 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134914334 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25172633 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083775762 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119713298 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301164062 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096930348 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084231567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102463518 seconds)
  done (took 2.431154231 seconds)
done (took 11.528019456 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092336683 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116597529 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111412713 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464009195 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105552061 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097184048 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159071128 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248512928 seconds)
done (took 2.129971712 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149255444 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323018341 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112693599 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066496463 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094828885 seconds)
  done (took 1.336997492 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078560125 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099402506 seconds)
  done (took 0.915745043 seconds)
done (took 3.142332776 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080059733 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.130789075 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079279363 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09500083 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076918283 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097809796 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077274905 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095277786 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079985256 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095742596 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095978183 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079004165 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09578353 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077497974 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093666641 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079506703 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093062067 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07630365 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097013307 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076695642 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095794579 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077600767 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09450011 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077171565 seconds)
  done (took 2.890761653 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098899219 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098221978 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102458214 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085552971 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101365424 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085751738 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102182903 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097391669 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08634563 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09906553 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099971362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083621103 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099499166 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083190726 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099142534 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099542065 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084936053 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096820878 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081765006 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099843739 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102035328 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080062465 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101115579 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101802661 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083596551 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100319604 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082618153 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096658809 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102096673 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082220682 seconds)
  done (took 3.561416075 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084056748 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093976579 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077579607 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101754456 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07694408 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09631762 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07688436 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095651489 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078782742 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094467466 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07929874 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094918728 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077241002 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095975482 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07935877 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097569018 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107398446 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077327256 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095129862 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077501716 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097466745 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077110843 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094521902 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07719632 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093798893 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076369497 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094389665 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076918405 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095395531 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076962158 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097663658 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080509558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09424152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084523501 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099026474 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077202851 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09757783 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09397888 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077722341 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094917327 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076651624 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093959706 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076824919 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101497144 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078016089 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097370998 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077278034 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095942036 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078100411 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098305288 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076522959 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094662807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080493801 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094483973 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098247077 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077019732 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0956469 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077666434 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095430945 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077582071 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093643419 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077324563 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097922844 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078507776 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110481828 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084256528 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093677668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079526315 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095882249 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080652489 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096574197 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108603689 seconds)
  done (took 7.101668325 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08205639 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105436219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079290534 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096949561 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075432001 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096044898 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098387383 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077954594 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097095758 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085710257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096122888 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079673576 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096187231 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106825986 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078014549 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097046968 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083710826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092639697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077823806 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099096969 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078875452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09854965 seconds)
  done (took 2.726595922 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207904949 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104907811 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140368396 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106915224 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082921688 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105287397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101249708 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086191987 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101424883 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082588004 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099749628 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101674058 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082371196 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099609774 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09958304 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084363483 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101647477 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085160868 seconds)
  done (took 2.625671482 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091996989 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097562563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10139679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09773475 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098084067 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082311006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102948846 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106886739 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082701143 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097097705 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089779829 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099586488 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100104725 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079848805 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100591708 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079972473 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100449715 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080397552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108180494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103811889 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103615077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09034105 seconds)
  done (took 2.848546188 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095544422 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100203171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116854404 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082869476 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094198846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07908857 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10479498 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080878293 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.1061903 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099421058 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08119335 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096509482 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086194975 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097168067 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10283804 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080754383 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100222955 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08059233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099621812 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076597082 seconds)
  done (took 2.616574723 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101920914 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099945022 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099614632 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091216529 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100431491 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082006528 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108815825 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099383298 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081701342 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123610982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099142818 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082866043 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108805916 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105573172 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099022637 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091267227 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108477969 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109418834 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08346792 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099675564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124847526 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0822933 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109170183 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209434188 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082459895 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099907467 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099683059 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0887056 seconds)
  done (took 3.628924142 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080933338 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098265697 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077911481 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096322485 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07808666 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096177946 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078426398 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095807336 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080416626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095686562 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07994343 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098042411 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080465326 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09774202 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080323042 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097971672 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082384712 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096287697 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077840924 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095545546 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080272398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098688158 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081142664 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095783706 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078367329 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097454057 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078589657 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095993344 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080696466 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095434162 seconds)
  done (took 3.406446662 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090484444 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105337716 seconds)
  done (took 0.955207509 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077911547 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113788778 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078668118 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10258765 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085211986 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098489582 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107203227 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085724128 seconds)
  done (took 1.507645308 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095648522 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110017114 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082748439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111099703 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109337639 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094261089 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159161878 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099675249 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086726208 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097422371 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111594544 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080318542 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103960253 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081282411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104415376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087138673 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09628678 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087623418 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100947772 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097698067 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082949894 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109367649 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084111327 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095593171 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082886036 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10936073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107658201 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082257497 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101830965 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107218753 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085950645 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093433933 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081414565 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10083037 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078887069 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108621823 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11137931 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084084014 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107861217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082697424 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110066221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093432482 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087004992 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105380034 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092221571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098798025 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083135622 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094435545 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09680526 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083386225 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094528803 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081436836 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093271015 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08846345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103240599 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112147477 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080584347 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100591623 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084737247 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101832286 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087486154 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100965647 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083952911 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098721353 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10623311 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085500097 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106435123 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07746892 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092504918 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079963939 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106790448 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121840538 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089875841 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09968091 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082261582 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096688014 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102495573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083171667 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106702079 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089197357 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099708178 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105717648 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089232821 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098747701 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084490325 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106872233 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096961758 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083017999 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097240883 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095702391 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097812127 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07939339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09625357 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10812394 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08381062 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098891225 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079693311 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106585428 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078835884 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100228058 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082636311 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100428827 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108511109 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087783173 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105745831 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107030583 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087799886 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100147556 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084368572 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095848294 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083014396 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102195728 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106436214 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075195241 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10230758 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08237001 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100882484 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089664347 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097706015 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082567682 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107501747 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106982218 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079961293 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095869917 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085306255 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099495509 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085700036 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10631328 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099098921 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077264648 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095283533 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085875748 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099286569 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085957002 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104380112 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102212088 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075904934 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097343633 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086499467 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106514549 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100466941 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082396333 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103698333 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082879376 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099004469 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086866935 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102018601 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080747998 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103754982 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100979367 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076814059 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104408818 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084449269 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098976897 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085003695 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102850796 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103079102 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08248009 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098409881 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087354332 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101606515 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081064537 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09864291 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080220253 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107984387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102208608 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077264401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097946019 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089518701 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097735469 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080808816 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098792597 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102719322 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082764982 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098098411 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082188172 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101055346 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112059602 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08709603 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100981619 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088056826 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109780107 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081471988 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102021508 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099616257 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083682051 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100575059 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088787894 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105549441 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105971673 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084857959 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096135105 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088161823 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108156626 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081464055 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098366357 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080626681 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103288121 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10595662 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085340741 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100535842 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080328569 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100486712 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103928366 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084366948 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100124201 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080456027 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105212752 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080802982 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106526185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100545784 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09087489 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103227042 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077928038 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10415829 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097888702 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088087371 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095354113 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080380776 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099002751 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083374328 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099143885 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084689043 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094759249 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089033205 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108293576 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100145322 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081374953 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101030736 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090996733 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101939451 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085355053 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104108039 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104942491 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095726867 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099660289 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085389501 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109111756 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101044319 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07592112 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106844381 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081336226 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099334316 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08051272 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098999103 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085372532 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109636712 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105346363 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076395608 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103143651 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081059086 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099076505 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078225052 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107351587 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104354076 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085106979 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109082366 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083524672 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100980268 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104655237 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082036516 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102314139 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083856362 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103862923 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083875764 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103073603 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081731786 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101834197 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099708116 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080938379 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102559712 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083442122 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100614315 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088174704 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102296008 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082863661 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102760867 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101688583 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083717021 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101525761 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082254172 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104566909 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083149093 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100799649 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085458784 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096027424 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107557322 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082121098 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109551539 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083013474 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098357326 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088443728 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104541092 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106026005 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084190563 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102339693 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084023761 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10049248 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084697466 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109181793 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097739002 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091191241 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106193169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083344892 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104197174 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08280848 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102677853 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09963094 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083966926 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101440695 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082241563 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100842173 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087945772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10343157 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082422219 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103124589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102615335 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082766712 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102380536 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076615754 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099889293 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081764132 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101163469 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089338676 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101814052 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103646511 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082497842 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102704144 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081909617 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097458022 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090521079 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110300384 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101609151 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090563576 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100771661 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083814648 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110462347 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095707865 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081472428 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098937144 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08065054 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10823749 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083553496 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109223946 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100367522 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081917345 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098234957 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084198 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09995788 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077672934 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099184112 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086280715 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103116864 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081087189 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102442857 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085062967 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102137101 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108539176 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082028678 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102983159 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08351765 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098956227 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081474765 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100227707 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103602403 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083479511 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099100332 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079927209 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10185622 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084528999 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110495789 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083259838 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102313761 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08933409 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101624145 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104280237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086701656 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096091453 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085681324 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101631741 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082275899 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100035543 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10531432 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086930043 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102583195 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089799434 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101246089 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083315987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101723319 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099929181 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082814323 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10165628 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083508516 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100564217 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084486051 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109954079 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081314734 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104209074 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10214331 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083201556 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106595299 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084969993 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103033824 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109363477 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085656693 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102493205 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089334989 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105267208 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08625987 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103413324 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102666468 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089120999 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099888734 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090854036 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102210628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083986052 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103128221 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08031137 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1025068 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101010879 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082018995 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105904432 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085205448 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100828927 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081402983 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100197818 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084335296 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106042774 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109074181 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085395179 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105165516 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079105582 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099285946 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083534249 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099275303 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084758896 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104828647 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107566055 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085049109 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10268245 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082190137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109214994 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107674159 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087940205 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099341843 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088285389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102370408 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08452457 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102944144 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08346243 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103278468 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106572462 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085511248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101342496 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090755037 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105414779 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084217762 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104733602 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102481436 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083709648 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098030944 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085197439 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103772571 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090376861 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103932192 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102037756 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092673367 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101394989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083036257 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105866917 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082610123 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108249066 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096830487 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08416467 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103348473 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084817042 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096510608 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082418254 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099624194 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085657208 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101003739 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078944694 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111173069 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109214391 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085347409 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100776684 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082055346 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097430138 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078566297 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101925787 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084179835 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104143495 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11071424 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082874226 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101039425 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07867374 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102268266 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08654096 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105668817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079449059 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098657256 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100567785 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085642256 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109064979 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082176186 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101809815 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086912358 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104817345 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081038389 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106622655 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098465443 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087444548 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113195543 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084509298 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102652053 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106952576 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091311451 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104023437 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079387308 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103154956 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085253986 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102972754 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102947321 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085368623 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115438498 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086169642 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101171178 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082288456 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104581915 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100816366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090932112 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103259393 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084536274 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10655162 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085004645 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112079156 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104959685 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088544196 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104068166 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085179556 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100908531 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101435061 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080880336 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100818187 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084651867 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104219361 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088297276 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110314112 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10173996 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092874207 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110775928 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087635267 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098588599 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082218901 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101917408 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078554153 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104070341 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100044777 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081612393 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100065379 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082430677 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102505342 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088636918 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103819804 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083800944 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102857702 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09627914 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084771497 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104452297 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084206746 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098944775 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083548617 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103368892 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08885901 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108450815 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102416387 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085635958 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103933965 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083590668 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098354681 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089752386 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101208203 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086372231 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101823944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083265537 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105165725 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106269259 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088907117 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104021456 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08561783 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115478804 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10446111 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082078031 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099732745 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08985052 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101213612 seconds)
  done (took 57.351294876 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145761654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079735055 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098029124 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079500775 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112084906 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099010476 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079573032 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099257899 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080231203 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10125256 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078879158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098022995 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107946769 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123606133 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093135255 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103420075 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096988721 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081137462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098262654 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080488151 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108875843 seconds)
  done (took 2.853163363 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104200385 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11643598 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113597677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119319117 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089184096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114253467 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11362943 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114284736 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098059947 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10993281 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117990018 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114861855 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090523472 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110366767 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110321668 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092922789 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117574713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107930452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.1158078 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093997613 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112291233 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113979914 seconds)
  done (took 3.200125875 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083362972 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101286953 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084729657 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096650836 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082846612 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097321498 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088012136 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099457844 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086706981 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101594352 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081746077 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10132188 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103709953 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079216613 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10094606 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080646766 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152224869 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106581904 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082584013 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104389164 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09759826 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08451989 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097622205 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079207995 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101029526 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086995174 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103608316 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082315515 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101988181 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081915776 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10294629 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080788088 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103844396 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102035027 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081335553 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101289867 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083600855 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101612192 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078971859 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100406313 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083601077 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098299388 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083254488 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104653295 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080293096 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101261344 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083768322 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102692181 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097963782 seconds)
  done (took 5.415626792 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104293982 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159435756 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085019212 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142186257 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121083261 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112942032 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087148606 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141214937 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101899733 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082130891 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121168724 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118997786 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103465171 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089344768 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109637198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103251137 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08478448 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102104197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10693074 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082788244 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107875046 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089538771 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119038407 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117165739 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108082633 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083041731 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103236741 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107753689 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096623037 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10859007 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109109986 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09076557 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12142845 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106895698 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102707033 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086440291 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121725642 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104234352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087865611 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100311363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086853469 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10910665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109932966 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12256382 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084911227 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107395641 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083942326 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101162002 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117053481 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087394842 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112876982 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118950266 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108128964 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083959708 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108887233 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120117721 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084451709 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102714197 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107743199 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097751248 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101226498 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107196639 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.098834026 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105825497 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110829622 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09938075 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108771895 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107758218 seconds)
  done (took 8.078330554 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093902592 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110616237 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11941342 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12005165 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090707879 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110125658 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109024582 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091920989 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110077984 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116127315 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109782356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133698115 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086740241 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114722097 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111410408 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091772877 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110027419 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110541406 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090961602 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11092863 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110348535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120067603 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090724694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120777307 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141402438 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105609781 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090587306 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110830977 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120911435 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110348499 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122611014 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091179364 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110929971 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120048828 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123594995 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090028289 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102664286 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111368482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091208398 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110241977 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105028411 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119431659 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091056101 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106070061 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110953182 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090416364 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12080755 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123009373 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113763803 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096703086 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111380401 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121227941 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110725711 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091275457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120815185 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147432668 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119525985 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120353031 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110417677 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119703553 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100583462 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12766513 seconds)
  done (took 7.638838755 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106751528 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116376152 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116908477 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101055075 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08268615 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108082078 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082355806 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102482301 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114270599 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094213542 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116682482 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107832642 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111015844 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097048214 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108047267 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112607903 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088449823 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109218295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114392017 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108812774 seconds)
  done (took 2.923552531 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09271469 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124148939 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08489645 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111956497 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107511653 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091449156 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106991085 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107015643 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086344385 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106618508 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096084149 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116382562 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104592417 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091284422 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116684499 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110573585 seconds)
  done (took 2.480037517 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096513656 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116466735 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120449849 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084669461 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103639119 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080327056 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105341611 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100754146 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081103557 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120052162 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08451833 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108409238 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104862503 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082197906 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101516808 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087597151 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100560382 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082509039 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105534352 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120983645 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095634387 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103217027 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105335428 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086887577 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105138302 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09008991 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105251005 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103366326 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082978317 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105023583 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084721802 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112793485 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10082912 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083487428 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103335905 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083632963 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104555451 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084934479 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109051356 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10491489 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08351976 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104260692 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084185744 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106298483 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081694046 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10500641 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101147858 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091052462 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102845826 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08515475 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105054439 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107040565 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086046182 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115523552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088470382 seconds)
  done (took 6.21915896 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098647384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109228173 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079946743 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102281259 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087288552 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10700434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107786682 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088072691 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105948954 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083116683 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107216574 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089476422 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106787757 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10805191 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08642613 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109095179 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080785152 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107175225 seconds)
  done (took 2.599016355 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089679008 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104328905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092817407 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104260993 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084615618 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108349579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081106469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103854325 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102835349 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085539835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104706427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087191978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103019667 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087460417 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105480725 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084577953 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107050058 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103194404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084940866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100577897 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087515074 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102744419 seconds)
  done (took 2.948963494 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117867206 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124821222 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092270919 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227411208 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103332395 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131195323 seconds)
  done (took 1.631185542 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108926514 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120477757 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105615695 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106326903 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114559289 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1058269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086769625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107386708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117016419 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101839127 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108432144 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117142151 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116797979 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096921294 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114386861 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114643 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107027392 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086884922 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106690975 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128329853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087684014 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117652893 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1072033 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087648439 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10802409 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116814061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117470845 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121742603 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087710161 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118259915 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113305548 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087799933 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118079559 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12203744 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109193317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09768809 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108526738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128006877 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114157679 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096122735 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10859259 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114023806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097991087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113947102 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117301917 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107992952 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092887166 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107877805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107150537 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134376587 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094104841 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117474981 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114087358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117331482 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11787327 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136080398 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100540627 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116750133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114835619 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123443859 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116159661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093346531 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116245367 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122070833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114764235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117056029 seconds)
  done (took 8.110515101 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102168669 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125624089 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107285788 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122019748 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096765043 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108205105 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107425141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086925032 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107593293 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105852357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152483127 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088173349 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117362751 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117516316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10734034 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088655228 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107740582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11766103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086910023 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134415163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107734784 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117001678 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116830618 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097203884 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122596231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115028996 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10731261 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087678557 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107880976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108037157 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093695928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109077679 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118021655 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087193376 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117653046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107977546 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086998081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114683664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109093392 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114290592 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098228813 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128049283 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108750477 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107422982 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123011212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087289099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107882629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086307839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108827432 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107164189 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122286149 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102534638 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122421723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117837057 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107983352 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087899595 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108816873 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10854634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087425977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115039017 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116635139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108845857 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135338795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088136839 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109478491 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11811307 seconds)
  done (took 7.997077447 seconds)
done (took 154.053689762 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097771753 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135295242 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095167767 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167629875 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106432029 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119087517 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138071892 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097021138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105891609 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085775644 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106543244 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087937059 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171753788 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085145053 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106235238 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107014777 seconds)
  done (took 2.653350353 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199006664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25412267 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102906093 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106523449 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089028546 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110774993 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104272648 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091116473 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109796574 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085519551 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108608853 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085738356 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105029267 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086028886 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109543665 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087533168 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106493147 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087882863 seconds)
  done (took 2.875385304 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113133657 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151504194 seconds)
  done (took 1.115738926 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119628407 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179775529 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294501677 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154996214 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118177224 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127129498 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15797905 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130326374 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198820788 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121946373 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1223562 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097067735 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139601674 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115442345 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094149881 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118553886 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141551437 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092902168 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114763218 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11617337 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115979107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106642553 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114832332 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093405513 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180541669 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119381328 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084737754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106605746 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115456218 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094900817 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113553559 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124374112 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097663962 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175169465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101454526 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175215755 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097061777 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111905977 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114728985 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090848743 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119310975 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118319323 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103860875 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11856705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107303905 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097747873 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105416775 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085221626 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115073857 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117992351 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094685472 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11301786 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15657063 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118653219 seconds)
  done (took 7.510710145 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794312494 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164021439 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090345033 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881573299 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138741046 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10426305 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781630497 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132719068 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236724571 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760617582 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133412912 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122829615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228401699 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238377515 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.995542726 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314163715 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672656059 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10187876 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149062874 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15288597 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119172446 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137159656 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130003192 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430499612 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095134376 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111944095 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116361613 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100368256 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158712038 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12565467 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113671989 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177354095 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269925339 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185823627 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115369056 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089302201 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11188862 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169001436 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267382048 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215487079 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180684979 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086999736 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111017393 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122076892 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109648617 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109354645 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164390337 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196856417 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173000468 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092490546 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121347192 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120212197 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120093623 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16551333 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120741564 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300206142 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311921766 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112235518 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119623208 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105137635 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264376721 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123042512 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223724614 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1171541 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21228048 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111108317 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78182167 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190022731 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089970194 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118327161 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117792792 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095197919 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12283062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168362233 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408094924 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123666224 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092840055 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112476813 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206640148 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125421054 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110432941 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162161902 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114824052 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09854131 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125986093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122224446 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170875567 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235701061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124931012 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119570265 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094498512 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123893112 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115707274 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212933937 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219269154 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162051108 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212657966 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122304549 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163283584 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189658488 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098483844 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19420463 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096699031 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126019948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12229269 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216771837 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145711494 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100849594 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117257924 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118434048 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148402608 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12746532 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097737648 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168849983 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480303313 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168443206 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109489892 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126943307 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099386108 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161124967 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118429982 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262728759 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120384407 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169212366 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118626743 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088095165 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119674578 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165501974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123765186 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098371487 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123878245 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11821927 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235694848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218506089 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122248729 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221996252 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18488013 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119101306 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171408862 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1203043 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167710995 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120853955 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121542251 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095016966 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795790195 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122827488 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098223906 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116284584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187441888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110875997 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103052232 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125663998 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108186982 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792040777 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127053696 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122124731 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101801113 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119508026 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119022437 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096023425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117397121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162378384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231756037 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12223459 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118550562 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102860987 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181124596 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09521349 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125238686 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124308198 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104286443 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121042362 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115203703 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102041288 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192405641 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164361836 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220949222 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590104123 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091084592 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12399178 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228305323 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089871336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289348153 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119048723 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224907937 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16523325 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121104566 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308767847 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167351305 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188229178 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126655772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174488175 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086752953 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120185158 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164617207 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112558622 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117978323 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164198496 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126261995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102002048 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960636004 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112515354 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229717688 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086984169 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193691108 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094096356 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12280846 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295737018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111429761 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10812601 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186210011 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094002214 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125345051 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.846334112 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12613814 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122253524 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118064803 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201109066 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187066663 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098158595 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120421722 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121898993 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164216385 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210335995 seconds)
  done (took 44.283505174 seconds)
done (took 59.284943596 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274616606 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214080819 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258261924 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168314842 seconds)
  done (took 1.865529666 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169668167 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148402873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121160369 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106981238 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149003069 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084615026 seconds)
  done (took 1.654223352 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353964735 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271369585 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238347486 seconds)
  done (took 1.744497677 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288005057 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250503833 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355201815 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418477297 seconds)
  done (took 2.309492015 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207704597 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131956626 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110817677 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104810914 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195689372 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249326633 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140940839 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20125463 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122046636 seconds)
  done (took 2.389982377 seconds)
done (took 10.843463399 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.253877053 seconds)
    (2/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.239249432 seconds)
    (3/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.124075918 seconds)
    (4/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112998951 seconds)
    (5/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100747444 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126040804 seconds)
    (7/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.175551951 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120448794 seconds)
    (9/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.244964844 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100465616 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117803769 seconds)
    (12/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.217017557 seconds)
    (13/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.200116604 seconds)
    (14/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09358528 seconds)
    (15/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.254175064 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.186730413 seconds)
    (17/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12476384 seconds)
    (18/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.258593648 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.18135674 seconds)
    (20/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117121198 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197910244 seconds)
    (22/286) benchmarking ("sort", Float64, false)...
    done (took 0.147326935 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135257424 seconds)
    (24/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.215459745 seconds)
    (25/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220193849 seconds)
    (26/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.100787348 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17209999 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.224485019 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.193086399 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120862174 seconds)
    (31/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095512611 seconds)
    (32/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.15874343 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.184065447 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094858231 seconds)
    (35/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197478375 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100545238 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217910114 seconds)
    (38/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.093957009 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067007371 seconds)
    (40/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17513761 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109452565 seconds)
    (42/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.226360573 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115826144 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124431214 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124775242 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147819082 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.1350023 seconds)
    (48/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.187827726 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094138565 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12239319 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09322945 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.14683499 seconds)
    (53/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140977569 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10894125 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125818085 seconds)
    (56/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120849669 seconds)
    (57/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.17718797 seconds)
    (58/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089050127 seconds)
    (59/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081354252 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.185230763 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110534111 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137594801 seconds)
    (63/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230834892 seconds)
    (64/286) benchmarking ("sort", Int8, true)...
    done (took 0.222399713 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111437882 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096792855 seconds)
    (67/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.089336622 seconds)
    (68/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.127131461 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118201146 seconds)
    (70/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.127790965 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136800592 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110341381 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095160143 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109900761 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100798118 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.116369965 seconds)
    (77/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.150752427 seconds)
    (78/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.141401207 seconds)
    (79/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.186058671 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112102098 seconds)
    (81/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.155450949 seconds)
    (82/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116240766 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.15052259 seconds)
    (84/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112439745 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.086299951 seconds)
    (86/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.137940289 seconds)
    (87/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16817464 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101568038 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174810085 seconds)
    (90/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.074321286 seconds)
    (91/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099380237 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088770696 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.134414723 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119349631 seconds)
    (95/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148510567 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109974817 seconds)
    (97/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067141872 seconds)
    (98/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089010541 seconds)
    (99/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.136881591 seconds)
    (100/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183055835 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132764492 seconds)
    (102/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093541307 seconds)
    (103/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.173942667 seconds)
    (104/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130122017 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160583738 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117146909 seconds)
    (107/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.06645337 seconds)
    (108/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.206494743 seconds)
    (109/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090682457 seconds)
    (110/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076944204 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123966562 seconds)
    (112/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099021784 seconds)
    (113/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.098298996 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065796512 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086791481 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109331969 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.171812704 seconds)
    (118/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06730783 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.181425169 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119335807 seconds)
    (121/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088094941 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117444858 seconds)
    (123/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087744827 seconds)
    (124/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186194986 seconds)
    (125/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075431574 seconds)
    (126/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090033006 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092069775 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116020801 seconds)
    (129/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083865101 seconds)
    (130/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088702259 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086955026 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118128495 seconds)
    (133/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156191577 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167528707 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172663085 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086286085 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11763267 seconds)
    (138/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121516955 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08596793 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132231932 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08664115 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136655814 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117957841 seconds)
    (144/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067269197 seconds)
    (145/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136808436 seconds)
    (146/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092975897 seconds)
    (147/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115024391 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086790378 seconds)
    (149/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119047643 seconds)
    (150/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087726839 seconds)
    (151/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145354206 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096557847 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.166951959 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18372305 seconds)
    (155/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153125766 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.161969148 seconds)
    (157/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090080545 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098544451 seconds)
    (159/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190262399 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165844003 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067024828 seconds)
    (162/286) benchmarking ("sort", Float32, false)...
    done (took 0.173492891 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130706522 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066844672 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066595491 seconds)
    (166/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120582975 seconds)
    (167/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067435257 seconds)
    (168/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.1177968 seconds)
    (169/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135146574 seconds)
    (170/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093229329 seconds)
    (171/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066761907 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136543237 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109164522 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09386629 seconds)
    (175/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162215617 seconds)
    (176/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088514971 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119930293 seconds)
    (178/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085460171 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133203988 seconds)
    (180/286) benchmarking ("sort", Int8, false)...
    done (took 0.188996059 seconds)
    (181/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112066651 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08694188 seconds)
    (183/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066807633 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.223623157 seconds)
    (185/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090445034 seconds)
    (186/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067591028 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108493773 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114001772 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110121111 seconds)
    (190/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118333535 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06722281 seconds)
    (192/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067324368 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1097114 seconds)
    (194/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149007523 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117561394 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119702453 seconds)
    (197/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082084923 seconds)
    (198/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096881503 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110256671 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087368857 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117922532 seconds)
    (202/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068601951 seconds)
    (203/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119510505 seconds)
    (204/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.119855102 seconds)
    (205/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115967236 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068030393 seconds)
    (207/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146396639 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090638259 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116420812 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067958591 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138801401 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11142041 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085367542 seconds)
    (214/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.346187375 seconds)
    (215/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067837217 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076755762 seconds)
    (217/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090115893 seconds)
    (218/286) benchmarking ("sort", Float32, true)...
    done (took 0.232340136 seconds)
    (219/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076004289 seconds)
    (220/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.184183064 seconds)
    (221/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088490269 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092000673 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067269389 seconds)
    (224/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078155133 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108660315 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109981766 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089361015 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101290445 seconds)
    (229/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112527051 seconds)
    (230/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091249316 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090780673 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066655012 seconds)
    (233/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110141004 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086248688 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108867323 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086404066 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115816946 seconds)
    (238/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086706502 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115741547 seconds)
    (240/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101522272 seconds)
    (241/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090723592 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 0.232773063 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095821379 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112992402 seconds)
    (245/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094470085 seconds)
    (246/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109549874 seconds)
    (247/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088340984 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136061859 seconds)
    (249/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067749845 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089795114 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067014202 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086648233 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08989486 seconds)
    (254/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098101614 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117332683 seconds)
    (256/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09555624 seconds)
    (257/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090623351 seconds)
    (258/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068783995 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10899405 seconds)
    (260/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093896117 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109452514 seconds)
    (262/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068484425 seconds)
    (263/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110880932 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085724676 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135687398 seconds)
    (266/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090215654 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091440739 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095120436 seconds)
    (269/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090601006 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078414227 seconds)
    (271/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067793078 seconds)
    (272/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122330222 seconds)
    (273/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095817057 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116427771 seconds)
    (275/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076671489 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233638628 seconds)
    (277/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136783711 seconds)
    (278/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119036972 seconds)
    (279/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093372846 seconds)
    (280/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11181604 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087087408 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11604753 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088651597 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067994047 seconds)
    (285/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093006053 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068735838 seconds)
  done (took 36.008065894 seconds)
done (took 36.890156939 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100298033 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147651189 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096262823 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135946042 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123834902 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091790518 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117839126 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097874245 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123739731 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124244159 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098878644 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094009141 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09650225 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119490286 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09618026 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138120089 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123480614 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094517614 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11861087 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08637007 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119103052 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086212209 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111334779 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069599599 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121660436 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094668734 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115669801 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11981607 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086474719 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110547453 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093173925 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118075376 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086314003 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123666476 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093507719 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118710192 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097331415 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120146877 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111861625 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085912961 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11826338 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086048054 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117668837 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094046801 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115821529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092022611 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118546254 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099177462 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138236334 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115149733 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095265903 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12200911 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09546221 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117308293 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09014065 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118718255 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091626683 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139177401 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118903099 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091720424 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117811281 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09426576 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116079828 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094765831 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118049516 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121161549 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097863815 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115832042 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097394912 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116085423 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086589781 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11795883 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090314419 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110535987 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095269582 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121242017 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110124623 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09257155 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116826432 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092081512 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109772273 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089786786 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11229227 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093219251 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113396248 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069902644 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113941819 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09294616 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109527412 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09609032 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116593395 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093311051 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112333304 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097887576 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110748356 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09179221 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111262721 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086839447 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113473083 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090694722 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110593987 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089388524 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120285525 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112512904 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092967962 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123460756 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087373838 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117074775 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087253564 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111095616 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101643622 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121675467 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087268187 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116283481 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08534201 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118012985 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085894104 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110811606 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11035631 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086752687 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116135808 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087198729 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113101496 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094921102 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124623818 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086533178 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114617104 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089242154 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111050372 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092590438 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110475114 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087566769 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113215831 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078373512 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113804169 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087167325 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118862387 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09003202 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119501604 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08870677 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120140268 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092180264 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11710112 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116481374 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086876009 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074431353 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116009021 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090197339 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113067123 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08689739 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113461319 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087095464 seconds)
done (took 16.898947582 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086478691 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183940527 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150653556 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142145488 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106931318 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11163701 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121705374 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117862417 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113344475 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142420475 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110400162 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131030015 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14813446 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086688469 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112022143 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091461966 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113119608 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102116648 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145401916 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132817879 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163530384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086309678 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146333036 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135400519 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121086459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104796377 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112046724 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091438394 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114466986 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112751764 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131921992 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114989665 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087637634 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133647482 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10418594 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120136389 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087634114 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118445601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087940055 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112099784 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140784082 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133207859 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092173387 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11783055 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091547397 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114853985 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089294673 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120648286 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098448035 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116098485 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126737525 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156470966 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090755297 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121584346 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086830431 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12259168 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12141558 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09091912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111518806 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09049015 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11207473 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091318317 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126978051 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142203735 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091312504 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121637588 seconds)
  done (took 8.589613376 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104480742 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140348256 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106019697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13066839 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111654598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088063637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112156996 seconds)
  done (took 1.73957034 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08780877 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133932902 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111597352 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135546019 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132002439 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112515626 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123288123 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088764441 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132132373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089351555 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133945719 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150065948 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090692402 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11994846 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137836494 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088144532 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137657192 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08835239 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116864519 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112052182 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115934234 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134752129 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090780661 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113844647 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102972143 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114372158 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162074455 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093639612 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114691634 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092077951 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111352351 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150865108 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102405943 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12489085 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088500061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130206276 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128588693 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08674771 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126094241 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093241839 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128108813 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089797607 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115266467 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087148078 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119199241 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099761851 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117301105 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107363267 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116616604 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133478814 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090137468 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127733837 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088901102 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117050379 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090931391 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119459315 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097817422 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113940831 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133652922 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090555293 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130823431 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105086034 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126965199 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130758088 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091170363 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128085044 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102867811 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11656124 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090833324 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117760205 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105211869 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111885481 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090174526 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124089709 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116545676 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112251251 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137050217 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090889987 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124492946 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089444025 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114780768 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114970194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113024814 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118298969 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089429401 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117112403 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092039171 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112022467 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088638804 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118211266 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087690804 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115147746 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091644348 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114885393 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091969168 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130791085 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114872388 seconds)
  done (took 11.803546334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089774234 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114805367 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092438167 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115340981 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090071738 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115212918 seconds)
  done (took 1.574157224 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116578483 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117954141 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104069123 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120497908 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155186182 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103475179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128925207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123431038 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107230832 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127575195 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129372599 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104651977 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135752575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12132221 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103316965 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11993839 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128880371 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099680774 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126431586 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097213614 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13676956 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12051466 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096623276 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131950999 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118825019 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096611111 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126190022 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104530739 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126998455 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12398989 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095693091 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118094588 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096189513 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123155255 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129706714 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095617456 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120206876 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11972251 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099823327 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117306831 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104566396 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120968752 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127857693 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095679493 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123682351 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121663672 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094888742 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125235886 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104152229 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118886814 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11959982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096693055 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120102429 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.0936156 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123022279 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125709254 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093865968 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129564954 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121055831 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096000998 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117541173 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092820174 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124486195 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118673718 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104794311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119415113 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121979113 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097294978 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121795669 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095365515 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118612726 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092171308 seconds)
  done (took 9.211451562 seconds)
done (took 33.860671925 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687254954 seconds)
  done (took 1.643550297 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.829164846 seconds)
  done (took 1.787530926 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.179944868 seconds)
  done (took 18.168026668 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492799183 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579900936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980317057 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177976659 seconds)
  done (took 3.18761979 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951080302 seconds)
  done (took 1.927631176 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283006857 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235702189 seconds)
  done (took 1.48070341 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779981753 seconds)
  done (took 1.753885978 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.431478329 seconds)
  done (took 2.399450363 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324451538 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183660451 seconds)
  done (took 1.482461558 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54979803 seconds)
  done (took 1.521956183 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.782181459 seconds)
  done (took 11.758293648 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265246375 seconds)
  done (took 1.250710076 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303099523 seconds)
  done (took 1.279045414 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.536080905 seconds)
  done (took 4.514054376 seconds)
done (took 55.123337135 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098082197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126566454 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101405017 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12465513 seconds)
  done (took 1.422064558 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10131669 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121407345 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10101146 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120163126 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12608794 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095943449 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.1238795 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102073378 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120641386 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096541885 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12150822 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11965927 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100313512 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123199721 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093940977 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124259885 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124427668 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096428283 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124521756 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096548888 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118819945 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09812188 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125181235 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093712219 seconds)
  done (took 3.650182941 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10083971 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118560992 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096206143 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119019323 seconds)
  done (took 1.421270081 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09979472 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130881057 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106241315 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124917005 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131538457 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105738003 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117722325 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093000071 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119402964 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099780257 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11600807 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138868397 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106635213 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124118078 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102026062 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114779795 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091677998 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131259305 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125891018 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101318197 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118560148 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099538929 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114870081 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10830522 seconds)
  done (took 3.704650436 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169880038 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128182307 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138379853 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095183996 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160450702 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140652191 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088446319 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140807745 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087655618 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13150333 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118562482 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133732938 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129803019 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088575805 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11365554 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088118829 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129096017 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129503057 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091363904 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127714809 seconds)
  done (took 3.420467122 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09863669 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117999438 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088150495 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116494919 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098851076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120721639 seconds)
  done (took 1.628588404 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090792697 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114483918 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090586818 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114889877 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094361627 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114562023 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0889804 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115559284 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089771359 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114781465 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089319811 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113402039 seconds)
  done (took 2.219446789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503240134 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1213689 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119792508 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088395335 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122150137 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089786278 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129235575 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092339124 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141532616 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089007012 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115914652 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093366613 seconds)
  done (took 2.692783509 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237242574 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125512456 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283019953 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36586105 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156082411 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16544421 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279212685 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160664596 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196911126 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149358997 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230935116 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197961123 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15328776 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19154293 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137591025 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145133738 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189427835 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250309851 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152548154 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212901448 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205932697 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167955998 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1808369 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152425949 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111883389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193857671 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095110785 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130161965 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233856486 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179564953 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190159198 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161633105 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14633225 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238000912 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249350253 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195647065 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278264133 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134714508 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166681617 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143760639 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26535886 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139896767 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235803916 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157294553 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1052431 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221631699 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165921602 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17778967 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145929506 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14011306 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198208354 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242929751 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193264713 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138691375 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299843643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148184507 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15928432 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188976824 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250668977 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227246107 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187548992 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12086005 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18752661 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191694355 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211824508 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151272817 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182424972 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148569649 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183046065 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189907276 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165453715 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205030362 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179694532 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139803912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170784783 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172790713 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173096845 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258849684 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184440311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123121231 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1705563 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149476306 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131624552 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168547744 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125465796 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21455125 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14361641 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163107183 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208718869 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159161631 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160958597 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221145237 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184034907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148776513 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084163476 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152980098 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155479022 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176504119 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140647515 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159172807 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15663757 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130235559 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169372763 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09715294 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210832678 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09147444 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173767686 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210402077 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099707429 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161691595 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152640138 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151030256 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18004327 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198834201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140110297 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13443848 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210232818 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179090288 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140857425 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177247499 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230476155 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144526371 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12240903 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22681455 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24353593 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112745214 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228571929 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154239982 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107881514 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133913287 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180895453 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156235315 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162164371 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133517459 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183648137 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232295275 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098412314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138941841 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195458966 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134030953 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131277798 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154565527 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147026651 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110476253 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143275908 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144778541 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176269789 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179230751 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154570137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166905348 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149648337 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248600241 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140702749 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150249107 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148702516 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094382893 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192038715 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227319652 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103548173 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233408152 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17072122 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223811979 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169612875 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107983895 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177471183 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131043574 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120731917 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19317875 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167995602 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161906059 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195807843 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22282948 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179498349 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20876519 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166849181 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175984393 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166150822 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156976619 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110545274 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160234078 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15822997 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123180375 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139068054 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107212223 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148790055 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142962482 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133906581 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197928401 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17019229 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216046461 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159650636 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148844873 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182161017 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101313315 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202395135 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17910687 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146349085 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199288767 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192318961 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21400384 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116874355 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228555245 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120010862 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098639958 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143022188 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171563565 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134729248 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107940451 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187949719 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180933575 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182072646 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173112795 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23218687 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176799653 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191602316 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121546458 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140743547 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210355287 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176322769 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155665454 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137684019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152333917 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177809797 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15507369 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257086286 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168290961 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176309354 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235044405 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123633342 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132076717 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150345688 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177891835 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152716166 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175230896 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14704473 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139530258 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161153156 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.129636715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158934276 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185727578 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163781446 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21341878 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122346873 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212206032 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10061642 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162144309 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159542923 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166162557 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109573261 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175304702 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20091129 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146283055 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166771145 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217634283 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104369098 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309272866 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2361463 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193988488 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137587458 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155344152 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161719648 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163661862 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171132473 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178625881 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157555686 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186829164 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159266144 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136509805 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139496622 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148902622 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124658443 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133497987 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148684024 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176714938 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138447519 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18822938 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15457406 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160353973 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171329685 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150607452 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14383192 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151125501 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217832883 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183112589 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240293321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151386027 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178977631 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20424918 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127221107 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131962785 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107138512 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177682381 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136581158 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217237572 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186413081 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198277289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206506324 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178036914 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138867997 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093032381 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157882954 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169684958 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22809018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148714198 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120070103 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230925926 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108772943 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13241503 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166392132 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290149077 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143893005 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223165387 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081160328 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279710694 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125049235 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105138574 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163535023 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235201177 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135674501 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151381052 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166400029 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188283334 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1366408 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149072125 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217906101 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210235837 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226272864 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184645853 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10442634 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156323882 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203316159 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193003499 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156747821 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138207928 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205981977 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195454505 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223635595 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141490057 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169008602 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16850526 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158293378 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186735772 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135257059 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207248115 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135432095 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190536549 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152230429 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13867653 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176840997 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214264931 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113536073 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215050419 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182889303 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136052468 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106019353 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192927002 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178526692 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155150983 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099959574 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209956747 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098151102 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220246398 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233860676 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134772344 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155547516 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147664925 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108486262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154030805 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158339138 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138811407 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163150992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202142777 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134753883 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19072074 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229625989 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171915476 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173749421 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145712582 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693639885 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131108713 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196379883 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148337612 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206965156 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150260644 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172506807 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159416849 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169158337 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224780684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161791513 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230961539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192423392 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177719038 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133387643 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15775552 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156152079 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14496363 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153458051 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167991633 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161685479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145090409 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178986609 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163943521 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134665762 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113117031 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227051551 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120553148 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215202567 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179729243 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110468039 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201062698 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186920099 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134081077 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181490555 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235386178 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114665328 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14900338 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133995467 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151800823 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259712974 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096702811 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218428693 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185204901 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158582734 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169278457 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14730511 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192448055 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156284091 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213545762 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115437633 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157900097 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156213307 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138144957 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130251405 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155294285 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16831674 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120663216 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187296854 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139047491 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192836923 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124366818 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144610786 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285801292 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179626587 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244723366 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106858223 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136643434 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164436198 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149974287 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176966347 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176590072 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136075591 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135498828 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135863635 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128909775 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111567207 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155600706 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191332954 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193108703 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207744641 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136649512 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279930148 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113088388 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156578342 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115263441 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105449914 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149968427 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145947571 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156047397 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192758649 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260338892 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14615874 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133857112 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149008259 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09842541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135682769 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163963127 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165768425 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181749292 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14409536 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082089891 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156024833 seconds)
  done (took 82.400232691 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17416701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150764297 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.159884433 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220962224 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190239511 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290788524 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227727249 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273517545 seconds)
  done (took 2.764637509 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093865035 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146428479 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156880973 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132259252 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091863765 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119715839 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341962747 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132947393 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116201161 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121439227 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17372717 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094883072 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548059517 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091480567 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119768328 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107939965 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092223003 seconds)
  done (took 3.756742102 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.179809114 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499106277 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.020983759 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195225509 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160393588 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118521014 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708984082 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094806891 seconds)
  done (took 12.058426587 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115996268 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136269022 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124300351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153392435 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140560306 seconds)
  done (took 1.760734352 seconds)
done (took 123.872728316 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098085927 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12730779 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098009317 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130297467 seconds)
  done (took 1.523801762 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095129582 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070984951 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10093876 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075542637 seconds)
  done (took 1.421598302 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190095357 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168396018 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38529243 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072702971 seconds)
  done (took 1.572997257 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115233355 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133044856 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104120407 seconds)
  done (took 1.443314929 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107022167 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129968788 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10282066 seconds)
  done (took 1.427166042 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105392557 seconds)
  done (took 1.193324465 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108106733 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137675076 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10898898 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136555953 seconds)
  done (took 1.578949188 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098817183 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127147088 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108724755 seconds)
  done (took 1.420879648 seconds)
done (took 13.020795747 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103340705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42313158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413572303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110577175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722847476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381201441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032909178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146354024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165699663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093235823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138921217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674701066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025892553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377290547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983256389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376948711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679227555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121215007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091910535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121572852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016600473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092508157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121908161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092887078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705199135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398846762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123006154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376249873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093596053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126458234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382527098 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123119243 seconds)
  done (took 16.911677195 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094672819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173570381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098367576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123495429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12345023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094252802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124920277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09322081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17888018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122478528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110548975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122101758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12484095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095214456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143983839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093044398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125327527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093388009 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12192646 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094215718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140938662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120523595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094229479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12162019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094479337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13604868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095191875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120843416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120368524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099442322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12684227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094426583 seconds)
  done (took 4.804019919 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140709308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182147789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128139278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127965362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168086677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123539343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198911285 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118038762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18260313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123352724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139411278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093087439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15652771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122046794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114661801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121734507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097188693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122816905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092616089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122908902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139837127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093386129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122264692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094555855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123660498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10851761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123359568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120516591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094902445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127213138 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099633562 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124126177 seconds)
  done (took 5.143117817 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097343336 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126046497 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109434699 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138396888 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094959756 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125032726 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097419454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124648297 seconds)
  done (took 2.00507591 seconds)
done (took 29.953180251 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111218815 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126628079 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106842355 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135003092 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10301026 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132433024 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092215331 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133800195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133913278 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102815994 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137295159 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092308008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122608866 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092305978 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135573818 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097816942 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132206503 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103043473 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133395938 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131463282 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095422954 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133632872 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103701674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133491589 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104745105 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13319644 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136895092 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09959141 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121750981 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094833332 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124655185 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103473809 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123687557 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104683904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12662022 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097057128 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123726893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094513677 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133158882 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132711579 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099801579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.1344721 seconds)
  done (took 5.996240275 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107138482 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139629654 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104935422 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080954371 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116272093 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080436049 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137550105 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079075087 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110169903 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108069262 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074421802 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106287548 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07836132 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101866298 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077830443 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075856339 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108554096 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076092728 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076377416 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106333339 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079907967 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072851479 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108577393 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078947327 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075523508 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109973494 seconds)
  done (took 3.571064599 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100777186 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134438782 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113051736 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184275343 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160989932 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100068889 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132364677 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139793085 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109194833 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120527973 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097612876 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150117047 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110201415 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129858964 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092287058 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136976752 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136298702 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095020977 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128745627 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112623737 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139211458 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102951182 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141181527 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133813948 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092341991 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122553756 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096531711 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13513731 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097615641 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131850354 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096790117 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125147694 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122700474 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105411732 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12631431 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094962272 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142201434 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103618316 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131133456 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122104283 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101623489 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.1225058 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113728834 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160999922 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091212255 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129595107 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124064204 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103567368 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120762321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111159661 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131749136 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092751774 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125469908 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091171064 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12188817 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107415249 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124025201 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094474025 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131833956 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127300022 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10590743 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125766091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108294153 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122424628 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101276313 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12179513 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093058779 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121499576 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142769545 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095833096 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161774927 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093679117 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124081811 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101385797 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130969319 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128633821 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093576458 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138084839 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10262285 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126459385 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102774439 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12685522 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096034506 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140879391 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123699467 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095629382 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12288634 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100473656 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124035587 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094306425 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136717213 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092411506 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126179284 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110392126 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122236018 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122815007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100565395 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12707984 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092050131 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135676985 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098295892 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123240034 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132218461 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09384991 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124399374 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104033261 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126936068 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092881587 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127734497 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099183208 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123436698 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094409676 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126500521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095419642 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13300566 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129812645 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098438734 seconds)
  done (took 14.841933483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227958283 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216547664 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.2053903 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.291175383 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136369892 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114523379 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212790201 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157136593 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123894123 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159647052 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171708433 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182200263 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138924581 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212438524 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.1713457 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093740697 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142717813 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135508884 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246848271 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259925639 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144397461 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103515866 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162189221 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160018721 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137292453 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132805622 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111160812 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134550986 seconds)
  done (took 5.801944322 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108637832 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155729577 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098952142 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146065211 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150555174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093458473 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128403699 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095049304 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13623344 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135670994 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092731926 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129934747 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100888911 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133204997 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12427617 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103935547 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133055643 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095136306 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126341953 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097270013 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134237701 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102321776 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128282756 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12237958 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104091395 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122154268 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087358073 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143482563 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123024415 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11613939 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122180209 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101802779 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137292862 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093886403 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123983946 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096531652 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12632926 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09602533 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125662036 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092321375 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123294843 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077478418 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122687493 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137567574 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100719322 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080446983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130006233 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128261048 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095993748 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121621816 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098094869 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126638504 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097668632 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131059077 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096045366 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125298001 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097139678 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116701376 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100719022 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126077915 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085048007 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121791791 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098819105 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118717292 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101513059 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129148358 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092765172 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126015494 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.099002946 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130338023 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096999126 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131007672 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090912086 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126741599 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096591662 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129361534 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126762721 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093135425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122268351 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09457675 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07592485 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123865311 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074453131 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126561099 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091477108 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123016987 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095483089 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129819073 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137463686 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095495535 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131901674 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094298601 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122818326 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097292526 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114109468 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096824209 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14077209 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142468091 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093331635 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122069678 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10853239 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126751877 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092915515 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106943522 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103511046 seconds)
  done (took 13.018318973 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129976309 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155094614 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125580593 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112811139 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157987736 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158845114 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100564864 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131577958 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096184213 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142610946 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094236066 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133228354 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094383028 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138563175 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156892858 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104572311 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125496214 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108633784 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12890947 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169150648 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112041817 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14359527 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111356406 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124453924 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128870928 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111837552 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161229093 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107504197 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137514367 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142601358 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10791084 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161012324 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143394187 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099052055 seconds)
  done (took 5.490723284 seconds)
done (took 49.812792873 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20514102 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.416459074 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.189724329 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10490467 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.239391241 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.20077045 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224128782 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.190142767 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.827312875 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195344487 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.461634434 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.763639433 seconds)
done (took 60.136925812 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.203166825 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.348533427 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502006828 seconds)
  done (took 3.973412475 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.760035131 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.13531817 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.449128269 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188971163 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.18907189 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.479423176 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.922394611 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.569708833 seconds)
  done (took 28.047852879 seconds)
done (took 42.102836982 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.207608979 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.28160304 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.233705031 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168903842 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301590044 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213957401 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.403521617 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.353045936 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207377277 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.170608622 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211834618 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203572489 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215808284 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.367320689 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19897684 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.196365587 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.270521986 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.885051029 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.606979507 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209853081 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.203277383 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.192327407 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223328773 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.195435328 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.202529896 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191061556 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218276064 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.200687541 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.795717124 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.196178521 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.208810902 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.559088135 seconds)
  done (took 190.409787423 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191806132 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.275458262 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.366025297 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.238209087 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.663987958 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.388568866 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.357590292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.863121906 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209125655 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205722334 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.482683312 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19258789 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.545034676 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.215210447 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.328411566 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.255439953 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.39653658 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.532596019 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.337793234 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.358622201 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.196456463 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468505375 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.3998795 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.425482718 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225774735 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.245906759 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.21389281 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222549385 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.384576983 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.326402354 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.195545847 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.214753673 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819471409 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048417671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201082888 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.203548125 seconds)
  done (took 150.313567779 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193287452 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193189032 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193806642 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226140561 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194330005 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778657265 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783452034 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.748827788 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.393674945 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195147273 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.60330659 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.496904231 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.196428074 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28930477 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207928027 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197764407 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19500555 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209743406 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236563712 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198999878 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194609631 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194686447 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780355485 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21089284 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373917497 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211036321 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227351696 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584254843 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.254724467 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194812554 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228076173 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527377641 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245552077 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195471182 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591043007 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.534654004 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30957893 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19778295 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229203287 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197516188 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477516154 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197421735 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197251982 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199081585 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885796521 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199282671 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782111526 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200668643 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.159252565 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197054827 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19659929 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.677443628 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.924224196 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.216280441 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196056251 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199341806 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196510047 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198585807 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230578615 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.670365766 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.29404474 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215190675 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201257185 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230641185 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196838743 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.27623386 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202287916 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.218491169 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274070282 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.315470886 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783757948 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201860892 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29714432 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320055288 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197142275 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196716442 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197226433 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197741771 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308937989 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198220581 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615151236 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375129245 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21666972 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.607545393 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.299287552 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198922995 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624060466 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201127109 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198055477 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.966219282 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296101422 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197964734 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198302288 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198841134 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199168257 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614223628 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788025678 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474018354 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202849073 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.632427978 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201501851 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.633956321 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762884753 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898135112 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202312412 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312765432 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37666723 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.216799571 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199609251 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.618258584 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202461881 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256328834 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203383871 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597490533 seconds)
  done (took 365.650878448 seconds)
done (took 707.489801567 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.810833891 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.805043849 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.917817636 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.792853609 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.761184918 seconds)
  done (took 10.211936771 seconds)
done (took 11.336781284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387638081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387295803 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263296319 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.389798643 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23281867 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.407282491 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369980524 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220495978 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302288035 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.28353336 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301161703 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254805418 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234937835 seconds)
  done (took 18.159428804 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512278616 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517666564 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263214509 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511983092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238743492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512226035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399924825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43459803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404945403 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233213597 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21322318 seconds)
  done (took 16.367903248 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521821754 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517170208 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266660966 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529978093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241179537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523159634 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407399241 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438694093 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416031253 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234480947 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213519602 seconds)
  done (took 16.43657784 seconds)
done (took 52.089048166 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.318039854 seconds)
  done (took 2.444171555 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245007262 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41221408 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229635175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218189409 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.318762868 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212462029 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218111989 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211009213 seconds)
  done (took 11.192428183 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209891438 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.2099567 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.210087561 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207467996 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20996922 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21043743 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207411429 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207461018 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210722907 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208138392 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.207808794 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208578597 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208262992 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210846099 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208389219 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210731886 seconds)
  done (took 20.473264072 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.209849518 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208425747 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207638342 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209345413 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208432611 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20890079 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208570179 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209416188 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208215794 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208738446 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209201446 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207553804 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209267832 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207941557 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209192223 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209329948 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20929745 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209027156 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213565391 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20930708 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209579395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209284086 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209360738 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209584746 seconds)
  done (took 30.149345947 seconds)
done (took 65.386205041 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.848266277 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.964745863 seconds)
  done (took 6.942373245 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211390074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212290595 seconds)
  done (took 3.554349516 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.211886015 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211388734 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211099868 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212414225 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212008931 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211778476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.2118742 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211401054 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21224652 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210952156 seconds)
  done (took 13.246161023 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212491194 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212687891 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209682124 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212369017 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213106339 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210959439 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21272556 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212708404 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212910517 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209984356 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212709081 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210317585 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213149539 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210621082 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212962869 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210970725 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210216654 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210714933 seconds)
  done (took 22.941603067 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21343735 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213063606 seconds)
  done (took 3.556081977 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210670919 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211235834 seconds)
    (3/7) benchmarking "month"...
    done (took 1.211068826 seconds)
    (4/7) benchmarking "year"...
    done (took 1.21059287 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.211283876 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211214547 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210708975 seconds)
  done (took 9.606538895 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215428659 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392715547 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.500109918 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.790662683 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214668239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218319236 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.054054565 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217565981 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220017827 seconds)
  done (took 13.955079903 seconds)
done (took 74.931950086 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.236989066 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228296311 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.55413987 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.214949674 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.241592288 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.507698239 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.240568468 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.340035997 seconds)
done (took 37.696946185 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.222320201 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.189387909 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.041679997 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.194679674 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.314922635 seconds)
  done (took 18.872797787 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.268624004 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547715696 seconds)
  done (took 4.947892501 seconds)
done (took 31.176577028 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216408456 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216274467 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215630748 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21286826 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.213582101 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215822242 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.21250777 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213439526 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215488642 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215157577 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.215361336 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.216010097 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216552967 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214058623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214345135 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215931245 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213550593 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213981679 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216822601 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214271464 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216684921 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213919887 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214075538 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214195338 seconds)
  done (took 30.290265416 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.218913906 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215913017 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217572345 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217606106 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21535575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217160335 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217695764 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214484086 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217912364 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218112411 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215278238 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21505343 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217727602 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216077071 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217231398 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215941263 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.217974855 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215512892 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218471453 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21626532 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218747988 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216624731 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215630938 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21818769 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.216268617 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21580908 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218879092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216629253 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218461104 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21580893 seconds)
  done (took 37.641955607 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.223925603 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226618812 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21834779 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21874788 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218902196 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.218696795 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.218958034 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.219177964 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218961275 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.219161377 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.218689579 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219356019 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.219576331 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.219843814 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219210212 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.219013246 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.220198575 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219432672 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.219777171 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.21999537 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219425753 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219597035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220235505 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220332732 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219339422 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219739752 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220437757 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219371583 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22002491 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218801084 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220237228 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221072442 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220616689 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.220084276 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221180882 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221504381 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225795529 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227962489 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.220563864 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221171263 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221113818 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220424639 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220741174 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.221607366 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220607639 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.221411768 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.221448443 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221319814 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.222617433 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221356013 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221359314 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.221237075 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221077283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222746019 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221422238 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22124801 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22263861 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222600318 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222400136 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.222310939 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221708795 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223022205 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.222849522 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223346392 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223153386 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221512881 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223523411 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.222676315 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222326376 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.222454556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.222809636 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223761813 seconds)
  done (took 89.057142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22315856 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220572673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220694077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221815358 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220373431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.223409203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.221805698 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222773076 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221859155 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224564407 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224446528 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221852574 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221273186 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225049069 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224852945 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221999077 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224024241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221626282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223871871 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225077811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224423611 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222125082 seconds)
  done (took 28.041346603 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224923055 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226690286 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.22151493 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225291534 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22207719 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225012739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225675903 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226166714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2245156 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22233853 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223585517 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224812958 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222684092 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222499214 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222351732 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224538852 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225882035 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22339977 seconds)
  done (took 23.175907896 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224075867 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22322403 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226436486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222686246 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.223119828 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22640999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223752106 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225489255 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226458913 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224806 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226698714 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225672749 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226423711 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223415655 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226520524 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225385421 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.226473394 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223821021 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227409599 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225109807 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224474769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226233736 seconds)
  done (took 28.096620712 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227270031 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226808817 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224471867 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224357928 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223811789 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228558497 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.227393792 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.224809007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228589128 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.227309871 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225091459 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227790153 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226496904 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225193252 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225245103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225684175 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227930707 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226236086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22752453 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225360392 seconds)
  done (took 25.669147311 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.33886767 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339614451 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.341788169 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340576197 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340208887 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.339719402 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341897972 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.340894332 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342130468 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.34068166 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.341023965 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.340810694 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342032359 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340503647 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.340330833 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341367236 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.340746915 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.341206472 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340942829 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341492403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.342816836 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.342429083 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341781375 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.342895931 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343664472 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.343178207 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342763507 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34260516 seconds)
  done (took 38.70402705 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231159547 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230776672 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228286548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228705621 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228896516 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229050526 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229099137 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.228768855 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231227222 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22807887 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231365621 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.231077868 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231370388 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231285438 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231147863 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231412871 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231944056 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229570917 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228687282 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228475788 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.231761864 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231854714 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232028731 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229320279 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229638989 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23151409 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229219419 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229746507 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232143848 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228904079 seconds)
  done (took 38.054233126 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25135297 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251001605 seconds)
  done (took 3.650471745 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230485687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23453169 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233375782 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229590233 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230541021 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233271738 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232728179 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23051173 seconds)
  done (took 11.003108991 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234759981 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233150554 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23353406 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236589324 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.345330867 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235488228 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242442169 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254791136 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236291699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236583562 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243478688 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243574658 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237608209 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23662559 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236090605 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238069582 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234643657 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344264627 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.347824685 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234659562 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.347411228 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238006504 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238719879 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232319058 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237783087 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246923436 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260227009 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234691181 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237407039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24059297 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236800938 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231954083 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.346922639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.346655834 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235780457 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.346243155 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245989332 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256632788 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243338723 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367633457 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23600339 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234730236 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238099998 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239270856 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239368588 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.348101785 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23688202 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233733309 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237797906 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24230335 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2428493 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238018956 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235212666 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242765374 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.23881305 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245258887 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.36731834 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242400047 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248026411 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249777127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271207997 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26502737 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240072156 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.348640696 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249606147 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264430142 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24469103 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.254679582 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234406011 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237266515 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245194136 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271156444 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.265717779 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.347246049 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35075521 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238944171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239920673 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23846887 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246828558 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262918644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.349700322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350929465 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251880705 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271925335 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239930632 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.350072041 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.351693827 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.350747303 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242615945 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251865567 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.369248606 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239773702 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241194338 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241678424 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242342151 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.350284044 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.241782849 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242898326 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237832176 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241167222 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.351669634 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245567398 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252843867 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35139891 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.352954501 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247887552 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260685068 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241981802 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24820825 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239603329 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352799307 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242631112 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248549161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238256129 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246237265 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250965151 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.354295358 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243263937 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.353037925 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242612608 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253188701 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270566162 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.241843581 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242131849 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249291712 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.364831872 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353041695 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24715419 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241671085 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23945779 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239662282 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24522209 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24289872 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.243503408 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.35337882 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246076684 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240008688 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243049411 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.353795399 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24477313 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245290602 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243890927 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245813896 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246888836 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.355378184 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245784591 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250738826 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264488267 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246186628 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243963588 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.240744179 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244048035 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247023286 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.356573946 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245298679 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.355879734 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.24585592 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.355920214 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245140186 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.244066262 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243988463 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247649053 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251179423 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.355862816 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248251473 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245402404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241876044 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.243818244 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244863678 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245115283 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245099066 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24483347 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24971332 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.365429432 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244414943 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.356459382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24943036 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35778823 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357957654 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35644001 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250684424 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255980339 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.357136042 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253656768 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.377128689 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358606096 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246067609 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247983026 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246646954 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358139188 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252051527 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.25378321 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259733062 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274274895 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248594795 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.250682985 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248634872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.36281709 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25137406 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.356297249 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247366601 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35784404 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247996422 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358723371 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249656926 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.358442021 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247585879 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247691275 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247013426 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.359160552 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247568222 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249041714 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248999771 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.244709701 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248033161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.358628732 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250428258 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244637228 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248346889 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248072483 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.24821049 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.360669221 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.255397417 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.24584454 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251363339 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251303015 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249587291 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249042373 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250300755 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251882863 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250076976 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256339949 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270140214 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250427045 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257166589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.268996038 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.250152595 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252263294 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249089253 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245706029 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25428338 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257740224 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250066338 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.361951668 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.362031502 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252076359 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250144576 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257735929 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267078891 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250624434 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250636879 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252662936 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248093839 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253369213 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.252247711 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252354991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254031362 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250972186 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251430829 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253738803 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.363404042 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.362217784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.363836769 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25573544 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.370267776 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256898383 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252485428 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255015838 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254232904 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255815918 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253695249 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.362840933 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252947366 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266118561 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.388891607 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258826629 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275030313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252440329 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259300177 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.274282852 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258021319 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254616554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255016945 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254021049 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25434869 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249739931 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254979634 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253077862 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255423074 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25581781 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257270254 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252778347 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254807148 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.364210612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.366952808 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254087384 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.254271256 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253862739 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256652884 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255700544 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254917258 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255140971 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261826881 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274533326 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.255477871 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.254656752 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255338147 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254604769 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256746893 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.364722352 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.258438797 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.377204761 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259062864 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265200171 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.258024371 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265905163 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.365222254 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259232725 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.374348873 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251928504 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254621033 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25641572 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.368011856 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262762576 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.387469147 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.258051371 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.372578569 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367906478 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.368316375 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255597141 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.368152902 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256145826 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.367679901 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265057122 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278745015 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.261558439 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260299346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253575696 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.369058594 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255992337 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256427892 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260567363 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.367253985 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258678734 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.258124616 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257396126 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.256659563 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.369172011 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257606534 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252707522 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.256944049 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264546179 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280868271 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37433379 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.257118275 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264924878 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.390743516 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26514155 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.390526749 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258890113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.369577459 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256846174 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260341641 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259202277 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260305697 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.371921642 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261416506 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.261856458 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.371764116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261353909 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.259996485 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.370446068 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258538059 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270147119 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396309665 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261279504 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263871977 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.255112541 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.261904251 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.375500095 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.370943075 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.258787083 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263766771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270655738 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267296937 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260748572 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.372286622 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26054421 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372286349 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.259463172 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260170243 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.373102756 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259678815 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.260869709 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.371638942 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263574961 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259663559 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262278543 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263177183 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26262945 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271963431 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.393778475 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262819098 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371526547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260928429 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261765808 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263476687 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.373739149 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262968119 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262253171 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.264745973 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270007878 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269633481 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265791045 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262310034 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.3745368 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262848074 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262987436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37372632 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.374281173 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.374213624 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263925886 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.375909354 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263764281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263326715 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.262546431 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264413223 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261829853 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267050655 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272485615 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263879869 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260919141 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.262398758 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261903652 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.262365133 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.263735943 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271378612 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288471998 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275549251 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273452736 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.381648021 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264443804 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267879186 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271923778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.263231561 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265449155 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.376511082 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.264660016 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264830339 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268633578 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376478794 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271425213 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286733595 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264095057 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273154676 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28489964 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.375461744 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266876416 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269640861 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.264669994 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.261187676 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264720976 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265896135 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27191895 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286315978 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377012845 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26760547 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264639339 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268147093 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.381826855 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264890144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267370082 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.261839279 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26627626 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377783066 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265326371 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262912537 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.266031433 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265615247 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.27138642 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273760146 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262209535 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268603741 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266910869 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266911833 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379542498 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265310772 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263640254 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.263713388 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.26761754 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.378815778 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268137614 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26994732 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266468428 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269925797 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.267851982 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.380158688 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271734597 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.278402711 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27486377 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26510717 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267878105 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.26861619 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271998188 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379446674 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.379885041 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269000208 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269676641 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.267908721 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381264836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.267378192 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271842805 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284500685 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287070157 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269188096 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269039521 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271768196 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267714696 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.265046304 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268808473 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270966245 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27245626 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.391151781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.380945779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27601861 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289474302 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.270411546 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272983882 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273237362 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277735953 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.27186473 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381335771 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.381589461 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.27495059 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.286723092 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269304598 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280420448 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30210983 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291119194 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27110932 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.383040491 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269561573 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.380668074 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272518899 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.382812996 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.269139329 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269433898 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.381950635 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272098595 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276856966 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272974035 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.271031467 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269524748 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.270944219 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272615781 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268466909 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.383846164 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270576681 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.382895898 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.384461462 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.385128521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27153234 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285511781 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30075067 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.270302741 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.385421563 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.268786569 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.275629927 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27571694 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283932712 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277970098 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.384958352 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.385814936 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273384291 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383576382 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269850982 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274028009 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272625276 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272583851 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268985216 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285746966 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.412392845 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.27750693 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27296196 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.38608164 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.272079277 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275289029 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385387665 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.385449958 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274517891 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275980516 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388579181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272784157 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273262633 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278548233 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279656749 seconds)
  done (took 765.278285157 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270298356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270809384 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270169468 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270647632 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270212375 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270428263 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270986388 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270615716 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270066813 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270343034 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272418484 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27116948 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271093891 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271190767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270481586 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271103923 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271073861 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271185509 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271431997 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27053995 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27074833 seconds)
  done (took 27.872689121 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274194927 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.271026726 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271889118 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27486824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270732893 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274523745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272073631 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274377908 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275478991 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271779809 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275068603 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275413466 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272276622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.271334334 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27310377 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274756399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275690395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27267188 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274951312 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273768955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275708951 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27409255 seconds)
  done (took 29.206318706 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.389245545 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.389357412 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277032755 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.273035796 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.276080958 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.273546382 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.388427176 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.276208147 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276973112 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.278862574 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277280393 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.279409126 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.286266225 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.282337286 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280625195 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.277359577 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421133628 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.390972237 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.389994959 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.390216584 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27399552 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283751683 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295931739 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.274058791 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.276339737 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.392683462 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.27609709 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.27699832 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.391832658 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280039641 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.394988385 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.277870907 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.278580166 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281558601 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277869226 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280211385 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281938169 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.392543301 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.274837954 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.277952516 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290813011 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299451839 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.392297298 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285451473 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299535751 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278010024 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.283648423 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.401211074 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.275627734 seconds)
  done (took 65.40971596 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.278267424 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.27848536 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276150693 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278260393 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.278974487 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27917198 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279449275 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279778163 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277096971 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.277221124 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279181611 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.277382629 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277815396 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.280624403 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.279280213 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277480053 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277063994 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277299821 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277313979 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277694785 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.277223647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.280178443 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.281083569 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278434031 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280533324 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278255622 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278630323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.280574126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279229986 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.278503579 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281941158 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281822442 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.280767967 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279240485 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279068656 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282224892 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.280872531 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.278838861 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281763849 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27904553 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.281033056 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282092019 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281798219 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281479478 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27944637 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.278775427 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279469964 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.279452572 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279167168 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.281319838 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.281804429 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280229218 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281147711 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.279224373 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282294913 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281319958 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.27937128 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279710016 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.283186495 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.279345296 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.279787198 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281588456 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280149742 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.28235405 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283070546 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281131188 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.280615989 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282927469 seconds)
  done (took 88.217747943 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39730966 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.396768725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396375999 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397102508 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.39751363 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.397625564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.397988753 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.39572197 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.398759863 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.396028396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.398677214 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282451301 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.396622776 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283313024 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.398307333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.398137106 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.398034047 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.397065862 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.397424032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.398002993 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.397120603 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.398302744 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.399041809 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.39678141 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.399109803 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.398006893 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.399677869 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.400094035 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399140785 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.398379357 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.398513888 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.400146091 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.398668846 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.398345376 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.3999517 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.400678949 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.397820738 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400185686 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.398266808 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.400262676 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399833588 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.398863602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.39869982 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.400397803 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.399226641 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.399613496 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.398497804 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.399800998 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285293328 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.400598413 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.399987809 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.400607763 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401157593 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399069523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.399393027 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.285756909 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40023518 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.40003968 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401367585 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.400443495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.401256266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.286398036 seconds)
  done (took 87.350787271 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286718562 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284902687 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284260922 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283875815 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28604363 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283878331 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287511668 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28609467 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287322985 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.28705018 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287174377 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285378952 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284186866 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286980236 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285157543 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284527099 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284707536 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285958481 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287523554 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284548591 seconds)
  done (took 26.912541044 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.285652535 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287738977 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.285705422 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286942775 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288005834 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285601899 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289164106 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289022414 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285657597 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288869685 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288597913 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289307294 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286411998 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286370277 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28887646 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286723862 seconds)
  done (took 21.798049943 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287070056 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.289420371 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.403981366 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.403922274 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.286952251 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286579282 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.290094258 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287743818 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287474862 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290888475 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289521296 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290071224 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29024698 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.405174987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286681746 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.289720094 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288436551 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.287725631 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29039448 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.405918312 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286609257 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287170739 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.289659279 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291387613 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288165001 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.28887655 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288332926 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287980343 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288677438 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291080911 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.2884587 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.288437767 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288248737 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287929488 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.404143075 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289359032 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.291135357 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.291379028 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291631312 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291167037 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29175773 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288970407 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.291006929 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293017746 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.288913943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292105354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289607824 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289261452 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289492669 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289495892 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29206821 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.406151944 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292877861 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292699606 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291982435 seconds)
  done (took 72.819833491 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292210052 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293025169 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289643108 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292613556 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29307474 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290169727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291835842 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291852597 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290322378 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292546898 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291209279 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29455093 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290933445 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292136969 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291138694 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294165585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290747343 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290728517 seconds)
  done (took 24.456627265 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291527625 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291084003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293564731 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.290959371 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290971308 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293473821 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29124017 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295486119 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294899248 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292239785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291822951 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.294070303 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294611389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294722023 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291828465 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292545216 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295779713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295082827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292756772 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29220129 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295761301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294909145 seconds)
  done (took 29.656318901 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296702124 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295292186 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.295127306 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314004973 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316046709 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319199324 seconds)
  done (took 9.042099131 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304334856 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295442749 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29226762 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295749707 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295943349 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29322087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294218509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2932698 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295640302 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295132343 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293955147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295808279 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29676968 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293978106 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295483969 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296162198 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29448132 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293751252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295323973 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297220958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293841573 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296841121 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294435233 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29446155 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294972843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294064735 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297426861 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293848825 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293657487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297009784 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297874946 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294259452 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296492025 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295611921 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297924095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297603215 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294990248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298616295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29742429 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294797812 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297868899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297316323 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297712663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295867051 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297956144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295950061 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296024373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296098401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295944685 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298421111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299027042 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29667676 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299399807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299197683 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299390978 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299132672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296753111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296165617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298956948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297025145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297793974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299859416 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295897052 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297945567 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299138203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297901587 seconds)
  done (took 86.796963736 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297161 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297907669 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297063172 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298259271 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297993262 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297255767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297689692 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298407937 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296625512 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298076992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300767441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298179965 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297895042 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298190451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298824794 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298040839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297435649 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298025625 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297931537 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300906845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298619616 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29780978 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298370548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298304664 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299203618 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30112462 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298496539 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29852248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298973272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298204146 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298151006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299633349 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2989495 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2996489 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299270575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298862978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299397376 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298858319 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298796033 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301625523 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300340477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302233135 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299512237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299706907 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300235264 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299727048 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299804387 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300268996 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299877798 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299169028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300548838 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301308417 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299733124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30006721 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300341624 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300648982 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300477901 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300649922 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300419545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303609063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300244431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301467486 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303763349 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301714679 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301573389 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302180547 seconds)
  done (took 86.975475831 seconds)
done (took 1776.311299087 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.465669508 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420722288 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303168084 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.328022863 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303866563 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.300978741 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.324965102 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304661878 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304547077 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303110471 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303234035 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.502165689 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.301700225 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304190973 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.303913999 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.397269749 seconds)
  done (took 42.688902337 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333504508 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310584559 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.430282515 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.329255006 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333533433 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.507877279 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.368094603 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.309315858 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494707201 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35444971 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.993699668 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333776097 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309141647 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.506375782 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328473034 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.508214743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.573588367 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.99670174 seconds)
  done (took 30.536607592 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801000765 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315871754 seconds)
  done (took 9.333146935 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330745552 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310333254 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31037745 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308922469 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301584804 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302304257 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308788237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.302414328 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.36233152 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.448335733 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311987738 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.31981352 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330373299 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311372182 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.306198197 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348853108 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.470421096 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306939324 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306376004 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.316290265 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310193028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.413005631 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35463205 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307475652 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.446536622 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.36492844 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317805183 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.317223616 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44652373 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308493573 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310210937 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310418132 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312633954 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243821102 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.865427011 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.322215095 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336598791 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319792041 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.306434187 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.462684456 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312619149 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318069635 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309982461 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.860622166 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.447006763 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434476685 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.644199113 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.3325618 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.312987605 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.376103446 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312479402 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313315123 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357185375 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.113639733 seconds)
  done (took 111.662158114 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328341914 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.696106574 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476449898 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329202815 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.043269929 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997527687 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.32460098 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.620908279 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.385686505 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306194377 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.596470513 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844983813 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332020916 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.383652773 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.887952359 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.353275171 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304765589 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.242046458 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322762144 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.305879405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819882473 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306133722 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.325413999 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.491359145 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.345732548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789910482 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.932008574 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.822878785 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328101795 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.306806198 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804703041 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323754381 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.325451242 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309672095 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.582329819 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.692467907 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.685149206 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326715988 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.310320912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310101303 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.32738661 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784683453 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693831078 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325334008 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.314123126 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807411522 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326740382 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.309454013 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.315175432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520061751 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.008610372 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308525581 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.915376783 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.313674595 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.670567871 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.310171885 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.313633461 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819365952 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328658287 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.462770915 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331426061 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309574011 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314893136 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307593796 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308475047 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689507661 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.668096645 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309927625 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.681529049 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818041469 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328341262 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872327322 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.239800871 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.329776566 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.422484137 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.322575549 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.023692986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830090465 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.345574103 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309589613 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670398203 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329300191 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60169705 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327334883 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330090973 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833744627 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.31810439 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.310927522 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.311942539 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.311449976 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.122615125 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313909398 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.596479402 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.352140577 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312004388 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.310952727 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.316691378 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311267326 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.330870232 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.315830158 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874293966 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335716031 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.308171922 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332277282 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312807705 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311614278 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.315131504 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.311182363 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541392186 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.788023853 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.332145701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312913123 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.311606389 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.337070681 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.479213365 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.312969737 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.646818331 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.332778312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311837615 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333216621 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.01618013 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362385696 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313459815 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.31346798 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.240864504 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519184207 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.348498283 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.313487048 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312632949 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332909478 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.687128591 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333372815 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.40545542 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.316065019 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04768187 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.360287305 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.315889654 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.670035904 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318737886 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314580843 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315476845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316110706 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607284998 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593796267 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.582129291 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316960358 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.332123526 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.032215404 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333777476 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464310959 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336944635 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315902487 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515059476 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764068139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316816753 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.989180594 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317184853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5430823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316832898 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621640389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.836975018 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334804193 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319139169 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.055662739 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030401395 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.15723996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.316341169 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606044359 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.330203588 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788236571 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.316569071 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316446957 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.912499851 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319294523 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318449907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.317156101 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.31728094 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.383108056 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492097906 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.61055462 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323413427 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795906335 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.393278152 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317218945 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33950651 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.321336784 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.666560286 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.341819832 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317231189 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.330496746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.320193586 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.330162136 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816130551 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.289035126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.317415676 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473443326 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987854727 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.335811239 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318150587 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.955042335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.558644064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.898721356 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.404462606 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.65420143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.338990345 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358063535 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.048599052 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377375927 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859998851 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341201897 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.319532346 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950213974 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.337173507 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.671804709 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.319971179 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321212825 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908152076 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339639195 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.321494731 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.68264572 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340526621 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595082909 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.31962973 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332546959 seconds)
  done (took 1109.899363431 seconds)
done (took 1305.335226208 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.320885199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32579336 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.306316817 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.32445588 seconds)
  done (took 26.512108276 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.337967008 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.328157292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.44552626 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.326421072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330014068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.32741065 seconds)
  done (took 9.332870314 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.456429076 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327202359 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326046941 seconds)
  done (took 19.345648792 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.551329894 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.697699969 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.695589805 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.706854761 seconds)
  done (took 10.887990526 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.444974823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.447244811 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.447001194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.332869862 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341336293 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342905071 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.332566327 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333473918 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342542086 seconds)
  done (took 13.601995276 seconds)
done (took 80.916076507 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.305587033 seconds)
    (2/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.935859341 seconds)
    (3/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.404892225 seconds)
    (4/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.388973898 seconds)
    (5/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.563253651 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.59499469 seconds)
    (7/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.21558503 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.327529241 seconds)
    (9/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.405632205 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.387172062 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.350154222 seconds)
    (12/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.438540402 seconds)
    (13/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.512924764 seconds)
    (14/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370374038 seconds)
    (15/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.415972846 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.331356021 seconds)
    (17/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.375131188 seconds)
    (18/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.001423872 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.257705775 seconds)
    (20/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35078396 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.503356219 seconds)
    (22/286) benchmarking ("sort", Float64, false)...
    done (took 5.6922141 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.061970073 seconds)
    (24/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.753764699 seconds)
    (25/286) benchmarking ("sort", BigInt, false)...
    done (took 6.327407373 seconds)
    (26/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.005307821 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.311321618 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.348635089 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.306913123 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.328596424 seconds)
    (31/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.450269999 seconds)
    (32/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.156787415 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.30611494 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456324917 seconds)
    (35/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.331914084 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.333611935 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.308249892 seconds)
    (38/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.447393816 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.306963714 seconds)
    (40/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.428848787 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.361581733 seconds)
    (42/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.573398191 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.348797461 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353084277 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.782113171 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.589859751 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.904131918 seconds)
    (48/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.145454873 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.200943585 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.328572266 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.461115536 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.633888036 seconds)
    (53/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.538947191 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.627578495 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.602540877 seconds)
    (56/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.371140149 seconds)
    (57/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.842138169 seconds)
    (58/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.308704605 seconds)
    (59/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.326519113 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.334051271 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.697352663 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.352606922 seconds)
    (63/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.331865698 seconds)
    (64/286) benchmarking ("sort", Int8, true)...
    done (took 6.330829294 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.406163101 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.699512636 seconds)
    (67/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.328246792 seconds)
    (68/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.737438637 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.367110379 seconds)
    (70/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.718010977 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.342852379 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337737111 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.351996924 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.828670557 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.574588389 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.310485229 seconds)
    (77/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.310521638 seconds)
    (78/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.73279196 seconds)
    (79/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.310041878 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.345162142 seconds)
    (81/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.022847798 seconds)
    (82/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.875662411 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235832661 seconds)
    (84/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.333566015 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 5.702639208 seconds)
    (86/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.338038127 seconds)
    (87/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.109883946 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.9564486 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.350474157 seconds)
    (90/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.715543095 seconds)
    (91/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.894102036 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.415978958 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.33369186 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.452011924 seconds)
    (95/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.335025787 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.353185489 seconds)
    (97/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.736162096 seconds)
    (98/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.642519072 seconds)
    (99/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.428701059 seconds)
    (100/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.310930641 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.572809728 seconds)
    (102/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356267807 seconds)
    (103/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.311875062 seconds)
    (104/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.82835573 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.34880364 seconds)
    (106/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.851914078 seconds)
    (107/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.546250902 seconds)
    (108/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.312183638 seconds)
    (109/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.620595512 seconds)
    (110/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.076578322 seconds)
    (111/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.825738391 seconds)
    (112/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333775408 seconds)
    (113/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.711027674 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.770130285 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.333221673 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.829305508 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.243949358 seconds)
    (118/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.869640458 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.85683198 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.372462022 seconds)
    (121/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.332266296 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.613136002 seconds)
    (123/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.340030037 seconds)
    (124/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.313861343 seconds)
    (125/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.905628847 seconds)
    (126/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.333604125 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.165976209 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.594800985 seconds)
    (129/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.019936271 seconds)
    (130/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.145856674 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354786553 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.446373364 seconds)
    (133/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.195446914 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.401481886 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.316135158 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.782079547 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.165301959 seconds)
    (138/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.579574743 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.755454006 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.367916906 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.188391287 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.146937423 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359605131 seconds)
    (144/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.523101151 seconds)
    (145/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.237114028 seconds)
    (146/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.459629983 seconds)
    (147/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.190597182 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.143881401 seconds)
    (149/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.431124614 seconds)
    (150/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.389183533 seconds)
    (151/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.21080578 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356175952 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.27640283 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.436919885 seconds)
    (155/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.787534973 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.58191668 seconds)
    (157/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.806658175 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.021599502 seconds)
    (159/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.434024249 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.323376635 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.813712071 seconds)
    (162/286) benchmarking ("sort", Float32, false)...
    done (took 5.368286971 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.080889953 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.321061784 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.097043064 seconds)
    (166/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.355380056 seconds)
    (167/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.317441737 seconds)
    (168/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.435917173 seconds)
    (169/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.362880392 seconds)
    (170/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.361040565 seconds)
    (171/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.315365084 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.944097214 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.417686067 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.362009465 seconds)
    (175/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.336108793 seconds)
    (176/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.394678295 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.376787895 seconds)
    (178/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.419741845 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.069187202 seconds)
    (180/286) benchmarking ("sort", Int8, false)...
    done (took 4.368758984 seconds)
    (181/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.399743493 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.030074449 seconds)
    (183/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.62343829 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.449255168 seconds)
    (185/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.061246466 seconds)
    (186/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.325185472 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395670213 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.370203703 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.347624025 seconds)
    (190/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444588965 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.318080795 seconds)
    (192/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.317656472 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.303749456 seconds)
    (194/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.605895891 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561189182 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.983093263 seconds)
    (197/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.849179145 seconds)
    (198/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440690839 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.247828614 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.341335528 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.547952225 seconds)
    (202/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.317261217 seconds)
    (203/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.402184586 seconds)
    (204/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.036360183 seconds)
    (205/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.422237326 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.412290717 seconds)
    (207/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.341306189 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.357651008 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.359816946 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.03331336 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.923255874 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.423043143 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.379131181 seconds)
    (214/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.346801129 seconds)
    (215/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.025429517 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.808948624 seconds)
    (217/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.251329509 seconds)
    (218/286) benchmarking ("sort", Float32, true)...
    done (took 6.343935748 seconds)
    (219/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.178065011 seconds)
    (220/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.319424694 seconds)
    (221/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.390413611 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.319112733 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319494535 seconds)
    (224/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.325130175 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.088561262 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.061652176 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.632345788 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.82560948 seconds)
    (229/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.542953753 seconds)
    (230/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354622684 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.330352019 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.36743767 seconds)
    (233/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.586489902 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.358409494 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.567813029 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.195302671 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.364915138 seconds)
    (238/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.891792563 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365774213 seconds)
    (240/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.580533665 seconds)
    (241/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.88812343 seconds)
    (242/286) benchmarking ("sort", Float64, true)...
    done (took 6.340725063 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.750530267 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.603034383 seconds)
    (245/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.543260902 seconds)
    (246/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.463333251 seconds)
    (247/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.355945575 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.230045547 seconds)
    (249/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.340442934 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.340358888 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.880242049 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.769180084 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.339761368 seconds)
    (254/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.368182901 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431630698 seconds)
    (256/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.366420505 seconds)
    (257/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.446759977 seconds)
    (258/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.321102104 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.454346375 seconds)
    (260/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371824291 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.97448383 seconds)
    (262/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.328240836 seconds)
    (263/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.359535422 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.490894348 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.947525998 seconds)
    (266/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.423809468 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.330397109 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.177435886 seconds)
    (269/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.32296738 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326891638 seconds)
    (271/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.947490685 seconds)
    (272/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.102310877 seconds)
    (273/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.37128956 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38252361 seconds)
    (275/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.770067349 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 6.349634365 seconds)
    (277/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.542653954 seconds)
    (278/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367543693 seconds)
    (279/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.368363412 seconds)
    (280/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.426818364 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.250728339 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365327374 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.342878124 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.352152222 seconds)
    (285/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.325005379 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.339902249 seconds)
  done (took 950.885936012 seconds)
done (took 952.126380704 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.375798985 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377362537 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.35312985 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.37541817 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472163643 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.376468977 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.363630701 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355106189 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400881644 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403776771 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359347622 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.376279674 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361661068 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.359095015 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.353565061 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375919131 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.504985136 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.360395206 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377324638 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.364181964 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.375789572 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.358001167 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.403893468 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.37677535 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.358472126 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.357962835 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363997387 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.380362276 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471723608 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.363749285 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.357518371 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.371780738 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.506465005 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.35375571 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350732423 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.38043461 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373524104 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.365198487 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.358559988 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.392675209 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.956995269 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.379512275 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.362789001 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.356742331 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.356140317 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.36042743 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.363605947 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363819049 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376149791 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379139075 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.942239851 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.394912111 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.365027216 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.357594209 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36729204 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362276136 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.360904638 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379229615 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.381249053 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380527578 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.489785158 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.361560595 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.359342134 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.378397469 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369984501 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.977592519 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371162429 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362036652 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.95187467 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.38260997 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.975799658 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.390463603 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.357795036 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376251451 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.395343483 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.501719945 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.353082701 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357186635 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.3715099 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.361958049 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.370097106 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377557477 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364233114 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35884652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379131063 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.381759147 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.368994443 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.364986617 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.36788104 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.383529869 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.372378339 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.376230538 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362237047 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.354433604 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.368487837 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.363310391 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.367802542 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.367629661 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.36542912 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370286828 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.951096871 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402906607 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35624775 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.356783883 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.358757625 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.377717252 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.951070892 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.384470898 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.381793765 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407348446 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.361851789 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.492943799 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.369963331 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384353341 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.370562809 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36500931 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357262576 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.497434317 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.94489288 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.400856016 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363584951 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.365039016 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385068525 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.364417619 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357790001 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.511679333 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363807017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383399516 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.488242787 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372393858 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400149611 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.365910894 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.364920197 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385392806 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385865916 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.399790857 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.365767975 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384688679 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.384293244 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.359556837 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379936852 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.373504958 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36432512 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.368714108 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.357219234 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386501926 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382974824 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386044082 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.384028732 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.489650569 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.361058698 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.499075401 seconds)
done (took 231.870071256 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.432419639 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.352617768 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.458775848 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359993367 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.474438983 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.465114703 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.357488817 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358275506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35766704 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.740507705 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.357077029 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35878629 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.354210568 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35882896 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456786292 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360541471 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357597727 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707894104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.479441052 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.446363725 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.364647063 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359280005 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.360205971 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.746604318 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363067098 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.358688799 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.43494209 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.362448729 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.710753306 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.358228001 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.361773662 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709914354 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454005289 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379326852 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.370773847 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36842128 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.466479424 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382700138 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445348529 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455541897 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455596625 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.520056085 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.359515323 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358245124 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363699209 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.481553487 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359445895 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.389219815 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.359305321 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361216794 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.705729818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371706886 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.361558039 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360387024 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360435832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.51162508 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.360873647 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.480444865 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.469780654 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.482992206 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.429650445 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.748770548 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.74275223 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.363590824 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.365101592 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.3632212 seconds)
  done (took 151.163176525 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.431886301 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.44333745 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.482835674 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.383856128 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.417075078 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487867391 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.383891261 seconds)
  done (took 11.300468785 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370242656 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.365039237 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414994651 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414817421 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.482902575 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543581577 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366220332 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376563626 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362393444 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419499837 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366930533 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365646248 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.37241566 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.366771814 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41440434 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377575295 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48126534 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36683714 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48420478 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.527152598 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363849871 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372297223 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.420188497 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.379586343 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368757774 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.372337292 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.189683851 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484662566 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363688772 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.366491468 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365141881 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.44704522 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367563261 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.365497356 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364467071 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48493764 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.48496922 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36432117 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.367338325 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.365130584 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366653406 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.36784243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367535074 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364975096 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368116621 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391667058 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.367026071 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368765331 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366873168 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367686826 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.419610584 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368885166 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366218439 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36612984 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.424906699 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374905401 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486932797 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36641694 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369393424 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36597025 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.530455341 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417286202 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369385205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.418493113 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368257978 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370306074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369519624 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.369252753 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424074988 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369817659 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417513595 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366743507 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.556600467 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.39149302 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370395091 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.371895875 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.372206101 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48879284 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.367193961 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37584159 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366461769 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372109561 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375349902 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366562732 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367558399 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545810336 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480244204 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368178422 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.384050461 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377266206 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366713754 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.423783834 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370106637 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367508092 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422922033 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486761473 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424699574 seconds)
  done (took 157.728798751 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375627551 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37932662 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374001665 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.394811038 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.39233523 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371485008 seconds)
  done (took 9.563739764 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.375445538 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.372856948 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.371214363 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.37104083 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.487598537 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.37302084 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.490461719 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376717445 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.495739833 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.371080647 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374235325 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.375604512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.374533762 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.490322426 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.491416601 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.373329292 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.49206017 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370289093 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372515938 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.491440967 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.469330923 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.493463269 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.492194299 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375685716 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378458007 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373176076 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.383290335 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372660987 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373238173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382276949 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.514705355 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374405184 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37504345 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381062066 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.496840223 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375595786 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379151356 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378199426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37131912 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376293082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378474286 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.492915082 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37428859 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.3782477 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.377537886 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381477118 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.38372211 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385482105 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.494168452 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.379210443 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.378234945 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.375231743 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375817128 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.37886705 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377387443 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399820588 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383087774 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.494521765 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.494099784 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.377914011 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377578302 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377376904 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378441697 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.497303961 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382532195 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.379153637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377946631 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.500463394 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.494467317 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375334578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380744368 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.373611268 seconds)
  done (took 103.641847301 seconds)
done (took 434.665584079 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.445596355 seconds)
  done (took 7.727597939 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.548613623 seconds)
  done (took 7.831245809 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.0671582 seconds)
  done (took 24.3539443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.428454584 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.468414609 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.376112442 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.3810022 seconds)
  done (took 26.935700197 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.612844655 seconds)
  done (took 7.895037731 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.372680962 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368062975 seconds)
  done (took 14.025292282 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.550807299 seconds)
  done (took 7.833198394 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.506039538 seconds)
  done (took 7.793612227 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.376535323 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.388985581 seconds)
  done (took 14.060810237 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.350909367 seconds)
  done (took 7.633315102 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.342437737 seconds)
  done (took 12.626032174 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.377016893 seconds)
  done (took 7.662772204 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.428401303 seconds)
  done (took 7.710593288 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.203814126 seconds)
  done (took 10.486555384 seconds)
done (took 165.857971728 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.370706347 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.377222106 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.375005551 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.375687115 seconds)
  done (took 26.780749097 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411017705 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.412247541 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412113346 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.422869443 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.414749713 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411339012 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404086182 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.404223951 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423695749 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.414293423 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413729056 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414731129 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.411902161 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.404937942 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414249453 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.42552042 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.422810208 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.413956852 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.404960559 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41601887 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379691776 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423057804 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415119337 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.379645096 seconds)
  done (took 35.154800917 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.904430749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.45238723 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533758191 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433263871 seconds)
  done (took 7.606878787 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.431971683 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433850717 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450344697 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488660112 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.510897222 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.443685538 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406307218 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.401383483 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.38788439 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.433083428 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.508194862 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.4494343 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527243784 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.380851225 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.595756018 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379890335 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380364638 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432342169 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.483778865 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.505436934 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.380892941 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.431464842 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.437319851 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.450497068 seconds)
  done (took 36.015518433 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380261173 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.399265405 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380500801 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.379066548 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.388787185 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.379628638 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.381366552 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381247585 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.380756768 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386814888 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.380836751 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393680338 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.380025612 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380022364 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.387515917 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381653292 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.38705166 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.38104203 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.381833469 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386448996 seconds)
  done (took 28.963603868 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.375701956 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.229373577 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728130065 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632055926 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.375492471 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.376400373 seconds)
  done (took 28.004597064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.46281117 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.628322903 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383954144 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.790828121 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.884505662 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.403933791 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.384448074 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.652117858 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.021308312 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.020973585 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.449332835 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.459137633 seconds)
  done (took 20.8305416 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.387206625 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.38184483 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.381732669 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.416075677 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.445936544 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.407371276 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.390686748 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.377711809 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.449569237 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468690772 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.406333591 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.447605803 seconds)
  done (took 38.248923632 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464335646 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427835855 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.506514197 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451533547 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107484637 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589568649 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.486749051 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.172323156 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404634713 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650926465 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386816275 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465781109 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634090854 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38384852 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381099144 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.479593821 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627655719 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926672614 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38079776 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.872556669 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405388574 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378464382 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.969294769 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646040002 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613694416 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360586486 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638267453 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.153588215 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705262586 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395023364 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389097494 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377806941 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652092379 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108257288 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498740837 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621475645 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404999041 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.926921292 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.380708899 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.862211359 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383044738 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399191427 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389076835 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380509254 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312638607 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390438718 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141931609 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.406165554 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.090026921 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379166449 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680328607 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479149648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382956552 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.967269662 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43289075 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379627322 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384061477 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477694941 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97296758 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.17708274 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386496487 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317016682 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38500506 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.913635497 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093546784 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.409378632 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.385639052 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383946143 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314829398 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.857923334 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399741625 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520902291 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406773048 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041388093 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212492987 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406442365 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311255063 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003434098 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385890804 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.320159121 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610179233 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15673048 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32029943 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.326790908 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315607377 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174093791 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393666902 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.909368005 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407939244 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200739258 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649928264 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422576526 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406177326 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605886505 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.264168777 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384391101 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.388157553 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500484293 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403945472 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155543102 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339525892 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386603928 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639404593 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594778006 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382534334 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.497300908 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943024635 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413242573 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401650181 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39357394 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626828309 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.068427396 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422595284 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.190512958 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404290493 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159575975 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214416559 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407620249 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.391291788 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38764941 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680309919 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.262993354 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272054485 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452267315 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392355812 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385692887 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.764057755 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235862526 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.26992301 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.612427463 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416226139 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398496339 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.506618352 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348566857 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.390880467 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405931381 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.163094547 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610664045 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38480745 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684433229 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320001973 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523734215 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401453967 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609604178 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.759183608 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.414832873 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647903067 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388382314 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404622268 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399527601 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405757462 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487291563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408092408 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.387195652 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649268876 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390158159 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.390374914 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.895970182 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.168360971 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393449524 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.39120082 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389962454 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05665773 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382348643 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394326786 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281271501 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.400947446 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454585045 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392877138 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629630731 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.930492691 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428744478 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.393113484 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.401058647 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614006615 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398117093 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.798558982 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469092312 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.903656256 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069188246 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424623126 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.322513767 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.099537827 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.081607298 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389036722 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578945498 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3889333 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631160069 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426811906 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392512777 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054872958 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413595813 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.754434269 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.394037861 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40176814 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.393849726 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389557255 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.888420375 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.233579978 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395616332 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422113773 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533844267 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403657267 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325279551 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908482024 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394612988 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390049865 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.167464241 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423298028 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.92391403 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253073758 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673339886 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411495712 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693059686 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.968980165 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430312572 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392330656 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40595091 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408575767 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.420015716 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398671232 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402031719 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.796156885 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.838161467 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957872454 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256033908 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027835298 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.811881372 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.427989724 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277803537 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15190362 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348507866 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052291677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652306828 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169142369 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371014959 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916193351 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.799452894 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294000923 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697591024 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626319777 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.890748185 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.419067239 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718912578 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610312821 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428044518 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393153571 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326471841 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.021880806 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034797131 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434297068 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470705614 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205179767 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418302934 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171229891 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.415647781 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.316517168 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865090592 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.966189709 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.788698802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394281376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412309639 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351559969 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426293416 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923259788 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075172997 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429350672 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.93234976 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358151748 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637330526 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.428657925 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.393002339 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.185426549 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.392762278 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.650838605 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697804155 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335750325 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396562655 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005385736 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.278451297 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401138693 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396435386 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236859343 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418783625 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729961611 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.400845091 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.919014334 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421460378 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330766785 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330101109 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.088497547 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406846389 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369479228 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958557244 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.416987151 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398208058 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423037617 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246672419 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654745174 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.410444522 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061007999 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645901815 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415039991 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418634329 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.400779659 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410065674 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.380355278 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279561663 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633549999 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459905868 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647928431 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.546248904 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.303099292 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.890748237 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637600871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.298476309 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397819646 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667448626 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.128623418 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.418363641 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263219068 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447864983 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397846486 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414999721 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404567358 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441013468 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490203753 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640429556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.430736276 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409523158 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870202338 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429591041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400999216 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413228688 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494718515 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266311856 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.886663226 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.171528077 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074000273 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293026146 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107276637 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732199596 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407226172 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401874301 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33460538 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548613218 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927343874 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673516863 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522241668 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.40192851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423531926 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400223939 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434628536 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615810985 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675694418 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274248117 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400669847 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069026805 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.560271169 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412095122 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.612019844 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97369274 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042945396 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529464571 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400509584 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203406864 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697983529 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49342808 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401601931 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998288087 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.401941018 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.320262226 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.411978631 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415609718 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550470868 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707514722 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137978225 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.435836107 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.561915414 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.175505522 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.953191964 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66355096 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.008931388 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.651794052 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09729342 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234198969 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672263828 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47201205 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646112036 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.54497429 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549871525 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.416499879 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29585913 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404207699 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251358873 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112187852 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412502713 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081156994 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691899389 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.407231314 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.417651287 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426203776 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.413949411 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628135754 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209234836 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633539682 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413864549 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413521195 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.978242639 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084904645 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7365741 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343458479 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.408055352 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672392625 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663026338 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431401343 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.85839556 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.11523245 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038981992 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.386010462 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426202229 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42079977 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227473532 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088915698 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.976346938 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994078561 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.071221162 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415676881 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682792375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.409999624 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40555597 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686093405 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408819138 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405835479 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678618702 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.102125679 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314524698 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.430649965 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.853297516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.343848931 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634513753 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474005369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36803952 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411991364 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.890396872 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434460124 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527970062 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418866061 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.419654652 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409610776 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.144035154 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698628556 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412273043 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.40503532 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.396538923 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416536421 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508364796 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057288964 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440360311 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082219312 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.764363635 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665806502 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.424917362 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.392297355 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411853249 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409643748 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133712083 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386633196 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426479249 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05016727 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.43238795 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423399396 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412461612 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624360323 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621154015 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414053546 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66526906 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449235984 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426606243 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.309852119 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181837664 seconds)
  done (took 1705.257723593 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445733662 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.423622684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.457504188 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.425518623 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424809843 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.499737609 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.457379871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.514815005 seconds)
  done (took 52.968157829 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.410452863 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.590875263 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.444588401 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.422542439 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420005862 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.422595346 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.944838799 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.43519485 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.420524488 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.421479863 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.412491252 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.414469701 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.152971395 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.424817883 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.417481859 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.394738846 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.420377615 seconds)
  done (took 66.895831364 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.10574727 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.580587357 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.911798054 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.453287425 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.421351832 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.442520224 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.046003343 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.444602211 seconds)
  done (took 55.726710876 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.429556438 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.430596182 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.430738219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.430718865 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.430389619 seconds)
  done (took 8.471134641 seconds)
done (took 2112.2098202 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41472848 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.418017918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414814596 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.418196564 seconds)
  done (took 6.985629193 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.391895509 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.145184076 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.399076998 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412019138 seconds)
  done (took 18.669386931 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.422088723 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.429160599 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.237512899 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120347955 seconds)
  done (took 5.680837406 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.284667962 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175592344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.158851822 seconds)
  done (took 7.941344371 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.408524712 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.415166692 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.415673633 seconds)
  done (took 20.560246501 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.714243171 seconds)
  done (took 3.036592772 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.561848232 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.612322276 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.766324415 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.768592586 seconds)
  done (took 8.03224986 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.803432377 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.799486318 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602665271 seconds)
  done (took 6.526827219 seconds)
done (took 91.605587111 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.702780008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.436699215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.620014483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.671578552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.647104166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.621132838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.695699151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.64082384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.182169703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.171015005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.680070398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.647209338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.654314992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437595249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.655346944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442897917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649596033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.728694534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360656229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.432454797 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.6991069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.308904301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.50508634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.330195554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.648810936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.57169887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.90737572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.443522359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417214082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.925923376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.572576707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422790563 seconds)
  done (took 199.153254131 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41456312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433506138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.419379365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418307122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430758361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417227556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417434374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.417290939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416814594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418501912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417201789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417144958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416629572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43896877 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417566486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.446953976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.415922789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436596388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.453583512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.416009843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.417943079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.417752985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.429402406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426863757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.417952377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.418712352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.436927269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41776183 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.41743106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436752724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.41721552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.440574744 seconds)
  done (took 206.90016731 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.428827359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433552589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.419468388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417699608 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.417337944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420195572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41989073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.43825042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437520909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418206172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.418540061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419084947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.44012364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.419366202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.439393095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422242859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418767713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421383063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419106332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.441931849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42168938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430173284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.426353525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433688801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420260418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42095704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.43013615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420654162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.441831128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.419290263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440572083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.419821397 seconds)
  done (took 206.962924258 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.627282857 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425214387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.42690968 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.358882826 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426886705 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.425132912 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422644938 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.623611996 seconds)
  done (took 15.063437185 seconds)
done (took 629.402878186 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.933712473 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.662821756 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.637911147 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.446625035 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.298403992 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468714468 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446706655 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.636655036 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.393083234 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.645848436 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.765648628 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.465561485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.911995881 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44497919 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.725118598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.556531911 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.370282473 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.483846288 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.795216327 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.066482081 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.723960621 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.020450338 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.657520912 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.412549872 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.936461715 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.019681062 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.315510674 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.352642112 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.466319931 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.797504556 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.208909059 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.588617563 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.52730699 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519621058 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.575571618 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.554257344 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.497061562 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517499258 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.657682828 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.783488612 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.107827811 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.209602258 seconds)
  done (took 97.935027508 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.412893578 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.411227472 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.412427743 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.411868727 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.413564769 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.411559598 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.411201845 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.411662955 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.413755637 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.411512124 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.412001868 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.414086552 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.411951077 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.413915873 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.412226326 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.412378121 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.412539075 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.414939083 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.412081321 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.412085649 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.413373904 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.412943478 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.412268268 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.413370703 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.413292526 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.414456763 seconds)
  done (took 38.061987247 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.430964448 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.696352809 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.880695186 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439057073 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433546516 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43752894 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.525552695 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.435644838 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435550634 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436478366 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.605357498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.434948644 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47239966 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.910721948 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.436758835 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433779539 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432886545 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.434420773 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.704963239 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443205102 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.550644489 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437667243 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.524313518 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.446802474 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.462011289 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435027932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.439711292 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.015304699 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.456862447 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.604757593 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.359716407 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.525870822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.993437396 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.912703257 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.360674408 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.439623049 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435788826 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.608672814 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.43734555 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435448272 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.524322331 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.437271071 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.88885939 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.128049729 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.45670011 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.434649782 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.037528911 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.63051813 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.725377632 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448446393 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.916484135 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.438860947 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.437782302 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437865337 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.718771412 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.443124065 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.436210428 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.084072624 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.46738666 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.526418578 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436868246 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437378488 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.713061558 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437531483 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.70537904 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.439702408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444792485 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.459718557 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.896588393 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441009267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.150662311 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.459453685 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436958615 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.608074946 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.703016798 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.075138616 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.464093195 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71983298 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.006832347 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.546310279 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.441972526 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.006684295 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.549634667 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441515025 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438976856 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438148659 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437145281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.495504221 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.524807514 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.088788479 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.161844738 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.097941803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.549766438 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.452582839 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439176661 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.071925413 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.459893425 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43755229 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.887369155 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151427344 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460667575 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448173344 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.158234464 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.462459005 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.530289107 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.444852383 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.902256616 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.442516891 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494285531 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438070556 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44777608 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.465144107 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.529500405 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443543014 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438788364 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.122724064 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.63806549 seconds)
  done (took 190.32069814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.434011451 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.433719447 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.434997134 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.454971578 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.434515467 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.442359045 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434545641 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.43501151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441528866 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.435818682 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.435193497 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.437361638 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.436979352 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.452078961 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445972963 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.441578379 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.046730234 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.437650834 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.43592574 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.435055851 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.265980605 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.442150909 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.437368003 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.434752009 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.435307862 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.438149474 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.440951777 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.437553338 seconds)
  done (took 155.06082052 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.440746512 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.122503498 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.592530651 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.595224883 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.4679758 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438136105 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.592131091 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.51151887 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.463780469 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438698147 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439538704 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.786953924 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.442343894 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.029786228 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.665527909 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.612696857 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.031981935 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.462045928 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439542048 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.440962643 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.595571223 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.448803092 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.788989733 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.088346065 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.463897613 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.089344148 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427183392 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.442883906 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443157637 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.092679639 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.460002093 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.789492121 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.534013021 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.51562125 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.113098604 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055148037 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053099359 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.613345422 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.445012329 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.441522857 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.440578728 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.428019195 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.09420729 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.464878808 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.446362832 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.082062739 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.464367886 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.444737823 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450132148 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441297817 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.51328431 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.53486384 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.814633432 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.099971896 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.553601949 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.45938509 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.601247888 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.836480787 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.57077655 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.036304218 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.427493052 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.097835447 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.466490042 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427283992 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.444374793 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.449336669 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.623689081 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.599871199 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040101052 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.46666677 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.037276124 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.643630451 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.447590693 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.442989093 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.446900898 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.100262244 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.059738217 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.642493884 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.611157922 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.676397058 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431036321 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446090699 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.429568337 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.537579112 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.447971481 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.099229424 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.059171609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467000799 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446841573 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.447201574 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.447854738 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.656271627 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.163103287 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.561589401 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.028112822 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.826036446 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.800947466 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.448644967 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.51268135 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.465749372 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805884125 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.449234472 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512903199 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.901749465 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.821068599 seconds)
  done (took 174.403828214 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.717220047 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.819622543 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.553886482 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.617549145 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.097947274 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.068797414 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.818446497 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.607760791 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57019631 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.729963198 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.788539558 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.541231771 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.689400941 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.538000912 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.23275886 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.548388397 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.569394347 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.610607735 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.621331997 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.546367441 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183599298 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.766100317 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.675494737 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.495785203 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.557197866 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.281579415 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.068517143 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.030824171 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.645405478 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.935603153 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.035548775 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.676978425 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.516936614 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.209737091 seconds)
  done (took 70.71623889 seconds)
done (took 727.827783518 seconds)
SAVING RESULT...
DONE!
