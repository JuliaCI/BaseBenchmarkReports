cset: moving following pidspec: 19242
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.331931624 seconds)
loading group "string"... done (took 0.541767308 seconds)
loading group "linalg"... done (took 6.961817583 seconds)
loading group "parallel"... done (took 0.161178213 seconds)
loading group "find"... done (took 1.076872899 seconds)
loading group "tuple"... done (took 1.801491295 seconds)
loading group "dates"... done (took 1.165103177 seconds)
loading group "micro"... done (took 0.209326681 seconds)
loading group "io"... done (took 0.906301223 seconds)
loading group "scalar"... done (took 35.938369943 seconds)
loading group "sparse"... done (took 11.078357928 seconds)
loading group "broadcast"... done (took 0.896724781 seconds)
loading group "union"... done (took 11.689506313 seconds)
loading group "simd"... done (took 4.082630354 seconds)
loading group "random"... done (took 8.433761705 seconds)
loading group "problem"... done (took 1.842447426 seconds)
loading group "array"... done (took 19.633231541 seconds)
loading group "misc"... done (took 1.615321591 seconds)
loading group "sort"... done (took 3.050400785 seconds)
loading group "collection"... done (took 16.228209002 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483818273 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122150115 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113224465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11755153 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144227111 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113414929 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122153844 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082851819 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.776566117 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146385065 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117854526 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41246104 seconds)
done (took 5.041842323 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173322957 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08276545 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080679516 seconds)
  done (took 1.29988473 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064471647 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121168038 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066943672 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066346034 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066364457 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065138881 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065557919 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065343009 seconds)
  done (took 1.65397185 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072983242 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068418468 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069326842 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06759598 seconds)
  done (took 1.417957993 seconds)
done (took 5.758366065 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76193514 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200818395 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182806745 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394976027 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128190224 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152958463 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.623456047 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330490426 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183010768 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080856059 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104062704 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315345511 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106241053 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63849018 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074140513 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089920553 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135427713 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421014609 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06703124 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081656763 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091840426 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127195524 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084698203 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073898494 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143530214 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067336014 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134375915 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079512929 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067046216 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206199892 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172186071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657912443 seconds)
  done (took 10.156130507 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095582814 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096443691 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068227332 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135980375 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096068633 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069041741 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070380153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066979812 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086252469 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127274843 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088014342 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100335091 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06484026 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068151679 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083603189 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203003141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079221137 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080407827 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069739518 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074388105 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117909087 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077377132 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077035479 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077083105 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128259012 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179709808 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096758672 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097029038 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066285908 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080012468 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114488655 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126570686 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06487277 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065614752 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123558875 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093308948 seconds)
  done (took 4.587002491 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.287360209 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138950242 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090314058 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131574618 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064751173 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106609271 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064747589 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079717339 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198755074 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.350846939 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.569154175 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110543763 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103191796 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067173054 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067987611 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066635877 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.3425709 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108687204 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104249033 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08124737 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070445368 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069238419 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342387558 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067531072 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064154276 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067686074 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057605182 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123565704 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067987247 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.916559486 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123638452 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082050166 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065806596 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099907895 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161349761 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085884601 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274107799 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068202038 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089945589 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063247731 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149480876 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070056968 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064156731 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065775154 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083307224 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102954319 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112444911 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064813628 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066452455 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160351213 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064130199 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078471871 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.993071637 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151900853 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076121422 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064370081 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244530606 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085356694 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068546055 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064021735 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211400414 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132282982 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067040975 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066100468 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06774985 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069311429 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349549232 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065989973 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.989738615 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06713164 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076480247 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068517687 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069038829 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074904364 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071573794 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084345772 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065597067 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074597669 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065379251 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065339491 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066990915 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083857291 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354652154 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066001435 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067459557 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063235795 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064317326 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085549593 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096455189 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065726819 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06493951 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200891473 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068737177 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066448529 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105977208 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066274617 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084705706 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069036853 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112631555 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067382496 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.120768862 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070339939 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096038752 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069752604 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098566571 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080444086 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067572669 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.393421999 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065354537 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064789777 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067998519 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064801239 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067341943 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065929398 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079193479 seconds)
  done (took 21.146724921 seconds)
done (took 38.314625256 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.230741027 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074333788 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074944554 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074584978 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07439041 seconds)
  done (took 1.755501187 seconds)
done (took 2.965514269 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119270675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097978748 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063905466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094217444 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063957211 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099343867 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098063688 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080662977 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098321544 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063444706 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095023734 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063675435 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063572149 seconds)
  done (took 2.330200356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082884792 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082337984 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06910569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081469496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063464061 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081041449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079927107 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08752241 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080054988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071931724 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063270279 seconds)
  done (took 2.047920017 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082067821 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083206022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06872311 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081340403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066140464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0807961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080054446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084900816 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080511075 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073016725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063327573 seconds)
  done (took 2.044410916 seconds)
done (took 7.618581893 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07817261 seconds)
  done (took 1.268005246 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584668078 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.040754403 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080665431 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111366327 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.1817981 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118262847 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275737884 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08605327 seconds)
  done (took 8.852872838 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101806936 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067738633 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069347839 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068969201 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071690642 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070912538 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070153905 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067745522 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07135039 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068939785 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071187461 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069353417 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07057736 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068375844 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070412983 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068334033 seconds)
  done (took 2.415374174 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092195432 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090743386 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073713688 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074312475 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071659116 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071796575 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074144914 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072746262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070197771 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072053855 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074164801 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07310099 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070965636 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064384561 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073520301 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075049582 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070789658 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073780276 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07456691 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074385868 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073902435 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063984072 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070786091 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07401467 seconds)
  done (took 3.073961571 seconds)
done (took 16.810503177 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115011441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071779396 seconds)
  done (took 1.385355035 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082305589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083905234 seconds)
  done (took 1.374603942 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084750738 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065652922 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091759796 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078294987 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066258198 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065481091 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089401238 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065907204 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065966154 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065653158 seconds)
  done (took 1.947052356 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068568259 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078298554 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070036525 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081141094 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07367288 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06407924 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072564676 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0675874 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078396832 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062800836 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071556238 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082068211 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071231189 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083876661 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072399169 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069078232 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070874082 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067127066 seconds)
  done (took 2.516362832 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066630153 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066870279 seconds)
  done (took 1.348422621 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067955787 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06378089 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067220202 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067749147 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06347926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062592999 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063334367 seconds)
  done (took 1.665829872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380876392 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109522027 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2951115 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070241978 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081198263 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248476078 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064715352 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069746305 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069523889 seconds)
  done (took 2.64202924 seconds)
done (took 14.094968853 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079411011 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085599278 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095214223 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36030345 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091249355 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065783935 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113527301 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188225236 seconds)
done (took 2.305095107 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212093643 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612566017 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385710131 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195387458 seconds)
  done (took 2.408571301 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327075712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085902293 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058502795 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066207522 seconds)
  done (took 1.763482299 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066036623 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067889857 seconds)
  done (took 1.354638849 seconds)
done (took 6.962026362 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066995122 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065574375 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063471252 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065597624 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063326211 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064266048 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065074289 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082191753 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065144725 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065372655 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067830409 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064966209 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065617146 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065196959 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063063957 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06294596 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065117571 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063207104 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062870332 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063159302 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065384368 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062924003 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06330669 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063339362 seconds)
  done (took 2.818658296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083278113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065865124 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070639075 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070373113 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069549728 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070748387 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073544552 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065680153 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070724006 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067629836 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069350509 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069328431 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067259713 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069308655 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067492654 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069459674 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071056929 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065656788 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067795721 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069687183 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070305433 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06635611 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069480154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070302015 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069227806 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070345469 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067502666 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065838234 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070498193 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068850552 seconds)
  done (took 3.31411086 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071128943 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06297504 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063999699 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070337124 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063628829 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064895538 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063084592 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06331381 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064311868 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063134557 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064351788 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062708565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063046613 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064016395 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063717452 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066237736 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078046157 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06364267 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0627707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063565153 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066406615 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062998811 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06283535 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063105648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062819345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062556922 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063385958 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063172394 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064133367 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06291474 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.178523803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066786399 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062619873 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069480744 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06628876 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06266532 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06700051 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062359602 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063505769 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062278924 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062538265 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062595865 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062857817 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069956572 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063048241 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064042971 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062678797 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064206966 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06299143 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065462547 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062729391 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062572515 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064554004 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064007333 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066735332 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062423452 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063707703 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062239079 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063627309 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06278473 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062277368 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062148116 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064819093 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063153279 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076746372 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068970239 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062418578 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06404884 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064089877 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064957246 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064487168 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076018232 seconds)
  done (took 6.000951817 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090554305 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086634795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065381279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064304889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061332793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063504315 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067192159 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063635136 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064897602 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069488113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064286147 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06495061 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064672311 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075936521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063784013 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065624099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068890942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06121959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063433398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066772342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063641117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066624151 seconds)
  done (took 2.732759897 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154845822 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070071704 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10453211 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072419848 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0672857 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07213443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069191583 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069061566 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069461084 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067429355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067886659 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069255888 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067070739 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067103671 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067347959 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067828156 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069542745 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067830888 seconds)
  done (took 2.599523723 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077537053 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065601194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086007278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065782903 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065230824 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067664294 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069809699 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073871777 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067889993 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065236154 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073480192 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067797813 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067617581 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06528014 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067604968 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065346762 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06778317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065694574 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073407242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069798016 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069709852 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073701585 seconds)
  done (took 2.774488559 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078542179 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067661157 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08179896 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068388398 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061909557 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064283425 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069652668 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065836991 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069360576 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066677896 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065353191 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063434295 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06846746 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064939111 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068859394 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0655935 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067089473 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065151181 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066711305 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061272035 seconds)
  done (took 2.594760913 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086550732 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067456606 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067606952 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075533506 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067020688 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066862338 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074659274 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066785816 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066727967 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086348148 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066400552 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06660519 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074355467 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071420821 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066619521 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07464202 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073921517 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074162854 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066497044 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066794586 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086365473 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066786816 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074528905 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067058388 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066432562 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066752349 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066577571 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072021267 seconds)
  done (took 3.238439006 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066563255 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065416977 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062700856 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062813342 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062462702 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063340293 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063083417 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063287812 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065032971 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063055393 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065570691 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065319412 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065034056 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065082464 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065231778 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065625188 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065207946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062861288 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062984954 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062795477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065339816 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065162102 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064909275 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062956325 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062602217 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064758236 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062854556 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062766752 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065481943 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062546732 seconds)
  done (took 3.172308017 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075337549 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072487821 seconds)
  done (took 1.396083397 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063089808 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079879291 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062996652 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069126199 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069315857 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065524005 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072620303 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069384315 seconds)
  done (took 1.796237662 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081789975 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077004408 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067527589 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080626982 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075853218 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081568232 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130335421 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066610314 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071721236 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063593893 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078993855 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06472414 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071578383 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065860844 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071070782 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071598468 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063705554 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071539565 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067886191 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063991043 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066581348 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073783428 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067773737 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061368393 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066660569 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086615069 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076495544 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065078248 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068161116 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072333926 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070508469 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059667338 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065168866 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065859557 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063610123 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075459416 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081255153 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068342326 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074179085 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066440807 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07618004 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060784421 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069959392 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071657491 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07536021 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066028946 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066342637 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06077591 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063419884 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067442622 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060881941 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065768586 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060357194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074635237 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068897146 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076088909 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064562835 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066867275 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06874515 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06847388 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071784625 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067246565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06776826 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065454713 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07476668 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069682666 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073866392 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060876856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059895128 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063587506 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075186411 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087703913 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071820756 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066574184 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067384388 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063351718 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06884596 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067071279 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071149947 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071789584 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065885076 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071192096 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073428754 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066006523 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06786779 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073723344 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063877565 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06842265 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063382519 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081376868 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064364188 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063856461 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063464481 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07578018 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068755612 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065109582 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063284651 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071999975 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059469226 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064911068 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065327639 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064838572 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.073984834 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068533523 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068991711 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072844844 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071794656 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065285828 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067290379 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061523112 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065126067 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063390597 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07123382 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058892107 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066907125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065662729 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064728446 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.201036914 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065159126 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066656497 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074228754 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072576363 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06492089 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063204325 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069269076 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066373689 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06968341 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073880956 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065128361 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061925746 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061061592 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069940091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066036476 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070254832 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0712595 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069219189 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060262611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065716904 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071649434 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075300019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066448873 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067199523 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072383645 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066787166 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064917988 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072116797 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068983812 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065828443 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071778929 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067611822 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06167731 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070126185 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068676666 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065143066 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069908644 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06934833 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068662118 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06665982 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064888037 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07390768 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067043142 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065702387 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065567352 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064136539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076198938 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068199032 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061168821 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063118657 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074973113 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063572808 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065987063 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065220602 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0679158 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066777902 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064661398 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065584734 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0673798 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076037283 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070235741 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067313939 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070985142 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077827823 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065651232 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067906257 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065410867 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066731362 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066449988 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074043201 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070990234 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069996925 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068112817 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062369032 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071357328 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072961557 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064878363 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063275414 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064802126 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069788309 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071143518 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070079917 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066786155 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063840461 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066475744 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068922747 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068493195 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065443837 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065078823 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072649446 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064323599 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073055593 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066978207 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075860349 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069545177 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061501724 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069036835 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064389927 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071698759 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060943258 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063877473 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064807376 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066607267 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063629872 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066879168 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059190193 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071616159 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071762832 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065161716 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063929185 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064481625 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070976881 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066269961 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068394606 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067922203 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070421382 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074746441 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06395229 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068059939 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.205048661 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067321712 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061250397 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073067648 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065917179 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066146659 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066449458 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064778911 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070114071 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075772999 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073354394 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060618188 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06913004 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065426683 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065446386 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062479682 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07106918 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069788803 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067127092 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073390627 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067916739 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067300837 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070479404 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065787991 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067616938 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068011681 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06878788 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067123668 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068174845 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065853584 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069394331 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065705361 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064450864 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068053592 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066188065 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066937083 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072061685 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066043448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066641518 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068767864 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067594174 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067273077 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066968547 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065457576 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069366275 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067071443 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066808624 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068612756 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061711288 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073713401 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066406398 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073906218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066603295 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063066655 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074091922 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069047652 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071605148 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067473328 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067763869 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06840772 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066229227 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069008594 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073322373 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064526514 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077084091 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073572232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066883933 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069357604 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066326651 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068122211 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065257199 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067108742 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067384688 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066062032 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066378499 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070139917 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068324037 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066492523 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067216723 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066838794 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066114247 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066961421 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060778657 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065542699 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065385896 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065881629 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075276016 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066467267 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065619082 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065028798 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06695012 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065205821 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063255111 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074147535 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075424407 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066609612 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07318736 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06516691 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067691071 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076753448 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060622082 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06431794 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063876027 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063841372 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072789662 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066541696 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074393261 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06514083 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064258393 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062459702 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064838568 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063037757 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05966914 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062618116 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067869237 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063803184 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06322443 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064450397 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066834702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065377787 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073389882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063579171 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065596335 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064547455 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.19552025 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06646406 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065898456 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069922519 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067337931 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064209282 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064252075 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066365376 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067131678 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068018586 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066622756 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067965567 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077010105 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066429768 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069467414 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069771148 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061305695 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069136467 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066048715 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066080637 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065667641 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070379181 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069643708 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068098066 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074699632 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06605614 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067718065 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066979631 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064524826 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067339353 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066253553 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067236331 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065449693 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068035409 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074312342 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06453877 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069612378 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066458268 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067393707 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073503494 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06836273 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069209844 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073551563 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066668107 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069067528 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074303149 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070770988 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069971374 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067810638 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068272561 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072228994 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066428952 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073573246 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066763294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067558711 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068173654 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064813418 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066488493 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066350522 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065868295 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072106691 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067831366 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065544896 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065292599 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064510234 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067412686 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0694668 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074091093 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068693595 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069714608 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061793072 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06404798 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067712875 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064098876 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06818356 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.0687525 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071461246 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068206166 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066419073 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064946313 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075282058 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071574914 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069759407 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064030226 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069714795 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066945264 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068265372 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067364118 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066621053 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067645319 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069985404 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067814315 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065809914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072959698 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069729553 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067336929 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067659228 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067138695 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066893425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061661495 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066943257 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068278121 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071109331 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068257884 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066471819 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076420987 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063282264 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066069638 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068716818 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065086541 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070124739 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060797211 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066113506 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065456767 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065656388 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059936183 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063917909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062872998 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0666803 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063686539 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060109118 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074706026 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073284072 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067357862 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.19710382 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065755159 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062425341 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061845193 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06595873 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067376843 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068467241 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075610497 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065509847 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065605159 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062226664 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067080157 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069510383 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070281722 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063504577 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062063718 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065829523 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069666544 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072315916 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065338216 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067642414 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069616284 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069668346 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064372806 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069325392 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064058488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070254956 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079336712 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06681081 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067941723 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073078335 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074949725 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067053682 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062066676 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067335829 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069828997 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067542181 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067458168 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067370278 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081614988 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06922331 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066024576 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065902822 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068635134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0658189 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074163484 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067361085 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067450072 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071688251 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068563788 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076266652 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069208189 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074493512 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069795262 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069576945 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065495558 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066835538 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065810785 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065768565 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067305916 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067783102 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071871557 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07463951 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06632434 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07787812 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075381867 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068014605 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063426109 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066211177 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066142924 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062395831 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067279406 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064377653 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06416732 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064499479 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064904966 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067207287 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07135726 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067082686 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067201902 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066121974 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060465367 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068281813 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068380698 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067379562 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06307194 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066162141 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066768728 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070157007 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069426694 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06398466 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068165193 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067917647 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067150473 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061885637 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072818513 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065261767 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068053518 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065740172 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066190323 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066958195 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069511739 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07091883 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066974893 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068724088 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06971422 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068508717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063446936 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063289028 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071116402 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06391783 seconds)
  done (took 42.341272779 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101196831 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063293056 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06269376 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061992064 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073211415 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0628142 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061478944 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062685078 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063151037 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065436363 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061683034 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062154882 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071088498 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077661767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073978892 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066454517 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061837502 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06298835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061766002 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062971793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070846136 seconds)
  done (took 2.753812291 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07405717 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070447731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072317176 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075567087 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066737468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070326572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072172229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070730799 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075877234 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066719386 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075944984 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070379558 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066933188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066686249 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067016429 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070718655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075573405 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067374662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070734991 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072118742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07079719 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072086428 seconds)
  done (took 2.878051479 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066877874 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065937507 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067858363 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061447136 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066663282 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069909982 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069507709 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063635319 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069078987 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064846491 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064953874 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064606191 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067426243 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061159951 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065325778 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063428871 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107466626 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069061889 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065470218 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066458425 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061162616 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067621613 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061411861 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061734569 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064806665 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069532799 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066347314 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063776029 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065499327 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064775772 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065619279 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064120215 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066985506 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066318089 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064653877 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064640336 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064980032 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065139849 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061061456 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063683643 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066247825 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061513139 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065737744 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067184607 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063717279 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06350734 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067127894 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065541519 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060686591 seconds)
  done (took 4.557660169 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080552974 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108488615 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067938081 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087910428 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080001564 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07521064 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069119998 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088990487 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063271177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064294293 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081001138 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079292391 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065487082 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069987318 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071942472 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065869998 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066528841 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064980429 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069330893 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064920177 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069349607 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071796982 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079989592 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0782855 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069165342 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064563262 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064555286 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069806586 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077789333 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069922677 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069723558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070742882 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079743703 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066794125 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064316192 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06735548 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081008631 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06536104 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067596028 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063074293 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06746133 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069432637 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071762331 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081186334 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066133372 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070100853 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065147309 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062231363 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077725589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067347758 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073188858 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079396877 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06877313 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065091892 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069661468 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080365946 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06496632 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063512541 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068638674 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077148634 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062650446 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068492669 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078401446 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066762802 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072194397 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078974838 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070237814 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069308295 seconds)
  done (took 6.327361085 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075143903 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072412422 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081137467 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07943415 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071904449 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071716682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071744115 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071946 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071835627 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076619916 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072146274 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092524701 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067537313 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074656224 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07249211 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072191861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072236986 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072118015 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072045681 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071681661 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072318804 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079559172 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072335861 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0794296 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097354262 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067141384 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071314699 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072152386 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079638189 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071652625 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079046828 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071995438 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071893959 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079771162 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079144242 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071454455 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064569442 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071378883 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072115926 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072113326 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067112985 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080086799 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071702668 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067095823 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071521576 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071679966 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079083053 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078577826 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073905206 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076431339 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071334172 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079208486 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071295495 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071684688 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079343578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104225113 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079696226 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079775919 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071761261 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079236634 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079640705 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085389468 seconds)
  done (took 6.015017998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084252691 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074786445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075978822 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061119654 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063857918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069028079 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063775726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063788176 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073979648 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073918884 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076831752 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069241351 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072214176 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076367681 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069131152 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072698576 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069165278 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069658763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073861287 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069125699 seconds)
  done (took 2.768125808 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074774271 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082140363 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066669277 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072127757 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068222027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071001006 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067996122 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068519343 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066605227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068408768 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075405588 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075313569 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066343221 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07132655 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075560352 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07118186 seconds)
  done (took 2.478167742 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07576287 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072330131 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079124917 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065590467 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063752825 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062001273 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065559431 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06101394 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062280936 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077362808 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065432169 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067909976 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06547797 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0640455 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062971541 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068008599 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061956139 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063262082 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065307586 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077454684 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075987794 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063994956 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066068324 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065399041 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06579868 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070309622 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064619772 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063006387 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062781049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065841782 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066056728 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068657854 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062686054 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06351164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064273715 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063107787 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065554822 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065732212 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067966757 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065350892 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063444338 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06519274 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065007288 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066463395 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061495042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065672306 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.0616168 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067154122 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063222593 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065723181 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06520297 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067558199 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065755212 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072062441 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06821179 seconds)
  done (took 4.985647006 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080801936 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068386586 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062345275 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063942854 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068049281 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067087791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069144384 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067342263 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06747741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063512775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067407001 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068090801 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067120817 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068747897 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067511409 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068962703 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061663822 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067112149 seconds)
  done (took 2.56551747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072114426 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06576828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072787906 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066156448 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065802449 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068313969 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06184939 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064740028 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064211311 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06531538 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065355642 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067405061 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063893936 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06764539 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065335678 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06545355 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067615571 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064026774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065350085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061805528 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067451515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064379458 seconds)
  done (took 2.795784886 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091966717 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080544864 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137101001 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07776949 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08235765 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070816447 seconds)
  done (took 1.8854901 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091575812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078121953 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066701583 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087099458 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072887091 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066648181 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066597818 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067149395 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075699524 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075761801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066883338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075681477 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075537818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074677998 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072858121 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072733333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067616316 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06715648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065742221 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083645268 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067385456 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075237281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067126634 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066735012 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066815413 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074570235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075599579 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075381195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066614248 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075264287 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072136842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066745732 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075386976 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075452293 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068446584 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075182932 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067027145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083251926 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072541932 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074690761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068196427 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07292483 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075584908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071966975 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075253404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067289237 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071701941 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066982188 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067171735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085477405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073130644 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075364371 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072850077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075970292 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075463015 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085121493 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075373172 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074857795 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072645919 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078235761 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074827442 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072477508 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07457148 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07595624 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07313008 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074791342 seconds)
  done (took 6.18819582 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082185681 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085713936 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067419155 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075412798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07485916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067128637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067041596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06708266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067231423 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067467783 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106937679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067506901 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07515733 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075035777 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067697201 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067298759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067531566 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074710879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066850557 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085309302 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066948976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074851064 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074803471 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075015941 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075959085 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072873557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06729733 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067128855 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067034739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06713047 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072098751 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067455384 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07501184 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066695487 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075201962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067431344 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0670481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071731395 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067032969 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072746918 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07488733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083453396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067058287 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066815556 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075969837 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067174472 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067015032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06681057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067640034 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066740372 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075937084 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075326097 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075771719 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074894789 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067107746 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06711093 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067163674 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067231172 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06776283 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072607798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074887049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066968745 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085564534 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067512447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067097902 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075020901 seconds)
  done (took 6.103383109 seconds)
done (took 128.299399801 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183090753 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164476099 seconds)
  done (took 1.686903066 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069878042 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097360911 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076578354 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12962569 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066397773 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099400695 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099115023 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07717146 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065638561 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06570843 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065702012 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067957043 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131026492 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065988318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065511055 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068369085 seconds)
  done (took 2.665224788 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097924165 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155556169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098465155 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064673936 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095889262 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072913158 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064178066 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075087747 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070349039 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06433541 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072266068 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069937493 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06438781 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069919974 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070459562 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072110324 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06435771 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072093676 seconds)
  done (took 2.773735274 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101814212 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090657784 seconds)
  done (took 1.550872242 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155221583 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105039103 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149214019 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343189184 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167309874 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227999671 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127171375 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126969809 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114959981 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12236795 seconds)
  done (took 2.992690689 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098526597 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151166946 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253340885 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114629771 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071568588 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094616045 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11548207 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077276968 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080247105 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079739224 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079750875 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076130281 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097562726 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073017161 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072778955 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07561317 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101456024 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071600645 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073805274 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076431576 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098246459 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065476378 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072813893 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072294168 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076860032 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076675777 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064765276 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065284182 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075857959 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073584419 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076325964 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093169764 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076699618 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106221353 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06943034 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107524389 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075718575 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073012727 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073793364 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073217094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078037861 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077986166 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07184939 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075873384 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064787684 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076131846 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064907081 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064684775 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077888137 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066852659 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077924717 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076567161 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106273244 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06643005 seconds)
  done (took 5.933812338 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102939599 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103318315 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070598726 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10962503 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098973795 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072067073 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100373171 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093306507 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102383394 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069764601 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067957672 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075559606 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082126221 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082627269 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112972739 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104353023 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073189007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070885248 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103308644 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102345617 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067820653 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094280682 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089017214 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100773862 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067283279 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070440194 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067911352 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069976207 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076603952 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078743853 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069399018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080450173 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084579897 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078134813 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066755984 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067742983 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067833345 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079754449 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079050376 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078314585 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077517689 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068146006 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06905335 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069226721 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069581441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067456587 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078597037 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080413627 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078323643 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069122611 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06936548 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067256941 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06878367 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079764303 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077366799 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080741343 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079703943 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067873889 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068364415 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071992969 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080890442 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079586476 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079113255 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069182436 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078424851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067725508 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080175686 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083638078 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067924779 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069522346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067848896 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06883692 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069122195 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077623379 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07819353 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068950616 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068884293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067958468 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080297263 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078697624 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067620442 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076532636 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066623205 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067973494 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069133546 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06930184 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077587011 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079747984 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069293869 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067979788 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068925083 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067415256 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065820536 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074969672 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078314527 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077209136 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076897018 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067793593 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076842364 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077215527 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068629439 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077551964 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066750784 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199187147 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06983281 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079533785 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078984985 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080377477 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070275833 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067771055 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079486709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081714441 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068704084 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078524313 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081049661 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080684992 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068544908 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081370429 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069043403 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07947696 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069053691 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080760239 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068439028 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080023555 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068551466 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068724581 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068843187 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080190933 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070473557 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068789122 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070213955 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069419831 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079946488 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082500158 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070977769 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081676677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079085995 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070197886 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079115437 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068522012 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079572816 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069300671 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069842359 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066905674 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082152165 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068477929 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068457193 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068937 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080973394 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068631284 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081093548 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078314361 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067566915 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081597337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081119 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077276189 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0804806 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070187192 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068659014 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06795394 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069534511 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078699065 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080563285 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06978326 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068888336 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077975173 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079145264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067418386 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078020385 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078323205 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078544762 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068171 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069119909 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080001791 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080707066 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078144588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078168481 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078591337 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068157058 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077317233 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078299325 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067929466 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084092515 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067797475 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082458912 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079380694 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076756218 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078401186 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08042243 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07991743 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080107502 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082494148 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067672519 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067764943 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079740781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067550701 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068837799 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076659413 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06820882 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067709383 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081205457 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066847747 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077545128 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066199661 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076875285 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065789068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06829175 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081517133 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198723216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070209954 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081639902 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069610284 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078492897 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082621607 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079429157 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068990819 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070427435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079804518 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079150532 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069067644 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068282711 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070706474 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078834342 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077832577 seconds)
  done (took 18.598616258 seconds)
done (took 37.568066232 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209701829 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149976098 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198424189 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117660962 seconds)
  done (took 2.135647254 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121561168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100854949 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094742609 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06485289 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10179606 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06431012 seconds)
  done (took 1.947796507 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312405246 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209938315 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181109156 seconds)
  done (took 2.097328286 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196801701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186391328 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389443432 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252284753 seconds)
  done (took 2.530190146 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142585576 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088671653 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066460258 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08276205 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133687632 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160724869 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100711968 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125439367 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077962792 seconds)
  done (took 2.43107238 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146756881 seconds)
done (took 12.686328005 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107636543 seconds)
    (2/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09398744 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.243073985 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.199852456 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.198451287 seconds)
    (6/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.149927703 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070852093 seconds)
    (8/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108637466 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166914338 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144675692 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090514766 seconds)
    (12/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110315895 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076480287 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123771798 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10302162 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077170367 seconds)
    (17/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.151513862 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175500157 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073357012 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074035387 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086726217 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065229975 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.191883985 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081462615 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.188963849 seconds)
    (26/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118065704 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.214644127 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07369108 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071432419 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061080294 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071313465 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089295093 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.204714143 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075900752 seconds)
    (35/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068388249 seconds)
    (36/309) benchmarking ("sort", Int8, false)...
    done (took 0.138303023 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075532207 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147369189 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068088714 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104810075 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071796305 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071735367 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05523479 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158780234 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070789576 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076654243 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091584731 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071339041 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091530069 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122309249 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191768547 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100530696 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07258426 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075974308 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190902338 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163511257 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073142525 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 0.1240802 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.152463813 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.148897953 seconds)
    (61/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073550734 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.161327877 seconds)
    (63/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066710332 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070401987 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088549806 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102965928 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071947919 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087947077 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.156739916 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085185549 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065620207 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050439494 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161360421 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.061751834 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136296473 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074148159 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066907151 seconds)
    (78/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06595378 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086856403 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110578656 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073811785 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069538901 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15729357 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.331086004 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090644549 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072583629 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 0.12708275 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090691085 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.142160202 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185454854 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.293818697 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075922761 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.179432783 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110124065 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065452949 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073493093 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080087145 seconds)
    (98/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102317218 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 0.06665632 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174093792 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065101241 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065970756 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052495486 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065224021 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085498552 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094770061 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080480018 seconds)
    (108/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072317328 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066253967 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071334095 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072994881 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078958312 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120555994 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091384968 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050864033 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.17469276 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.164471581 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087536416 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05282597 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099674075 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079788099 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.17431492 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107348369 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064484811 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071638736 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061420672 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063783958 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051907321 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094481582 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065014598 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184384989 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134210641 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091337676 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086201143 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134737072 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050423479 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065306448 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072140283 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074591179 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078779801 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081727913 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072237986 seconds)
    (143/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106396973 seconds)
    (144/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050414222 seconds)
    (145/309) benchmarking ("sort", Bool, false)...
    done (took 0.131680279 seconds)
    (146/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072474 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050804008 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071296982 seconds)
    (149/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051164099 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066379798 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05117193 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158209109 seconds)
    (153/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072974973 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069667873 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071003352 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106665013 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075076365 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071079087 seconds)
    (159/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07841086 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093168667 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081039946 seconds)
    (162/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068608685 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.09826282 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064387767 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071715785 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05141331 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050823312 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067432398 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06670168 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064778508 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065779468 seconds)
    (172/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087288451 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072822098 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173346769 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050699209 seconds)
    (176/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051809244 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050593464 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0647966 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064413956 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064102476 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105863282 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09001182 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071487887 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064412351 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.10598473 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063547127 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063117118 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067429008 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050948904 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156194901 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071277312 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07051269 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.147889923 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065618985 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072045801 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.318685335 seconds)
    (197/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066860442 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053012507 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071441686 seconds)
    (200/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18561165 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063919344 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184212364 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092845975 seconds)
    (204/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051312001 seconds)
    (205/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097193384 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085162981 seconds)
    (207/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051827089 seconds)
    (208/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052337166 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051325924 seconds)
    (210/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051900431 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064885955 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120832249 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074023211 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072222659 seconds)
    (215/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051757504 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07766087 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054359993 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060723676 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065155947 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134377537 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052557479 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088699544 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051488353 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070593973 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067656322 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173503675 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087782412 seconds)
    (228/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145858381 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129876312 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051267583 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06362704 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087067894 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070781169 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088444821 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067176144 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089742036 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13043221 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087452437 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174058571 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075243916 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148912611 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052612875 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060561111 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062500884 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051477126 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070765195 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051424591 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063959963 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065603234 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064431782 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.092893148 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050833088 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070160583 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132401584 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064367093 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052927667 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064709008 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0727733 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071526951 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051006445 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147947544 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050853334 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064277694 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06663635 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072371598 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064425365 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050945947 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053106022 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050943374 seconds)
    (270/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059909074 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062289212 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052170518 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072780609 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065563334 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052041727 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077528282 seconds)
    (277/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061402137 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050466758 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065496933 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089377811 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124738113 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11576672 seconds)
    (283/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069064623 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07192294 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071468149 seconds)
    (286/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050520204 seconds)
    (287/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052096036 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063493104 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050697244 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063575616 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07119217 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072112657 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053224787 seconds)
    (294/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066706716 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066181557 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134973329 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070357487 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137108887 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051923896 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051763469 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16480496 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071014984 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069435962 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.135593059 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084580987 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064618171 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122223651 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051606588 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05063071 seconds)
  done (took 30.192181946 seconds)
done (took 31.599377907 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085446995 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092869368 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074304151 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092014921 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080321341 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076113763 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072043715 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077738617 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079317243 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081030984 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078212993 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054681538 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073523391 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073680821 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074312876 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09101322 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077569699 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072478991 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072592641 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065152003 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073220462 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065831577 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067228363 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054497994 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077553176 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07144132 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072394273 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073567866 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065892759 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066244009 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069140632 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072933618 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065599119 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077740109 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072229971 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072915835 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074403061 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076390509 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067395338 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066247877 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074322858 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065625218 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072420864 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073445514 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07156401 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071205702 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07266504 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077806266 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091230834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067895736 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074176935 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075507335 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076068166 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072251764 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069084014 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073003209 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070235736 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091059804 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073125447 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067535953 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073501777 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073822005 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070505305 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072708764 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072667924 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074771801 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07468538 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070787599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074399943 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070945457 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065742055 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072717627 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068658881 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065234452 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075189685 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076052087 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064386332 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071021962 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071864252 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070804203 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064780516 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067088007 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066950533 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071109037 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0672588 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054131785 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068940247 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071256918 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064270492 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072781597 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071260954 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071645029 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066943408 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075129064 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064362105 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069849825 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065593173 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065030527 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066583908 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068970163 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065727378 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067430449 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07423993 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066979401 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071207896 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078548474 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064746151 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07144399 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064050397 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064297118 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078659477 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073529861 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064665099 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067000912 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063661681 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072092182 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063592082 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064392474 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064447597 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064086802 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0699811 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063826583 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06596893 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070537939 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075302969 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063247222 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067034663 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065689593 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063592027 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068834673 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063540198 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.20112766 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068198223 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06177626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068198016 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065301578 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072311618 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068259587 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073181997 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068177407 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073778685 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069842713 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071817236 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070799903 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064716954 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059169434 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06813633 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067863804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067865899 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0653473 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066767142 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065276785 seconds)
done (took 12.407612556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069411679 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142810159 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100000709 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094852831 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08551154 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066874935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076001698 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101846465 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068241794 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102518388 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087697721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084720972 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112252043 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065285263 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066084103 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069193493 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066804149 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081421573 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100925518 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086297131 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115161525 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06520399 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093981218 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089742067 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087159837 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091830429 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066872186 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069714687 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069587713 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10038096 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086628515 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069773208 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066517278 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100336138 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092522809 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083117299 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06628811 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082413777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06634886 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065817583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06718857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098054334 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079597445 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079986811 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06946365 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069169397 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066595641 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083737326 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088758289 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078100007 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086379186 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102832115 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068755861 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065535351 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064229663 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085528962 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064953168 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068597004 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065939623 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06847269 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065685873 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069216215 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081287927 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081537151 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069452022 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079952965 seconds)
  done (took 6.796409101 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086215017 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090116058 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082554513 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082618352 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065682667 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065979573 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066023954 seconds)
  done (took 2.041458776 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069263566 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087920643 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088849962 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088399491 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084636456 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086692154 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075599335 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066579204 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080498068 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067450938 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087190076 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10201649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067237143 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072455636 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090605875 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066581993 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09006459 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0662814 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069636888 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089811962 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06830552 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082529299 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069574925 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066646464 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080259915 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066404325 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113134426 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070884716 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067807144 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069607706 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064162075 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106948272 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079922906 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075041512 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066345505 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080339674 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080602088 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064402195 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082092097 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0711399 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079449863 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066016413 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066675041 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064257771 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07033276 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076110306 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066790744 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066589247 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068474437 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085199989 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066538553 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079590443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069458433 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068518124 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068004709 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069916298 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076178052 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066886154 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085913401 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067494274 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082960298 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082457332 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079830838 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082555242 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068396754 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079790299 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079383294 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06845274 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067684838 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069343061 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082096776 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064914385 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067361996 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076609323 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067934511 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088235486 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088557727 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067540356 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074983158 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066362258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066060222 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06608085 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088475337 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068243137 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066104708 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070382665 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068870995 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064104497 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065050871 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069036981 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064299653 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067355386 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068813579 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069015818 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068945812 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08244998 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068370346 seconds)
  done (took 8.728927303 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071657127 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068321065 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069206004 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067325696 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06841879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067987416 seconds)
  done (took 1.938220153 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095757602 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069601181 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08007896 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07223259 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104050385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086298806 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086660627 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07827468 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083957412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078589259 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086737712 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08816359 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09261505 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072621144 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086155358 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071623821 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086507598 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075585219 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078002744 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072607692 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085934076 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072800909 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072744643 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081251516 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075589273 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071950376 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066988323 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078766757 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077844349 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078461899 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07238808 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075781194 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07056701 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078232854 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086641653 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070885957 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07159925 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076655518 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072249178 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075666956 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087625026 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072743588 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074220313 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076918431 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078700138 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070587456 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07677602 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075847532 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085713496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07632225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076569449 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071382651 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074802764 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076417261 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070098003 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077546239 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076641765 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085955112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071829365 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069974 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06841049 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075041694 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077389408 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075293508 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078634171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076331092 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070101352 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072147382 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072334559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071503558 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076489929 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068907732 seconds)
  done (took 7.06864144 seconds)
done (took 28.064691022 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545938971 seconds)
  done (took 2.033454309 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.605439012 seconds)
  done (took 2.119576858 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.551230029 seconds)
  done (took 8.066506172 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394168554 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472016004 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689547852 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13047902 seconds)
  done (took 3.242048715 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.677461582 seconds)
  done (took 2.202118215 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210782659 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194406313 seconds)
  done (took 1.940059359 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378745512 seconds)
  done (took 1.898476296 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108442959 seconds)
  done (took 2.627366553 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26482109 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162557031 seconds)
  done (took 1.947364585 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457561893 seconds)
  done (took 1.97518823 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86821922 seconds)
  done (took 6.387661695 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21066412 seconds)
  done (took 1.771085014 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244721709 seconds)
  done (took 1.764255142 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.688183472 seconds)
  done (took 3.209483299 seconds)
done (took 42.70418644 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083081252 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081213953 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08140015 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077807032 seconds)
  done (took 1.831035241 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079585504 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073240453 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07673009 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072135792 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076284638 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072514504 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073972613 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076587314 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072381503 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073165717 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072465435 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072178682 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074736254 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074171174 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070694009 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07473796 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075544167 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072243522 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075258522 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072335623 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070659257 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074791095 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074369561 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071832463 seconds)
  done (took 3.298374557 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079363967 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072543042 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074789991 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07179168 seconds)
  done (took 1.831836072 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080266262 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092007207 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089129365 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077843009 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092158413 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086241159 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068928559 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069138976 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073108886 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077319967 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067709153 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096068437 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087791609 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076826409 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078759029 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066077545 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068174227 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086845263 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076986068 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077377773 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070127678 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076821307 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067854946 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087543583 seconds)
  done (took 3.419449051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080221585 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103132028 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078108433 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087451901 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090139571 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065185378 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07423709 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089053352 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122934171 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065333821 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069806458 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065392007 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072477439 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064945227 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076098236 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105135559 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108612645 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068453274 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095892412 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065126125 seconds)
  done (took 3.186584233 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075532893 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070238294 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066521055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06804508 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077283464 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073080447 seconds)
  done (took 1.969771603 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070894808 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06719352 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067314472 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066817598 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071514651 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066835485 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066010331 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067846108 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067246884 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066692853 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066259262 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065368781 seconds)
  done (took 2.343888125 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.174755681 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068990662 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069963613 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06638913 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070391872 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066421281 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079874291 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068298408 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090386939 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066274958 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066815874 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068393453 seconds)
  done (took 2.494213829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208778942 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075997283 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237329353 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136828197 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1114732 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115478234 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103891652 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113743346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143374888 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101751287 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167989908 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165261794 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107187022 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13739322 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088811818 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097805341 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155963351 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162230782 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103446604 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165603507 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143743204 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12456693 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146839066 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101271841 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105968738 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122226994 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070786663 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080431042 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171168436 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131707071 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146649322 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110863399 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093625868 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176539348 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171303636 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142139555 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134361241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083490443 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10249227 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134520112 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200100834 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087665516 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161014806 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249184625 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081612681 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133959817 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119364524 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120398041 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107653127 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090119183 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147123971 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18378645 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139013831 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087250254 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112508937 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115486011 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116330773 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103738436 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182753429 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16134529 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128273101 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071350464 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09955992 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154064483 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133778558 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110820854 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126561323 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093941531 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134279631 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155412455 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118989359 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143711878 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128936126 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089100713 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119145279 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139779963 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128704516 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170574199 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124745158 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073194039 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125400705 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103643578 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081616074 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14133333 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075308894 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174472747 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098214852 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105769355 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112734767 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108653967 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108605075 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160556901 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285741143 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104127755 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066165284 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104129115 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121287612 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14903858 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088100932 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108762221 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116732846 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079360689 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141419567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075344257 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123086352 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076232639 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125567434 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132730536 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075892017 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123149776 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101170513 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100635768 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133932776 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161374153 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089586804 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082895833 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167705409 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121321214 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105105311 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1436355 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156859377 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099010733 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103461135 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150140033 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180356305 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089928452 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163319196 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107776602 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084289155 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087270823 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124127911 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112686711 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122424434 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082408084 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119012794 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169464862 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075088177 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095464275 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13327384 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078797731 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08041456 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102952248 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100034195 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095185879 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099572494 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103546888 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136604824 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122541685 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250671349 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127729268 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09894134 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170567985 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088972072 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101227784 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104110952 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070061545 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137545167 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157185842 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079496065 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166900098 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123543594 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105693711 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119929337 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083107891 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139609576 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078918433 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070405802 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144177528 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11049124 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111164188 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152355174 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105512051 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127142426 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119512491 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135482035 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133212219 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129415636 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105340459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08812499 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111827904 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126234917 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073148564 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091602824 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080503097 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103746922 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09573338 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083488368 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142370757 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125101585 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100211211 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112377032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096780633 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147433602 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076630418 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129224609 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118708701 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093719054 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151154343 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151578028 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13076015 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098888197 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143823307 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069545215 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21911647 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091201806 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125718626 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083559421 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08406237 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118459823 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147519938 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13053 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138964831 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111796878 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122053196 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155112747 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070000028 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116123758 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149327023 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120901273 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104320642 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090504345 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099002854 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142565385 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107961467 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18276236 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114415005 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126878975 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153863279 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09948093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080281574 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102770839 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13518436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104648945 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145622189 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10044151 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088467945 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110251624 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07432889 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100487647 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127832977 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120155636 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13647098 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12089908 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133418675 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077131529 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117249589 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120583425 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121417318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063714067 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119002586 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160806132 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09348727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118100853 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151783457 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078991593 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123176849 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323542807 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147614586 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086445461 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10947929 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118916196 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128516315 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121563998 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14075067 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109344184 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135540094 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108856168 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085741635 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087349366 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098124362 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105531932 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095994333 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108171843 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115080196 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095547922 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131863643 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103499398 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109244183 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11786228 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09696284 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089840442 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097749672 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176104469 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118693604 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171787883 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098911036 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146551352 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164045698 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074644408 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079665353 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078340655 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140013664 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084116642 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131489434 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097910656 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106078279 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124545495 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142396742 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09587596 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068916771 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109159989 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134668568 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111671034 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097513074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103772364 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161980355 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09990218 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079318279 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112938855 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10427303 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101154141 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319414966 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062481596 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098198445 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076049145 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081305882 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128681106 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154533448 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081680375 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102729708 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1193619 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111145253 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128345948 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102307126 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100189026 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114921586 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150919001 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130070969 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089886517 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112723684 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129556423 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158389998 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105885088 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095764577 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172280053 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152334789 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161571694 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088544917 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114348131 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114419918 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107866032 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139203672 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083060517 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164132539 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081907141 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136723426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104425643 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090745429 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130556475 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116588236 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088225482 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148453278 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11793875 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082632299 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077871724 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1178993 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11972345 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106171704 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074962443 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138515454 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072754891 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131613326 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167437363 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22898552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106035703 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098541787 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08120019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10953985 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103323206 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09017326 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099876254 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173430069 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088316814 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150399786 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142510685 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115018877 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137748435 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100108639 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636590546 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078124315 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15288159 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117618881 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173790014 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0977428 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118120587 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10997003 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127074976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144279214 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10582503 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175734565 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132992353 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116617194 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080176295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103228535 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103038104 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088985934 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105726087 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113775823 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116324479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094072617 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116613188 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12403233 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082149177 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095844595 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15636339 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117180729 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14427203 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140282754 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084074477 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117175924 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138076718 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079308664 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121618297 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151073325 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104121374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245433073 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082730288 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102265311 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171099856 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07396046 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164525539 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119712804 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111381681 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114300343 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114926833 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131989075 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108886818 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122418054 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09451068 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1111251 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113313132 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08275217 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077505367 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104677044 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112503652 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097777488 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099122249 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098649653 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151612638 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071649382 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096193039 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103393076 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146183033 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175020686 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088018484 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082791945 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119741539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113914903 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113461973 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120892204 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079415966 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082585664 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08210687 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076959489 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108130101 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112532009 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104612221 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111612527 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164897008 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082869142 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222323784 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095270037 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104734084 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069592805 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078665901 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095849989 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096818517 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106736257 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099256297 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167084315 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093742084 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088972692 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091037896 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.219375203 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083978396 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129145596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11232129 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119668155 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098113472 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063041297 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109590035 seconds)
  done (took 59.025804248 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120022438 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082134918 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097171315 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149913772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12240314 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212856752 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157657055 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199689697 seconds)
  done (took 2.784345357 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071772115 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094783809 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099503236 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082656325 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066732433 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068636096 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22646223 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08014858 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066630216 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088356758 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079232091 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069162309 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419542592 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065945254 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06697192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061821019 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067587475 seconds)
  done (took 3.408543304 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36960012 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598629838 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374352802 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07348428 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.926821355 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08943084 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.128421269 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127756112 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074601407 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539570721 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702968329 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125595462 seconds)
  done (took 18.777760101 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080116843 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070818664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084455089 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084143419 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07292427 seconds)
  done (took 2.032446796 seconds)
done (took 107.982709811 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083040086 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393615058 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053690838 seconds)
  done (took 2.117871375 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084729813 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085415989 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085175926 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083597832 seconds)
  done (took 1.99093417 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0767111 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07613873 seconds)
  done (took 1.795764282 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224790496 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158447741 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086785408 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084581303 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078516016 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078971224 seconds)
  done (took 1.89099423 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073966741 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075385115 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072802445 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075943485 seconds)
  done (took 1.941155332 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078187353 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052435226 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054602279 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056312811 seconds)
  done (took 1.887138975 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088742443 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078989626 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078371162 seconds)
  done (took 1.89233903 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104110616 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085263962 seconds)
  done (took 1.835588938 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083905446 seconds)
  done (took 1.731213708 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103426773 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113566433 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130694338 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110216151 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138002479 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108793512 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08578738 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08665565 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076718061 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087725696 seconds)
  done (took 2.686313879 seconds)
done (took 21.960694875 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081492114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367581871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360686084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090124097 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668776195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356752565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025284303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0922626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113630378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067823271 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084079581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647605616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979013741 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319300487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961351719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418639093 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649555307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068278673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06759515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068309369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009166593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068106312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06814871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068381473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.6476968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371156808 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068251037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418102653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067816885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069697363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354459573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068017317 seconds)
  done (took 16.397718495 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073761624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117814336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074036811 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084613971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070858959 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0698251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071499722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068669363 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119561043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067866488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084599127 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067964607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071962048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068319768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086877416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067963199 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069022304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068908041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068065867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068780747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086250324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068330098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068091566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06820916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068157702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079579899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068736947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067881365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06859733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070308947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070920161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069379572 seconds)
  done (took 4.055394512 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117885774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126313909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073948729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103337654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112861582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070010283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143574705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093203929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127433937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068341626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084296729 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068111551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10090037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068841421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087769411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068835399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069345052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068753071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069004935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068565801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087327298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068170164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068818687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068934368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069002488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081229993 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06878254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068999349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068776308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070399486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072302235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068938027 seconds)
  done (took 4.315978397 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075256634 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075291598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082766342 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083797512 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070034622 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072127211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073348844 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069743506 seconds)
  done (took 2.268558358 seconds)
done (took 28.688092646 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080694398 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068834952 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072252324 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081161088 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073594969 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078947992 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067721178 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074474557 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072682545 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073354871 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07489891 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068027039 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07111837 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067631636 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07397824 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067942775 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079224663 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071982963 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079283951 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079239364 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069728878 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073186801 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074045299 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079185844 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079024013 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078975056 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077388204 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072979803 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069216066 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070789374 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077712965 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083770118 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068590538 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079231002 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068201044 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068066092 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071321459 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067979107 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079293962 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07643305 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069695971 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076612085 seconds)
  done (took 4.747082011 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090113457 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090584418 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084458171 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061242486 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067025758 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06459616 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088043734 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059453148 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059065045 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087384452 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055747779 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059642806 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062480255 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054148237 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0594694 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056827549 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061890148 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055759888 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059439676 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059572659 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088468722 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054473035 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077236764 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063125626 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058893328 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062090425 seconds)
  done (took 3.413813516 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076899888 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083878842 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088836793 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126408763 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103705748 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076606936 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079442055 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092397156 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084993323 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066914707 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071198635 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093159698 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088103506 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073576126 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067754164 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084933168 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.093113072 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069815875 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073437139 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092349065 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085566658 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084532338 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092214506 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080907219 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066720196 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069191507 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071263371 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080982644 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07217659 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076116261 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071064071 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071026288 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069461825 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078730922 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071249177 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06935792 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09072317 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076877343 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078113553 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068074483 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070737577 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068576372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091093728 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126495539 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066909732 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074482218 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075219083 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076788851 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067453043 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085893504 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078649061 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067274997 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070696301 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066994604 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068100719 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080583252 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069420976 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069915317 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076993162 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070333008 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089424704 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071399167 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082632844 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066934098 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075321484 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066649652 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068482351 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066923062 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092543157 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069651178 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108459308 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068919094 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068456816 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076419754 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074813703 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073312505 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067796799 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082687676 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077991709 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071040542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076028275 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071234746 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070698203 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087853298 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069949111 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069086695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068612176 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073525148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069829563 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068798466 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080412774 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067453695 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070420267 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084374513 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066830767 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069007453 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073207164 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072619649 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066879434 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078981392 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072282598 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068248014 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076534981 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067366408 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070753385 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079151556 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073822418 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066534467 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072065514 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07346018 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068109837 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068763795 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069909572 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069059637 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075496751 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073685198 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071786396 seconds)
  done (took 10.602743475 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164099528 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157448089 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071125747 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144605198 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076728358 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079351424 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147689216 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094751943 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068480122 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06897436 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06926894 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109996117 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106038422 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115792465 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079154031 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067714723 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083294711 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114563727 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149051045 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143154833 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083876971 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076941465 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070414248 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069317969 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070497888 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078616859 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08557491 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07694284 seconds)
  done (took 4.434553718 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084285125 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097665685 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.0749279 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089490895 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092196169 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068459724 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0702239 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069670535 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080438196 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078931249 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067670774 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073435529 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075134804 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071840332 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069226112 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075042723 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07537411 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069949817 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071538562 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072795674 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07761272 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080521957 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071512054 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067239615 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073022575 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067214682 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0644181 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085087128 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068354715 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090302833 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065986341 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075549625 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081469387 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068811833 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067890458 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067646964 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067802704 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068122902 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069744216 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066545095 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066458924 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057648232 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066691287 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079797331 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07382097 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056679462 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07274374 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072851232 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072758009 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065226265 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070587327 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07028352 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071131657 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074855167 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07232156 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072913588 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069028344 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073643022 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075590023 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06759316 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064512932 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066293913 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07182506 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066086796 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075280666 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071992061 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066047791 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067218108 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069541862 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073412871 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067024337 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07041893 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064945175 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069291547 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072242399 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069431705 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068544087 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066038076 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067252375 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067529605 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055409855 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067597672 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053398908 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070578665 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065828124 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066259513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067026971 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072247522 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08012989 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068830887 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073183029 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068405957 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066511719 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070468477 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060064779 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070414527 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082626189 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082492349 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067550507 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065495873 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081550434 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072212406 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066545702 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056549376 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075014845 seconds)
  done (took 9.17275555 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091570924 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070603717 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083387476 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091135751 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086455396 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075156609 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077112716 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069620033 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08251183 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074740186 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076706033 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068444673 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0772903 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076958328 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069844884 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077213138 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072133443 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08312906 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08202703 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068074117 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076117198 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080509812 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.0889164 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079991329 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078638112 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080198189 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089095446 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072118468 seconds)
  done (took 3.909191528 seconds)
done (took 37.937426401 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.735970846 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.908884373 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.735699946 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.084394272 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.822997354 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.965621427 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.910203368 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.734321603 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.931000253 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.773821654 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.00433741 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.764068467 seconds)
done (took 65.043754212 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.781926684 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.878076893 seconds)
    (2/2) benchmarking "String"...
    done (took 2.006241186 seconds)
  done (took 5.555845619 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.045076784 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.31513675 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.965288705 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.731986479 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.73575266 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.96521167 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.533930203 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.263195913 seconds)
  done (took 30.184104067 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.816549481 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.954818299 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.388612467 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.423587018 seconds)
  done (took 15.301153259 seconds)
done (took 62.625969954 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.739320512 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.79252365 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.734999686 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.715409966 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.789743784 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.739668767 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.194809409 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.802063868 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.73008816 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.726579754 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.732586886 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.16469261 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.741530973 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.259470994 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.732019664 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.738547887 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.736787825 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.241821265 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.888887823 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.745785472 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.756420615 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.764029998 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.737093905 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.739445469 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.766935735 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.731479099 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.16357272 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.747162801 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.353768701 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.737354815 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.763065596 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.268101176 seconds)
  done (took 203.14683827 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.734156008 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.929188816 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.9418773 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.77095777 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.304301749 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.915613804 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.847398476 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.436171474 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.73561512 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.75942438 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.050532867 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.732441845 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.075269164 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.67984516 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.763649677 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.733283757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.05827672 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.061110252 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.766921693 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.897536529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.74461422 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.966414842 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.93561026 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.00621362 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.765075999 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.828020555 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.752819531 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.761039296 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.072342493 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.039420539 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.755514306 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.776431568 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955875795 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.605010618 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.738117668 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.752082305 seconds)
  done (took 170.323748631 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.894534027 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.737181144 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.737561926 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737864131 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.74977828 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.738413188 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.860546052 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859416115 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.200024237 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.173343485 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.788939305 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582432743 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.735437984 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.805082561 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.749259616 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.737386567 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.75282187 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.766664964 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.737474072 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.740588797 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863343242 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.749037538 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.059369455 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743603084 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.738040014 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744651105 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.108307582 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.737388095 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743220868 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.000056323 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.737025845 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.738046647 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.739108115 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639260179 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.482662694 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828463342 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.738353229 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743412321 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.737810139 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.7381147 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.958773109 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739597751 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.738907577 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.739817285 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.742529713 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.923330303 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.737720716 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.868161008 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739258753 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247400808 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738167619 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740708282 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.655331541 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.434906873 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.740687204 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.740569861 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.742839641 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.740260535 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741418354 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.746229768 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.522560529 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.81352439 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.741240265 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.74487515 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745970792 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.740910908 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.83060701 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738196959 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.363019449 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.79465177 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.957024675 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863661819 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.742514898 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81057659 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834826844 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.739347594 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.742369949 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742580835 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.742542812 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.824585223 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.73954506 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.867213179 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746861288 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.74269318 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793053222 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742612856 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.811401115 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.74036239 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630453697 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.742516226 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.743581646 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.074442764 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808064131 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.739259584 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.744513556 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744551908 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.873273312 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862708666 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536832032 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.740968377 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.491541655 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.74377357 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893215144 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740586329 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933253779 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.74475602 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82554046 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746044376 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.746938604 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.742441139 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774400582 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.740349628 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.805255572 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.739668035 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.114841265 seconds)
  done (took 399.189810436 seconds)
done (took 776.280702902 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.419680504 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.376372857 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.487968392 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.393965757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.36566346 seconds)
  done (took 13.723623628 seconds)
done (took 15.403997171 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.831714096 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.8357269 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76949559 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.834349777 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.764199192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.833570835 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.813916775 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.76998088 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.801507542 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.770483324 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803099791 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769511869 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757550997 seconds)
  done (took 25.037066244 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.98362415 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.979149927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816911721 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973085262 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.792071215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.983753577 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903604458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.900393328 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89506926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761922641 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760156661 seconds)
  done (took 22.435638772 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985784042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97930633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822166044 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.98436479 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79422323 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982780043 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909414489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903878061 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912212434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759996719 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760480414 seconds)
  done (took 22.478314573 seconds)
done (took 71.633145717 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.756629625 seconds)
  done (took 3.440460793 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.777068588 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.910421334 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.759223755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.75773436 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754933142 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.755479286 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.759202147 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754909108 seconds)
  done (took 15.915132987 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.757055312 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.752105418 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.753722786 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.754278447 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.75475548 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.755350738 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.755736267 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.751906621 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.756617029 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.754490071 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.75675357 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.753915834 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.757304549 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.753672109 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.756482835 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.754177501 seconds)
  done (took 29.763531577 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.755883914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.755105979 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.753465687 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754835964 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.754955146 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.753179105 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.755733818 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754942429 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.753914372 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.754475022 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.755970792 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754990808 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754694252 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.755135663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.754971433 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.756055001 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.754942715 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.753371329 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.75957134 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.754959869 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.755449521 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.754294348 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.755516445 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.761141812 seconds)
  done (took 43.816620979 seconds)
done (took 94.618809813 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.619593438 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.129015386 seconds)
  done (took 8.434279069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.759327702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.758158741 seconds)
  done (took 5.235205735 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.758037366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756843276 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.757884684 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.75685901 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.759375996 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.758325842 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.758443828 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.758558149 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756743215 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.757310935 seconds)
  done (took 19.26435511 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.75876044 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.758657941 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.755184071 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.760914872 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.757787473 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.756676105 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.758613616 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.759980078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.758708218 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.756032018 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.75905515 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.758316534 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.759387768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.758369692 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758391031 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.75641551 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.756423184 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.757164079 seconds)
  done (took 33.332832569 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.758963665 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.758395181 seconds)
  done (took 5.205435491 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.757159658 seconds)
    (2/7) benchmarking "second"...
    done (took 1.757958747 seconds)
    (3/7) benchmarking "month"...
    done (took 1.756155378 seconds)
    (4/7) benchmarking "year"...
    done (took 1.757310507 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.756531541 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.757151282 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.755946434 seconds)
  done (took 13.986196285 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.762802456 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.92003547 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.999703833 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.390225516 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.761609823 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.76178822 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.694718421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.762884289 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.76482013 seconds)
  done (took 19.505593315 seconds)
done (took 106.649128276 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.576544868 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.752132993 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.107270091 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.864917351 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.769079221 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096287199 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.767884091 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.965255619 seconds)
done (took 42.587762728 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.843804126 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.340869541 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.369964123 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.376137838 seconds)
  done (took 12.776716696 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.741035351 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.265663149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.785428198 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.350026605 seconds)
  done (took 19.851883521 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.122519992 seconds)
    (2/2) benchmarking "read"...
    done (took 2.132075594 seconds)
  done (took 5.949890982 seconds)
done (took 47.11301653 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759849881 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.758404003 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.757914258 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.760881578 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.758454783 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.759998173 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760300689 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.757685542 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.76003045 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.760705698 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.759707068 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.760432457 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759965536 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.75906107 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758539137 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758395671 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760160999 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.758439774 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759146397 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758471435 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760969676 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.758206912 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.759163001 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.758949175 seconds)
  done (took 43.914111978 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.762291681 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.761245702 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.764069925 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.761078843 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.760946462 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.762823891 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.76456737 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.757664268 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.763118059 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761030421 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756829735 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.757830839 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762087236 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.757439291 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762833681 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.760291724 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.761809644 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760825165 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761125159 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.758666941 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761640114 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759828265 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.75821003 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762348348 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.761282865 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758608496 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.761228278 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.75952064 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762171698 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.760385515 seconds)
  done (took 54.516673498 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.768763722 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772754093 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.762658078 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762827175 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.763800071 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.763171523 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.763998457 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764367786 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.765134617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.76333565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.765536273 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763773522 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.763895068 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.766748841 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.767082359 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.764737912 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.76658526 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.764139338 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.764482495 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.765180823 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.766066675 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.765472397 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.764130974 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.76438513 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.764205143 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.763580635 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.764163309 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763872469 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.765137123 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.763664562 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.765032187 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.764507528 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.763614945 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.764191453 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.764285189 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.766317178 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.768568631 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.77316213 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.765535542 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.765165157 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.764890465 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.7649344 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.76581744 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.765978795 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.76454029 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.765503944 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.764642662 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.766769051 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.766244682 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.76607194 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.765636235 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.764783072 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.765486416 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.764482328 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.765648011 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.766786594 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.765763301 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.766107026 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.764703161 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.766760536 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.766880844 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.765928376 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766757055 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.765485693 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.767999742 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.764812028 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.767256017 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.767208441 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.766773323 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.766555588 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.766742986 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.766520445 seconds)
  done (took 128.815347473 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.768111179 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764226499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.76527718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.764205443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763874899 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767837984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.764997661 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768190712 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766943696 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767352314 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767948572 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766535235 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765689362 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.76726815 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768339854 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.768770819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768213777 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763925149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.767736246 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769771578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767893942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.766060555 seconds)
  done (took 40.567266008 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769592589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767787703 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766777341 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768736918 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.767994385 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768224247 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.768797196 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768636931 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76945119 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766801952 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765938107 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767399065 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767189266 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765473665 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764878414 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76422746 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769673592 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765920565 seconds)
  done (took 33.511330804 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.767365855 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.767469194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768698078 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766283392 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.765405036 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767053287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765639354 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768477355 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.770169 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.767545123 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.767918812 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770110656 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.768630577 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766403096 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769166224 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767248185 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.769220003 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767359757 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769933997 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766224389 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767926437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77017202 seconds)
  done (took 40.592761937 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771943749 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77085926 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.769426612 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767948808 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.76604982 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770432858 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.771255741 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768320183 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769056863 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.771092097 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768807029 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.769754957 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.767988323 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768327028 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.768077078 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76849647 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769348684 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.769397394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771219389 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.768985918 seconds)
  done (took 37.086811842 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771758172 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773320867 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770600637 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771488089 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770818615 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.77363117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772248924 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774338256 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772351268 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772867929 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773356433 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771993651 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772695697 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.771236711 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771563549 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772822975 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.773002 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772255858 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773202088 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772396511 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773044578 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773873244 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77318955 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.77392682 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.774963668 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771384748 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772729118 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773735623 seconds)
  done (took 51.336264025 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773859225 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772859485 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.770008093 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.770169065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.768521143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.768763785 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.769818701 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.770197828 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773639921 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770088549 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.772777398 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.775292796 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773364924 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.775270263 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772939901 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.774799243 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773671058 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.773826503 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771852545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770508255 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.77409655 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773442382 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.774737015 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773166332 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772100322 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.77601129 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7705912 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772017947 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774910912 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.771391191 seconds)
  done (took 54.877284333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.793544256 seconds)
    (2/2) benchmarking "in"...
    done (took 1.793245057 seconds)
  done (took 5.29133663 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773705884 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774135791 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.775271896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771536078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.769935882 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773495009 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773733719 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771895794 seconds)
  done (took 15.88735749 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.772296097 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.774313726 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774759263 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.774273467 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.775508738 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.775538925 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780416874 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.776077757 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.776832606 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.778534805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.782766576 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.784302205 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.77793578 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776222499 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.776333955 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777326433 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774727911 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.775057664 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778341488 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.775264647 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775344046 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779447226 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777705827 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.773774547 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.778065787 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.786654501 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.778757413 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.777064601 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775205691 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.779558326 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777721797 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.773905126 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.777520663 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.777480664 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.778109483 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.778384847 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783069087 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775370336 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.783628329 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776808903 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776137193 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.773080058 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.778155725 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.775389614 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778240484 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.776696628 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.777315885 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.774325065 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.776708227 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.778709522 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.783822397 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776683728 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.77456837 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778994224 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.777596421 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783131432 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.778223029 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.782093886 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.789478041 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.788378544 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.792442434 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.78843324 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780572429 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777019607 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791760733 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.805781413 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783979769 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.777510144 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.777287674 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.779919564 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.784884009 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794638545 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.792100613 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.781174501 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783432959 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.780571504 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779852439 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781547224 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787095472 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.784832119 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.781050091 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782096731 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794441404 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807663419 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.781964235 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.781243523 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.781171167 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.780727377 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.78255313 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794434108 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.782099388 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782882847 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781151503 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.782160787 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.782585049 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.782953149 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.779850894 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782215266 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.780883806 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.780739154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781062054 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785230975 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.792693998 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781950206 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783659556 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.78899134 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.78204453 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782918739 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.788263625 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780923402 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781579017 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.783555921 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.789853926 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.778887201 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784218924 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.791712171 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.781565265 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.7827787 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.782067381 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.783399677 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791612269 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.811564012 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.781417521 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.782954443 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.786177683 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.797571438 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782530491 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.784661764 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.781051409 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.780363334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.779333149 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.784219782 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.782349731 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.783687454 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781551793 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783708706 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78114015 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.783423677 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.78401911 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.785319632 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784798591 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.782564539 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.785190723 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785575524 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.785405516 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786394634 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.788780472 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783888401 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.786228747 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.784919026 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.780981994 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784351809 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.786230524 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.784673621 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.786558954 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783330628 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.784471115 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.785284152 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786980534 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.784070829 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787492511 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.786502215 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79024703 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.785265832 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.788631857 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.783048281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.783226035 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.785264783 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.786169638 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784019123 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.786015695 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.784845328 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790280957 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.795289056 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786841725 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.785446085 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.787713832 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787300904 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786948347 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785452155 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.791615342 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.796538769 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.787036641 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.793170952 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.786912942 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788836188 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.787689945 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.785189258 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.785080742 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78744504 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.789225329 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.794690943 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79886794 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797073457 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.788929134 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.791750405 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788456584 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.793503354 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.791393866 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.787977192 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.787513166 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.788430297 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786824629 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786363031 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.787616082 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.788509304 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.786834756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.788096918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.787272575 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.789241487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789577554 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.787921999 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789719501 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.787291364 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788198425 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787730212 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.787162878 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.787580703 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.786360268 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.788204552 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788852887 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.789107693 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.795397669 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.786672616 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787794385 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787567864 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.786970536 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786652934 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.789675017 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789904018 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.788001663 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794529762 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.789429498 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.789218491 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794258919 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787072404 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.787906286 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.790927179 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.789095313 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.785746034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.791464691 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.797994094 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.788373108 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.787841016 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.790275857 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789496446 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789630042 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.793761399 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.787750978 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.789926707 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.790523963 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.793147598 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.789015923 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.792204177 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.791750373 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.790835069 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79244306 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789476951 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.790872062 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791795422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.790707803 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.790589113 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.791646422 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794970013 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.800388073 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.795100893 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.790233727 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.792611103 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.792369601 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.79827685 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.790381244 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.791813233 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.789064282 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8023111 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.800769511 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796701552 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.792724894 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.790178783 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.7942139 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791552911 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.796278192 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791285472 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790449761 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.791096469 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.792041436 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.789550619 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791652399 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.792309469 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791346433 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.790937132 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.797214204 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.790548853 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.790855944 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.793177595 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.793388541 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.794862454 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.791416623 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.793667441 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.793525362 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793668205 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.79016398 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.792904487 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796823953 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791156498 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.794588508 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.792157875 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.792639713 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.792093923 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.79457103 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.79151581 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.796368243 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.802327581 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.798151958 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.805227619 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.794396785 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803760842 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.793314926 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.796865733 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.803974866 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.790657215 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.790849326 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.794021156 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.793758656 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798331672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.792487748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.795771521 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.799590788 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795398427 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.794609417 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.794325081 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.793327395 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792637821 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.793069629 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799205837 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.796162658 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.799644308 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792746119 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.791706123 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.794061712 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.794687839 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.791795757 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79850643 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.793176207 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.796208436 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.792542691 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.796539463 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.795344923 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.794808182 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.793977822 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793288716 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.795354163 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79995915 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.795751511 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800767982 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.796147243 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.802411908 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795389909 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801887951 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.79437633 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796098252 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.795704719 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.798094878 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.797728088 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.795447707 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.797758687 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.795369416 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.797213153 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.801729862 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.795520114 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.797390663 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795135003 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.796720889 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.796121662 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805661319 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824054 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.798536775 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802246791 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.793730454 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.799420158 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.803448456 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.798467545 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795051202 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.799814731 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809192708 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805342571 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.797856469 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.79759259 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797627551 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796846663 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.797651486 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.797014171 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.796438394 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.796664869 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.796873962 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.794370773 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800490936 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.79719728 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797495202 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797753885 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.797876525 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.805679852 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.797226835 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.79886004 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797673509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.795968712 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.79672307 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.796845199 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.797514429 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797548746 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.79661251 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.798598221 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805761156 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.806900053 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799413394 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.796470502 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.797464134 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.797770544 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.79901302 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797961185 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.798811037 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799743729 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.799656032 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.798762021 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.800600367 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.795487512 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.798087311 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.799314522 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800097363 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802669095 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.808991132 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798674586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.795258842 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.800723079 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798143832 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.797518659 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.800302951 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.805515985 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802069583 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.813272894 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.809449789 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802704794 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.799194878 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802032429 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.808532039 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.79624571 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.800189848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.799810417 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800439467 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.801982566 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.803570378 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798757742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805627571 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799022633 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.798814177 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805218164 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.799567742 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799921458 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.802690163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.803924534 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.798354159 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.797491623 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.800101103 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.799885109 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80595374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800981807 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800807716 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.801822875 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.796911774 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.802569578 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80505636 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799995354 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.800559978 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.798042179 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.801234827 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80169339 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800679189 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.79735275 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.801221798 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80055568 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.80504899 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.810680684 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.799362284 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802078953 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.800762838 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801394476 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800923924 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80243258 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.798152755 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798258053 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.801192911 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80163842 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801599733 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.804683051 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.801963123 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.803000861 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.805781038 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803441283 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80619845 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.814834929 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.812225093 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.799446094 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.801526922 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.803072638 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.804556167 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802502693 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.803506486 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803526969 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.804494229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.803310659 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802877347 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.803248211 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.807612199 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819514896 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.802242508 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803396902 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803564497 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806238473 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.801825564 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801356559 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.804207996 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.805572829 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.805902563 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.813849098 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.80356154 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810513546 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800759131 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.804734962 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.809241704 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.807926267 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.814304759 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.808401999 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803949962 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.80476737 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.811011795 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.823037947 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805756584 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815153277 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838467428 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.804078482 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.80645152 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.80396836 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805066466 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.807449484 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.806742532 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.806058156 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.80893326 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806732532 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.805904333 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.806214797 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.811532444 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.806798737 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.806808407 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.805255415 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.803197287 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805871091 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.802890468 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.806116895 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804678707 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.805287039 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80464277 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.808053139 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.804830899 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819083724 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.815646282 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.806015364 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806319899 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.802752218 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.80841722 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807916594 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819363046 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.815769387 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.806176346 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.80708008 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.807286623 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805567751 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.804074459 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807413047 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.806170206 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806215989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.805624704 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.820531014 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817812028 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.810849852 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.805983892 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808508847 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.807783243 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807022064 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808084024 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808212446 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.810717837 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.809720519 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813460774 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.809416226 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.809220465 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.811172688 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.820057498 seconds)
  done (took 1070.881602678 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806556351 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805884491 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805881479 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.806756052 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807462003 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805529037 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805434542 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805250487 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.80647523 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806336648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804987645 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805945163 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806327851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807865268 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807404721 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806672577 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806174043 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805462658 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807495941 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805130218 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806625135 seconds)
  done (took 39.669897614 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809791376 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.806309946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807905662 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809249787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8079625 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.809384507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807702327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809917324 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809730543 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807889021 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.811141557 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809791313 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.807115078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.806614263 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807508842 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811393119 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809201988 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806688671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.810291659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809322035 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81105945 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806716047 seconds)
  done (took 41.531508954 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.811120353 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.811175695 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810167455 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.808169661 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.810596722 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.808110505 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.811632082 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.810411263 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810633591 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.812144934 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.811619947 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.811907394 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.817330105 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.818564195 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.811903216 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.809537862 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.955220537 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.809353594 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.811593604 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.811264242 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.808944508 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.816041726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.807383314 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.808831931 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.810631451 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.81157003 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.812303876 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.812038201 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.81343123 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.814355601 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.818657186 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.813357845 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.81180358 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.812829916 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.811369013 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.813606503 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.818106451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.814911751 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.8105243 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.813143057 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.823963756 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.838169175 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.814212832 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.820182316 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.813115111 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.813403088 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.816362194 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.82270446 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.812338075 seconds)
  done (took 90.742841153 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.812907519 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.810417071 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.811807356 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812977377 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.812583192 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813507423 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812994549 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81271305 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810002576 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.810204396 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.813302875 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.810694787 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810461205 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.813878276 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.813270363 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810041214 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810413405 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812443475 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811963877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.811699541 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.812259872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.814419832 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.814757583 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.812363289 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815237211 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812449328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813657625 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.814838407 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.811328055 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.812171728 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815402314 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.816264858 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.814834299 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.812696043 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812428118 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.814399539 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.816440098 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.812363542 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815653025 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.812656851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816175926 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816402983 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.815801008 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815789916 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813059655 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.814285987 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.813505004 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.815070136 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.814527414 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.814183967 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815506525 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.814302757 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81665793 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.814303294 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815395195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.815791503 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.811884197 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.815017072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.816066594 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.812884441 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.815541268 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815822152 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.814106199 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.815739911 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.816846949 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.813133508 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.81705434 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816670772 seconds)
  done (took 125.080215095 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816894038 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.815646949 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817046834 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81676043 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817383346 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.815190089 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818325978 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.817115252 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.815221821 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817636399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815387623 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.8169901 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.816524326 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81837718 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817171038 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817286114 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818118279 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818299791 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81872257 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817828986 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.816966597 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818991002 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.81915975 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.818714592 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818667231 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.816924728 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.817756873 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.817672914 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819251123 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819559414 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818551445 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.818471286 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816671406 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819309814 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.81811971 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.816892124 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.817822317 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817783814 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.819443891 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817241615 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.818270216 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819807463 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819658179 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819781979 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819856904 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818377176 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818675999 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.818223602 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.820156488 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819185413 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820123642 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8194273 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820883423 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817617714 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821308472 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.821471896 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820411814 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820243366 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821725682 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821516689 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819716984 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.820118364 seconds)
  done (took 114.488752366 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819127911 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.820239021 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.817990762 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.816788698 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821190888 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.815803163 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81926717 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.819887642 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.819759906 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.819163739 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820372446 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818523699 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817518638 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820065618 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818420833 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818007093 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817282896 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817936933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81910332 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.817648203 seconds)
  done (took 38.122476082 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.817872541 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.819328601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.818625544 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.81801797 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.820082067 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818915267 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.820234237 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820748647 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818542887 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818678653 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8207509 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.819614878 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819083024 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819144928 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.820371042 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.820345521 seconds)
  done (took 30.859672085 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.820841343 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.823475961 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.820957215 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.824407997 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.822024173 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.819717435 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.821370205 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.819141846 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820387111 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.823261677 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.822829723 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.822039424 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822458344 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.82189987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.821756484 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.823663042 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819232906 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.820328934 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.821330155 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.821760462 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.820530176 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.82053179 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.82265355 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.823015905 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.821537257 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821182113 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.819667539 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.820600824 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.819809373 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.822425148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.820491352 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.820403589 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.818768639 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.820219116 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.822828911 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.82082992 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.823324824 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.824785914 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823232241 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.822812071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.823955313 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.822711411 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.822227483 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.822428855 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.820224641 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.823885881 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.820656975 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.821683794 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.820075715 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.821140032 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.822972439 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.824959432 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.825250998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.824984187 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.824195877 seconds)
  done (took 101.953816391 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825099955 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825464613 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.820949749 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824326762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.824677902 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.821449735 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.8254929 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824471954 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823613065 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824481586 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.823769093 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824920714 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823610201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825761613 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.823428507 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824155327 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.822411543 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823699387 seconds)
  done (took 34.58244819 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.82312666 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.824426724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.824937324 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823085629 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.822744294 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82593623 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824088666 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.824775084 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825139185 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.824288107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82346872 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.828024274 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825859742 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.82647079 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825807951 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824331783 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.826224054 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825203451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823487473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823416984 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827329433 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825394961 seconds)
  done (took 41.902444567 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.826139065 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.824800994 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.842152413 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.849967507 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.84994969 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.865172959 seconds)
  done (took 12.81207189 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82523279 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825018442 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822714117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825098714 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825236922 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824260014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824025298 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823401397 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827757557 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824958115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82504761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82544791 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828452205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824619852 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827272359 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827568061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82666908 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824916193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825993961 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827112918 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824952736 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829139033 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824409198 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825241224 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825155307 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826460827 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82885492 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825263481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823320758 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828289448 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828208302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82397278 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828320983 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827120264 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828420717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827108517 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826072899 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827585752 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827484661 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824921288 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828285843 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826911799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826505747 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826043531 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827041572 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82351885 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826342328 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825134798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826402242 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828039468 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830519892 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825858342 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8292807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826146724 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826998379 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828532444 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824875614 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824633257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828650966 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827002725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824062883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829170788 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825942911 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825816159 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829357644 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825235239 seconds)
  done (took 122.293844487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825834685 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825420065 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827220915 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826705477 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825791788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830095834 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824905622 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824027186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824747146 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824770911 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826401459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822249195 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823268353 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824500946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824788993 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824500956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824438525 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824110632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825146211 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827611634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824778362 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825309736 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826184327 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824362914 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824363477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827876788 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824231876 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825006183 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824639154 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82477638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823902323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824958038 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824459445 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821296083 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821096482 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819920545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821288987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820074601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822409748 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823072452 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820310811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823673473 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821062532 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823324272 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819370579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821138565 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819990324 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819747398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81890998 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82111448 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818635136 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819120173 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817921817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817274955 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820108036 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819639112 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81721699 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817896319 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81885264 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820686126 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818513815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818899665 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822036163 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81932895 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817945055 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818918525 seconds)
  done (took 122.05226641 seconds)
done (took 2495.060515454 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.843247651 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.870828108 seconds)
  done (took 15.460896597 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.985402385 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.937357365 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.821357388 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.83858668 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.816874599 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.819152491 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.834098806 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.817970243 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.819935515 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.821918126 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.820025871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.005857704 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.825193294 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.818599651 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821116569 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915634781 seconds)
  done (took 51.471326937 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.822726466 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.824265007 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.835434637 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.825923093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.824641803 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.835647346 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.857449717 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827727275 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.856889471 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.837121814 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.89379334 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.831522897 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.821416529 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.869351416 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.834919911 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.842843084 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.908612964 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.896867595 seconds)
  done (took 34.997077111 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.9032006 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.832030345 seconds)
  done (took 10.493393488 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.834829695 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.836952701 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.829678069 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.828197691 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.843012451 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.8313585 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.855187376 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.815738594 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.827153515 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.828568933 seconds)
  done (took 70.082505344 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.824167963 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.821224338 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.817346961 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.818593627 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.81319585 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813296138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.820136016 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.815174677 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.508965794 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.856676888 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.825475054 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.824353148 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.819104499 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.821753414 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.818544547 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.842898871 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.976077881 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.817555009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.816701638 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.824671052 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.821147929 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.871438032 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.832835523 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.820085259 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.850218685 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.515054999 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.828114085 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.826115971 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.931839186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.819322958 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.818177979 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.818833562 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.821114485 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.214301881 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.118923035 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.816039967 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.828782547 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.829368952 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.81859509 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.94193667 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.821332885 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.828456661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.780487724 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.102248577 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.90419859 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.862299762 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.1851821 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.818646846 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.818858351 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.847561335 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.820929252 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.821300884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.82848623 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.335940749 seconds)
  done (took 129.963264938 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.813631654 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.096766133 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96682545 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.81197411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084126144 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020940321 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81212054 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862772484 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.81370171 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.012110375 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.973456475 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929156056 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.808136919 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.805327904 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.803310801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.803026712 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965475292 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.869600891 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.807266161 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.801296583 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830906608 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010250527 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.929882068 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.803585691 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.820007916 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013049277 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.923251093 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.912760097 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.095043829 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.803653439 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866106947 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802197053 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.801409775 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795816319 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.957133334 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896786997 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88876327 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.800013554 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795795554 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.798792253 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.463759948 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999359261 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900781976 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.942035733 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.051994877 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005751915 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.446790481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.796874632 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435252021 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962720232 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.00982699 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.005797475 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.922190457 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.80209359 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.155626733 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.794505916 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795741744 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.032587071 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041881218 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.901911756 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800139941 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.793566482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792169377 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041666981 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.794617359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.893572847 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798536962 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.791413383 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.895741291 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901416204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.041348876 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010573778 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.828669496 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.094360765 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.263747643 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009722516 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.862859374 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030898216 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.794535833 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.791806324 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878478896 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.544734378 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.951453463 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047242028 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.013665728 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826171664 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.427902984 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.792843126 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.988041728 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976620474 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.990883839 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.033295895 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.944129064 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.000519133 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.795185353 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.790868666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.999912311 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928102266 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.796351123 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.149446816 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02697387 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.351572567 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.824435762 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086300057 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924692473 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.16548259 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.415773685 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.793228622 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956801022 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.828893196 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.792106827 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788621522 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.979926336 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.599441546 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787766463 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.317546014 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.85666185 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.792486036 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992374779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.792187469 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000783751 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793195375 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027827698 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.817390175 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826186212 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.031190262 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031951413 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.585177454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.038892047 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039042072 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.9121376 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.012469928 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.388247302 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.791592553 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067447586 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.791264335 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.792031349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.958698254 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.791991571 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025787096 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791544077 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017356745 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818758503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946370964 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791521282 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032403966 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.829601554 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842491855 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.796502395 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.921496689 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79508674 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.677444 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.948350679 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793061452 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.790575863 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.477481589 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.789530527 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.939374668 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.025195685 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818728425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859939636 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318561048 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790745141 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883480828 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.817310112 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.530592414 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.792633037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.953332071 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.741765162 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.232817409 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.791673801 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.035520618 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.980728242 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.795552257 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.792905168 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.533660789 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.496541508 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794284399 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.953014307 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.512618199 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.443481691 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995965258 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.795563206 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921306299 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.795797531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.868412509 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146096419 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.793319035 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.792955025 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.795882725 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.795862333 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794792704 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073565374 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.822807283 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.317825333 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.930046602 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007083518 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.108103687 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016078995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.840482608 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798137447 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037547427 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.799655525 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.856749226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.795450004 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815886578 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028419176 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799047322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006578728 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049944196 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.764255052 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844743333 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.79548049 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795122839 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.794996115 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.947433717 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88685594 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.796006689 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796767355 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.906736147 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924268781 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985965782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.389395768 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.968141358 seconds)
  done (took 882.625660592 seconds)
done (took 1196.841275878 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.798027233 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796390631 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.785103526 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.793325267 seconds)
  done (took 28.90733365 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.807567183 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.804047274 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.803089212 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.803963926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.801289114 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.803915989 seconds)
  done (took 12.555471689 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.843193654 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.797945923 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79383869 seconds)
  done (took 21.167292124 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.867785041 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.204482924 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.916085246 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.243396722 seconds)
  done (took 9.963911796 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.805655008 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.803093408 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.802284711 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.806375959 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.802465577 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.803519338 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.802472945 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.802902316 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.803461771 seconds)
  done (took 17.96601163 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.208164636 seconds)
done (took 96.500232806 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.922182767 seconds)
    (2/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.807816318 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.259732162 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.092756748 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.996762456 seconds)
    (6/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.950529832 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.939700117 seconds)
    (8/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.101901561 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.906037607 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.788769824 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.884960744 seconds)
    (12/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.30790044 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.850601056 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.178345634 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.804957739 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.251369601 seconds)
    (17/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.184219292 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320599378 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.829592787 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.078951059 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.031569303 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.259755406 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.885616723 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.22941634 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.307471796 seconds)
    (26/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.940015762 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.921172542 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.88691193 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.967525957 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.080281894 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143870074 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.042245456 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.110650137 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.882108275 seconds)
    (35/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.870261144 seconds)
    (36/309) benchmarking ("sort", Int8, false)...
    done (took 4.793393991 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.910192552 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.988209449 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.873912738 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.973833623 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.836015787 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.887394772 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.146080601 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.350346308 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.904647597 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.812077879 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.492337526 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.148809999 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.446837347 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.935490549 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.80840339 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.074876339 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.041083422 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.912070456 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.28795332 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.811924207 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.835000491 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 5.61418662 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.462614787 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.981927477 seconds)
    (61/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.000587299 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.011250488 seconds)
    (63/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.894617777 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.903955144 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.84024627 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.874198802 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.98003332 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.050346553 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.434963747 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.084495184 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.85376292 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.105981607 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.815319833 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.945820517 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.808082545 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.933544803 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.873032901 seconds)
    (78/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.863470615 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.707899443 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.891373147 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.891338792 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.829706021 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.89892635 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.114196935 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.133549664 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.89291537 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 5.57323733 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.055247507 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.178470203 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.03678597 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.912821869 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.817056874 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.213447863 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.884854704 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.183223068 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.832541855 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.37370228 seconds)
    (98/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.804961488 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 7.231414484 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.80786429 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.136432763 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.809181741 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.730578935 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.20327535 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.826846007 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.811567275 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.400081363 seconds)
    (108/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.833813375 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.949363845 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.833672275 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.893745511 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.48781675 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.837869145 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.470829196 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.405027847 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.104524635 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.713108127 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.730963619 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.813498183 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.980376438 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.648441687 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.196767046 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.730135674 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.94227622 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.026486162 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.112415316 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.927615711 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.937453138 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.871768088 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.470979905 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.797691484 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.869668248 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.614892684 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.786588432 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.803368325 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136095496 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.149789081 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.826199177 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.110633367 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.935990683 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.723380773 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.382273089 seconds)
    (143/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.191449197 seconds)
    (144/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.022604731 seconds)
    (145/309) benchmarking ("sort", Bool, false)...
    done (took 2.267040557 seconds)
    (146/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.835091471 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.974576443 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.088926413 seconds)
    (149/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.953374567 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.796124161 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.722693772 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.916038091 seconds)
    (153/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.39396714 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.127134627 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.076253321 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.009634055 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.842628425 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.938195825 seconds)
    (159/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.326030998 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.852838215 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.659198466 seconds)
    (162/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.942467177 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.944706554 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.041717628 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.839427642 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.962175033 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.116290035 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.539866058 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.02494984 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.101841214 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.813785089 seconds)
    (172/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.623283224 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.834443212 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.815104079 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.892703574 seconds)
    (176/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.417020503 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.108039859 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.817443268 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.111199163 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.224787947 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.944347276 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.699215758 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.847316596 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.200281161 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.499855392 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.310510786 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.939571695 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.829675984 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.796362415 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.437671967 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.098566055 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.837472871 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.884862625 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.820579315 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.941960069 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.015883378 seconds)
    (197/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.899460996 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.150474635 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.960359203 seconds)
    (200/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.16516016 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.871884495 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 6.813070414 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.882548568 seconds)
    (204/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.012545136 seconds)
    (205/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.944633997 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.829830097 seconds)
    (207/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.95806201 seconds)
    (208/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.303213003 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.018473891 seconds)
    (210/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.972722731 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.409812201 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.887261254 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.597578145 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.029176295 seconds)
    (215/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.000811326 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.928292404 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.796427864 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.65389274 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.067845405 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.815789671 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.798918437 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.980541897 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.268110991 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.838159763 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.878640851 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.191725661 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.816256663 seconds)
    (228/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.949367025 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.918238974 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.420998641 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.854320504 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.897430552 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.901005336 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.778302126 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.826323189 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.869972905 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.718053785 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.874495404 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.814527789 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.815862881 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.181257788 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.799973948 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.580270201 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.804268412 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.840350279 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.940701457 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.001378193 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.092577961 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.819044497 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.056083767 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.806100583 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104953088 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.046809987 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.820958775 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.920463016 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.802968172 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.115286517 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.843837219 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.844309025 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.918697397 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.918229969 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.007717319 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.039569184 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.902825935 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.197779596 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.123460145 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.223807554 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.80114741 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.151511739 seconds)
    (270/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.998784568 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.123287214 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.284233485 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.015323597 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.81820891 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.287987211 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.506426814 seconds)
    (277/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.057853328 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.92647483 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.877726065 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.219247156 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.922099561 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.816364292 seconds)
    (283/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.325834418 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.921930359 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.841382924 seconds)
    (286/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.134254029 seconds)
    (287/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.29970894 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.904850708 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.209118569 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.982511058 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.844010771 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.605093123 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.853119807 seconds)
    (294/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.059310217 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.882562341 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.905118562 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.863504635 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.842610424 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.324263753 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.411943369 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.820057699 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.847060793 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.838961229 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.817545453 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.738825374 seconds)
    (306/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.824564953 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.991716359 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.031918238 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.986901739 seconds)
  done (took 999.943823454 seconds)
done (took 1001.958203075 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.854249683 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851471205 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.829034928 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.852378243 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.941228807 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864144735 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.84188935 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.833118087 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.87662475 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.881289186 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.83107907 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.8662713 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.83561464 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.831844577 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.830134123 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845575164 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.141578306 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.861220974 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.849984154 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.840699523 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.850771932 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.829512436 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.882310636 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.865310515 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.837784426 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.834373668 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.832878741 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.850919338 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.944017301 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.834147775 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.833858514 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.843649489 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.141485879 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.856907113 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.826637292 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.854096397 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.842853773 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.841523651 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.839321114 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.865747679 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.277305091 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.836892729 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.833861473 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.833933072 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.830634592 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.836272218 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.835598548 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.838256815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845480864 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846578336 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.273861445 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.853477146 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.835418109 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.834181314 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.841344664 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.834295083 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.836546664 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846687454 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.853409193 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846935068 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.129165001 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.865540395 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.833819132 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.851338956 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.837297397 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313584104 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.8329534 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.838534648 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.278536163 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.843029853 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.311616118 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.847515285 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.834296613 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.848306514 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.866200888 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.141222947 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.852234536 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.831123309 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.841958858 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.835496155 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.845659622 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852101286 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.83803964 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.83367049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846181763 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.867268983 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.846703167 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.837316529 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.842067585 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.85241172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.841171505 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.847144795 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.839248982 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.831163915 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.844826406 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.835894976 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.841050171 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.838178361 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.841094623 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.844846908 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.2771026 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856172449 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.833083881 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.832830031 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.833427555 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.848089737 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.275640746 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.842007613 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.857884139 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.881300327 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.837687273 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.132558948 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.866042529 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850849897 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.847661607 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.840007148 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8329504 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.134489174 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.301666713 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.855084307 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.839746262 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.835619356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854947533 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.83579156 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.834447864 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.144573538 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.862626076 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846952842 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.960969589 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.849779659 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.873166697 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.838809075 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.840556031 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.873555304 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851327775 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.869928272 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.840436082 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853881521 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.856745799 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.835648921 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.848918341 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.846256518 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.839739864 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.84261892 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.829190854 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.872014791 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852803974 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851277519 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.857595435 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.95911698 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.832975605 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.13254693 seconds)
done (took 288.600628415 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.904239592 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.828620239 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.930979374 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.835055416 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.916795471 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.921038651 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.828944894 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.830557186 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.828994789 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.214239095 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.828331439 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.830805961 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.832272137 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.831030442 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.917076784 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.834864848 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.832341782 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176156122 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.832796402 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.904064958 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.830034068 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.832844018 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.833548965 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.212507236 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.829649838 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.832160196 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.90761163 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.833384663 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.176922614 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.832386033 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.832924045 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.182936798 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923687631 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.854499577 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.848088223 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.844966734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.919291129 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.842358224 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.912227611 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.913870507 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.93407202 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.876547118 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.828982514 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.832945312 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.837744693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.836601227 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.832761084 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.865271843 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.830581823 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.833288918 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176872095 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.845214196 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.835493758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.831456795 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.835371196 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.8667459 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.832081219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.833921944 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.926925688 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.840748016 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.898472848 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.217141621 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.217891938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.833426144 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.839939547 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.83607339 seconds)
  done (took 181.993641613 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.904848308 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.911517433 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.904979958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.840340848 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.885619771 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.910012701 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.842057457 seconds)
  done (took 14.963476625 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.84298474 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.835574033 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892367199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887544168 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.836294612 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.986718186 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.263453196 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.849605763 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.837032459 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.900163622 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.836448895 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.840537753 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.841735525 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.830262252 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.889199445 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.849509651 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.952257846 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.839366662 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.839697766 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.990715645 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835915452 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.850356233 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.894401063 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.852688238 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.837329042 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.845850028 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.433357837 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839817482 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835930708 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.838723379 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835479785 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.88507391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.840481292 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.836086329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.838198429 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.952599466 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.839926195 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837148923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84037571 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.834437668 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.837051192 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.836505508 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.841587411 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.835326077 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.841291029 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.864225255 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.838856625 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.843985627 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.83884674 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.838892778 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.896786306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.843074866 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.836606719 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.837808891 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.906550679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.84782157 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.841865789 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.836417971 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.84306224 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.839091873 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.994190266 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.892078397 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.840911406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892442482 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840423687 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.843776596 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.842063941 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.839386992 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.934743004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.838074129 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.88964795 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.837226216 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.015544965 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.862025092 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.843215082 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.843504372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.843413311 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839613342 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835959314 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.845377032 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.838893843 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.843061381 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.847124581 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840146532 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83476961 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.952457891 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.951182954 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.83908659 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.856455231 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.847589704 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.837664483 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.901789748 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.841596089 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.841778195 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901246636 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.956967581 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.897348089 seconds)
  done (took 203.400578679 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.850074364 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.849397471 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.843784424 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.854885698 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.842026954 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.844643807 seconds)
  done (took 12.855325895 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.846405168 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.842832842 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.842145761 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.839988315 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.844911153 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.843138086 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.842286232 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.843494722 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.84838439 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.843021494 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.848076762 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.844265914 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.841454661 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.843035984 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.844607822 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.846690617 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.841681841 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.840580848 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.840854873 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844327118 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.000560153 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.84367431 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844773986 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.84342516 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.846103383 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.844993993 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.850411525 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.841896465 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.842331007 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.84892884 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.847514928 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.846319155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.847470665 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.851102925 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.848657691 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.844779454 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848281129 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.847558607 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.840114395 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.842970505 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.846480306 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84383363 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.842715901 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.849285849 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.845237968 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.85062852 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.848389099 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852803425 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.846797761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.843862558 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.845937078 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.84487248 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.843021821 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.846009885 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.848923249 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848240718 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.851323428 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.849348588 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.846362308 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.846352821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.848382427 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.845821878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.847602305 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.849776004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.843370237 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.84901233 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.845202638 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.849595714 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.849009442 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.843521415 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.845949175 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.844099672 seconds)
  done (took 135.819873943 seconds)
done (took 550.810203572 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.104447827 seconds)
  done (took 8.875644051 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.918179907 seconds)
  done (took 8.790720364 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.379700264 seconds)
  done (took 10.151672744 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.853205355 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.848409242 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.852522063 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.844324716 seconds)
  done (took 29.179743803 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.977002267 seconds)
  done (took 8.754161499 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.857632239 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.842404723 seconds)
  done (took 15.512411948 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.902109928 seconds)
  done (took 8.682796171 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.950280082 seconds)
  done (took 8.725732663 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.849722419 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.847667544 seconds)
  done (took 15.48169832 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.823409557 seconds)
  done (took 8.595650259 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.61279969 seconds)
  done (took 11.398988182 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.845807353 seconds)
  done (took 8.631128857 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.883025793 seconds)
  done (took 8.656058213 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.965080521 seconds)
  done (took 9.734909529 seconds)
done (took 162.945124796 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.841253669 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.842287349 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.838668908 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.839214606 seconds)
  done (took 29.132451124 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.878199973 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.876192842 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.879884273 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.888823104 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.882427969 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.876281266 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.870581381 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.870817144 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.889819871 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.880679557 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.884997448 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.88001582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.877893544 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.871942969 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.880169221 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.881175155 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.889025146 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.879444812 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.871063703 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.881638089 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.846030122 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.888170723 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.882146662 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.846605752 seconds)
  done (took 46.831232018 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.043789393 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.917739496 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.999422455 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.899045259 seconds)
  done (took 9.631582636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.897548431 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.900494469 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.910183715 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.948008245 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.978024478 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.907701082 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.873731654 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.866928388 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.852054984 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.897619398 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.973529479 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.916285558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.996266387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.845931726 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.032399993 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.845805199 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.844785177 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.901249297 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.949873117 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.966040093 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.846386902 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.898402572 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.904050308 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.914392719 seconds)
  done (took 47.642332098 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.844894529 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.853283562 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.853035304 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.845029262 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.846112593 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.846062725 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.851676476 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.847055959 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.867472696 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846346401 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.844533985 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.845648959 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.84580452 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.849563079 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.845268732 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.858942502 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.860808753 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.848367803 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.857034178 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.854518048 seconds)
  done (took 38.786921437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.840379668 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.696443437 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.194156735 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.09609935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.845193156 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.841805706 seconds)
  done (took 31.289301038 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.861545682 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.853010738 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.849741759 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.904580165 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.986945418 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.856841056 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.850057389 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.861343009 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.895004397 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.912255903 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.867554173 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.876807449 seconds)
  done (took 24.353365276 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.847776301 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.842722671 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.843601322 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.858314995 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.85833061 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.855447009 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.854018567 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.840625989 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.857437129 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.864486646 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.854487034 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.86088763 seconds)
  done (took 44.018097861 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932643495 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.885198648 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882020605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530133512 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220880964 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054688484 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.843676807 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181481352 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.84590248 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117831364 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.875229505 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948834415 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099398636 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331164094 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874157091 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.302119852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144923058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057685393 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87038402 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546688152 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908548432 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.019219706 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.612605259 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902763305 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054620766 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.972983682 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.10383888 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842542346 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977387173 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881773813 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855525855 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842681929 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118787472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22117985 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950248398 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855363227 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464255972 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.555837945 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.833109738 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.611424419 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600358457 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973884314 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855925773 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844876981 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781327594 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981692906 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219734654 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.849750119 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.55621278 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844800503 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857612428 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934309469 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.849630871 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.660773187 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761985205 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.845836996 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.84331584 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852400901 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421798079 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.992817871 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.020330643 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.816423687 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.940326437 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.556115847 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240838817 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.996362268 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.849336357 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850507848 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782317602 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.552287459 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904199863 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177404835 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.866584601 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495699772 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148389536 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.930379374 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787608975 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121451322 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.368770355 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.817090024 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075742568 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845829247 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782171902 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.88641742 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780351636 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122703166 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886633967 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.612115941 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890846128 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183517056 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857141951 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867773036 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87192255 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072076342 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.732498892 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846431286 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.670168164 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989143697 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869437794 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182042202 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780885699 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.850929319 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104052069 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.060171268 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.903167936 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.34378222 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00745952 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399789208 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.896138985 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.983768427 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893341122 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.119364354 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907293113 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987262078 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9019393 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848622324 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169968871 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421911257 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.983119708 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.905978327 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97434949 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.170002489 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876922682 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914222074 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857399868 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848952179 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.633276522 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404215338 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.848607757 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.851828837 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90865988 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895656641 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.849367079 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799468916 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.472298593 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.90680211 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.863076807 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072508584 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416636958 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159698186 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7842271 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179080547 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904709996 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.071798592 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494481669 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.92912895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111696144 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905273503 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.940185485 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894299406 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871174542 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95010725 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872329809 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.980383826 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140108871 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.854376702 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.856017863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652802436 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886344492 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851220436 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.857530611 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.603769014 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127419899 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875285848 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855531089 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.741710353 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.864266439 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916791225 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856209936 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860171187 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391058346 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.58815446 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.858296807 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.435924067 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074206956 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861718929 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.56440559 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963736469 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.934832446 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125570014 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913473013 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784666528 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.562139617 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.546162492 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851093275 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788614865 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.85212963 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861403015 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861559581 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.05016397 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129416439 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897854636 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.565427799 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.896097736 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86293791 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.857273777 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853199989 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37708768 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987818073 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.029752487 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89617773 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998007887 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.866032497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788501021 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.856836651 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857852469 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855098343 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854465337 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884871218 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.559244587 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23786242 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113802878 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.465155212 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867442638 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.583869844 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.913239015 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.91946955 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.672486501 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011990001 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.913791204 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863752666 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.864944269 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.559598083 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.563751244 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424119156 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177179701 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158485863 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300844804 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.063161782 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880935208 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190612553 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789128061 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.412746296 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913046029 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204204333 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799824861 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948993844 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500905866 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204120251 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867844302 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082297871 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251139453 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.587617303 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003804251 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066938051 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890338871 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.001839736 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816298728 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.378578517 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998453873 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.562180953 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064731428 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190971556 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531699835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.986617459 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.854191525 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.547082894 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945834804 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.567665514 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027446026 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.030753756 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.781773816 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346025868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861154449 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083654179 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216430517 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.997782028 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.977927274 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793811541 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867940413 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867834316 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.856491375 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.877721793 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.736171998 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.109383294 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869226451 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791242543 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.951053992 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145354718 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.760181451 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.863595122 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857359189 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173993369 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393260563 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023118574 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.939619907 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.473757644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870526814 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793622138 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793097283 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.549694091 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865109479 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.83373444 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068780999 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.962232739 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79859218 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91671859 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948269627 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115799591 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.87371343 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129097757 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135074675 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.558526909 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884219213 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.960584065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.501168586 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.967744956 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859420976 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096274379 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617391212 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085842098 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.898698204 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.822306566 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.858399635 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073791992 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858845917 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.718680605 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088184886 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.582757294 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.877811109 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172340422 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933058177 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.736353667 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.909576927 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.958161616 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873598232 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941076111 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871786635 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.87844663 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871637303 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908416159 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.741582803 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.992493024 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.878479632 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952496187 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.988164089 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.378193812 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.861222465 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137939851 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21085351 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185930127 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919251741 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862092506 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862287724 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794258188 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006370033 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085801609 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13404576 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.989205733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.977030827 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885636009 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.52007919 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046242012 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099675537 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136146877 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.75571411 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346202646 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.898733705 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.861999517 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871983798 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.073982693 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075613457 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165508226 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005740777 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914964606 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223847477 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135131411 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866007359 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863918745 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451252091 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.912716624 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55298178 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.907896005 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747868277 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138926449 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872339432 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241382649 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883486344 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.021798299 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.378557686 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598594173 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154175146 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.846807778 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924319932 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136151569 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252618953 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17528854 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931706796 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874601602 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.96691001 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011987203 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.740614599 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865785639 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865739622 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915069311 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.575980962 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874162384 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144557337 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176113942 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.862343386 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.74687254 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886658525 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.874397552 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088995121 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138534309 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11850318 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873154281 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870707089 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.67931863 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137357062 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922595604 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79908132 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.86598063 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962265417 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112467252 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886497644 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.318461081 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.574118022 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144429756 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.867603838 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885639687 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.001006604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229938007 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185857462 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.397748725 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07550494 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452790222 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.422621978 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163160711 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.868626352 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989979351 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164233893 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.867889577 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.908796549 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901588502 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.132313495 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177029005 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.936184661 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561599901 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.833364643 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.20419318 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422381943 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801810588 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866965853 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.922793043 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862395472 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.993399835 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874460255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.785692646 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002708351 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.652767195 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154607449 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.872940604 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.857915603 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.579146333 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.126907473 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905840656 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005123926 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863095663 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.587421579 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.226984135 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123737888 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.919604332 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.870401076 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.874453041 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86477096 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851161614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062600208 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.062537435 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138363713 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.946921596 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.896660712 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873065863 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.084301508 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080534961 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.760309946 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02183875 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920211526 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909221433 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.787144125 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380292957 seconds)
  done (took 1667.467037507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873047411 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.881297314 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.874845516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.868538156 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.874232351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922166907 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.906921758 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952870474 seconds)
  done (took 56.957796083 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.866928676 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.058792195 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.875688156 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.867888024 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.875294839 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.866173083 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.036182307 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.876411182 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.8729422 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.877655711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.870025849 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.864725656 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.177675968 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.889854567 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.872770438 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.852584973 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.874601678 seconds)
  done (took 74.281061878 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.907834226 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.933669899 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.902596059 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.887026945 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.819863138 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.884340592 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.680886051 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.885321041 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.869686426 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.097793198 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.500532152 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.877975574 seconds)
  done (took 90.049132195 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.877224107 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.875070822 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.874063983 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.875357384 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.87398638 seconds)
  done (took 11.181210353 seconds)
done (took 2173.424754812 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.114737195 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.085065077 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.096100674 seconds)
  done (took 5.981693725 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.01804607 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.064433117 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.184339985 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.191652397 seconds)
  done (took 10.263499546 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.158758362 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.250176595 seconds)
  done (took 6.209495407 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.258671687 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.87456888 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.250232979 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.870332593 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.872614892 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.869638006 seconds)
  done (took 22.421669422 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.872026344 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.876463426 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.876482926 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.876416794 seconds)
  done (took 9.304809876 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.854516847 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.5797937 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.854629043 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.869924483 seconds)
  done (took 20.961949533 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.622287181 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.631920211 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.627689441 seconds)
  done (took 9.684249004 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.399203808 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.771082383 seconds)
  done (took 8.972879799 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.133947264 seconds)
  done (took 3.937513409 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.006698019 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.181492401 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.383418562 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.399966502 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.486330019 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.600833448 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.18515647 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.112235158 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.293648374 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.313027054 seconds)
  done (took 24.766801789 seconds)
done (took 137.805715499 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.246891411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872483739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.076278902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.246317746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.108724587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.07611695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.298875582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.231813549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710305152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.710072284 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.205965852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.096168295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.029547182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.102040728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.029865143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.232256033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.087592975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.255865739 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.932931836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.100115994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.296437747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.841664941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.045004355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.855212968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.092013734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.024492978 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.417887611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.233480776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.088600718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.427490263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.027899697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.252090358 seconds)
  done (took 170.057076843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.621196375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872615694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873320832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87167006 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.177329727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872032598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.87486058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.872486882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.035382289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.013614716 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.870294071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.161553806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87411694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872777752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.874953231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873465556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.178431744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.656266176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.879036657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.883840178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890943971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.094176116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.894410674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.149986546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.244709387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902509659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874068265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90265157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879384207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.880180657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.889072165 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.872153879 seconds)
  done (took 207.490593798 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.873347611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.87201764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.874927549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.875459101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.874850699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878973279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.87720572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.875163575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.542877145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.551809219 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.886218128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.880687423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.874030371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882528899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.875728906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.881299693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.883604531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.880655415 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.881576809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.885235615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.891082154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.633038511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.892923091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.632352476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.883229424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.881671354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875518218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.881863833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.872771363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881023961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.887039306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.873766407 seconds)
  done (took 220.820473163 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.077870609 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.882095364 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.881938745 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.837189577 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.884069561 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.881271136 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.877301266 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.073356435 seconds)
  done (took 19.225902478 seconds)
done (took 619.409174683 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.316994422 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.161297059 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.062927374 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.908559397 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.13910222 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.937418958 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.901904534 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.966575195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.633789459 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.967154723 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.557142825 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.922593046 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.640714653 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.924014061 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.030797119 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.957143176 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.441315602 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.529084306 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.081363907 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.956167829 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.084286896 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.840865984 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.973884757 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.651742999 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.658564261 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880421746 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.075044157 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.439076134 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.9139199 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.069346977 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.631209395 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.283510408 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.912070355 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.900672737 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.95527177 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.935245986 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.24980152 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.910046724 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.028412215 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.640606917 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.949397556 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.519250971 seconds)
  done (took 103.349965355 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.873739967 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.873709244 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.872645349 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.874565403 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.873043913 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.871667456 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.871840916 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.872024593 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.872955993 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.873461194 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.874390898 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.875827159 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.872758064 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.87668068 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.872644592 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.874425955 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.874585552 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.874115952 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.872833317 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.873105392 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.873883149 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.87288709 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.888840794 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.873117983 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.875594473 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.875086448 seconds)
  done (took 50.55409116 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.887816255 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.03367407 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.114301215 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.903789186 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.886958377 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.891203423 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.904740694 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.889739097 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.887092732 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.888579565 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.983212122 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.892836518 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.908111079 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.112529225 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.900767311 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.884743472 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.899040594 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.888658039 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.03947722 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901024801 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.906544226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.888687005 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.904880693 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.899514507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.890636807 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.888902868 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.891582391 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.322331676 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.897392453 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.984200042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.928999376 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.906966797 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.287200887 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.122999304 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.937628416 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.894367604 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.88813088 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.985150666 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.892239593 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.888693738 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.90578038 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.893190623 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.115287227 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.373831484 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.899445557 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.887673254 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.337822493 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.994508686 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.928682841 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.89743868 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.119584995 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.90360713 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.889184309 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.888905894 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.925395802 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.898733549 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.891228049 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.200194668 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.89815417 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.905826595 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.892143404 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.890149349 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045909212 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.89779971 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.03525584 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.895945251 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.896905656 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.891239793 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.117299197 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904971328 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.382850429 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.903562106 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.893362002 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.987686291 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.040296327 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.36552558 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.903894208 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051104788 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.305585998 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.91530458 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.900217683 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.3167402 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.919700001 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.899059628 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.89592512 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895226114 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.892114658 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.937606623 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.910289299 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.323624337 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.389381033 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.21442513 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.916002702 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.909991636 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.894691938 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.2055325 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.900429089 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.895116038 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.113506305 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.392216711 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.901907916 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.900299655 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.36733525 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.907212292 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.915121331 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.900787276 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.125132192 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.904310109 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.939057485 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.89352488 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.900367882 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.896948509 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.91253434 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.898905183 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.895772559 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.362736327 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.00556854 seconds)
  done (took 234.042074711 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.889005805 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.886820893 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.887487168 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.887368464 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.887616359 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.891826274 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.886390199 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.888771354 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.893095584 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.887632212 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.888075531 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.890464346 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.887202789 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.891625359 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.924593075 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.896840353 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.502539448 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.890391408 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.889551374 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.888418709 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.536295041 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.892542282 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.890202494 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.889951036 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.888687456 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.888660016 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.898122564 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.919479851 seconds)
  done (took 168.063559388 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.897826964 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.008522442 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.909505236 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.921550081 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901700875 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.893491371 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.917507278 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.909898209 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.90047957 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.894624076 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.8956731 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.956049174 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.90538834 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.993072861 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.92440771 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.924358838 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.996866258 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.901136873 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.894884185 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896728714 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.925136882 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.890044411 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.955554147 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.0158152 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.910679171 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008272376 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.900220095 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.898764193 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.898201771 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.012179617 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.906340785 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.953999104 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.920626201 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.913386189 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.014655174 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.007105599 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00019528 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.924529829 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.899633825 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.89654989 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.895539114 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.88767131 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.009939939 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.912738574 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.898912267 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.003763647 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.911224725 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.899944357 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.909036263 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.89582789 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.911674171 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.915135428 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.961421195 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.024683135 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.926103732 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.922750057 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.922773736 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.172116759 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.90953439 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.99545673 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891043951 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.011097845 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.913935548 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.88774795 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.899548922 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.901838165 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.926201598 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.926268942 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.00101128 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.905151184 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997076456 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.931896697 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.901594809 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.900008816 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.900283244 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.012190561 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.01038533 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.930842688 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.932312758 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.927164658 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.893171965 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.899480654 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.888710168 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.916429131 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.90271862 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.012507598 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.011235928 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.905070759 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.901049635 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.901901501 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.900549247 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.924552035 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.016769816 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.929598238 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.994733044 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.962215955 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.968243699 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.911345935 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913347206 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.902334893 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.961927142 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.911857185 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.910994268 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.220970989 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.970659958 seconds)
  done (took 205.34825891 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.380934223 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.953649212 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.954195378 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.18298256 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.315435712 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.751926622 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.944402843 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.947791769 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.973643776 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.104630387 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.003047952 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.964105844 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.936530802 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.923009897 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.944887409 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.969032004 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.952021438 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.240531551 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.064672208 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.050752702 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.927482194 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.252536678 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.266004058 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.322715566 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.984702014 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.274086399 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632797005 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.198356075 seconds)
  done (took 62.250080358 seconds)
done (took 825.417942395 seconds)
SAVING RESULT...
DONE!
