cset: moving following pidspec: 27810
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.307935664 seconds)
loading group "string"... done (took 0.585257383 seconds)
loading group "linalg"... done (took 7.19534294 seconds)
loading group "parallel"... done (took 0.173323783 seconds)
loading group "find"... done (took 1.147151388 seconds)
loading group "tuple"... done (took 1.747780183 seconds)
loading group "dates"... done (took 1.235855633 seconds)
loading group "micro"... done (took 0.230492661 seconds)
loading group "io"... done (took 1.131134561 seconds)
loading group "scalar"... done (took 39.500923731 seconds)
loading group "sparse"... done (took 12.943681302 seconds)
loading group "broadcast"... done (took 0.980526089 seconds)
loading group "union"... done (took 13.200192856 seconds)
loading group "simd"... done (took 4.506933744 seconds)
loading group "random"... done (took 9.075518212 seconds)
loading group "problem"... done (took 1.988058764 seconds)
loading group "array"... done (took 21.661982607 seconds)
loading group "misc"... done (took 1.972913044 seconds)
loading group "sort"... done (took 3.267408091 seconds)
loading group "collection"... done (took 18.314509466 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547571996 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143290004 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11725538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14254319 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191887897 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137556065 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15045933 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087982676 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.108967292 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171609543 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143960342 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.486870474 seconds)
done (took 5.296051563 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.247303202 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087497163 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098100388 seconds)
  done (took 1.000840708 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.0667201 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127446164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082260702 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068585532 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067609539 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084433966 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068927741 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067884653 seconds)
  done (took 1.384130484 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075016899 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069163264 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087190889 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068936451 seconds)
  done (took 1.117334863 seconds)
done (took 4.643311182 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.911051081 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.252678333 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189726721 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464904429 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152266838 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192566362 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.732774105 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.363286046 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212675515 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102202057 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105440834 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38698208 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107236186 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.70922371 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076362158 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108518788 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.165714082 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.477760174 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083381443 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083691541 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105679075 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145335197 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102122775 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07791915 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170153176 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070341147 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.151122784 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097272209 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069345371 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248746854 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193060544 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.726663406 seconds)
  done (took 10.889449117 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100975551 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120880087 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069925035 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142995092 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101044153 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088576925 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071957164 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085838174 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091790261 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162451981 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117416008 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106716473 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085712551 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070589844 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104049314 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212442372 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11238849 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087780078 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090270894 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078091316 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125523441 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084757139 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097496975 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080756044 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156815537 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19819296 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1165918 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113259145 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072615128 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081955697 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135221157 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146897076 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067487639 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08474337 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140415828 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113781301 seconds)
  done (took 4.746346613 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.057652769 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164158311 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093913689 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157923266 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089372835 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113849676 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.088159264 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105334261 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257975079 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.092348411 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.465943272 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134218882 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104132026 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069221451 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087772352 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069240794 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.56119484 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149859285 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103060909 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106704985 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091637688 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073033258 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.716297351 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072038893 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069676207 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089264948 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06295959 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150822438 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07155306 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.252098721 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09005062 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092101843 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120322094 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17935925 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097800011 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124865559 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085156304 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06893868 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172745397 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075050563 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086803152 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089813439 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124488866 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122871162 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070190009 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085641087 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18509931 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068970276 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103417815 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.911454548 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168310386 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.099495453 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.088291852 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284044888 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10956761 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069521855 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.085466077 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261988115 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.170743083 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072046922 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069943587 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087472535 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067935798 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088282863 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.719522388 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071783217 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.130090599 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072808949 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077440934 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08750787 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069017174 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091553691 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073917373 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103243515 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069380146 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06909498 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086072162 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067865146 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087295064 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087126181 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083268068 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210672042 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070477729 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068998715 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085782513 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089155344 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117250355 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073921267 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086411993 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119384633 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096566101 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069541782 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088533966 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10533373 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088397422 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105813087 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073077854 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132435441 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071703498 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08419721 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145294121 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070306993 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116506098 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075587157 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119672865 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10070966 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072336524 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1592881 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067786791 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085880374 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071098078 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068022936 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.089360402 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071151871 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101035802 seconds)
  done (took 22.63247606 seconds)
done (took 40.142154095 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.303926714 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098716808 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098366523 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079213454 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098685977 seconds)
  done (took 1.575196794 seconds)
done (took 2.443614366 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121704144 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120416406 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065596805 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117668302 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065510889 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.123098224 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12047888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084827179 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.125205373 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067908726 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119049015 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067989186 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066904557 seconds)
  done (took 2.160304917 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084858406 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087141487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090590841 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08565366 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084799923 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08710624 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083395837 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111711212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084517832 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093864497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068279616 seconds)
  done (took 1.825246065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084701046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085728281 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090165142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083605068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083911309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086144794 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083365344 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108877919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083992278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095257159 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068055803 seconds)
  done (took 1.817701952 seconds)
done (took 6.659870536 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080689906 seconds)
  done (took 0.937066084 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.72823643 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.778929829 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085553605 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136002779 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224914757 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1554882 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.453661292 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114958378 seconds)
  done (took 10.718829615 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10473682 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094646656 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072764285 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094340774 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07384827 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092629392 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077727765 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072575246 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092383936 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072499995 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091033786 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076097715 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090684814 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077156042 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074938608 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090442899 seconds)
  done (took 2.271285559 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095535896 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097638345 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096455807 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080307537 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09556788 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077565849 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.0982921 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.079168702 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093202221 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077482278 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.097510474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078684713 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094025148 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070072804 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096825539 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080766028 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093676427 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080383356 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098470038 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080162865 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097989673 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069701676 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095012152 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07905687 seconds)
  done (took 3.076020308 seconds)
done (took 17.869032436 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135582611 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079715014 seconds)
  done (took 1.081573835 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084307822 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102422184 seconds)
  done (took 1.057614194 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085684001 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.085202267 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094501194 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100332763 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070205687 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.089541258 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.109875034 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.071755347 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069105099 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089578029 seconds)
  done (took 1.736096725 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071378284 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097255432 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074953428 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1032243 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.078254908 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085912969 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077386985 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089931826 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082851186 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084206128 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07586687 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.105201837 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075628958 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10735323 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076552709 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091622903 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.091657885 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072380887 seconds)
  done (took 2.413677823 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068744605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068980179 seconds)
  done (took 1.010820438 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070167167 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065369369 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088789358 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069772918 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085790674 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066769312 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.085378678 seconds)
  done (took 1.403690399 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.41314336 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113855267 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.254284165 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.095565413 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109489271 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27282016 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.091199824 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075417394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094358329 seconds)
  done (took 2.434220472 seconds)
done (took 12.010575225 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082960512 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087826646 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11771899 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.440828281 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.115052625 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070309944 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149170845 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.214975837 seconds)
done (took 2.15419723 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129501893 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.649261216 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425419363 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.224521407 seconds)
  done (took 2.176010963 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.396467316 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09733861 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079916685 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072111222 seconds)
  done (took 1.531655148 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068720736 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071738804 seconds)
  done (took 1.022772893 seconds)
done (took 5.740352571 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069941325 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067897238 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.084506246 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069443529 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065696243 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.085483204 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08884596 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089682998 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070536959 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066707869 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090986238 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.073815812 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089048738 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069312946 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067274555 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08783958 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069166493 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067440009 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088212663 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068301857 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069409019 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086716682 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067979461 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067144668 seconds)
  done (took 2.742453752 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088312286 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.087914534 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077026337 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094370113 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075909346 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.092706005 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076880892 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069805607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.094582012 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072489998 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093394249 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074629511 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091103348 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074563488 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090514728 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076073116 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093164585 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07499588 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072159245 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093323084 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074546399 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089765434 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074355156 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094528393 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074635179 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092803757 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073524464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.088329752 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077102901 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091420497 seconds)
  done (took 3.381944368 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074232198 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065824078 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086128833 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075023468 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066978279 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088561532 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068070161 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086086941 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069739857 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067124025 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.088192142 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068280259 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067180176 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087597941 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068659834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.088669097 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086713353 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068514131 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087551349 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069034939 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070833278 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086970186 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068096554 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085783907 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069069103 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067584678 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086446394 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068447338 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067501443 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087182582 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071521572 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070878729 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087808704 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074423965 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.089718607 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069042756 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071632102 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.085349138 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069668641 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067078815 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086462006 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068490197 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066923848 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093277757 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068667554 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088365979 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.069026988 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069171194 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08765585 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071708122 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084810222 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06876004 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069173927 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088157592 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072142433 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067024385 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.087783378 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067869866 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086500339 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.069282897 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068196522 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085526646 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071619814 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068452648 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102801323 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075689467 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084966317 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070812883 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069442021 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088831017 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07059568 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080998231 seconds)
  done (took 6.399480083 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122134618 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095153712 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089111792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070569309 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08436194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069249958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071312837 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087779497 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06989138 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092986509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069491948 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069111102 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089430975 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081526304 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087639877 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070651077 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091924925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069071731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067738453 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090771617 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069132305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090201497 seconds)
  done (took 2.691601398 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192800584 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093897204 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.115537157 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098253031 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071863672 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098464181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073858694 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094334176 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073811936 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093186272 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071901135 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092993621 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071688999 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091066003 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072959034 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092284652 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075177532 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090791504 seconds)
  done (took 2.55232344 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081722751 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067894257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.111659425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068077183 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090160791 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073120497 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094485964 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078087055 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.092474674 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070758522 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098042642 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074062173 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091284338 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071314014 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072458456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.089817195 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073446603 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089200855 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079462281 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094637801 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075427327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097671574 seconds)
  done (took 2.724581628 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083758588 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070017569 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107668409 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090370717 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068017181 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068294356 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095900002 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070431853 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095639355 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073127307 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07009741 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088231079 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075233494 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089916465 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075866443 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089262866 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072471975 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06969929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092026111 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067052128 seconds)
  done (took 2.503663778 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090339392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089109316 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072016387 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097471828 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071920553 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090143499 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081932407 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089924721 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072721463 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115124723 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07248134 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090727512 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08070913 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096402704 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072115837 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098169401 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078874667 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098638629 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070762336 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091952384 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113782827 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185253129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096472213 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072445683 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070746012 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091351396 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071473749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095821953 seconds)
  done (took 3.41348231 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069868623 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068122843 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084801139 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067648779 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065589495 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086513877 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067882307 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065997527 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089874626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067606503 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067471487 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089316942 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070023773 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088101557 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0714754 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069233673 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088630909 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068875704 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067060144 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086733669 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071143112 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069752249 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089621924 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068078652 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084931396 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071688604 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067899208 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086784029 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071099396 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067480655 seconds)
  done (took 3.144157784 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079368274 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094196044 seconds)
  done (took 1.073029312 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067158742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082473269 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085290992 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072517807 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092524795 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069686492 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096494072 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075135372 seconds)
  done (took 1.539513688 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085690058 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07918789 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090601777 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081239458 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.101531002 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086276007 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162404706 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092069673 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078274249 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087327401 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085562584 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069413962 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09658485 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071254108 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.096305371 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077929196 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067996944 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095873885 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073561869 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089779082 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073032361 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098904806 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07404766 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067539483 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.092320299 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.080149509 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.101373984 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071970421 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092763093 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078500191 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075296356 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085395235 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070800839 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090820282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069591434 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098136121 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088172728 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09067502 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08100718 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070911319 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100602171 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065503698 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093893219 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07787594 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099350197 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071788314 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070695711 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085231551 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069119321 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091599302 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067409286 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070532617 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084323535 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077937906 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09130407 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081900466 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070746883 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092409565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071856537 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091670692 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076083312 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088825732 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07211694 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068831049 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09759833 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07262387 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096543131 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065068907 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063083238 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086779446 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078338826 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110278324 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074775498 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088388603 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070364831 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066299825 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091181656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068981395 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093281659 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074688449 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087619463 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075518869 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094434881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070182084 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070685947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095843323 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067230555 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089717225 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066897658 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104657213 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068945842 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066388405 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085872239 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078421277 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.09183223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068826862 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066429379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094730359 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063298655 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089451267 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07044652 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068045935 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098965174 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093857055 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078191274 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096402694 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.081162324 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070670885 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093756952 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068597041 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08993679 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07078034 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077376427 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.084952373 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074312668 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090079731 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0731758 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079042219 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0887968 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07161232 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09775661 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077126623 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068551914 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.088242683 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073559548 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090732624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075286591 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097722423 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071114295 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06577429 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085611062 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074266792 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089457997 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076018071 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075038851 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09474507 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065442396 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088041685 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076082726 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099102912 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071067358 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070967299 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096126501 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071887808 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088935728 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078274947 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091169822 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071425 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075808302 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090043712 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066541751 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092643147 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074193752 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069168118 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093200735 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074585242 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092996952 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072666212 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069071696 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095530356 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070944354 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088972643 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071035656 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068307473 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100496263 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069699005 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084292524 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066690316 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093190777 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067163528 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068504593 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088181931 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070802292 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088411407 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068407206 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068584393 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091116325 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079641701 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091987558 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070454321 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093809881 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08050175 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087538936 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073105403 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068182109 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089990309 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070168431 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09649409 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074755549 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092363505 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072301884 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065205026 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094258048 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076290018 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08706018 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068175606 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067867549 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092113833 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074286413 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091889414 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070811917 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066769877 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088817667 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071933637 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090652375 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069343833 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086067577 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074017209 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068149436 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095237392 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069315069 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09868994 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07249076 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084402963 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073272979 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067024453 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094681733 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06419223 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086016569 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069644252 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069592287 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087995664 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071856336 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082697714 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077151169 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075180287 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088527158 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068289243 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088163663 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075830087 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070257788 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092388785 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072984194 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094871743 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078927941 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087458454 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07341062 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077818449 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089143596 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063097993 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092837287 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068569859 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067500172 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087626688 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067060017 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090966626 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077289977 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094853245 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063538401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070730465 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087737044 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068264497 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083250516 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074095228 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071226686 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088965439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075943151 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089518216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070035679 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09087713 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070664498 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069626451 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089392936 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072269238 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088223521 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072122197 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067723336 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091150276 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068290465 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085220935 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07118058 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068306583 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08839776 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074592954 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087182574 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07018504 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07036844 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090054161 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069756933 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088200388 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069197052 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071746708 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089250581 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068666453 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089926093 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065720925 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07594538 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088628639 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076591511 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087728893 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066794789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073014046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091251298 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073299545 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088979303 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070550449 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089357557 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070259217 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071097323 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096105798 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067073668 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099083204 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076651938 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088099605 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073220968 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069330894 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090009187 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068449826 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087437495 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071350827 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068556537 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088468303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074012582 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089487028 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070942526 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069780679 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08966285 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06984159 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088300942 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064844204 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068360801 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087827974 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070004061 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09762446 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070585536 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067938657 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088125461 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069803195 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087136707 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067327959 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094669968 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078890794 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068592657 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095744305 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067439462 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089776242 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079393703 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082551103 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068313097 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066356532 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087146892 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076580981 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088897481 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078653315 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067887034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088649235 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067091964 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088723589 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069624556 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063407916 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086481158 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073054588 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066812411 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089113731 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068954223 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091078015 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070184849 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098132043 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068763631 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068970319 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089878842 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066852249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08691298 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069553965 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071256198 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.090468522 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066932708 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066292511 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089388375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069223297 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089940525 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069631901 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07010737 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096280348 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068348105 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09152826 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072906942 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085310672 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072889346 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069259071 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088854159 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067998791 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091133074 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073004114 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069913037 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097993958 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068631479 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089757661 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069611035 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066146517 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.089446089 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068504832 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089045691 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068911099 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069470725 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096842965 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066390492 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091665275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069218835 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087909366 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076493244 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068956842 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09228089 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075833333 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089033373 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071037942 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095144394 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073670967 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072053027 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089808566 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070330231 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094944231 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069298055 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094048249 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070699106 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069183818 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090355309 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0675737 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067595713 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089477449 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067843113 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09479666 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070577509 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086902288 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069688525 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067025563 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089828457 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072779226 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095415836 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07293435 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07162817 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084331733 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066421583 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089760418 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06760859 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070290631 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091844945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074235791 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090781555 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070401904 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067410865 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09812152 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074584554 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092573137 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067417875 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071792413 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090209362 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070916076 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089833278 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069264106 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088847001 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074096241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069909609 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088332961 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07621015 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091195754 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070898867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069918536 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090373128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070018945 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083735155 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071332041 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070200466 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094179187 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071262502 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08910311 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080212883 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065680386 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090137047 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07252471 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088702638 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073877534 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083157071 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07146804 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069784431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089932014 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064901143 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087515338 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068260947 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071156398 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088084579 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064818492 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098177016 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078851616 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070511982 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088491644 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068318815 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083802742 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065324804 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067653676 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090521658 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070668361 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098919224 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068770606 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067593479 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08442175 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069159489 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090814344 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072877073 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066090882 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085054022 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068211952 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091328654 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075093733 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067339833 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089424185 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071718361 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091063234 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067876535 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071628604 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08669209 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07282712 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100683542 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.07002583 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088627842 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075173384 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095198226 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071013367 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064153929 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089770958 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07259028 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088256662 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071128681 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069513288 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104225498 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071573153 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089050541 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068935307 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090322773 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069983129 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076153634 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090282042 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070136472 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0930694 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071264915 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096542273 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072824941 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075674302 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092917606 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071567271 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088583415 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069899455 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067141649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088334555 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070173523 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089905458 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074510485 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096212961 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068692522 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098416091 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078959026 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070563163 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086386292 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069068913 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087450908 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065556584 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069795332 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087327152 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068108006 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067576004 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088933552 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070182687 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094452025 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07022514 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069512749 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090073607 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064069719 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090861308 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07241384 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068724975 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086585079 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069305428 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089496584 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074319256 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071923137 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087875708 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070746493 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089958583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070768907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063864586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095637792 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068602977 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090946313 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069733689 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068633351 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091321835 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07273059 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094349936 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070275507 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090295182 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078963022 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071508295 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086981999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066592127 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093611434 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067899916 seconds)
  done (took 48.329975526 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109310955 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087073209 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064671425 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084230518 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077060802 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086067268 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066018695 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064467861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086512606 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06742166 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084321548 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065833603 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093006576 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088846738 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096521779 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068638171 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085738304 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065082844 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084744261 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066605468 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092863324 seconds)
  done (took 2.632723952 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077985194 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093628754 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075991266 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098962171 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069590914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094539738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074615584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093742358 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098005755 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0712332 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098721306 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074790135 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089697593 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070418685 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089125163 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075162154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098508614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070494137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093208372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07539802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093717404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075166548 seconds)
  done (took 2.796350516 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070319998 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068597063 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090124197 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064541439 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068268247 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084467878 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072152212 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.095286972 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072477472 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06768543 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087597719 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067665039 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.090347839 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065315729 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068671373 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086516835 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135694597 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073127378 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067736913 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09104646 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064390035 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091019311 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065501334 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063780924 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.088232148 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071983137 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089486559 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068064203 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067928866 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.088247441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068443627 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06590718 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091487299 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06854178 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088096074 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067809279 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068250083 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090112791 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064183168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085649324 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070061818 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064499603 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089632228 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069920792 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065855845 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087794397 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070018241 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088897104 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065295762 seconds)
  done (took 4.727132569 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087236192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133428477 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091440258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09122591 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106052481 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097044137 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07314655 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114936174 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065427229 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089239046 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083758206 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107989842 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089097586 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074427037 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092295905 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070596135 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069024381 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089074401 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072582007 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089281052 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071869458 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096585259 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102743316 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083587267 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092321335 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067964957 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088332258 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074457553 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103114567 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073243712 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095664253 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075374679 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.106194594 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075621653 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091343364 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072044974 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.108409253 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070233845 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095097456 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067039411 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.093392532 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072367937 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.097050098 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084911654 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08993717 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07362854 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090143602 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065824462 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10297084 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070400058 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097309503 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104203615 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07332671 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090017194 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074542628 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104058271 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068930518 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086247587 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072711712 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101321505 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067080963 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091924938 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082686764 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090613839 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076598309 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103134292 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073488011 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092923002 seconds)
  done (took 6.966214378 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078810829 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094950777 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083627099 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105209527 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09583173 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076598996 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096259258 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075702557 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095760873 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079943069 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095474507 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117797065 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070428256 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098731415 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075666177 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097164113 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075003787 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096284947 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074168269 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096508362 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095274056 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084066449 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096003832 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102835634 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105838479 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090970743 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07516425 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095584206 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083157591 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09605922 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107540587 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075205498 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095933335 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082872413 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.108080964 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095907881 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068000838 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094604726 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075991065 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097217227 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071010562 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104903708 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0738407 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09223645 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075436231 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095697483 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105994168 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.088649047 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098287375 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100457337 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077954339 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105352212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076034026 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098228511 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104521692 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110762811 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106122313 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105193022 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076733943 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106386574 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104826486 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092062465 seconds)
  done (took 6.633232211 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090428814 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099351749 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099432239 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065478808 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066562887 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094142974 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066884806 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087272054 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078346715 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097522802 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079809073 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093207806 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075813351 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101824013 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092351252 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076996397 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093999059 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073408927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098090861 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072675774 seconds)
  done (took 2.665737496 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079535105 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106092946 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07122298 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073858261 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094773229 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073599801 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093089517 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071937527 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091247158 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072180315 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099342546 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0806863 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09052447 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075297289 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10098631 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074086971 seconds)
  done (took 2.31084972 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081358246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100947878 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083096879 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091404981 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068398091 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086727395 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069750946 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064011083 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086925256 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08219265 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091492369 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071839807 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089931935 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068188385 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065053545 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094383839 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065144549 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088282733 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069565441 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104052485 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080616998 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087860243 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071145605 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06956436 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091365842 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073252817 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090723299 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067014888 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088948748 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069709297 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089627319 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077136843 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085900879 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069126435 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066810146 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088076815 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069655953 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088875472 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072703501 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068162025 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088899362 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069214824 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090293715 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071278406 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084591436 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070745051 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064766526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096280559 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066331708 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090153738 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069718829 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091174109 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071743413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079128702 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093802968 seconds)
  done (took 5.352826777 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082939108 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071973965 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086940805 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067423303 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093076842 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07193568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072490992 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093052605 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070743115 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088366873 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071641866 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091617557 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072308306 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07178602 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092180327 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071771585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085365695 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071873965 seconds)
  done (took 2.39500354 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07596557 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067990655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09792374 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06928489 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089557962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072641683 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064347443 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089492586 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067676386 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08916452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069963264 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070510316 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08871124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071363614 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089650125 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070203156 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070551552 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089336487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069532951 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085500227 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072879189 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067493119 seconds)
  done (took 2.669729292 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.0757656 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095779854 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166964206 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112485007 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084911592 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10419555 seconds)
  done (took 1.611164929 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094599894 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103577539 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070296495 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110450917 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077644848 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09177056 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071805992 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090703493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079829058 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10547526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070573693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101189043 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100720341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080511927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099210162 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076241065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092430525 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070174684 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090711163 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108046522 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073422628 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099320439 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072038646 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091226591 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071949093 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099741477 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078964937 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104262831 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090945856 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079938699 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097292776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070922965 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101345881 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104852091 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073455409 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099960708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071597894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10920138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075490037 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100983957 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07144171 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098199389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100288052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075594546 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099589834 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071264659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096716387 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069689796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092199416 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115911374 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076389204 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099673464 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096607657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080480294 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100521957 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116423958 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084456325 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100565743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096855777 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085108722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09962449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076151586 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100418176 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105715432 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077437823 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09980553 seconds)
  done (took 6.912604051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087421287 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110480375 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071206378 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10654412 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099031912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07214821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091196047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072081321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09160176 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071372639 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133158082 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070801023 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100429064 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100140113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072373397 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09155135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070951586 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099215146 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070059429 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116499587 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091176073 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079870122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100362113 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098675103 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08457019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098079571 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070310267 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092183773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07083234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092159149 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075594886 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092752822 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099457557 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07107572 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099453995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072291046 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091625483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07590934 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091748021 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076675667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099892934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109825858 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071953646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091193277 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08402207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092007169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0700081 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091770009 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070026192 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092359164 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083403892 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106416882 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105212995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098461634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072463707 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091189488 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072065227 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090809009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072120451 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097399927 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07912416 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092983606 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116256459 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071129868 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09184082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079169243 seconds)
  done (took 6.791655391 seconds)
done (took 135.842462332 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215118361 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.205957814 seconds)
  done (took 1.392782094 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071636943 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097676243 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101705899 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159870331 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091152449 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108695501 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122027889 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081925861 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06910997 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090972273 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06937853 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090936448 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172752428 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068853263 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090232588 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070781087 seconds)
  done (took 2.540440644 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104662903 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.200706988 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112621916 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06803107 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104313853 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08047534 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088798815 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080080904 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095381196 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06857163 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079030751 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099604345 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067034854 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099743782 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07386399 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102427783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06734933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101356098 seconds)
  done (took 2.677115356 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106535846 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155412693 seconds)
  done (took 1.244172668 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208874268 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127299714 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208796014 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.423916905 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.211442399 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.288069507 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182932919 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.18141591 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.170269834 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.179183216 seconds)
  done (took 3.161112725 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10131457 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174218209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318919732 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140582024 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088666331 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118963043 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141940603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111835911 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084402569 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104440521 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082206776 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100993978 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120195451 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078319167 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097085452 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080300557 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12433508 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076570755 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100561171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.0786542 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120963049 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068946173 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097786095 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077780576 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100051457 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080801025 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067739613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090184751 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077130658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098904964 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080231476 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117071137 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102357621 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134018728 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083521074 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15562838 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081519277 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094251359 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078542926 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074307003 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10106517 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09967718 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.088490998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099513728 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069758909 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078360059 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090156167 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068450901 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10270503 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079303269 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103391492 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079869798 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154004692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.080950415 seconds)
  done (took 6.48182963 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.767206856 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110612102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097067458 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.823535167 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089569486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107898848 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.723365019 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120567699 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210690785 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.78164366 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091312269 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100617161 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178399561 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21454143 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.901711977 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283192963 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646528448 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105650078 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110405771 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133747487 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140867774 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177388045 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150666102 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437063094 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076234779 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095069137 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139748496 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077001327 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163713512 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086974939 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095415581 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15471622 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225220727 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155962306 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099646728 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071341997 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093394898 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149190086 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220033677 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193119473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160431066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069146143 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098566533 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140139019 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131246441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069484554 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138944759 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174748046 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152219811 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074887484 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097536606 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143303687 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139431725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143267894 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102913799 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.264210793 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285225968 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094318564 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098934289 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105440912 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239078601 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084033867 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199636611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139326988 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16617385 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093830578 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729185746 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14762274 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094444855 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075793276 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120712443 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096988151 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139553241 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144499368 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368891901 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143446633 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073753803 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093103616 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206760803 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104530591 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074234715 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143072062 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097871532 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102325928 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168170063 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145182344 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147702487 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209288865 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142843731 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162618153 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075043903 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126343591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09754961 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190923519 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170658643 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143689561 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211964665 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14077485 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142046933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148268381 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098585543 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151457091 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120592061 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081333042 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138015447 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192511428 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125221952 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083322983 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097654549 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141295284 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129584568 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107355214 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141158759 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149406209 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455515561 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146092512 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092892261 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086632776 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140356696 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162308862 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077166585 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235119997 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123828305 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.148385067 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121570619 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070669656 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121477548 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.142230936 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100948253 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101634711 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162785583 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077679658 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212613396 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195014552 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07805295 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217622347 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16264526 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07662967 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150328728 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122457416 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147130345 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101115914 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140265503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075358929 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774693612 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146248677 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123960918 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097412445 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157262103 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094382779 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083507037 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107006763 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069333547 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765962155 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086050062 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104162931 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105689158 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076666282 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124288118 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137251446 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096130865 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140526905 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179697052 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099694667 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121093323 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082851828 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162816291 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078405998 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105845281 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084580596 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106226494 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124767286 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074359926 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106649638 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148941722 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141612399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.195875832 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545721518 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09356339 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084706259 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203586443 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07276788 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.267842157 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140156204 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199196068 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143593712 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080246767 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287655839 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144790709 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177414549 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108054397 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152402406 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069534587 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138181421 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142321078 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094751655 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076276323 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139635539 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.169011532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144129837 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9319821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072615104 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204597056 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068919037 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173306752 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077138469 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099569188 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238662096 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094859205 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148052727 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142968828 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096315641 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084209794 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.676065222 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107258038 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140999848 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099971987 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171334957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166054462 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138098622 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140907646 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076020731 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163183883 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190991438 seconds)
  done (took 40.873238757 seconds)
done (took 59.35144258 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266511464 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183506663 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.247701104 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147865287 seconds)
  done (took 1.92623092 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.148678757 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10584646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121419541 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089683365 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104932654 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090609801 seconds)
  done (took 1.665467793 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.416059578 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277686025 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240884692 seconds)
  done (took 1.940933964 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264316361 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216729546 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45832755 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.305115861 seconds)
  done (took 2.38322258 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179161773 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11740175 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070038484 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111632255 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.162004361 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.264873584 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133814384 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195542372 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083051334 seconds)
  done (took 2.372586057 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200964116 seconds)
done (took 11.499520136 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.162816009 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.215602927 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196512513 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105245091 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.344870741 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.313989503 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095296059 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.102654643 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115168792 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.250164046 seconds)
    (11/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.281429161 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.103038038 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074510024 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.203141583 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.140765872 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080347435 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.104010129 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125271217 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.220581198 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.103690135 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.255379142 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.27501849 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111144647 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.204814264 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.265381075 seconds)
    (26/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.242753458 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117421499 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081480564 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.102720576 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.270799672 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078503624 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077367338 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109599834 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.222423773 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.131109164 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.268650603 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.257013944 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.0935815 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098792775 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085471455 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099905994 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14484663 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.274923861 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09888362 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.150553831 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.0982802 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093446709 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078951034 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083316898 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.190546651 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177905419 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095470848 seconds)
    (53/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104800729 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081590934 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104558357 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073344444 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.18178544 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091084739 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077894961 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171265969 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089078798 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076323491 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.288665917 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.175227105 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093551486 seconds)
    (66/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100639527 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079845292 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.220578286 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099067648 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.11120882 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091643256 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070741134 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.141467945 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.215652493 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.107002433 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.241109419 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071111677 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097961496 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072761208 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.119629962 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.236200638 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.124526695 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100220771 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066957673 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098771812 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092035483 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078067261 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073144394 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.242531283 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.271186147 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.067679356 seconds)
    (92/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.101908577 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159201796 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096462116 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139887439 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 0.153695299 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080145067 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07894867 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.134228997 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097355449 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 0.242776487 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147951903 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.088633362 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084442224 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194053494 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121266885 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114921378 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053951847 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176904773 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053924699 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204053719 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.153785194 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073484548 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053519827 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079150303 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076814539 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055271228 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095283516 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054863054 seconds)
    (120/309) benchmarking ("sort", Int8, false)...
    done (took 0.167313019 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053827935 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172931942 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054866509 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093670991 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055839653 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091209509 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098736945 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.253642967 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095617788 seconds)
    (130/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166868646 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110470791 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115648911 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118742017 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.138095817 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100974967 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054719589 seconds)
    (137/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06925151 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118622085 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12079261 seconds)
    (140/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056158283 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056528404 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053201575 seconds)
    (143/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.136727838 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073658806 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.103867921 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094018896 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103250595 seconds)
    (148/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076665783 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120181474 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08034105 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.250715634 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138222552 seconds)
    (153/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143454396 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099997165 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091470493 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053682737 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095821927 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111623703 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091878932 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082891608 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100904741 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06902457 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075485846 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100528232 seconds)
    (165/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.221799457 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101377517 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066100274 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071693924 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12289884 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.176289621 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070524963 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078224803 seconds)
    (173/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093279209 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06818644 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.102669758 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055425474 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109065846 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079223337 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078319938 seconds)
    (180/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092551267 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073975632 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090780399 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064251652 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.408882505 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077549066 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099885916 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099767351 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056813945 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198473896 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067746881 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079685108 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055654953 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055571716 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114550922 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055184497 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076046787 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117131847 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075401452 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.244403454 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074243606 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076812057 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072532193 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077350462 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122070547 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205086408 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069362701 seconds)
    (207/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.244943949 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054246942 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095350867 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080881685 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089445572 seconds)
    (212/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.077225358 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.078854695 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066545921 seconds)
    (215/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077921248 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05500613 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067955651 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054142777 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10088443 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109848384 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07877142 seconds)
    (222/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092868977 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101275021 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076822652 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156717359 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13936988 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093698652 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068450633 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140377756 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102758417 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067479486 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098842161 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074418244 seconds)
    (234/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199440005 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066602682 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092835976 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143276066 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092875431 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056003246 seconds)
    (240/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068659553 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.169653161 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067111862 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.0936802 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054547459 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054800863 seconds)
    (246/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079167719 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068304127 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066822267 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131616469 seconds)
    (250/309) benchmarking ("sort", Float64, false)...
    done (took 0.153013204 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069374499 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076392075 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.086907927 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055930324 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055155095 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053386557 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092730789 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067813755 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066525738 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093622407 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070222726 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162139066 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077598795 seconds)
    (264/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09826841 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056166318 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074983726 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099957796 seconds)
    (268/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069508306 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064443275 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078140762 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055953762 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069806121 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090888077 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068887361 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053979965 seconds)
    (276/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.125647285 seconds)
    (277/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075045331 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065361068 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07865303 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076709436 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066569572 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.092021232 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054025757 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074343622 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.101170163 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070038594 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062874384 seconds)
    (288/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129118105 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054021409 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093904808 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055836048 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092679033 seconds)
    (293/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10948993 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068940128 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.100205765 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074539681 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065094483 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.09138661 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064940035 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056280288 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053601805 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149717024 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16668137 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071130278 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073200143 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079665569 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067974254 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055141125 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08093391 seconds)
  done (took 35.954765316 seconds)
done (took 36.972963292 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084500441 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117386154 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078920238 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118674838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08410087 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103967182 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075964289 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07993829 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.108249425 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084227645 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106226837 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056749861 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101807998 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076969768 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101163025 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094403453 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105466152 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075746171 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074837246 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.092789156 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075789902 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091922388 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071571893 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056736559 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104572496 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07560736 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073812133 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.103031042 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068395385 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092401166 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072032923 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074325259 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092626596 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081882252 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09790179 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077161068 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077106116 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104634375 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069790695 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091677865 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07735832 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067322822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099106316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076541131 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07374228 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099020832 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076223969 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106636187 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093098462 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095470179 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077041639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102204344 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080432727 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074373268 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.097966035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076514482 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.097194678 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094976067 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100136084 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071760692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075727299 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101725895 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074280182 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074939166 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.102316762 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077357033 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.103293605 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07354332 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101429818 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074623608 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067464089 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101026603 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071587048 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066927787 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103060682 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079297102 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091728548 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074697511 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073915025 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098994415 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067600663 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069141987 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094780982 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074432161 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093411048 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057946512 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071515501 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097706523 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069356575 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076049854 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099331801 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074832889 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069780993 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104394991 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067112457 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097720436 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069075789 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067075075 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094697508 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072617173 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066700671 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094726656 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077189213 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093703335 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075898861 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081207147 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092724235 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074141863 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066760338 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092636152 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082903346 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102730888 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068795458 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093555012 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068934958 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074596272 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091127326 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068638079 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066913961 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092310248 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07445813 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067738637 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095244883 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075585535 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105865499 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068866817 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071257779 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095177763 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06894134 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072827372 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092968061 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068445635 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069634265 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090794025 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070131697 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091796449 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076700045 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069751197 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.10089284 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070699242 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075702018 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098017645 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07381063 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097374678 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06877207 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06087484 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094878991 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071587297 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069792334 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092445405 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070745927 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067337819 seconds)
done (took 13.730640866 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069932421 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171907492 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129152513 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099179234 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113807104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068901336 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103517414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104931044 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095134767 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129941067 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090840535 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110923311 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116448425 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092773721 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068371588 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071686162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.095373634 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089806164 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129822583 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111648176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1186214 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0928799 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124212557 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09384705 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115576298 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104565998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093532704 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07286931 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071236843 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119985721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112138982 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073451468 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068138216 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126051563 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121194668 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087602607 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092745885 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087175219 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091876473 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069450635 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117846809 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101712745 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10881728 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083003761 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100098265 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071202438 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093690126 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089498904 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117463789 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082182446 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1158529 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137228034 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070739991 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109578231 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067309073 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115284433 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107155331 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072598987 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068636597 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095262836 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068827482 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071397319 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116229219 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118996783 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072300045 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108728339 seconds)
  done (took 7.557587073 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087071293 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120514225 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086637992 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110574681 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068814653 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068010168 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094400124 seconds)
  done (took 1.71460936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070007747 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090238593 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11657063 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090793079 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114690029 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088429434 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104303327 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069226053 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111346241 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070460453 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088998456 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132285825 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069934184 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.1021818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091957634 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094721008 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092161433 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094511245 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07242985 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116887421 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07312081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112521421 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072544569 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068249424 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108659167 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069897953 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141930101 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074339409 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093882758 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073790157 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067667787 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143149835 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108229153 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081312293 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068605698 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109277053 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084429663 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09204629 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086371846 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098334286 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084860126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069571058 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096155347 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068098823 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073125032 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105451903 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070410052 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095385406 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072864986 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088663202 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09494533 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083464183 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094302062 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074333523 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069845943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100783297 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079047246 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094450397 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090574469 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0700575 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112216803 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085012952 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109114311 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085395358 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097299219 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083903241 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108290222 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072959221 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070314511 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09862405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085436247 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091899463 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071446209 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079386409 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097092522 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091956564 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.117453036 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071123998 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103657549 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070650245 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069007464 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094435241 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092546445 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097338537 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070883532 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073154552 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097992374 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06799151 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067221888 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.097655741 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068497604 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070009556 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098292573 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069716274 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096480967 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086832258 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068975807 seconds)
  done (took 9.662436011 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071246465 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070059618 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096479218 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070205118 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069477389 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095906568 seconds)
  done (took 1.566813928 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100494386 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096938467 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083473802 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099597775 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109237917 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108813813 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085180348 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110299218 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087373341 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106682317 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085208212 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.11016528 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089342341 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101745646 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083860408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100183883 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084844917 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104400992 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081709752 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099934544 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091364836 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099190779 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077316544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083789771 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.099219587 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074519347 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104844613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081348985 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106550683 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084352196 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.100837161 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073453324 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099307542 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083684746 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.1097665 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074073696 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100448227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074748495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103457757 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07445909 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109302519 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077381934 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078953329 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100412609 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10823394 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075612878 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07361432 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104428981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083318466 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09984784 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073828797 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099660141 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073293303 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098722929 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075793495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108855098 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075399221 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108743801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076722615 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073587413 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097787832 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072923449 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108872463 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072338932 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107908685 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07365786 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099497683 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075780439 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100221743 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076564175 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073720416 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097956634 seconds)
  done (took 7.653587428 seconds)
done (took 29.233249972 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673861215 seconds)
  done (took 1.766118611 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.800842901 seconds)
  done (took 1.894738883 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.235861165 seconds)
  done (took 17.340827758 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.643240967 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.788385021 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.82616718 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135642293 seconds)
  done (took 3.487234656 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.92280497 seconds)
  done (took 2.036770198 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242275851 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227937576 seconds)
  done (took 1.567261869 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784715531 seconds)
  done (took 1.895461639 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.342422445 seconds)
  done (took 2.447745327 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328241542 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183560354 seconds)
  done (took 1.618815903 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.536306193 seconds)
  done (took 1.641557666 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.430691535 seconds)
  done (took 8.540643732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232867201 seconds)
  done (took 1.351402598 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272233215 seconds)
  done (took 1.383193624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.450409175 seconds)
  done (took 4.560869115 seconds)
done (took 52.630841717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081153547 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083129952 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109466041 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080094967 seconds)
  done (took 1.460220545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081875053 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074374032 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105694575 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074689085 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105756127 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076050416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102822308 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080464716 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073907503 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103211849 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074878086 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100578605 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078331602 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101924936 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074792374 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077054241 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104988884 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075643391 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104777647 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076612972 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.0730132 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102986719 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077147142 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100334242 seconds)
  done (took 3.218977537 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080689907 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074011525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102826704 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073887062 seconds)
  done (took 1.443968507 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081320129 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118258018 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092911442 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078115087 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.121039792 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114581724 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073236631 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07177111 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100694942 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079282908 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095204466 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100737976 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115600511 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07973868 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106019142 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.0694622 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070455681 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.116100384 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079012329 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106085848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073771788 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081699695 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097610062 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091919136 seconds)
  done (took 3.333255471 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080825122 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10522569 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10677444 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090351752 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.121149021 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0666684 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105446951 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093053468 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154505106 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066821385 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100134624 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067972079 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099852002 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068983726 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07892021 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138265872 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11407705 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.097706368 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097966529 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.094901369 seconds)
  done (took 3.070598924 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078452849 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071922423 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093045232 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071102879 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077855816 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100688166 seconds)
  done (took 1.614521752 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071583119 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068837415 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094984017 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070108881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073429301 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095588703 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068858048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068448677 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09523716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069333532 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068384561 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094530324 seconds)
  done (took 2.059604409 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.44112168 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072367128 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096405298 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069355401 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072605386 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094556652 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082761338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069531784 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120418189 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068739728 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095666438 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07171609 seconds)
  done (took 2.480198059 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267085215 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079864057 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329173533 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171202448 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143644763 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15798867 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105574075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144049476 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200806451 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141394232 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202250801 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227675173 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137800233 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170638258 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118825683 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1082034 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215271108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224899292 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107407771 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229214915 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209658193 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159072602 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183429274 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132749241 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13824013 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153162071 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073592293 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110138495 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234478368 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163226662 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205414168 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141322706 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098887003 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235352268 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229535986 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199883203 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165656017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088290641 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160879622 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169575536 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261417568 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117869234 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196909512 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137949658 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109556841 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177003336 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149333746 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150421851 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139456602 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117628443 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178518144 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244936555 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168114562 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116525545 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140497298 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145405126 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146097575 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106105247 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246208284 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222308022 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161575654 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100169464 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09998094 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216288554 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163348014 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145173552 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156707979 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122566609 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169784543 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216357546 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150077392 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176095001 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187868568 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091415426 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150562358 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200191479 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159449958 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204698974 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182026459 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077397569 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15541667 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133460204 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083770564 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174216216 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077109395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237497072 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129014706 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141857187 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141227436 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136981913 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113421652 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224545786 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205348139 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106689042 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095503055 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132673797 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152630285 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178895828 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118104384 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110116629 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17770827 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081307279 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169109494 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105509943 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154659357 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080210003 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181503291 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166199969 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078836422 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158975454 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131743006 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131041438 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167237402 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223375509 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092452899 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112587502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201653805 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184184278 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109168385 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20598085 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191475152 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130820078 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133319463 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205772318 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244477563 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093970814 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226916988 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138453809 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087579964 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117365586 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158937919 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143366159 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152352088 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084688724 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181617712 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204316864 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104837822 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097984317 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195615232 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085690038 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110799885 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143340263 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130793131 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098625922 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130968894 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13670547 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171723602 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156697884 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13772922 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155247549 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128447037 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22966668 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118717864 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106624459 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134087281 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098636811 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168597139 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218409052 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084411673 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227937285 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157214846 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132958 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15122968 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085848284 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170764214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108655556 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073343118 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20399904 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140695142 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111945628 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214546733 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133457593 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158632828 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154116341 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165491216 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161705081 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.192381404 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109076365 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117745762 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143528911 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15645722 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102551119 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09721874 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112775682 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134166058 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125253419 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087279916 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172688747 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184832099 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100393662 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143055148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127092579 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181342193 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107658074 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160972209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.150292048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123857985 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187740834 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216656779 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168039486 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130110783 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176659634 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100887338 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076667217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121116087 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158682235 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113084894 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087031267 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147568161 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208815837 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161714252 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170758738 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140924055 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152148132 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188472958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101906804 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118635571 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209966864 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156325197 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162332574 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094588013 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129426281 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1765402 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13915918 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246576464 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1458715 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154632953 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212627836 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133438184 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083009885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136128139 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16873836 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137435679 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212250469 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128756346 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09152562 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140752714 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111102226 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133324292 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159549938 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151089148 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167141667 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14753762 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191570911 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080597059 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153786667 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154110636 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15462191 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094101676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152420587 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221055456 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098824223 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148710788 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215898338 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081712932 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155028617 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240424351 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204700472 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087337078 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140656863 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153233917 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160892911 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149811314 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199869957 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141831402 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16818915 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139447063 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089920531 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117001079 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100698649 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138089439 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125551786 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142147384 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14739186 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124135671 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163523309 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142559371 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14072941 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150746262 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.1006932 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122433235 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127417059 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211288974 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153148067 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234668792 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131854954 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210180247 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202052983 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106515039 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08111159 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110658164 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172560375 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115101398 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166619479 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125214971 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109311332 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158011246 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202912201 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096686477 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099058738 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141353521 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167295986 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141913601 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127973801 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108405716 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224960358 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133591544 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081088882 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155457332 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136233401 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132849725 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239387762 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064779959 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129235805 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079103556 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110916359 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162602685 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217540089 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086451017 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1598828 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154164265 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152180309 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161703113 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1324538 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099516619 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144014555 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211087612 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16166461 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119396544 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143364766 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163292935 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189364447 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13619243 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126576842 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234842245 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189576159 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226174163 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118566546 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146929741 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147490383 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112599862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202387422 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11307445 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201723099 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114475058 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16727695 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13575663 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123740661 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161124675 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127287187 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136820637 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1833612 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152179409 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112622976 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083580983 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149327136 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15457211 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138192925 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.105713673 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171438298 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074728374 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198237884 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20378782 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11334037 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137843116 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125763813 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086804782 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139401747 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134366265 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116293965 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125514061 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239562195 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121542476 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18529005 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202004186 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145838355 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169965124 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132224247 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665898837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080456191 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217562418 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152222005 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241774073 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128790375 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152563278 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141303986 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155335239 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176998467 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136578217 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208156499 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164728073 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151731396 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109933535 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133995934 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142196989 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094263268 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138348466 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145964406 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147785564 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131607227 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152548009 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158205078 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112710201 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097256315 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222172256 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148923089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174659979 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202852191 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087752931 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150543706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203244037 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081930084 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181909842 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191103281 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138952714 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129776577 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083222044 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136060376 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236520262 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.10298128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198088892 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155554434 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142740452 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146352518 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176317182 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168221984 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139249266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15852355 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125480644 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143984101 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147403004 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087428448 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108738078 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136156952 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14584975 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103236189 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132494684 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.151480587 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191020972 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100852238 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098897588 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134208805 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175092091 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24158265 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120670594 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084933233 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178489998 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146073259 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148377991 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157887013 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084402519 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114444799 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083800253 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.145420114 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142787149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148538608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106212682 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14282509 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231840058 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115115552 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227637735 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126886025 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138334367 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072325045 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110670564 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127659432 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100105134 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139660492 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129401041 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236336174 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100413196 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122044989 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123884911 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076291843 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112988259 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16329528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14266744 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154227462 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128973444 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066255553 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141295347 seconds)
  done (took 72.913731118 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208962278 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.200975523 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144494717 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2050052 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169118663 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.319258991 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207865826 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274153869 seconds)
  done (took 2.931007788 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073491906 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.123775389 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103377002 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119428635 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09574485 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072019199 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304635569 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113053662 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069052617 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120685071 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122006229 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098229214 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.484622454 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067689879 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09822566 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092663771 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071316402 seconds)
  done (took 3.432531432 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.440010325 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.685289532 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.465886458 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075884791 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.199762197 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114526309 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.715691682 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.175291167 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09809264 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.461776894 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.732953095 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162905158 seconds)
  done (took 18.532127706 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078803291 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071258943 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113827772 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086029003 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102464056 seconds)
  done (took 1.656909467 seconds)
done (took 119.255808214 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083360218 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.35491085 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055367114 seconds)
  done (took 1.649132263 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086833464 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085744893 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116063699 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084444209 seconds)
  done (took 1.585192184 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077712856 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078061169 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114682315 seconds)
  done (took 1.481463043 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.287913666 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170511234 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093190237 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086423611 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080380167 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108737625 seconds)
  done (took 1.488615239 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075749099 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07693151 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103200491 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078509932 seconds)
  done (took 1.54047063 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079710957 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054557084 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056542791 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086483413 seconds)
  done (took 1.490142433 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093083648 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108359203 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083805886 seconds)
  done (took 1.494815385 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110085081 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116874607 seconds)
  done (took 1.439410934 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084855363 seconds)
  done (took 1.292992418 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094487212 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.144706447 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.159391797 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139442024 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.169713579 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139831365 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088112424 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118951917 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107805914 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090351871 seconds)
  done (took 2.466263682 seconds)
done (took 17.766482506 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081263692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.491584544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363922968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12033521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67084173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358586309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.007764356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121429552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123116372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098362781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08632729 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687048275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969245837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.448110457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958967551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326103545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680976326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070191368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068845243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098661731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964169537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098366392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06996294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069196415 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680445057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372665272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098879461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327664546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069209597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099888139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356819068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097791331 seconds)
  done (took 16.341804558 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073321667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146194293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075578192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084657165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101398675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072026681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101552685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071176789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155984638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06951629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115027174 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069621559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100448649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072779772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088300212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098910905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071440289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068801812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098578957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070567619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116348181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070174259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069575366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099382778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069552083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109684479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070914698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068887383 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098868465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071972655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10088222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071533173 seconds)
  done (took 4.036865635 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118674203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.156132146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076286282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133187291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114722182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101063096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173528381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095648299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159778747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069196887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115949975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070175257 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131688367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071703973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117246154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070603815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070235474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099543538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070774937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09830925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089826995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068684954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098985967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070915734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098828871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083331177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096481673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072246792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069835587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099980169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073464672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070296809 seconds)
  done (took 4.329406037 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075828243 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076641174 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113169574 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085987461 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099283582 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075337343 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075126659 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100415219 seconds)
  done (took 1.926683678 seconds)
done (took 27.851399838 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082773416 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071983053 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104600428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083601454 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101591456 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082385845 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069081707 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105107169 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079045167 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074282446 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106981559 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068848635 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101617561 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070101664 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076002843 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09939638 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081627679 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101314229 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082714403 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080660052 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.101815546 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078883617 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104172847 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082135717 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108747035 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082659284 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083388985 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104537078 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070917239 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100845994 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079929267 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085330387 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099796593 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08045171 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099117553 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070578617 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069583213 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099141158 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081464677 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103873688 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073501821 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104164389 seconds)
  done (took 4.902287367 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090917892 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089692895 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116486121 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071345391 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102220843 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064740062 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119825546 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072685218 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.096636238 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092011862 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057925559 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.089375017 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073807072 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06274449 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.098611267 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058974749 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060765551 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.086950767 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062892277 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06082189 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087081128 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057414994 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062507707 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064555574 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.087483973 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064567358 seconds)
  done (took 3.278565321 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078658829 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085700329 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119377318 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129966721 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138002466 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079613624 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109782076 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089780793 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.118840937 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06890213 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071961111 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128950728 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089626641 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105904798 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069261109 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118359174 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084622484 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071008398 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104910828 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092870281 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115393789 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080101425 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.12383525 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084473445 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069097603 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101156433 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073417849 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111194244 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075897057 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077681222 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103140218 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073473854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099950563 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08233878 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072979749 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.100982728 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092345074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10803066 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080986022 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069444651 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.103504078 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070281998 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118852875 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114212562 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097315445 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077484345 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076139464 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.108542 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069358667 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117097859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079700784 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06789697 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.102218985 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069357939 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069451519 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112764992 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071184879 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101145492 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078870035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072311839 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.113253767 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073144055 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114303063 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070390395 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105302952 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070339115 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070461902 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096881854 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095677513 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06990827 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142227687 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06985253 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.100631666 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07898884 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1061681 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076025908 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069574381 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114765923 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079323116 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102010173 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078700025 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.111294382 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07433816 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091210702 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.101629429 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072551309 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069809655 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.105114469 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072003433 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099450742 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084106917 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069348274 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101939559 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086046993 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097995243 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072756479 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074867319 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104361482 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069699424 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109810674 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075719256 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069550726 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.108502952 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06928457 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101567602 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080030225 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073390968 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098470802 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074359665 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104621547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070710059 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070364219 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102400422 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071793016 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.107392622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077619881 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074699164 seconds)
  done (took 11.762478144 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.19712668 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.190682154 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073045086 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.183804019 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077221991 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111208752 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184710607 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097551477 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099583014 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071422143 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0704876 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.134236452 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126211649 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.109521928 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110733608 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069736523 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116879754 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107056744 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.186130185 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.179679662 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118014959 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079354733 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071546611 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.100963259 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072480941 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07832187 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.116529038 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078259045 seconds)
  done (took 4.454083129 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08428093 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.141004994 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076483278 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093313892 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124506541 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069475841 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105935498 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072579451 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111915245 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081841395 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099216984 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076517016 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075908255 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109337672 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070615429 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108566947 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080789098 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071201297 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10322546 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075977158 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.111059825 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082508685 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102882748 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071045232 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075606659 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09852723 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066917625 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116885955 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070458673 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12261784 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069637352 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075295635 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.119690371 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070605128 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09854487 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07417335 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072737652 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.10286036 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071797829 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068124403 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098752162 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059848159 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068362669 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.112207169 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075391759 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.091414839 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076755616 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10414212 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076829798 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067285879 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101352583 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074213452 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072253718 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.113410417 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075554753 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103624937 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075810339 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068078779 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.107200184 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074578347 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066463473 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098357587 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075627233 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096730737 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079308401 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074534137 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097696705 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074304719 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074418619 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106890422 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073740742 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.100821212 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069033076 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072207823 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.104177887 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074436016 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074051039 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.098860058 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070804528 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070021299 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087754552 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070070321 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055539346 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102787865 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068644592 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097055133 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074461113 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075301172 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112491273 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071156617 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105551909 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071356426 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068671179 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103195858 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066137874 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101150887 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.090148428 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11484549 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07102565 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067828846 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.117162269 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075542637 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097587545 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059837537 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076821936 seconds)
  done (took 10.277104477 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100862908 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093640042 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102047882 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086085912 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128509964 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094897311 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106881762 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07654599 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071178588 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117066453 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069637774 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107450871 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071595199 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079004417 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129294525 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078013365 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101425307 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079963455 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073287158 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.141122453 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085321788 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114273476 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.084257185 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09957625 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075657483 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082364727 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128530399 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082893416 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111224747 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.089301207 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082326359 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.129406351 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.089699406 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104178314 seconds)
  done (took 4.519415434 seconds)
done (took 40.412472844 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.30146986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.552904307 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.2953101 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.325585331 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.305394182 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.319083068 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.311056543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.297844528 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.870836374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.298340521 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.515823754 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.036096372 seconds)
done (took 60.675002374 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.406462528 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.433770423 seconds)
    (2/2) benchmarking "String"...
    done (took 1.566742687 seconds)
  done (took 4.256655181 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.665698373 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.337405285 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.582882423 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.29763058 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.3160551 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.716299003 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.083553229 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.222620448 seconds)
  done (took 28.79775141 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.299935357 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.697692398 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.053675746 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.052806737 seconds)
  done (took 19.347941764 seconds)
done (took 62.717289188 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.284939316 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.316832624 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.336042394 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.28173286 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.414482436 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.328251428 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.333659386 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.35448364 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.311020117 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.289074473 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.296826394 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.30488777 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.315839366 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.370102222 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.296924765 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.307630391 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.347496249 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.877469384 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.707967888 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.30249087 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.33115973 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.339495871 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.319737736 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.301751332 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.35439044 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.296881546 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.313624733 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.310463403 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.839524504 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.298550401 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.304508444 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.570878755 seconds)
  done (took 193.2008187 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.298372803 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.208833173 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.287982417 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.315548498 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.755727434 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.498653136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.434711805 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.890288971 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.318862208 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.319881763 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446398783 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.297509686 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.496599502 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.265946346 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.305425973 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.407672892 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.588319301 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.525366898 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.31752911 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.575606946 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.313515169 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.410619571 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.413829024 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.428360004 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.331331147 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.37621324 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.307302266 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.325488571 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.490649973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.515095585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.315356784 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.318759966 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.939744618 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.158132421 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.300587715 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.30226066 seconds)
  done (took 153.043718447 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.607591855 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.299025467 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.298313406 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.299081992 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.330423774 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.299517214 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893399084 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86739263 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.83923494 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.351859569 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.361527924 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5609269 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.299356318 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.393897696 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.31354057 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.299912056 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.314515969 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.325336239 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.299649049 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.299411354 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866369986 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.31291401 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.815357532 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308091897 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.300561596 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332107623 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.696858564 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300974825 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332327107 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.626371023 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.35161955 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300657201 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.673808963 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.248311024 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.412776459 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302529239 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333785976 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.300417427 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.574487071 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.300933746 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.301816598 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.303556527 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944176299 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.303458142 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.895145222 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.304498291 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243556827 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.301441101 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300302215 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.945205062 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.872128749 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.303268402 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.300764526 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.303210234 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.301135738 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.301558649 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.334630778 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.00511598 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.40527491 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.301894206 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.30472176 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334664098 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.301892156 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.302862219 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.406013162 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305660704 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.558977923 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.36269511 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.40872563 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87007348 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.300917542 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398216716 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.423194439 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.302279942 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.302257795 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302199624 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.302936874 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.411386976 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.302408681 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.738858359 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.302592006 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.307782709 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.304003429 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.362711566 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.39795864 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.302643447 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.668985458 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.306033651 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.303393861 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.07986308 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.303352784 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397394912 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.303277119 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.303301764 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.302635789 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.738583471 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.872254085 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.570555728 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.305944104 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.30237216 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.214110354 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.310765701 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.750081909 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.872115775 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90391732 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.304680767 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.414168407 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.308574099 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.305893064 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.304003365 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.332988025 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.305820526 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.367149742 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.303843351 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.701199066 seconds)
  done (took 358.534666409 seconds)
done (took 707.629522718 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.012132617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.993410686 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.116176492 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.987920868 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.968629398 seconds)
  done (took 11.326319384 seconds)
done (took 12.575290678 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509675471 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512173001 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372778686 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51091026 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.339365347 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529287576 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.490409229 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.327986023 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41425843 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.389258183 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413544884 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.359879727 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334016284 seconds)
  done (took 19.751897236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.627832602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.627573499 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.367454098 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.63160572 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344909187 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.637092453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503706893 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.520035999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501425359 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320372679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.32051709 seconds)
  done (took 17.652478132 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.63815394 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.631411758 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372744019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.634267656 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.346157241 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.640301811 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.504993571 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.519160082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.504642258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322427988 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.320740677 seconds)
  done (took 17.685253564 seconds)
done (took 56.338423839 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.317492929 seconds)
  done (took 2.567015842 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.354028719 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.521112537 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.333901725 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.319823775 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.316641223 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.316531586 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.320804876 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.317286372 seconds)
  done (took 12.052392781 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.315744 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.316260565 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.311845345 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.314445711 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.312762346 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.313254913 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.315947692 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.31255552 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.316053611 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.312780116 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.313233014 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.314871546 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.312968965 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.316379903 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.316220947 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.312702046 seconds)
  done (took 22.280233745 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.315399359 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.312518344 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.312213177 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.313245302 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.313176013 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.313619875 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.314623507 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.313231093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.313440342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.313254212 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.314330232 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.313221291 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.313425843 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.312642939 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.313507202 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.313962013 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.313453445 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.313656723 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.318119818 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.314091585 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.31460953 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.314434043 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.313384956 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.314670336 seconds)
  done (took 32.786765295 seconds)
done (took 70.937771147 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.560275412 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.125607381 seconds)
  done (took 9.937735735 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.317318008 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.316855373 seconds)
  done (took 3.889377586 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.316723642 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.316974089 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.316805201 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.316922055 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.317505395 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.31707304 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.317150504 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.316241556 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.316917931 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.31799867 seconds)
  done (took 14.422993785 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.317725445 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.316192647 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.314571988 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.31806856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.317256537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.314239934 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.317230031 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.317830969 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.317579944 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.315923067 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.31757523 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.315989374 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.317931108 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.315552821 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.318292341 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.316325866 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.315558609 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.315176589 seconds)
  done (took 24.952621552 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.318472669 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.317633272 seconds)
  done (took 3.890033727 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.316595207 seconds)
    (2/7) benchmarking "second"...
    done (took 1.316219059 seconds)
    (3/7) benchmarking "month"...
    done (took 1.315719018 seconds)
    (4/7) benchmarking "year"...
    done (took 1.315757901 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.315355663 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.317009304 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.317054557 seconds)
  done (took 10.467612847 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.320009581 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.495480249 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.576026985 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.894946377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.319682567 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.322343142 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.1679379 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.322348561 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.32466037 seconds)
  done (took 14.997823596 seconds)
done (took 83.810785598 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.345004157 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.3114687 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.274463852 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.319879687 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.343023827 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.611072595 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.329691137 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.439682686 seconds)
done (took 38.229212621 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.329700874 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.024320364 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.06924818 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.331992757 seconds)
  done (took 11.681711373 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.310582648 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.305209228 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.311148947 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.38393077 seconds)
  done (took 18.568245672 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.958529941 seconds)
    (2/2) benchmarking "read"...
    done (took 1.647091887 seconds)
  done (took 4.862764764 seconds)
done (took 42.698199673 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320352086 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.320305875 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.317665879 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.319978884 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.316991148 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.317418825 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.319809019 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.319621882 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.320886713 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.317768674 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.320478916 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.320836244 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320647571 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318196613 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318397957 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319804533 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.318401825 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318112227 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.321777546 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318403465 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320576763 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.317289787 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.318345845 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.317752815 seconds)
  done (took 32.916337394 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.321505736 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.319232351 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.320946621 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.321705264 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.317761079 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.320696802 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.321013841 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.318779854 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.32095112 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.322951865 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319408875 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.319848515 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.322077291 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.31914438 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321678233 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.319169149 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.322073737 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319487316 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322000226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.319379433 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.322762512 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320949603 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.319327881 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321484229 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.320983737 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.320989179 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.321983672 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.321136389 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322753582 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.320860276 seconds)
  done (took 40.880693175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.327506686 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.331458047 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.32332571 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.32243105 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.322863969 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.324096204 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.322771758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.322922858 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.324035946 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.323380043 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.324536057 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.323420899 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.323180556 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.323680963 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.323898819 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.3238566 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.323584249 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.323749358 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.324153758 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.324479646 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.323652274 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.323452409 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.322757819 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.324240258 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.323579156 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.323780496 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.325073777 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.322844371 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.324197245 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.324462239 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.324675155 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.324050235 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.323527625 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.324194762 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.324158069 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.32452607 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.330955957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.332673909 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.325428772 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.324447773 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.323821668 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.324311508 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.324348646 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.325464385 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.324968164 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.324983276 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.324230716 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.324818161 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.324480924 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.325228474 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.325890812 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.325228119 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.324577575 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.325709043 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.325420423 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.325184165 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.325066794 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.325358655 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.325518884 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.325893811 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.325650283 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.326298097 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.32588832 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.327322106 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.325663237 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.325722814 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.326224862 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.325966959 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.325540114 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.326798038 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.326729939 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.326798273 seconds)
  done (took 96.657038378 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.326424748 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324936135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.32299616 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.324007501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32442281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.326801983 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.323854812 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327172986 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323878175 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.327391709 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326884076 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326126109 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323716552 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327566504 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327925251 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.32461682 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.326617291 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325082223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.327386308 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327585158 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327130676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.323630628 seconds)
  done (took 30.428466546 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327642134 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.327534046 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.32521833 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.327008394 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.324512905 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.327363784 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.328000818 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.327418727 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326868308 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326294509 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325671439 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327975506 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.325395783 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324938571 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325710295 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325071064 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327489731 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.325176709 seconds)
  done (took 25.139183551 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.326391774 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.325630387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.327955573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.325451063 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.325710689 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.32804397 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325942538 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.328692624 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.328130097 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.325986095 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.328548054 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328940506 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.328775217 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325557615 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328355639 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.326859198 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.328927406 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326727736 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328651752 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326288512 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.326416828 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329312404 seconds)
  done (took 30.466303937 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33038016 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328714344 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.327175368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.326147816 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.326864049 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.329443557 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.330128019 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.326726634 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.329585617 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.329968007 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326532088 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.329206901 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.327298481 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328467075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.327562926 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327305839 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330566444 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328919276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330985434 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.327374652 seconds)
  done (took 27.835497507 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332041641 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332151635 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332365818 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332148551 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332538062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.331550901 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332689417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.330985695 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331547233 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.333106475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.33255184 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.332084565 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333210074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332604009 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332307199 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332955014 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332564276 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332610962 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.332612201 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331607826 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332634217 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332073147 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.332683868 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333109619 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333533103 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332535403 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333227642 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.333600574 seconds)
  done (took 38.576453926 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332000268 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332272801 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.329287851 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.329261922 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.329723819 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.329954451 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.330111126 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.330215728 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331970475 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.329358308 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.332571135 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.332215337 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.331860582 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.33216878 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.331324799 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.331832994 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33248845 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.330557197 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330493774 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330053073 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.332107907 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33191483 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.332759213 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331183507 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331002561 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.333595006 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331129411 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.331446816 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33356702 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331451686 seconds)
  done (took 41.20853051 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.352004769 seconds)
    (2/2) benchmarking "in"...
    done (took 1.350879474 seconds)
  done (took 3.971496679 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.331084051 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332999832 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.332856173 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330608072 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.330935616 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333464991 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334220153 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330677604 seconds)
  done (took 11.926233603 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.334032998 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.333982503 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.333893341 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.334134531 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.335046942 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.335302047 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343580172 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.353248874 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.336596036 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.335984016 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.341841426 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.34461608 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.33955728 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334878264 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.334343471 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.336585575 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.334217189 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.335720381 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.335483092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.335917226 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335320199 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.338693231 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338410087 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.333086264 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.337640744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.348686992 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.341480428 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.334766069 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336115247 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.342052194 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.336246091 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.333076743 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.336648297 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.336918393 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.335748746 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.336299838 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346436758 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.354475213 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.343782466 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338070806 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.336420349 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.333678747 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.337700511 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.339615369 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.337973709 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.33670602 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.336290091 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.334355427 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.335745001 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.340133846 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.343217605 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336326381 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.33397283 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343166823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.339067348 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.344526729 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.356238252 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.340808913 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.346851516 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.350041742 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.353458225 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.346758899 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340195816 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.338628165 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348417586 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.365054149 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346337493 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.353138088 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.335648557 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.337784012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.3478405 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354533256 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.349819907 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.338460535 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339430678 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.339135052 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339665194 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338868679 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347495022 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.359808332 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.340117538 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339656308 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350239084 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365851207 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.33736161 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.339123384 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.339273355 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.339384881 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.340042396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352740908 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.35827914 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.33849383 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.338113055 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.339772664 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.342370755 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.341014478 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.338066867 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341127073 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.337174818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.340125594 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339644407 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.344199526 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.349385028 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340966276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.339645055 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.349162897 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.340780858 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339762242 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.350426766 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.341138824 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340991283 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.341474054 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.349059076 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.337401921 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34393138 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.349800298 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.341557469 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.341867846 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.341639907 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.340976959 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351327827 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.371170576 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342173667 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.339666813 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.346595161 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.355030312 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.341354992 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.345068917 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.340944815 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.338023808 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.338170092 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.343412729 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.341317072 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.342621623 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341164277 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344500333 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.339326108 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.341616204 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.343572625 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.344121906 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.344490193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.343428675 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.344035579 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.345568868 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.342839605 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.345463252 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.3511911 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.343321203 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.343910022 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.343615793 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.339888341 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342687372 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.345664433 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.34270778 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.34365454 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343226778 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.342558438 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.343530273 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342965669 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.343111314 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343693473 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.34410125 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.347951024 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.343810092 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.350324796 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.342337815 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.341482333 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.344105328 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.344070964 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.344194896 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.343194401 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.34338951 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.346922124 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.35318178 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.343664357 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.344490245 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.348859093 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343273815 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344631959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344342728 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.347948854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.353366736 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.344868213 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.352717142 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.344856583 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.345179252 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.344629213 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.345238148 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.34430446 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345448767 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.348553696 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.355005569 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360379645 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356806207 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.345918576 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.350671538 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.34640194 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.350272329 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.350452499 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.345549855 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.345033084 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.345537034 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.345477272 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346236374 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.349052843 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.345970963 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.346467593 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.346425688 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.345378869 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.346471323 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346156541 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.34731891 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347744738 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.344254005 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.345881605 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.346801384 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.346050539 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.344489499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.345671708 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.346034626 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.346994571 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.346474536 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.35718131 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.344546689 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34757788 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.349064444 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.347777367 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.345565404 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.348155007 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348859876 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.347441624 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355946452 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.366327863 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.349359786 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.355906215 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.366531855 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.347941642 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.350864816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.34748677 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343980513 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.350624202 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.356964996 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.347472501 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.34781607 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.348259035 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347575907 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347783388 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.357113536 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.34560734 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.348289146 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.348036682 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.351306319 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.346076382 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.349950783 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.349159397 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.349094309 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.350315229 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348412687 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.349325924 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351028079 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.349085455 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.348391379 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.348539571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350996725 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.358881499 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.355893507 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.348613379 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.352655846 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.350709162 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.353243056 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.349637531 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.350178538 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.348409167 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364296722 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.358546055 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357155723 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.352766935 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.349482173 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356318894 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.351481499 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.35455964 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.350347587 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351302552 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.350873285 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.348728396 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.347996261 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.351748965 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.35060471 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351895436 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.351666306 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.355083832 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.351139176 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.348719726 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.351133492 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.350616676 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.350575472 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.350534898 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.350925054 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.355636228 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.353335594 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.350484858 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.35104234 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.359175215 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370116806 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.35358152 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.350503626 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.352460039 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.350563995 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.351746711 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.350852776 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.355600688 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.360550558 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.354873995 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.363867204 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.35290506 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363779151 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.351227227 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.354650972 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.36167607 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.348329668 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.350370083 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.353013374 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.352355437 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360448253 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.371901319 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.352371357 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.356063338 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3534328 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.353788766 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.352769916 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.353010456 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353375382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.352954887 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.36347408 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.371393164 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.35776538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354647961 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.351047806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.353151373 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.353182538 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.352097199 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358368237 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.352987977 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.35354104 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.353074486 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.35512483 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.353586734 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.354036985 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.354158036 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.350566221 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.353260256 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.362282521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.373814449 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35888101 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.354921236 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.366914056 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.353962652 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.363079685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.372844811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.355107585 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.35424753 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.354688823 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.358086925 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.353614246 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.356069667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.354366657 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.35573209 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.358802467 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.356327179 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.358782724 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354715316 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.354926184 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.355600151 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366372143 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.381575673 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.357397492 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360005697 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.353270493 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.357200308 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.361053518 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.355970417 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.353905063 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.358741614 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368210239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36500245 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.356772969 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.356316742 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355626796 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356032183 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.355553548 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.355833809 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.356756604 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.356422162 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.357970749 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.356267647 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.362715527 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.355330519 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.357255764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358732527 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.358037618 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.368955009 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.356429229 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.358067574 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355644048 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.356385793 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.358079986 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.356536575 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.356037596 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359128877 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356156679 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.358840411 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365072324 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.363990625 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.359844102 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.356597504 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.357273564 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.357427437 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.359128117 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357204093 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.358453448 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357462501 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.359019744 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.357959326 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.359821453 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.356639381 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.357123829 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.357368479 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.357492802 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.360264089 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.365160648 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.365623458 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.355150197 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.357450303 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358963224 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.356949869 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.357710824 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.370470768 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36056688 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.371076809 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.369149466 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.361885148 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.3594874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.362354805 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.367746324 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.357295185 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.359761695 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.358509636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.361589454 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.359000957 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.362917262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359580202 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.368165759 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.359621101 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.359504441 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369860067 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.378558718 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359035248 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.361558155 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.365456831 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.358927367 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.356040776 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.358923354 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.357989793 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368028136 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.381501254 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360126555 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361584152 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.358041046 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.36111878 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.366157553 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359998398 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.361383381 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.358018624 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.359842457 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359156729 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360332398 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.357311387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.36122526 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.359471049 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.363517355 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.367971433 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.357622615 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362373548 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.360744882 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.361334497 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360678161 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360583301 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.357694165 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.358436787 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.360607206 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360449055 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.362341967 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.363849974 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.361265335 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.362436261 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.362866983 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361297552 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365015288 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.372656241 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.370118755 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.359319818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.360631569 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.362159186 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.365561686 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361903061 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.362016108 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.362865663 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.365572141 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.362956898 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361769048 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.361552714 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.366210199 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381299992 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.381322125 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.363272851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.36388084 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369251216 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.363308971 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.360109241 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.361759913 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.365751685 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.367156698 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.371862447 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.36252481 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369505649 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.380893283 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.363591956 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.366742097 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.365377092 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.373322167 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.366416724 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362620545 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.362970935 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.368742442 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.382301701 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.362610313 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.373533001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397694485 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.382789428 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.364612643 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.36353698 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.362667433 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.364282249 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.367115499 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.364254574 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.363846837 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363148649 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.363745951 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.364895323 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370070322 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.36517606 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.364196479 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.363973125 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.363751714 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.367059623 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.360646267 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.364643299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.363971548 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.364293618 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.365677351 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.364822608 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.365111933 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380008462 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.377898271 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.364277535 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.364676287 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.362447345 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.369372395 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.367918735 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376782266 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.374384585 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.365281105 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.365676899 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.367112143 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366370888 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.36285903 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.366263626 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.364828288 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365046987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.362749291 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.379894429 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.376061454 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.372884076 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.366860099 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366444042 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.367456218 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368634718 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.366557446 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.36600069 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.369464369 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.367609218 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.371379928 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.365698625 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.365865447 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.369883602 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.375643119 seconds)
  done (took 808.020113076 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.364218825 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363181027 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.363416168 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.363754838 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.365172171 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364035807 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363594965 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364684752 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.364287413 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.36421715 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.363707748 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364116729 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.364320012 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.363783709 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365209662 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36460471 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364423691 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.36483017 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.364280063 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364185102 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.364754415 seconds)
  done (took 29.950882116 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.367138025 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.364748512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.364406692 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.367100399 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364268239 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.367096054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.365162763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367113603 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.367915168 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365535196 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.367943923 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367307476 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.365561272 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.36533741 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365689411 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367725299 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.36733078 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365922209 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.36801806 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.365228795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.368110763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.365395107 seconds)
  done (took 31.362948183 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.369030027 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.369291903 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.36820184 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.365837254 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.369227787 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.365729458 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.36776585 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.368805136 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.368995841 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.369548706 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.368013511 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.371516516 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.376872677 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.37698657 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.372082843 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.370050286 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.5132169 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.368888302 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.36972767 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.369452948 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.366883474 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.376424376 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.367163185 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.366698886 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.368496647 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.370458686 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.369811541 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.371124583 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.369851616 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.371723298 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.374884567 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.369641784 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.369583911 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.372647736 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.370316323 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.371438295 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.374872012 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.370569356 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.367602953 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.370625204 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.381209313 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.393950241 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.371193142 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.379285004 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.370543574 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.370364784 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.375115263 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.37977247 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.368265245 seconds)
  done (took 68.644392829 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.371393062 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.371054389 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.367649428 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.370877801 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.370844713 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.370450815 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.371061393 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.370822971 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.368519462 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.369209939 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.371632144 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.368721142 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.36846216 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.372475477 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.371239483 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.368919225 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.368919293 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.36924351 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.368719598 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.368870639 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.368435026 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.374215173 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.371986441 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.369392642 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.372435114 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.370145365 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.369091573 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.372215049 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.370502134 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.369217564 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.372476074 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.373291181 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.372228796 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.370016669 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.370509177 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.371773189 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.372669099 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.369441834 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.372460633 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.370175526 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.372760694 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.372221761 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.372733013 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.372761174 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.370941279 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.371112862 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.371164522 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.371125296 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.371503824 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.373677012 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.372608549 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.371565514 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.373591768 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.370826126 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.373014187 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.373092215 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.37118856 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.371087131 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.373227289 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.371554724 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.37103912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.373698432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.371756866 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.3743467 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.37421166 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.371371813 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.371796982 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.374896913 seconds)
  done (took 94.555516504 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.374514495 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.374623971 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375083321 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374266635 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.374127521 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.374629558 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.373914851 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.374885273 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.374820929 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.375163417 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37539352 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.37457241 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.375090496 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.376812081 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.375423711 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.374927474 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.375073245 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.375490765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.375630968 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374798895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.376543707 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.37561413 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.375804778 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.376082727 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.375533563 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.375651811 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.375619512 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.375581434 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376316818 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.376241311 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.376502956 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.37489976 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.376481995 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.37690508 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.377004582 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.376295515 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.376154066 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376687303 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.376221944 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.376485677 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.376284742 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.377454201 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376907528 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.376719983 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376944076 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.376838403 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.376190045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.377777775 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.378107574 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376430616 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.377288057 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.377776034 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377514157 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.377757286 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.377180316 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.377145941 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.378093866 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377810257 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.377479297 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.378038825 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.378138209 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.378161591 seconds)
  done (took 86.635118443 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377457756 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.377748329 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.375086916 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.374635943 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.377188026 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.375315903 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377418249 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.378121518 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.377362505 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.37758646 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377680522 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.375102491 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375652313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378810658 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.374893575 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375238564 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375763275 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.37567927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378342073 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.375291504 seconds)
  done (took 28.842667638 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.376304692 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.378550325 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.375557564 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376534108 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.377986381 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.375927859 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.378750413 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378387802 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376373944 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379667161 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.379192636 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.378774043 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376099584 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.376649265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.379801927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.377021544 seconds)
  done (took 23.354614742 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.376602785 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.379845729 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.379817167 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.380189628 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.376915483 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.376043939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.378989811 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.376837163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.377632289 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.378929065 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.380659671 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.380574773 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.379542717 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.380609428 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.377108439 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.380396696 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.377083123 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.378510515 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.380596785 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.380519977 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.379054434 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.377177139 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.379743405 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.381062126 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.378127362 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.378218507 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.378367119 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.378107055 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.377779679 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.380994793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.378555366 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.379119655 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.378110157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.378361181 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.382159983 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.378705074 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.38096738 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.38140432 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.380591544 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.38128098 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.381106361 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.378353347 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.380767152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.381164993 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.378918391 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.380757193 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.378770935 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.379325119 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.37861879 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.379449951 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.381688299 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.38277399 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.382042733 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.382454785 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.382521066 seconds)
  done (took 77.189839043 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381796742 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.382521644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.379465702 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.381470726 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.382067575 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.379605135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.38154787 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.379394143 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378818779 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.381507594 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.38093436 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.382984405 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.379525225 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.381688286 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.381417441 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382643912 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.380354667 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.380055448 seconds)
  done (took 26.175052062 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.381098251 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380507906 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.38342061 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.380698551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.380914815 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.383190366 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38069989 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.382992156 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382362509 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.381873667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381136962 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.383559708 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38469538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.383265197 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.382655416 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381619017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.384663632 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383885496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.381744117 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.380310795 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.384039223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.383721443 seconds)
  done (took 31.730241714 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.38327553 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.382961685 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.401595674 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.431639355 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.41706737 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.382747626 seconds)
  done (took 9.71908874 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383616389 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384599961 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.381469041 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3856265 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384188534 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383347229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381387806 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381816633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384428575 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383583267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382119621 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384537304 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384984669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382202735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385541529 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385734772 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382645153 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381816915 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383942468 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385986606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382557789 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38454386 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382919254 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382435273 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382274335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382656592 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38560161 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383426272 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383606946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386019477 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386041254 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382847953 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386286544 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383204741 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385759946 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385974824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383373358 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386270528 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385789252 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383017382 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386539501 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386353624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386004708 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382990778 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386480492 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384427399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384751119 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383677566 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38342943 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387519417 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387001302 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383191126 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386439379 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387084449 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386634033 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388026328 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385174244 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385621903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387462624 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385513429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385329633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386776815 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385352706 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385661857 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387278779 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385594563 seconds)
  done (took 92.710244968 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385457406 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.38636193 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385420168 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386134821 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386484774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385475022 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385210767 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384957091 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385147245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385188098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387711091 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385982605 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384784877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385725108 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385358962 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385873973 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385696145 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385738586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38596036 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388865087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385977197 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38617129 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386031456 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385314569 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38616879 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388455252 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386324668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385939348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385733474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38600049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385570385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386166976 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385770719 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386446605 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386652348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38656864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387195754 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387012068 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386448464 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389366766 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387905602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388870505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386998488 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386795646 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387693654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387724581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387371505 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38769609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387503658 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388451515 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387475243 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388692277 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387771499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388480125 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388116112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38794532 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387963951 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387669715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388078198 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390421851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388221404 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387525219 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3915878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388400613 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387469189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388612118 seconds)
  done (took 92.863303117 seconds)
done (took 1883.01602309 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.477937078 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.37688967 seconds)
  done (took 14.179211408 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.557072902 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.506189445 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.389478912 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.443955227 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.389638867 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.394227119 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.39853737 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.389431882 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.388817342 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.389850723 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.389224164 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.578299582 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.437637814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.389940476 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.38996779 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.482784472 seconds)
  done (took 44.250856073 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.418559252 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.39589717 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.520311396 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.412940545 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.418553326 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.600185195 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.453634466 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.394819646 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.587121953 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.436968497 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.108568131 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.420153673 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.394222048 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.603155263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.415795818 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.602347681 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.672942399 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.209619609 seconds)
  done (took 32.393560081 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.911755707 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.467293219 seconds)
  done (took 9.708438796 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.392323211 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.423716113 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.396270369 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.430057101 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.43378551 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.408380625 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.396497467 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.475862415 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.411521128 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.428999779 seconds)
  done (took 65.538250281 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.41572915 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.393580689 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.394192477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.392202334 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.385479124 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.387308129 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.392965127 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.390725327 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.500270277 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.537916825 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.41218905 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.399148689 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.394288896 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.396701256 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.392479862 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.432258475 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.523496091 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.391268663 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.391301149 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.399739949 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.394410003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.53452716 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.440003029 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.393630543 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.534273211 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.51840466 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.400185503 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.401308997 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.511005143 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.392378586 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.394978501 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.394991561 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.395851025 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.985251436 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.923230498 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.405280573 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.420458031 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.401836256 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.392573528 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.593654254 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.395653452 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.40124943 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.395867989 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.914326674 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.566630875 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.519838764 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.850679923 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.398756136 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.396814419 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.460596618 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.396041814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.396826547 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.427118179 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.230763536 seconds)
  done (took 116.232920656 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.407135334 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.878046322 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561753413 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.413295489 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.229101958 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.137161971 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.391601782 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.724665184 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.3995066 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388874992 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.692453068 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94741541 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.400575428 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.401806081 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.44070148 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.397975526 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.390942258 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.222751649 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.393850301 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.39339079 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823495677 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.407857462 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.390095546 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.413027122 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.431737347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.886355913 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.093074847 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.915431662 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.394655005 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.390070763 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904618432 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.394238851 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.446606332 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.391595696 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.680066358 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.808456329 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787339808 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.398528006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.406658466 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.391689166 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.428196815 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.908633156 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801239999 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.393879462 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.394632898 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.912345583 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.393530025 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.401886659 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.391130893 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596630586 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.358064591 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.393511438 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.106109426 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.39573925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.76171818 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.4630308 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445552451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.941137702 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.394306224 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.541523934 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.400673316 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.392995855 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.39175584 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.396188231 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.396606892 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.799907798 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796312961 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.399899531 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801155312 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903754911 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.396210508 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966267556 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.229249182 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.400373464 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.444565487 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.392246566 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.03946807 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.943267721 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.416881338 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.393459661 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784271281 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.395364504 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.68943056 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.410040202 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.399703066 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835641806 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.413982849 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.406301415 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.393733435 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.39394752 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.028175412 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.395593081 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.677258519 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.419659847 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.394423193 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.393908185 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.418774224 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.395235897 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.397416554 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.399553005 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969093538 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.398726385 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.707772777 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.417206192 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.397255573 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.397667211 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.3975873 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.394823581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62049016 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.867066903 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.399251816 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.395819225 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.397299808 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.424514354 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.660680585 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.398432079 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.756285512 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.399829048 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.397487952 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.402964182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.180471528 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.41484593 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.400758084 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.395551656 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.26502904 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.618915089 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.417706659 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.416298189 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.394368884 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.416435615 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.002772288 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.399005905 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.43878855 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.399383715 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1450393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.413827163 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.417561828 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.011631219 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.404727523 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.396770715 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.404383813 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.395858362 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716617332 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.687375053 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.710008691 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.415847116 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.396946001 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.134946307 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.423354867 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5483335 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.417525659 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.409127718 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.599408294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.692660256 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.398986101 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.982226334 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.398042336 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613130248 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.397654951 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724618614 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934742479 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.400509942 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.400621976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.150714389 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.084694906 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.008678673 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.399132535 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.691017172 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.414369679 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.85176819 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.398663843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.398431032 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.835890122 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.400587821 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.407856849 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.398566219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.397935411 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.463224195 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.5759067 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.157360471 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.401390764 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920306187 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.417087329 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.399328675 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.402605846 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.400122697 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.750860873 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.442317008 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.401563631 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.40576097 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.399392298 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.402205774 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.933428895 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.315802045 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.399614548 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.556545205 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083175662 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.40180274 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.399152538 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.020322938 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.688071185 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966399692 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.418337869 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.765000134 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.41012339 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.442882105 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.17132832 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.405924308 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974627359 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.406605087 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.403566052 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.0479193 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.402968654 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.447356804 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.400986737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.401071489 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986333924 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.402631999 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.40334643 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.891070149 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.400971003 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.658220491 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.401376475 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.401791107 seconds)
  done (took 1128.616566947 seconds)
done (took 1412.245393607 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.401463755 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.402368596 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.389655092 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.401747097 seconds)
  done (took 26.938104218 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.410933747 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.406323012 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.408555827 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.407464238 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.40991384 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.406897821 seconds)
  done (took 9.794078474 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.779014816 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.401022539 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.404746482 seconds)
  done (took 19.927512342 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.64948475 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.804031123 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.824695421 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.847868224 seconds)
  done (took 11.471044237 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.410461248 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.409851496 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.409870509 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.410514545 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.411719633 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.412521642 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.410727939 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.411340921 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.412134901 seconds)
  done (took 14.042181048 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.81938183 seconds)
done (took 89.334962869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.476877417 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.597876164 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.402555265 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.678802556 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.757839788 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.993913213 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.423574509 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.459396349 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.392254052 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.475235409 seconds)
    (11/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.2804851 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.411423583 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.674778762 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.150078901 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.639622136 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.44512863 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.429464611 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.959192196 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.819754027 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.40393573 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.581591677 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.954208461 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.308258774 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.443272185 seconds)
    (25/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.307794766 seconds)
    (26/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.717988218 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.421142074 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.527185447 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.531015025 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.321981303 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.070283913 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.507361601 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.921901331 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.469347449 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.437564395 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.846099826 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.318708416 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.076265228 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.210117542 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.014364866 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.433425646 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.815932406 seconds)
    (43/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.604365728 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.527175253 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.106064007 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.948326461 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.404194009 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.563221117 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.177781165 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.487106373 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.52285126 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.10513151 seconds)
    (53/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.491619818 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.406159984 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.861115515 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.469813098 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.118173371 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.514125486 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.748104499 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.516333777 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.874471911 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.520408998 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.910119042 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.052168557 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.663501797 seconds)
    (66/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.490948058 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.41206775 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.54662544 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.432504763 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.001892567 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.427608031 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.48483648 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.479970018 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.14518907 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.736134786 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.55411217 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.472085543 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.262388954 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.52786562 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.427455536 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.404504142 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.212909445 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.40674829 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.421859889 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.455340479 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.142676168 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.406209937 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.511334102 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.080500282 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.394658735 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.691211984 seconds)
    (92/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.50603682 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.513433588 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.426060893 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.401611491 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 5.464905696 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.467883694 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.417196617 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.603966931 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.032390983 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 6.410186517 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.426759082 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.768653559 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.162563073 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.427493646 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.424467266 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.247010188 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.607843956 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.026737326 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.844903816 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.409300868 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.510866594 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.920255499 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.745759395 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.710595388 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.623668369 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.394372824 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.577785578 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.159682096 seconds)
    (120/309) benchmarking ("sort", Int8, false)...
    done (took 4.447476491 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.507578412 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.425723392 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.395197842 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.429178494 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.468390726 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.750961537 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.534180483 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.646928972 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.295709711 seconds)
    (130/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.52597432 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.395666624 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.877208047 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.132708119 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.930590104 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.432999546 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.032988597 seconds)
    (137/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.547041376 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.684998305 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.459664395 seconds)
    (140/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.385098224 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.398154883 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.770333946 seconds)
    (143/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.247291908 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.246259964 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.420888161 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.672439627 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.845308939 seconds)
    (148/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.454274649 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.992565128 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.436140202 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.408058333 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.407315901 seconds)
    (153/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.086847817 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.534850581 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.880154139 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.355047636 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.535558596 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.270142154 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.24747462 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.021236818 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.420063455 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.270069093 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.438982852 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.436905631 seconds)
    (165/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.761408156 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.437177898 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.363560501 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.476497043 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.412609036 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.398162695 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.560886256 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.16240647 seconds)
    (173/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.431169127 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.427368458 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.439402917 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.980087766 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.04649419 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.519550936 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.497166698 seconds)
    (180/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.514677079 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.496749562 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.405958391 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.797657258 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.412611961 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.439075643 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.635367344 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.439431072 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.398278156 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.458768597 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.317501789 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.403205823 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.325905709 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.160462904 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.799743636 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.612965174 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.422967442 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.44083597 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.438446092 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.096141559 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.441089337 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.261558424 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.49409933 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.455218193 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.462107448 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.412570566 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.379147356 seconds)
    (207/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.072350096 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.249507584 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.215363263 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.539169058 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.113111495 seconds)
    (212/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.820316386 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.835686692 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.488148491 seconds)
    (215/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.872222026 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.865271674 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.10619816 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.82865086 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.416627452 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.88865787 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.074991075 seconds)
    (222/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.498364558 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.949832469 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.63289153 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.511406115 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.416456549 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.486909948 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.362677986 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.492346611 seconds)
    (230/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.122973795 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.417782625 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.441658064 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.317130216 seconds)
    (234/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.414333837 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.456805648 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.842709775 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.432536122 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.416142594 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.018242686 seconds)
    (240/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.437574371 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.418186145 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.787706351 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.250202779 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.416011484 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.834756446 seconds)
    (246/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.309750123 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.96920765 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.792908336 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.43574193 seconds)
    (250/309) benchmarking ("sort", Float64, false)...
    done (took 5.775694003 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.847039906 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.44265507 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.832683414 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.156544668 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.063478377 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.833959967 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.104325513 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.645817731 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.932250986 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.425226269 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.507079064 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.418595526 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.443918032 seconds)
    (264/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.444006172 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.058182744 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.461868942 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.808732724 seconds)
    (268/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.415823009 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.8648202 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.753272382 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.558071523 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.434907488 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.647076724 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.275728525 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.760512095 seconds)
    (276/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.143270559 seconds)
    (277/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.527563183 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.401949767 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.938788875 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.51072321 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.500484626 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.535420185 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.095669938 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.464958677 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.578251894 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.476999242 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.804071956 seconds)
    (288/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.507020256 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.972980536 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.435402031 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.13003531 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.03530648 seconds)
    (293/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.544547601 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.449490215 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.464145952 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.434618061 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.405021886 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.934853205 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.879426164 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.404550055 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.937098697 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.444206102 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.440333956 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.587112379 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.442077571 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.404579726 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.512236243 seconds)
    (308/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.705070613 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.425562881 seconds)
  done (took 967.429576703 seconds)
done (took 968.77410784 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.451831063 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446547524 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.429581447 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.452183045 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.541295449 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.46321896 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.440929219 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.432917613 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.477421817 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.479899946 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.428793223 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.463072063 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.431035848 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.431112208 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.429985816 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444802324 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.544267404 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.432274034 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.447924994 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.441007942 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.447478134 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.430100388 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.480219799 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.462128147 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.434793165 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.433642592 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.434659087 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.451725759 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.543783493 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.435257148 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.435787812 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.443753049 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.545750335 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.430128186 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.425928907 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.452178035 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.443448171 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.442330016 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.436302535 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.463653963 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.995389107 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.432020203 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.433908748 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.433770165 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.433457739 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.437061122 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.43363492 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.439375914 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444886693 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447137969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.988027962 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.448228315 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.436313893 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.43363342 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.443726232 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.43268589 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.436395456 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.449038262 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.452666904 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449351383 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.539492717 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.438865259 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.43580261 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.449662809 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.441685014 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.025977523 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.429788937 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.438743365 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.99907162 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.437857467 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.028969829 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.443012471 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.435153597 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.448058398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.466208501 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.549984509 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.429807672 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.433610767 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.441863625 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.433014762 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.44559536 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.447034705 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.439356325 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.435397635 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448386677 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.467431519 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.444248924 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.437007609 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.444835295 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.455297111 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.443691158 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.445702872 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.438952659 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.430553488 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.446064482 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.439196911 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.438745737 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.438727856 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.441184471 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.446356668 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.999482889 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453106794 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.431413299 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.432340489 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.434515164 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.448979713 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.0032994 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.436731616 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.457839486 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.483273443 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.437612469 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.545945209 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.439847252 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452461033 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.446068618 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.439056959 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.431949196 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.546484814 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.998146062 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.452025252 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.438456153 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.434887341 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.451813262 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.439169067 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.433667538 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.557218136 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.438336541 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450430623 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.557760128 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.447525886 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.469645231 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.435260592 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.439836717 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.465656968 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453357624 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.469911984 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.440536283 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.454147201 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.452786855 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.434223735 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.449245499 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.448628184 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.438451361 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.44489001 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.432287724 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.466917038 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450403254 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45064127 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.459348791 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.558911965 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.435871016 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.548279069 seconds)
done (took 242.596553061 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.496683221 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.429957186 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.536473932 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.434473779 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.536114644 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.535225631 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.432857264 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.43213755 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.433010526 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.810242654 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.433483851 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.434200142 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.429212433 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.433156838 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.516824882 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.435448108 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.432382156 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.773539343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.436431418 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.505959443 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.432802968 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.433515903 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.434690324 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.814532851 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.433492108 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.429437972 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.505645463 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.435638393 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.781652061 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.430112201 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.436440204 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.780518471 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.523994416 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.453059025 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.447190522 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.442823457 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.538231569 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.455902434 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.517261536 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.516978658 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.537577469 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.476430933 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.43139831 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.429165665 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.438781384 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.439024941 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.434722917 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.463263769 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.433395023 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.435168835 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.775863961 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.447242224 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.444750752 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.435752126 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.435123261 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.458225892 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.436257934 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.439153 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.527673238 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.438845983 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.500013321 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.817537483 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.812773924 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.438976823 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.435447159 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.436595358 seconds)
  done (took 155.320760566 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.505989748 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.510834756 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.556534249 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.439574536 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.489648326 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.56245713 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.43929877 seconds)
  done (took 11.875162176 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.444343673 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439224502 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.488383813 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.488466972 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.439169922 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.585132428 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439626102 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.449727932 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.437250806 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.490784489 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.439808362 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.439365573 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.446421978 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.432759109 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.487672557 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.450171465 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.554237937 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.440143812 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440777044 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.594207893 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.437622611 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.447061382 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.490863606 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.450257857 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.441498514 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.445116147 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012008372 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440968951 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437997104 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.439513417 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437342241 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.478577236 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.441048736 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.439217734 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.438258832 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.555944149 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.440655659 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437673059 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.440880714 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.43524225 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.441195102 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.441336667 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.440772105 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.438830754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.441560832 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.464069346 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.441667489 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.440956592 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.440877173 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.441513886 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.49062966 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.442117109 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.440568617 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.43988729 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.496338887 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.448579594 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.442017731 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.439290814 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441666844 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.439000703 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.595862979 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.490567796 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.441955958 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.48980382 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442612069 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441434087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.443344309 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.441791874 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.496956726 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.441468055 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.490341919 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.439413798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.596321674 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.465046813 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444377868 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.44528046 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.44457467 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443728719 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.440456365 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.448204081 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.439811451 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.443783483 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.450499963 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.441425894 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.440180207 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54462215 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.553112236 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.44056898 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.456337373 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.44942459 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.439791975 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.495610718 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443818134 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.440842629 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496088992 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.558650948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.497946617 seconds)
  done (took 163.760169714 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.448130935 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.45136672 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.444750765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.459508408 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.443969044 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.443479078 seconds)
  done (took 10.068164826 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.447379232 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.4454777 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.445520585 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.443856928 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.444030181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.444183274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.445601327 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.445159525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.450473582 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.446483092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.444996042 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.445887343 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.445390469 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.445819389 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.445212184 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.445278426 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.444982808 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.441800685 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.444774447 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44415344 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.551579158 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.445982692 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.446394002 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.44681406 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.450438687 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.445448766 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.452916447 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.445861152 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.445596482 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.452578042 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.448295657 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.44571985 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.446825047 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.453671058 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.450938067 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.447214895 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.451419894 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.446985763 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.444424182 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.446144022 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.447749628 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.445573828 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.446759609 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.44753111 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.449101332 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.453045011 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.451969534 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.453670951 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.447640757 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.447702778 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.447273537 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.446742277 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.447159518 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.447891789 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.452142455 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452413323 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.453069688 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.448824473 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.448778795 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.449262615 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.449805908 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.44818988 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.449697962 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.451996377 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.44493678 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.447888839 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.4492797 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.452890086 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448116981 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.447531953 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.448266844 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.446295767 seconds)
  done (took 106.72013616 seconds)
done (took 449.112387234 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.637439067 seconds)
  done (took 8.018407057 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.549594001 seconds)
  done (took 7.933604524 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.409004292 seconds)
  done (took 25.070901375 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.496926703 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.519459464 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.476472577 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.443828028 seconds)
  done (took 27.318963077 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.59199941 seconds)
  done (took 7.972321387 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.441300537 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.44050568 seconds)
  done (took 14.264492199 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.085706938 seconds)
  done (took 8.46536223 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.541446591 seconds)
  done (took 7.929066019 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.458710557 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.448663148 seconds)
  done (took 14.305868029 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.426577512 seconds)
  done (took 7.807832415 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.377309009 seconds)
  done (took 9.76075555 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.444395613 seconds)
  done (took 7.828266117 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.509607025 seconds)
  done (took 7.890583341 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.448847421 seconds)
  done (took 10.83053689 seconds)
done (took 166.77881833 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.442597156 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.443416468 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.445609251 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.444398037 seconds)
  done (took 27.157520745 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.482229124 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.482597659 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.483653934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.49331866 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.484905373 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.481799875 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.475135995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.474764733 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.493491067 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.485658906 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.484851447 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.485327621 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.482705827 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.474962029 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.485386107 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.485107755 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.494349207 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.485371195 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.4767508 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.48562312 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.450776539 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.49454273 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.486375265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.450553622 seconds)
  done (took 36.944133783 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.648535102 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.522041134 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.603718163 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.501957205 seconds)
  done (took 7.659018243 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.501640457 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.50353316 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.515633296 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.556150709 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.580628356 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.513970904 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.475220631 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.472849813 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.458515715 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.505590068 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.578873804 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.521281772 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.592432596 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.451443467 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.631791943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.451103142 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.451514627 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.503527945 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.553859409 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.582435017 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.451399691 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.503304978 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.506773723 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.521141059 seconds)
  done (took 37.768638294 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.449728555 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.458856706 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.457189986 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.450911113 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.450150941 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.451908493 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.457378445 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.451690711 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.471840596 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.450989781 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.45041662 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.450629749 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.450203339 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.451474529 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.449530126 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.463162928 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.464324051 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.452172107 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.454902447 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.45668195 seconds)
  done (took 30.478822562 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.445388571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.322949994 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.79669981 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.703713604 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.446361364 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.446114697 seconds)
  done (took 29.546309958 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.533143864 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.687671057 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.455376075 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.885215344 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.967381009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.456460565 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.452928301 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.730413944 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.104254562 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.10161799 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.5193611 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.531519355 seconds)
  done (took 21.813331858 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.449916165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.449139255 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.464160748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.466223032 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.519362116 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.459951315 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.460401856 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.446798962 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.521280397 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.525625234 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.459881025 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.520522561 seconds)
  done (took 39.13199579 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535693657 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.497995749 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.551439275 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434180918 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890503695 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660697179 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389648363 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946588168 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.454226307 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722508587 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452251542 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542106698 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.704815568 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453084852 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.45292301 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.619319371 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678438623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031800818 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453795602 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.975699018 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477475147 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466132244 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.107404073 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.482647911 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661612433 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.582653364 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.709423271 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449337725 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777638002 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46504356 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460470128 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449351083 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723849301 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174451306 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54414066 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461131772 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.411713897 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.160986879 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.44897161 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.990158238 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464495356 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.456361117 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460676769 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451674793 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.384946567 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451935657 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953779881 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.457154477 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.16284029 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451637625 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462198887 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545955204 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.45500463 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.269084262 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683672822 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451487632 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.449424909 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457587716 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022966515 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.63195822 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455478453 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.389682468 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.021482406 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985704898 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201031502 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.556196335 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.454990621 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456024284 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422863641 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.980371889 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472002497 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595869323 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.472345057 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147610559 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301017241 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455019657 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420884807 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0993979 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458152055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.389608247 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681744706 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452648312 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392579351 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.409676978 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.386852371 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272333353 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461648112 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.986287274 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460767987 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948855845 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.464973988 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470245923 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477273503 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.678350979 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.34015808 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452496157 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.457942709 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580959667 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475913963 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947365807 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423483096 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.457213135 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710939445 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.666720527 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453622952 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 3.179503084 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709845441 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456403739 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.474726857 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453026024 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.468466226 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.156276977 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467974321 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.668300844 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473948893 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454940078 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312669341 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470151494 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.557591741 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.45848803 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728964041 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.364257863 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457338935 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537070069 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45646605 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455428383 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.089387681 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977711728 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.455178399 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.456547154 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465830805 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468611763 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.455899731 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486265604 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.466625652 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463484774 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.460133366 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68094536 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456243937 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73374173 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389428944 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599867711 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553750448 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.68022015 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.83981329 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.458221918 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714764263 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468159836 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457992136 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47100779 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474559418 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55501921 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477707753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.457709019 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.71564225 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.459993796 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.460125618 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.117630097 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.461400973 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465365103 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.462130142 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602727749 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170644679 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446178443 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.458363327 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352065741 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.47103481 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521056454 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462807384 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466973176 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.582574338 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.520394042 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.464617836 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.45482195 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685100589 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469467504 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.085848515 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538619192 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.704173546 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1778498 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472252992 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.392644401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.16959759 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.151205209 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457069214 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.394159289 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.458372321 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467940867 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.47054935 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.207759893 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16673381 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462863299 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.00587378 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.467294307 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.470786753 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.463853323 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459496748 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.573170016 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.664315733 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466898691 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.472175922 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60286643 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.473097012 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.393497979 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.463549871 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.464094241 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459552787 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.459757408 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492108534 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.020932648 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987485402 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718169361 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.3952901 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472119024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.14453786 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.494984478 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.465398164 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475862707 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465145158 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.464560344 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471281539 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.47159443 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.02625386 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.163088878 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028493761 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326646909 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113344854 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615226903 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.476281684 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.463278092 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963772179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396645627 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.019318127 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676480095 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968938106 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4906383 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720047852 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.853645221 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.346361248 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473622847 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689690821 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611438368 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.477606843 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475273362 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.672755315 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49581348 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.461911796 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.430124959 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.746828161 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760505718 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476126844 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542150786 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966364242 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46318799 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466675639 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.45970282 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.957126819 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668816 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.179302719 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702393905 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466902731 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.468152611 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984314627 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463023399 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.692337026 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215937298 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466802932 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.713468495 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404080721 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.47325691 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.472655145 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.46319392 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.088609731 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.463725302 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.722055461 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473565709 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397987999 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.471485311 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121282672 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.32449136 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.468921869 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463351525 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332019723 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465242833 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812512343 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.481591011 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.571707067 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470234283 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.400087545 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398597011 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.15585331 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464265517 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44656055 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053194379 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.993430897 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679718558 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49602583 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317295364 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.718792546 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.476734911 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172327284 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693104397 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.508347776 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490185331 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.563989679 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464683689 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.476749176 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.46452174 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.70065694 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613526044 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689295781 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.575590691 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.373070575 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.464298241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679319897 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464722016 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.476972102 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749334325 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.177446938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.466800819 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331047927 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48968499 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.480907319 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416776072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.043818293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472914809 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544933325 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476867797 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.476759206 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.477004521 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671239683 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474659082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470149505 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.479840592 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560217418 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.733315979 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.523368356 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.471422363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183391965 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339432144 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183466219 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481649893 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.46713636 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475052818 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435722072 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615055012 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.697034635 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740495521 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592186051 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.170615829 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491416341 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480938563 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470280227 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681308294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741953328 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366863522 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481840194 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482609595 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.468011248 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478403724 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.679890965 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06003054 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122234092 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591932745 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.474304623 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961257738 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742664814 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468324679 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469051465 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065643786 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.472471389 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.97068475 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.474914614 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471504766 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617717517 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477950211 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203095001 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.480423275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.623519758 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.242125927 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11384446 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.727532506 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.028081354 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.478067956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188502686 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328806847 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735754882 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536594674 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480459819 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.586261757 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615016855 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.478332634 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.471864063 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470330779 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32123304 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.178991484 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480056254 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188373519 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735186734 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.467234257 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.478405441 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49219587 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.479582242 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.693791115 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.30919798 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695187125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480207543 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.471831795 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286620946 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197738816 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485665248 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435972843 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.472681997 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7518107 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709122678 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490476486 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.922995415 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.180779398 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295785166 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.445944552 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492134003 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484268949 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335688114 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191522703 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.581096305 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064101692 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.039045461 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471292141 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747292538 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.475719416 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485103439 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750423343 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.474653977 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.474898145 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485871877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.190053082 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339563396 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.481984031 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.054524846 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.410911949 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.817699199 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279013678 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449909889 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471809124 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.691754209 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.474780059 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601460634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483688873 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.486594245 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474496668 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.208656329 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.784063587 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.477590804 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.47779946 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.459588213 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.489683833 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480766425 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774576371 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47720301 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.140426165 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.826145187 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729093989 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.475278273 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.460477461 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.47681604 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474432372 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535912213 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.735216455 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.222323498 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129799626 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.485127407 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.486027318 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476973758 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.690528221 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685326807 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.493299734 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488642616 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482911764 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491024202 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.378780868 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.012337222 seconds)
  done (took 1682.207760703 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.52925766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.491595375 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.508629903 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.48268435 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.539380767 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.484981223 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.548724383 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.514898209 seconds)
  done (took 53.512637763 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.478263081 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.728890084 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.508090696 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.480426527 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.483128459 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.487664836 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.993225785 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.48434185 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.483908273 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.484955065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.48938469 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.483386352 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.206740498 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.485821389 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.491854739 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.475757822 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.483170655 seconds)
  done (took 68.149977548 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.486490435 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.619859195 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.508761302 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.475266083 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.508383366 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.484789017 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.283488619 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.479156378 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.491469064 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.596253076 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.123964358 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.489849467 seconds)
  done (took 82.962692884 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.483356157 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.484071358 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.484213748 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.484244926 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.482788687 seconds)
  done (took 8.833099746 seconds)
done (took 2127.549998531 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.728073272 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.327241637 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.237954146 seconds)
  done (took 5.979981206 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.623787065 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.672178404 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.862313841 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.814842534 seconds)
  done (took 8.389610166 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.753351238 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.84685854 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.667847007 seconds)
  done (took 6.683209201 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.098924546 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.477577125 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.61031209 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.477514802 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.477129697 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.480225333 seconds)
  done (took 20.853749763 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.481281894 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.484119533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.480260392 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.484025253 seconds)
  done (took 7.346550046 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.463022057 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.242102196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.463069442 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.477600494 seconds)
  done (took 19.061583935 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.229576142 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.239692984 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.224553547 seconds)
  done (took 8.110111677 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.488373002 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.31868749 seconds)
  done (took 10.224127498 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.796907535 seconds)
  done (took 3.213281751 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.612706307 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.751452681 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.773231971 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.637152887 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.796181632 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.913353042 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.385198175 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.953853416 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.618089471 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.12260218 seconds)
  done (took 31.982255369 seconds)
done (took 136.175460931 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.754083728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.881189589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.688504442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.730022294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.718888473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.687418917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.757380409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.690722814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.233510072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.221114153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.772373057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.713229235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.705497668 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882636198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.706977555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.505744409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.709597494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.796460094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417098968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.485873203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.759703176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.364024135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.597413808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.388454782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.709408373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.634954683 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.945216696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.50382895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.497097068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.272129933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.638864603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.479981213 seconds)
  done (took 202.267554098 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.48034975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.478578102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.502569895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.482723216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.480345339 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.4806327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.479592413 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.480189134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.480975326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.486732774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.480982642 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.479912407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.483066678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.502699035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.483672377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.492611966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.480680148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.48102036 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.498088896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.481379613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.482974251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.499886868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.48173794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.513248131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.481103363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.483138934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.498795307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.481352256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.481561575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.4842259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.482788178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.504311293 seconds)
  done (took 208.9924087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.485950993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.481461149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.483152514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.481663765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.481969027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.501458629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.484308108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.500013802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.481937951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.482342599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.499189507 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.49774164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.483891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.482266128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.483010395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.49019556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.482355571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.482629979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.482236826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.482120816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.482245308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.496185441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.482432722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.484144465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.482027903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.483738986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.482619883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.483514628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.483484425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.492059382 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.484243128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.498604545 seconds)
  done (took 208.987138919 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.680729825 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.489792427 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.49194702 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.431671208 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.492381589 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.490664436 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.491263281 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.682781484 seconds)
  done (took 15.67349803 seconds)
done (took 637.339745691 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.136042786 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.725576235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.709765185 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.513881702 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.460578388 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.516038528 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.511123424 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.71119233 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.47513858 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.717330691 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.882799216 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.508725054 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.023931043 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.510363057 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.79841621 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.622996458 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.426195637 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.550015206 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.874024219 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.163936571 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.793270099 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.108814753 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710725201 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.495583791 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.034307431 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.107393744 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.385862099 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.42785862 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.511562264 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.876547831 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.43314212 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.666520241 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.588208178 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.561992427 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.619103193 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.598060279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.573945858 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.558034781 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.704736987 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.860225952 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.16025582 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.277555272 seconds)
  done (took 101.316865962 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.48107997 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.483708569 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.480788711 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.483096296 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.482978195 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.484448215 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.481588689 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.481981793 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.482843713 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.48132046 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.481017096 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.484252856 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.483480157 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.483546261 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.483454819 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.482027357 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.484758877 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.484663791 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.483861539 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.482521315 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.48310276 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.482503544 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.482304087 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.483059388 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.483284241 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.483142226 seconds)
  done (took 39.980956672 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.495324929 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.759624406 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.963392864 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.502469343 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.494292806 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.498699561 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.58447554 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.496762811 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.498023361 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.499273213 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.658843146 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.499446989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.53214699 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.970566195 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.501530703 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.49582897 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.495268292 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.495757854 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.765921791 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.505772863 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.586175461 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.498588179 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.585701341 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.505384135 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.49857406 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.496688695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.501167396 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.997918924 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.497889434 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.659987425 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.426545595 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.584537335 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.962815596 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.974959432 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.43371679 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.501377507 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.497120677 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.668555996 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.501089002 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.497433003 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.587859837 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.499638061 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.975052919 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.172434071 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.519538212 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.496899794 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.028202919 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.668847384 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.782359636 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503892206 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.997894214 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.501410965 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.498063476 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.498057861 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.78092623 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.504809691 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.497013334 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.081740833 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.503407389 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.587403891 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.499908189 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.497648151 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.77466347 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.499794759 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.763300996 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.501253231 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.505192291 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.497727622 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.971472043 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.504415344 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.18318167 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.520567388 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.498162137 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.667089632 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.76824257 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.068734533 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.503737891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.779220109 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.978576255 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.587711955 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.504069297 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.001060598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.592783096 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.503631325 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.499842617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.500188191 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.499596181 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.542257751 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.587849097 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.104542145 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.181026356 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.102579968 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.593041119 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.513170089 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.498775225 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.083951456 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.503670984 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.500101731 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.969126385 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.190014349 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.522320034 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.506355993 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17287594 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.523808995 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.592263095 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.50778674 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.981980261 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.503325117 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.544449026 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.500572238 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.505791897 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.503169341 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.593023854 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.505920006 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.500993451 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.163129359 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.695665449 seconds)
  done (took 196.571832407 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.505491781 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.493818343 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.496064644 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.494505711 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.495299346 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.50030201 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.493616777 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.494547243 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.500551188 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.494309497 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.495460882 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.496349708 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.495277571 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.505213728 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.503730327 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.50209669 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.109191633 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.497018702 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.495286259 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.494706804 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.334975866 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.498203082 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.498438011 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.496036982 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.498472993 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.496342386 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.509812923 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.496562499 seconds)
  done (took 156.82851348 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.503561207 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.186405622 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.506518181 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.656649939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.529594763 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.500692825 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.651391893 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.569632161 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.505220222 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.49960198 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.502911858 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.850297986 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.50396129 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.09142846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.730896026 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.658011623 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.123083964 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.508755423 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.502295153 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.502506336 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.656780269 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.516686714 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.849997849 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.14880478 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.507049595 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.15238805 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.494333193 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.507004694 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.504595287 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.155086375 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.504330796 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.853496006 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.594157983 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.573911422 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.153062557 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.09377027 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.095902407 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.673183435 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.504586974 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.504090684 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.505186445 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.494295928 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.153756816 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.506920399 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.50518215 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.149524166 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.525967282 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.506394791 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.513651641 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.503595101 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.572145917 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.572560204 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.856739407 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.159078695 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.591699901 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.526697107 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.654360853 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.914120221 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.507645926 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.092530858 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.493309594 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.158854846 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.508291966 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.49399734 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.504807264 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.510453627 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.676409671 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.655592989 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.096426877 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.507289814 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.095931426 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.678267272 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.50542022 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.505622849 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.507958085 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.156317745 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.097886609 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.677946095 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.659461415 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.732228512 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.496329969 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.506108886 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.495377653 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.594191812 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.50569547 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.157666661 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.098380337 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.508132016 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.507655241 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.508229017 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.508249485 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.710448584 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.157768922 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.595140229 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.131091274 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.878420149 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.85698056 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.508547895 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.574099807 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.509707387 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.857692796 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.510866588 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.572637215 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.98582468 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.857778669 seconds)
  done (took 180.194120162 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.787261718 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.933390872 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.609518805 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.63199569 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.110568163 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.115001083 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784409271 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.644707999 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.630127782 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.767666236 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.856188473 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.601056817 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.714687732 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.589326489 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.323859435 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.58549227 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.610104066 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.652267477 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.62855081 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.673049409 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.181455849 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.837338207 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.700583834 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.812931869 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.611994993 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.367937451 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.109554515 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.037386451 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.699874296 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.034526669 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.104061131 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.769017131 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.547870479 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.239643244 seconds)
  done (took 72.744161576 seconds)
done (took 749.059473827 seconds)
SAVING RESULT...
DONE!
