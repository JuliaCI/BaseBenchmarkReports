cset: moving following pidspec: 28038
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.274692447 seconds)
loading group "string"... done (took 0.58848427 seconds)
loading group "linalg"... done (took 7.153576017 seconds)
loading group "parallel"... done (took 0.160169797 seconds)
loading group "find"... done (took 1.091172598 seconds)
loading group "tuple"... done (took 1.76303245 seconds)
loading group "dates"... done (took 1.190680795 seconds)
loading group "micro"... done (took 0.228397154 seconds)
loading group "io"... done (took 0.905938438 seconds)
loading group "scalar"... done (took 35.855289085 seconds)
loading group "sparse"... done (took 11.359654391 seconds)
loading group "broadcast"... done (took 0.889615723 seconds)
loading group "union"... done (took 11.645868282 seconds)
loading group "simd"... done (took 4.246908761 seconds)
loading group "random"... done (took 8.705705783 seconds)
loading group "problem"... done (took 1.839068124 seconds)
loading group "array"... done (took 20.1362845 seconds)
loading group "misc"... done (took 1.610434686 seconds)
loading group "sort"... done (took 3.222957314 seconds)
loading group "collection"... done (took 16.544263326 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481313742 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122303421 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113044538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117118832 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143992465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113842911 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121274123 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082959005 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.755582372 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146176666 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117291355 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409339803 seconds)
done (took 5.023935397 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173275148 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081698273 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080482894 seconds)
  done (took 1.297150595 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064464136 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120645236 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06589173 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065748094 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066340342 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065438872 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065038432 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065106356 seconds)
  done (took 1.648654626 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072497471 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067426378 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067459633 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067521996 seconds)
  done (took 1.407139034 seconds)
done (took 5.730428492 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763331751 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199447705 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180741641 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391722669 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12734746 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152878017 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637404863 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325606831 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185370986 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080648427 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10330621 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314724796 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106035475 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.627368538 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073079754 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089458753 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136608571 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.40442992 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066498597 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081233693 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088478958 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126857987 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084062108 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07361204 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143423136 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066708856 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133828425 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079051639 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065754046 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205309161 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.170941284 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659702129 seconds)
  done (took 10.113779104 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094526102 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09514292 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067958086 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135628962 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094743402 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06887122 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070355714 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066639238 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085669752 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126877944 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087548823 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099768749 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064866154 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068510287 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083057946 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203162749 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079879231 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080053171 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069458121 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074090184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11821223 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077044907 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076911125 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076826027 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127902752 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179202394 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095940764 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096764031 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06621151 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079953684 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114286085 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124944886 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064677072 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065707233 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123173897 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093952952 seconds)
  done (took 4.568680601 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.284911404 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138988682 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089902463 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13083649 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063948812 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105710858 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064813684 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079494986 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197059949 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.282881281 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.568383485 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109862177 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102986292 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066833799 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067652884 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066014032 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.30624147 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106239344 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102624917 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078958801 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068864893 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067251543 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339200502 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066764319 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062502123 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066477899 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056647976 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121420577 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067239523 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.01160443 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.068442251 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123870384 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065950158 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099996039 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107437223 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085161472 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.270879837 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067410037 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064545105 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063101346 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149901552 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06943869 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065049821 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.0826953 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102603235 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111448725 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064474343 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066121311 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158327039 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063510154 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077808445 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.975422043 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154175314 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066768187 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07683256 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065014786 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247771314 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084090404 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068067864 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06400416 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17949511 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133142032 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066498187 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065325714 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066720183 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068654377 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.357399179 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065327463 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.894743967 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069304392 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074772229 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068324267 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068679456 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07441525 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071269319 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083913941 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065357373 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073978588 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065011784 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064779444 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065921584 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083306143 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.350461769 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065773298 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067354402 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063668867 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085075519 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095311852 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066202631 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064362907 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098852906 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067169343 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.168133339 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104924234 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06613172 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084491009 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068812883 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112740844 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067199789 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063384235 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091008208 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067111218 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101349681 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069126072 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098109154 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080261467 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066985987 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.390795854 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065086041 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06400611 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06746111 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06482245 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066805698 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065113711 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080978513 seconds)
  done (took 20.812936708 seconds)
done (took 37.911806163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.228685767 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074245696 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074050534 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07435239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073875779 seconds)
  done (took 1.74040819 seconds)
done (took 2.938651924 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118182594 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097733813 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063661483 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094529537 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062870674 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098574737 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097886467 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079729927 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097768115 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06326939 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095267223 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063436971 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063174044 seconds)
  done (took 2.315836959 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08156535 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081672164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069294795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080964595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062908199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080820627 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079529788 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087938598 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079296393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071496817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062996414 seconds)
  done (took 2.032487953 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080595246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082024212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068361517 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080095646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06554268 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079890384 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080059333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08422618 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079751695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07202011 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063068455 seconds)
  done (took 2.023190326 seconds)
done (took 7.559805471 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075770362 seconds)
  done (took 1.255883586 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581698472 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.091908011 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080401872 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110447281 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181655474 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117698001 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272998314 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085052919 seconds)
  done (took 8.878955576 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100819867 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070211077 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07159652 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068588733 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070986687 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070240757 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069759026 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068510556 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067525664 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068698513 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071074045 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067619527 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068316065 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070122892 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067217482 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067249733 seconds)
  done (took 2.389247594 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090722688 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089292702 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072735116 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073409263 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07130203 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071183767 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073350014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072391132 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06961286 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071499823 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073621023 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072395423 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070725775 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064509579 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072795387 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074550631 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070305711 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072991617 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073765213 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073389579 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073632783 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063593361 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070126119 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073004786 seconds)
  done (took 3.039271964 seconds)
done (took 16.751265821 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112783983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070559178 seconds)
  done (took 1.370718263 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080463169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082528245 seconds)
  done (took 1.358937725 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082941681 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064893889 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091414623 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077886835 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065924102 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065410655 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08810744 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065456095 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064918997 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065725221 seconds)
  done (took 1.928490637 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068344126 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077453416 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069972003 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081095672 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073042304 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063290928 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072064923 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067265938 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077424757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062142287 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07062925 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081443908 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070410333 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083094894 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072054944 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067922698 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070164683 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066524403 seconds)
  done (took 2.493200917 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065276294 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066527646 seconds)
  done (took 1.332444985 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066106512 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063111945 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066486562 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066536632 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062861014 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062233406 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062906403 seconds)
  done (took 1.646839993 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.368248945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108864801 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294843262 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069739052 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08047517 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246964478 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064736734 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069191995 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069519898 seconds)
  done (took 2.611742562 seconds)
done (took 13.943778896 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077218838 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084396249 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093702315 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.355403987 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090780768 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065284751 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112940708 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187048335 seconds)
done (took 2.279196806 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209946285 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60420129 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.38322926 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195294681 seconds)
  done (took 2.389171875 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325087034 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084842577 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05801519 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065646119 seconds)
  done (took 1.745568714 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065593268 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068099762 seconds)
  done (took 1.34295235 seconds)
done (took 6.900313765 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065177303 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083879635 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065301728 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065210472 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062949076 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065814484 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062556368 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062819782 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063176101 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065115792 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067629097 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065311792 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065457411 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065379185 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062743142 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062870894 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062581364 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064996487 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062392724 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062542475 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062440905 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064714121 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062615795 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063065476 seconds)
  done (took 2.799462468 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082438436 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06584998 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071341466 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070522722 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069206497 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070347953 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07044213 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065835946 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070564645 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067704863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068826396 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069415469 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067178547 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069152654 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066950011 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06921445 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070377009 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065500506 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06727411 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069006925 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069956095 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065383602 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069422716 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069836512 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068522906 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070410109 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067807436 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065395338 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070916891 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069521671 seconds)
  done (took 3.292047605 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068872082 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062690453 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063362423 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06985641 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062742166 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063681905 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062636176 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063284432 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063908075 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062567443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064525144 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062493472 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062778073 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063836968 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063393657 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066183618 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077902449 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063634565 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062538251 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063464065 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066351246 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063273263 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062808786 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062714662 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.174635822 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062342278 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063082606 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063091851 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063583926 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062741369 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065625699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066342381 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062521028 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069381885 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066406545 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062393855 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066617245 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062271286 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064101696 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062448839 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062441131 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062390537 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062369775 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069029347 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063213721 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064289833 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062647892 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063606014 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062686578 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064661451 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062053952 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062331905 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064386244 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063596758 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066400679 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062132448 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063278854 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062666394 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063301258 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062484615 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062012773 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062020082 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06494293 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063069992 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076449558 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068921486 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062758424 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064214739 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063355038 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065121832 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064496361 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075640831 seconds)
  done (took 5.969596903 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089723918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085311729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064952348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064673467 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061160197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063395194 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067151677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063563958 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065158857 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069123093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06359921 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064372965 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064341873 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076012653 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063813089 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064790765 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0690844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061734564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063220318 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066595888 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063460048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066980723 seconds)
  done (took 2.715986138 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153316128 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069655202 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103725817 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072289834 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066921744 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072258232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06892821 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06932106 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0695986 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067619826 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067426938 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069166221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066449934 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067111387 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067430193 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067562586 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068622206 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067566264 seconds)
  done (took 2.582296231 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076511249 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066362199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08564758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06521724 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065116894 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067530961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069606536 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073300417 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067335832 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064966609 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073562265 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067245516 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067358624 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065047783 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067391456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064901441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067116567 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065753622 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073048226 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069688805 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069572824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073128532 seconds)
  done (took 2.754226511 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077998464 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067404046 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080707487 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068619038 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061204418 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063853944 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068894813 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065488316 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068934785 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067290659 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065281521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06331133 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068564093 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065576957 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068220415 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06514459 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066855615 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065177194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066515398 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061078637 seconds)
  done (took 2.576629892 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085642651 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067191921 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067422372 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07545579 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066626946 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067005962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074410839 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066726617 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066705805 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086247904 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066579049 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066441676 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073968104 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071393587 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066024033 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074074457 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073651344 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074172678 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066337973 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06647526 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086284185 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066771388 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073528261 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066218056 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06639229 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065934362 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066012099 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07148269 seconds)
  done (took 3.218286534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066226058 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06504661 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063047137 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062678951 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063183682 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06316557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063092719 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062655198 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065430645 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062587658 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065475329 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064875413 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065073156 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064721152 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065055756 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065010795 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06512866 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062514815 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062425511 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062423774 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064894754 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065027548 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064550128 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063014557 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062758229 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064642656 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062730832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062605898 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064642939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062476096 seconds)
  done (took 3.152813534 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074712835 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07200223 seconds)
  done (took 1.383162229 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062924583 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079652357 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06309522 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069080526 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068639811 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065677937 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072348719 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06892148 seconds)
  done (took 1.783357661 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080189848 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076826725 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067125482 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080245231 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075719039 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082151014 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130133509 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066076616 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071973375 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063270947 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078589105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064862382 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071168236 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066064999 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070904107 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071203306 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063300291 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071489351 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067398509 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063854548 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066589189 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074087688 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067632695 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060699329 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066367158 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086866268 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075662593 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0651642 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068424849 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072830095 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070892375 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059534383 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065370598 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065636796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063802091 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074399008 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079643618 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067718855 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07377239 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066175087 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075573907 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06067021 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069700786 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071816047 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075251266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065634243 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065993956 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060412118 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063027073 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067472374 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060703004 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065212721 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060194494 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07412956 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068494366 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075287755 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063977416 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067140949 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067839403 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068477282 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071697675 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067035023 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067551952 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064918626 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074279342 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069753475 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073819005 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060555177 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060276407 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063645479 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074700422 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087194566 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071275211 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065911872 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066610237 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06362463 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06826688 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06704471 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070546065 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07092039 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065649107 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070506115 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072708307 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065488557 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067853437 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073312291 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063753838 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067970359 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063535409 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081103559 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064713502 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0632957 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063035102 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075110441 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068430223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065139023 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063193938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072163976 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059195559 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065182931 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065459576 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065048608 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074533546 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068752131 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069121678 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072879768 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071475107 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064398849 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066891686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061696465 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066016862 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063550164 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070835589 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058629044 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066769677 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064890614 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064176693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198272347 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064913913 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066000741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073333295 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071738742 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065131852 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062693257 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068979639 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065795575 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06903789 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073968196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064761347 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060647293 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061363613 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06966829 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065240508 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069483729 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070681267 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068873904 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060607617 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064020661 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071101898 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07473305 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065810253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066540302 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071772153 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067232648 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065305085 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072812026 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068704646 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065268205 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071062627 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066361083 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061036701 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068850788 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06872809 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064944087 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069516089 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06880801 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06812678 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066128156 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064037616 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073373097 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066421828 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064636442 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065845806 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064239888 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075642972 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0678498 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061275899 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063067028 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075037718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064059137 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065777721 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06482322 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068151148 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066657756 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063490116 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065489184 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068128891 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076828398 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070285886 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067657531 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071521125 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077162589 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065515481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067858157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06550358 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066775344 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066728539 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073645562 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070653805 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069925703 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067318099 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062416756 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07086402 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072429515 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064772588 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063187492 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064716317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069646949 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071196834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069769957 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066246662 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063780215 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066224427 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068394621 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068089848 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065071427 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064381595 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07176898 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063843072 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071912449 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066089206 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07531981 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068464622 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060659359 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068139409 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063092991 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071099104 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060499344 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063266372 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064318805 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066168438 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063539115 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067093453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059189648 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070577367 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071174298 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064399492 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063376683 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064125568 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070395855 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06552451 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06826061 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067520873 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069750692 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074039243 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063469047 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067715202 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074087398 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192747241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061037929 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071306632 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064635171 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065361428 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064922687 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064104028 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06895242 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075803912 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072266391 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059747949 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068380323 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065071395 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065561247 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061648755 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070551111 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069346301 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066883802 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072820607 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067423392 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066945134 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069849484 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066136889 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066055406 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068173675 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069303792 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066453888 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068190996 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065643458 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068680956 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.0649764 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063260682 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067868983 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06580402 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066426544 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071270531 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065569679 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0663272 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068001175 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066790351 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066492948 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066197968 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065183544 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069364702 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066758573 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066545374 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068463546 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061577419 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073209641 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065303626 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072823907 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065485848 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06303873 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073467888 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068126891 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070934838 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06659955 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067264105 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066607895 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065198605 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068135572 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072273851 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06353573 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076253364 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073050477 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066358609 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068102729 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06620556 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067579806 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064613224 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066613962 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06685858 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066309865 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065107669 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070134532 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067930036 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066100271 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066872845 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06654487 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065285015 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066250679 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060111881 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064620562 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064998318 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065417349 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074575319 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065757299 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065083742 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064834578 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066217475 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064657569 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062256894 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073073854 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074909691 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065638895 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072198259 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06467511 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066947261 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075226869 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059597031 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06348326 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06316668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063123095 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072112258 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065619909 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07403967 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065003115 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064014917 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062762047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065347615 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06361316 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059286629 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061830535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067220828 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063453808 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063231042 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064281274 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066356507 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064910386 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072870037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063376197 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06485652 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064335461 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061398058 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063601262 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063273262 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06641158 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064599654 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062411384 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061468555 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063927571 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065093525 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065167181 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063861182 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065873868 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072920719 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063852535 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066934599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066624346 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059073596 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066570539 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063898023 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063503637 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063345676 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066846162 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066907717 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064774358 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072131137 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063616179 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065080475 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06433963 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062501046 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063278423 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063917217 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063844717 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063013408 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064762195 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071003766 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061826484 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067386172 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063950883 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06479128 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070507869 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064753165 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067226165 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069902727 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064357608 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065749815 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071162675 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066263959 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.065289136 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064759672 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064483835 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06834253 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062847195 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.06933034 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063775728 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063859794 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065406465 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061406358 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063229208 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063160105 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062562518 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068638284 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063750559 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062256598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062328351 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060917153 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06383955 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065457053 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069655198 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065379745 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065629909 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059222036 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060797375 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063704516 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061982587 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064900249 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066375122 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068575264 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065532438 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063353354 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062882548 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.071579387 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068287519 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067104272 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061458913 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.066989326 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063941825 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065881908 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06476904 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063899262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064536519 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.066723417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064318224 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063263801 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070189422 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065837594 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064325646 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064667412 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063785803 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063399319 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058484244 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063381953 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065328303 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068379784 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065576159 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06359574 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073362276 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061757354 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064135718 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065436787 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063154955 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067893834 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058688447 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064775127 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064112258 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064209871 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058998592 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063254477 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06166456 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06626928 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062668498 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058581895 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07356576 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071596207 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066068144 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063203715 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062513786 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.299035691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063177575 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066989118 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068480255 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069125168 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077615823 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066652206 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066825361 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063581424 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068029494 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070091672 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070820093 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064276634 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062603846 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067482426 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069753321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07278403 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065663349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067199864 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06978673 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069189667 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065035047 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0707981 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063673952 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070064852 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079451955 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067743748 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068206744 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072886125 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073854189 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067726959 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062146227 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067483331 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069330045 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067396167 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068362415 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06770277 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081614275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0700985 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065914812 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065784539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069442351 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066796454 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075362929 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067882443 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067606852 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071473562 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068243617 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075893464 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0702911 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074767699 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069937198 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069370373 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066296538 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066918168 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064878551 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06612318 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067636088 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067108749 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072242195 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074076917 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065908794 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077169534 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074776444 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068432758 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063768239 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065968599 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066603512 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062133589 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067255248 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065585154 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064782088 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064477885 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06605668 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067555554 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071819213 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067361731 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067348345 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066495961 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061164667 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068739545 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068417065 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066721433 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06295958 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066489427 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066937003 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070692431 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069595505 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06410089 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068445083 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067945947 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067113038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06199752 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073453707 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065265799 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068683343 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065569604 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066535603 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067336831 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06946738 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070882356 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067016957 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068106014 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069519101 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068528764 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06364567 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063376147 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071192959 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064013352 seconds)
  done (took 41.826360754 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101044122 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063191829 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062333017 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062431325 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073663815 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062823762 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06170517 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062726082 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062811713 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065026297 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061724722 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061843978 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070484846 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07754383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073763728 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066670235 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062306579 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063005634 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061897029 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063141192 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070744777 seconds)
  done (took 2.803692591 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073956606 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069599186 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073268035 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076060905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067744437 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07040629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072649266 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070854068 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075838731 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066994193 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075971639 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070684245 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066753996 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067232939 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067295845 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070894837 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075870766 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067560858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070642387 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073015974 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071004688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072671917 seconds)
  done (took 2.921993728 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067099959 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066284792 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067973673 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061021515 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066020759 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061959308 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069667409 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.073057269 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069157736 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06534088 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065067908 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065127789 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06728649 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061245736 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066002671 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063431077 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107787488 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068803642 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06566071 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066654535 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061942454 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06771985 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061524856 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061826659 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064888471 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069580041 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067327476 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064208756 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065611896 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065713579 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065978074 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064180552 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068247798 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066773322 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065732794 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0650635 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065882874 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065874328 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061603967 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064612259 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066554375 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062077486 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067098614 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067669824 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064643279 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063834412 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067441691 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066064835 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061441797 seconds)
  done (took 4.613868519 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080186595 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109282776 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068176699 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088820572 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079799684 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075183644 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069513525 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089287149 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063433484 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064551861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081472634 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079290317 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065927052 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070517329 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069249583 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065761769 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067107137 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064915434 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069658764 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065054643 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069817148 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072242526 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079503792 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078641567 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069572473 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064793243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065260866 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070260068 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078335453 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070394775 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070290777 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071029105 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080208883 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071109497 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065221859 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067625826 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081227799 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065758708 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068081934 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063483708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067590103 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069882387 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071927666 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081772664 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066011615 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070829382 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065383345 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063336119 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078046765 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068418521 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073062761 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079572446 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069295918 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066013222 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06987325 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080119024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06569233 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063899713 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068491344 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077835503 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063432731 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069328809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078686899 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06720516 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072268753 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079244732 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070627226 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06896551 seconds)
  done (took 6.390194267 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076005722 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07260253 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080580145 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079978182 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072043899 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072342958 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07212287 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072341674 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071820136 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076860768 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071954671 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092318321 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067401314 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074779816 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07217751 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072374209 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072235147 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072433914 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072192685 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072195533 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072131853 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079661003 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071883591 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079740206 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097922722 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067843086 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072150446 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072025516 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079785299 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072228006 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079586446 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072223399 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072274714 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079752177 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078943835 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071808202 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065351594 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0717257 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072107221 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072056346 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067524116 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079798353 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071767105 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067595688 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071965223 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07159345 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079658178 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078871541 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074219835 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076344186 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072328882 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079457645 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071450421 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071891222 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079529553 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104279858 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079474181 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079258633 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071762269 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079835228 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079245631 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085949301 seconds)
  done (took 6.061160038 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083639857 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074889707 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076385814 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061134866 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064219919 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069667581 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063921009 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063994194 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074064502 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074396931 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07709806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06955312 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072564839 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07690596 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06967517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072355156 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069496452 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069296134 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074491339 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06964337 seconds)
  done (took 2.808781619 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073637369 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083632907 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067242646 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072125062 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06862139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071229187 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068582924 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0689277 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066826862 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068952111 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075741305 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075651309 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067146823 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071051667 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075645089 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07129227 seconds)
  done (took 2.519632344 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074844991 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072080794 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080243791 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066201049 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064331055 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062686123 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065453828 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061239766 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062216458 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077221214 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0660736 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06794786 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065973794 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064454752 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062606632 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068258101 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062519265 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063147131 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065495416 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078060605 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07666384 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064519921 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066761195 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065926043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065650468 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070540367 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065001638 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063614388 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062946454 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065379633 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065669649 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068360356 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062393093 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063271413 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06428931 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062915446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064864205 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065243901 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067812639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065027526 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063573514 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064815934 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064963413 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066584931 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061438699 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065347774 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061649792 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067223187 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062975508 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065368269 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064778853 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067369925 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06541257 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071679199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068179203 seconds)
  done (took 5.024412635 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078680935 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069071227 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061302477 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063690196 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068897561 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067223289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068884172 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067318914 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067154005 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063777545 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067438913 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068055782 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067639454 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0692979 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067018291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068867088 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061590508 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067450256 seconds)
  done (took 2.600095049 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070903817 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065198131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072983333 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065699193 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065745262 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067874414 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061675646 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064104851 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0639687 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065353209 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065707384 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067829377 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064339528 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068224102 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065699429 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065587423 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067643075 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064568764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065500719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061951253 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068083448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064380679 seconds)
  done (took 2.833264704 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091906559 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081373425 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137165405 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078331632 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08311375 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071531216 seconds)
  done (took 1.924956252 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08998354 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078902216 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066923358 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086728468 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072606205 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066609389 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066818894 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067064561 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075315359 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075238747 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067294042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075242796 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075563939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074766624 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0727651 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072564994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066687396 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06680013 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065876397 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08351392 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066798115 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075114783 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066771555 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066597239 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066834297 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074580987 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075179698 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07528294 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066701548 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075145882 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072329795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066676143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075253788 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075598772 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06830578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075195123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067292502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083315985 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072634168 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074871827 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068757177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07305015 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075482211 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071890624 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075281047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06726393 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071740874 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067105806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067151652 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084813079 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072801345 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074334237 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072852247 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07549877 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075474911 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085257279 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076219906 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074440106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072549371 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078243623 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074687361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072568324 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074115874 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07564496 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072444205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075244066 seconds)
  done (took 6.219037168 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081658439 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085929917 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06776482 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07517115 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074369568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066763664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066839906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067212599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066956115 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066768056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106797784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067322255 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074960523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075049762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06730148 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067339683 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067542142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074936741 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06689049 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085413485 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067123232 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074902987 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074936325 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074590712 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075851467 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07294822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067068664 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067099171 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067050124 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067022371 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071909163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067671823 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074824348 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06661616 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074889305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067645327 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067487682 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07176541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067188345 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072547228 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074926095 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083314563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067168591 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066855828 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075531621 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0672939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067045222 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066831228 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067087296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066811028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076232889 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075365884 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075792313 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074592859 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067387311 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06701448 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067223504 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066963436 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067102421 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072689489 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074959253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066817086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084865886 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067338327 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066853284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074527819 seconds)
  done (took 6.135206845 seconds)
done (took 128.118397988 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.1818694 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165130075 seconds)
  done (took 1.728476421 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068298147 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096568449 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076353428 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128184621 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066630985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099575379 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098627231 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077402286 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065666378 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065563987 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065912095 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068142652 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130789287 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065763243 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065313459 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068207634 seconds)
  done (took 2.699064505 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096145589 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156087301 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099230773 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063958436 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096339372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07271897 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064548413 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074292713 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070108026 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064609168 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072788135 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069950029 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064834005 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069848641 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070784191 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071953387 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064472925 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072328191 seconds)
  done (took 2.810815353 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100468298 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091033599 seconds)
  done (took 1.588810186 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159125803 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105581863 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143726198 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340147708 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166150176 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230056692 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.134868173 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129533288 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1190677 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123796008 seconds)
  done (took 3.045538849 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09691867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150030581 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254582951 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113696617 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072326892 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094431 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115189594 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077268454 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080078236 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080493935 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079917284 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075547699 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097845739 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072754721 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073292862 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075519259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101011553 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072133836 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073595367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075516428 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098871406 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065075716 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072626455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071880582 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076429335 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076768108 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06518928 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064959765 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076688429 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073997595 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076356656 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092756986 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076924429 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106330417 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070248877 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107281142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075683763 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073028982 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073755242 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073147859 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078037947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077905463 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071588425 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075106326 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065056416 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075913238 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064717089 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064857609 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077236557 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066785043 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077612952 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07614095 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10632198 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066299895 seconds)
  done (took 5.963943727 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101319954 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103197244 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071297258 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109925843 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099401419 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071997644 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100204538 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092790202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101906281 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069542083 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067743047 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070127275 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082079377 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082777103 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112593873 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103738752 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073226244 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0709469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103183712 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102193057 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067762544 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093935056 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088981608 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101072936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066985835 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069901518 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068143728 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069975039 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077016315 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078209436 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069541224 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08054208 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084426915 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077987369 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066951673 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067501999 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067715242 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079377062 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078949788 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078272704 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077226578 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066993631 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06736855 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06885929 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069442116 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067562814 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079160447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080336546 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078356914 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068989895 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070015961 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067611798 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069733315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079742361 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077182351 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080403723 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079469165 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067517186 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068052834 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071947045 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080377835 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078505116 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07856013 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068900038 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078600685 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067689714 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079789336 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084145114 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06870232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07003909 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0685587 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069667047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069700912 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077315807 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077846584 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069080752 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068969381 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068017607 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080053143 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078551501 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067847263 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077063493 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066931036 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068142262 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069533615 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069250751 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077552769 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079884895 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069323728 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06825484 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068681767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068376107 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067077118 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076304273 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079470891 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077732334 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077816427 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068628037 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077764758 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078073827 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068920478 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078200898 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067503925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069152902 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198770872 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080690591 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077901517 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079019864 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069567454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06854462 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078140344 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080828568 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068284923 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077923618 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080482186 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079483456 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068550792 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081029352 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068659636 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07946435 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070199446 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080607047 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068881407 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080258379 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069266463 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068003328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068450127 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07962298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070970876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068744144 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069690917 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070595313 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080070591 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083162605 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070376583 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081164524 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078518466 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0706032 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079229953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068550011 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079483467 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069300333 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069985949 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067492559 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081067937 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068428441 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068284049 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069252619 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081075299 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068602928 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079836324 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077828277 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068539222 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081329228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080477746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07783026 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08001245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070462858 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068117485 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068246907 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070140148 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077817867 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080224393 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070150373 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069065709 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07832223 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078936647 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067601087 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078643736 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077849425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07837414 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068306905 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069397935 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079855365 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080848391 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077967102 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078114236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077548374 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068398798 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077317528 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077811465 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067883042 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084683645 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068426289 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082524964 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079020451 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076270642 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078257017 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080276782 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080291572 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079637504 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082630043 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0678221 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067344053 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079189246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067449521 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068606741 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07804694 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06895268 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069130565 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082271084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067740734 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078777131 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066964742 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077671893 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066257213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069345633 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082845304 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067317394 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068423783 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212207834 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069830739 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078175385 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08099799 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078997251 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068425109 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069712106 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079351096 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078719711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068274062 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068178544 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069981718 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078153602 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077777822 seconds)
  done (took 18.623893513 seconds)
done (took 37.866291475 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207529049 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152189979 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178571576 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117350424 seconds)
  done (took 2.152051965 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120413485 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099993119 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094308773 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064657265 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100689506 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06434442 seconds)
  done (took 1.978243575 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308859567 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209537379 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180540768 seconds)
  done (took 2.125684182 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197403776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186350234 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390915601 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251676965 seconds)
  done (took 2.563440643 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142780395 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088335548 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066303799 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082796106 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133361898 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159055516 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100960891 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124725121 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07745697 seconds)
  done (took 2.458483234 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145959992 seconds)
done (took 12.856318048 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.195982032 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124765701 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.198903761 seconds)
    (4/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.156175894 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.206977936 seconds)
    (6/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101254634 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099791932 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088397383 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081243842 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.170309419 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212162159 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07308521 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165145836 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076719277 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073146018 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159317975 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114544381 seconds)
    (18/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076285502 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.215370434 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155399346 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165788203 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088133334 seconds)
    (23/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.165021912 seconds)
    (24/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099109118 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.172461125 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138900981 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.173137987 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081534137 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071932276 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07686515 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075625414 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097854795 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079390768 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.189430731 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078748714 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128012315 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070250764 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.172043433 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173139716 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072612314 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.138497998 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082800366 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050855207 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07433479 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191544005 seconds)
    (46/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050340841 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178410449 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091451599 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074359894 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078696732 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074829642 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072672395 seconds)
    (53/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074651625 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071858446 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.140235903 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084673997 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.106005642 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080729523 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068319153 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136837542 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07559504 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066441172 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13164077 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064366136 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120697716 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063830554 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170877202 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075077563 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065468844 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174634854 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09164453 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135389472 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162506073 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064182995 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 0.137210754 seconds)
    (76/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.095937684 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135511065 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144366929 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050316993 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06704769 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.147174351 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074365018 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20287615 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073978402 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151000648 seconds)
    (86/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.196166809 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.066301253 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07355136 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.299495471 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076543634 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106240228 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064718724 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195179235 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073016455 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090058689 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096869969 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094237927 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071378249 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051956373 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069081781 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099927261 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08831218 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.17660697 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053064674 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076463373 seconds)
    (106/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158132301 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.11018364 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115225827 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184561539 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051293101 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065418325 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089136088 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092428233 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060861799 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071253928 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071576585 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050771178 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064893919 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064620598 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074319129 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065103997 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071709724 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069176516 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086846671 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119277517 seconds)
    (126/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.118670388 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118680409 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050880953 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088848049 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134568249 seconds)
    (131/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060583619 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069778807 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085795633 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074882345 seconds)
    (135/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156451679 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098654261 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157571365 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052072831 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091947774 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107415369 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.132063948 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072942246 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070960271 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071462835 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065193845 seconds)
    (146/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086762932 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050517852 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070219064 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05304347 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07112363 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084253774 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093209509 seconds)
    (153/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.15532466 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133802138 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066934562 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089260892 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071313057 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066105969 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05069099 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086386208 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067178178 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064117703 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071901732 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050678967 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.172793063 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086016998 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07123577 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156592737 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065234353 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050853552 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099246689 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090709311 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072549427 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080739651 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073443237 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065658812 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064420597 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.090783899 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06006277 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071861257 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07648398 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.138211739 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086473624 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.192937339 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069267773 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051429697 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068268238 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.147543537 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085057659 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072611765 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 0.282210393 seconds)
    (192/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073123912 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067475182 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.125474489 seconds)
    (195/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118223026 seconds)
    (196/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112132741 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06542835 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067387066 seconds)
    (199/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071068463 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051639341 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089935866 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052539247 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072009412 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069370883 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141557265 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064773597 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066034897 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073369897 seconds)
    (209/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109564917 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052051071 seconds)
    (211/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073496034 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052976684 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067032278 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089250601 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051395198 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054018842 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065187673 seconds)
    (218/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06944458 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064235226 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.165080965 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064825119 seconds)
    (222/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051956779 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061629221 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05212916 seconds)
    (225/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050666345 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185308871 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073660784 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072440055 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065600732 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071791733 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087951483 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051514564 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051042753 seconds)
    (234/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060953912 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070733353 seconds)
    (236/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07261368 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066042026 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051381096 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094453087 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051077001 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063417361 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068712494 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051996596 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069235016 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16373181 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053379925 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13078754 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065088443 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071660268 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072834585 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066851503 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071117384 seconds)
    (253/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182872079 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070677087 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052947885 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064729261 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064552909 seconds)
    (258/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171976292 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051376205 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051311442 seconds)
    (261/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066896537 seconds)
    (262/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05136726 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067166899 seconds)
    (264/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086163934 seconds)
    (265/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052126856 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071069129 seconds)
    (267/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052015294 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061094743 seconds)
    (269/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051964577 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050978507 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05166598 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098244857 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050825377 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072452323 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064337724 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064568782 seconds)
    (277/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051528714 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0508016 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088035155 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065380055 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.1359324 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063324645 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.092874538 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051599709 seconds)
    (285/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051833581 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066217469 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05238205 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072721027 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063814938 seconds)
    (290/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051135399 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063465191 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088877409 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07217416 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06542195 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052057703 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070034554 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051339716 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069695547 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106795503 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064450432 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051331535 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051109494 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066142028 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052128631 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064707519 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070064041 seconds)
    (307/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066248865 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064413993 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17078525 seconds)
  done (took 30.243674284 seconds)
done (took 31.685887046 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083897462 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091707703 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074950466 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090676311 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07984991 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075081075 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071872626 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077114089 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078301582 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079940833 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076753722 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05395627 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072876875 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07307062 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0733923 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089844302 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076932203 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072006519 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072053627 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063965021 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072080378 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064765656 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066872332 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054384434 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077307969 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070620992 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071618481 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072663283 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06452819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065341206 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06897482 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072084904 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064462418 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077065501 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071319561 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072746976 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073903353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075690033 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066826522 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065127623 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073454579 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065211957 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072379077 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072706352 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070912456 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071153548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072041211 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076816428 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090228304 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066868976 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073646406 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074990938 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075144394 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071272415 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068493271 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07215056 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06988507 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09020428 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072569468 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066996116 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072804422 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072974818 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06989101 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072049848 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072156291 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074042278 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074293435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070350106 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073624917 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070431684 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06468821 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072103544 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067806645 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064636801 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074625438 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075754255 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063432275 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070305175 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072121004 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070259575 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064086076 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06647557 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066322704 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071286897 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066698076 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053801908 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068595346 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070307965 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063425242 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07195184 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070393054 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07123656 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066244391 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074445918 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064073884 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06907212 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064488762 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064835871 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065767137 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068119442 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064210393 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06640267 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072784349 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065752199 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070509715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078066811 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064698712 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070759453 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063856961 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06447786 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078521149 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073822641 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064826646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067163786 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064204496 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07147514 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064065434 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064219663 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064389999 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064194104 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06975526 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06428111 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06623028 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071130416 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076220695 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063885447 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067489969 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06612333 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063848213 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069284548 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063895182 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063829027 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200713278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061101444 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067087512 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065326027 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071794296 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067662869 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073008442 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066176523 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072767226 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069734244 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071347228 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070563575 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064044339 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05832367 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068717837 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067231421 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066404123 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064573414 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066467283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06518744 seconds)
done (took 12.357943707 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066191128 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14145919 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098190051 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094050295 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084745672 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065886758 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075261166 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100874259 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066852311 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101793377 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08667725 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084601866 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111064077 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063622652 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065143269 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068718306 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066443665 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080322652 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100157026 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085577635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114700738 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065507681 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093301728 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088855451 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08613945 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100322161 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065779515 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068836806 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068848701 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089911376 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085380044 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068968279 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066078129 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099346074 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091265241 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082286855 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065591395 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.0818302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066087184 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065049432 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066453399 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09674747 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079120002 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079091697 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068899982 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06837148 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066292045 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082586695 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087392021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077736276 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086303389 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101675009 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06802891 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065080534 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064263022 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08457347 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065059222 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068047198 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065577534 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06730073 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065018974 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068578519 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080230651 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080919331 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069286195 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079916954 seconds)
  done (took 6.778588385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083499886 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089472312 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082683459 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083220767 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064668389 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06570305 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066247237 seconds)
  done (took 2.0778997 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067656381 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087279114 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08827096 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087814708 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08353426 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086432813 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075067905 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065975224 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080217886 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066537144 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086103586 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101299339 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066099598 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071717262 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089701395 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065569175 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089463136 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06586865 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06880159 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08898372 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06779295 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081337651 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068825613 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066349652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080103953 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066018212 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112278792 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069645053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067547861 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068884777 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063897679 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10591461 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079495793 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074921359 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065684866 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079551411 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079556631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064369318 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081602127 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070731487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079057103 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066090294 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066775537 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063542893 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069872989 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075869326 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066546 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066328372 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067928364 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085520444 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066180921 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079385745 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068929387 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06827509 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067039221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069294091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075124319 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066860277 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085082289 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067268241 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082134858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081686511 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079309016 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081320381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068448316 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079783047 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07951513 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0684003 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067379504 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06932658 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082189007 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064195545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06685795 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07589171 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067488802 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088467409 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088710358 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066974371 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074436421 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065888156 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065693569 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065603119 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088135429 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068402617 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065388454 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069590817 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068560911 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064495055 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064647414 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069090155 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063964157 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066932854 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068535349 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068525179 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067872492 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082266006 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068163358 seconds)
  done (took 8.723606074 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06811218 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067608628 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069377836 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067046005 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06732452 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067027203 seconds)
  done (took 1.964537581 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092529775 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068855132 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079953299 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072212086 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103515769 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085942277 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086757998 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077644793 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083277655 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078526275 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086457382 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08779224 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092619292 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072077466 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085613685 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071296852 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086375135 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075319181 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07814312 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072684949 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085489237 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072393804 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072421642 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081004139 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0754676 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071352213 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066910957 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078253633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077475204 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077699188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071422434 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075064055 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070295576 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077654762 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086271633 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070222596 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072314306 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076923213 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071880023 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075110467 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087253503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072335612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074040104 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076857691 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077915373 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070084332 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076156734 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074987276 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085146912 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076529393 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076348146 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07104891 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074557403 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076366985 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069521674 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07735394 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076383396 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086163604 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071657597 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069697614 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068283452 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074463001 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076700034 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074462697 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077719276 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076032528 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069611932 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071776556 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0720536 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071439356 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076272798 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068399246 seconds)
  done (took 7.077406257 seconds)
done (took 28.14706915 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540990501 seconds)
  done (took 2.068683817 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600449309 seconds)
  done (took 2.152162469 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.680130822 seconds)
  done (took 8.226839696 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.386947639 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468157023 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.683772233 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128899624 seconds)
  done (took 3.26333139 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.66983978 seconds)
  done (took 2.225363589 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206879713 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193288745 seconds)
  done (took 1.964257555 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371710459 seconds)
  done (took 1.91908406 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105061796 seconds)
  done (took 2.658856639 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258869757 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161975754 seconds)
  done (took 1.977742388 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454111432 seconds)
  done (took 2.010173531 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.793200149 seconds)
  done (took 6.350851579 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.202200227 seconds)
  done (took 1.801772733 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238811524 seconds)
  done (took 1.789896223 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.696997559 seconds)
  done (took 3.251540814 seconds)
done (took 43.21694201 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07879624 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079334589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079645015 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076797669 seconds)
  done (took 1.857651796 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075989214 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072254858 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076018556 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07141622 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075540062 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071827435 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073063653 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075602498 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07140065 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07230123 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071672337 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071416057 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073632775 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072901457 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070242079 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074092739 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074809417 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071562199 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074211614 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071502076 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070352681 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073522536 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073886562 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070771702 seconds)
  done (took 3.308073617 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076725737 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071048595 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074187904 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07029905 seconds)
  done (took 1.85811536 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076555624 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091050243 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088182918 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075996444 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090782671 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084725064 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068577218 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067547978 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072240165 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07616225 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066984757 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094231932 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086496841 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075733181 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077670666 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064971289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067107707 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085833665 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076103115 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076436504 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068428937 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076040948 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067050857 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086854297 seconds)
  done (took 3.423450642 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075994122 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101605517 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077288339 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086279308 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088802949 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064478547 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073399176 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088055039 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121680243 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064665544 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069359776 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064303518 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07190894 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064583643 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075047837 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103078777 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106474754 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067406004 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094298165 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064193485 seconds)
  done (took 3.192732858 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072037568 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069410531 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064676172 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068111189 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076195348 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07181168 seconds)
  done (took 1.994559921 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067227733 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067013151 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066164717 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065541363 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070820106 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066230937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065553401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066700667 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066099792 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065656207 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065640243 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06477753 seconds)
  done (took 2.36482965 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192081129 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067227019 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068486109 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064771754 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069383437 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065320169 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078754621 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066896281 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089131036 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065105853 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065581755 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067301284 seconds)
  done (took 2.529508396 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202099133 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075129707 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23423514 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13474522 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109836861 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113782907 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102265252 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111815114 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141926162 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100170095 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164985055 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164030364 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105117249 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134765529 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087855901 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09604528 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153394869 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16037501 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101838813 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162912812 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141569642 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122400809 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144378706 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099555718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104454058 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120551074 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069979848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078683483 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167785033 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128966752 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1443366 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108947324 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092084314 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172882728 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168864724 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140505501 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131808643 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082427575 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100110658 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130519628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195463593 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087140729 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159651841 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244397575 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080826251 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131352191 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118493212 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119186579 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105179577 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088535561 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1446341 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180545053 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137688156 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085746251 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110635177 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119452119 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114110977 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102189544 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179931896 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158546411 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125278263 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070535003 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098574906 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151708887 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130675169 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108296674 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125106918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09261073 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1322576 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151963605 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116721936 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141442142 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127146058 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087606203 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117395132 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138292368 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126560131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167063685 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122627155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071421172 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123314883 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102091233 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079805876 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.13860164 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073878247 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171942772 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09638605 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10459875 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110823238 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107364922 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106560405 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158574495 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14046133 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243673528 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064900073 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103155774 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119275076 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146527521 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086142105 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107694001 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114436053 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076222082 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138240045 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074600059 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122292342 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07455321 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12350929 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131125167 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074787146 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121061046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099647287 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098899288 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131107002 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158703208 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087961353 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081904119 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165274671 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120881845 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102611088 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141918339 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153408127 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097325247 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101457043 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147307435 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177689205 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08867224 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160121735 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105924871 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082732974 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085894646 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122379013 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110517806 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120324923 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081107569 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117116158 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165920513 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07406406 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093951588 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131073 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077585841 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079325486 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101362331 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098599672 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093214586 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098191952 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102178165 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135197015 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120959577 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102357253 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267233176 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098021124 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168865897 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087576787 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098342501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102597127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068254661 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134875664 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155462887 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078480085 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162387023 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122465585 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10383433 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117284641 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082375085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139223841 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077519899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070554056 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142979607 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1097946 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109105153 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148698404 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103018735 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125592927 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119480131 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133775022 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131683262 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127133525 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104782207 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087067703 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110483045 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123576447 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072048678 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090532355 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07920851 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101963536 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094122908 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081843858 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140700824 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123441422 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09855022 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110770812 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095226658 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144226019 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075164105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127293716 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118078581 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09294333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149017123 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1491089 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128721441 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097606597 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141820925 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068564801 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072281527 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087467784 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265166774 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082896828 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083205393 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116610397 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145141776 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128310093 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136921314 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110563745 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118830497 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152358687 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068658307 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113699089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146026921 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12154897 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10240924 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089422375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09769401 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140308354 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106974625 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180042088 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112821735 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124384413 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150975334 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097655462 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078509263 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101734466 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134438354 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10304949 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142890042 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097887394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087383268 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108421072 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073156857 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098446992 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125401693 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118329999 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133195616 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112650611 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13107955 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07593953 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115678485 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118179174 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121380142 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063099747 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11817097 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157973487 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091611442 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116015786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150131476 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078472489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122103106 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317786642 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143423417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083945716 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108541089 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116372862 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126706556 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118492803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139124642 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107677423 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133261854 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108582429 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084509582 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08601568 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095342461 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103486385 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092686611 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10673035 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11265171 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094112092 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130295202 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102094239 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107505808 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115857324 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095686617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088114634 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095943668 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172593491 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117840759 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168782279 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097299658 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143821509 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162311083 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073296169 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077968387 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076594222 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137748711 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082205944 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128789142 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096305458 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104649097 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121953999 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140626491 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094113083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067860256 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106927257 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132443254 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110694135 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097182719 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103170713 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160373189 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098464414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0779654 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111427715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102876075 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10066922 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169183349 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060122155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239870182 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075454628 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080314726 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126406675 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151196862 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080083683 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102048813 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117974043 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109690039 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126126749 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100963484 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09785175 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112929328 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147704242 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127075072 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088678213 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1118062 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12795075 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155882936 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103192718 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094412734 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168739484 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149916092 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157784151 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08808401 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114198818 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112709448 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106419727 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137803441 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082106669 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161668057 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080790709 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133982774 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102957471 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088911593 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128616898 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113676874 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086518866 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146267056 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115749994 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081114708 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076629093 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116586888 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118788853 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105267533 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073988877 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135827277 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071695767 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129833737 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165495009 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080070651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102032559 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093704494 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223220521 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108390173 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101590734 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088800802 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097738019 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171319507 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087115846 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148311734 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139913218 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111729961 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13566954 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097888598 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633895621 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076607128 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150218867 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11522446 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171000621 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096819027 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11629987 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108189178 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123364787 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142581071 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104571477 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173348254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130191365 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116973166 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07911187 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101431397 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102810575 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087955884 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103300878 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111853115 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11514146 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092312109 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114647589 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121915431 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081049177 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093724865 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153855073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115459134 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142531822 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138284814 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083760392 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116179326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136027763 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078449524 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1195117 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149024795 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104139216 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096326225 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079180244 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.0994887 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313467728 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072192806 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161417477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118970664 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108262432 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112001243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113130398 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129914788 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106558982 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120879073 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093299239 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110357023 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112110432 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080990662 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07690544 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104232416 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111703094 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096693191 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096968744 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097052436 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149539764 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070639401 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094638757 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102133667 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143472046 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171249589 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086613175 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081152893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117025774 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111522209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111989084 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118440386 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078237871 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080712798 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080694036 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076166148 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106312066 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110568416 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102662303 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109939263 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161946135 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081174837 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220254692 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094000105 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103189083 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068770674 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07731148 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094171217 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096418461 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106727883 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098911443 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167571517 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092720756 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088178218 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090906694 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072101486 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080999218 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124624689 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253420542 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117795252 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097284128 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062179768 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108274655 seconds)
  done (took 58.148481027 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10733522 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081577698 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096402367 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151134207 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121564596 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211080299 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156463691 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198139645 seconds)
  done (took 2.796559901 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066710197 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092217553 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098613948 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081099505 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065380825 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067924801 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221755174 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079728012 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065326864 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086881046 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078825517 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068300529 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412749988 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065078305 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066837601 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062119986 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066227634 seconds)
  done (took 3.412356667 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.361748975 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599717341 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368022519 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07221381 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.874817652 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088780693 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.071355278 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126588106 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07261678 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525348923 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702995643 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126443378 seconds)
  done (took 18.667109489 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074855412 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068416674 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082834648 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082317397 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071744377 seconds)
  done (took 2.052892675 seconds)
done (took 107.20045416 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078378162 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.373594548 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052781739 seconds)
  done (took 2.127971177 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081966095 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08380014 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083230299 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081677896 seconds)
  done (took 2.011366853 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07323539 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074548359 seconds)
  done (took 1.822655011 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222558792 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.155421676 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085474319 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080450458 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077738109 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077692768 seconds)
  done (took 1.915734612 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071595239 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073910905 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071888187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075518872 seconds)
  done (took 1.968588663 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074724026 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051804677 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053799603 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055333517 seconds)
  done (took 1.911773245 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084613941 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077266876 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077168132 seconds)
  done (took 1.915393026 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100055542 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08359975 seconds)
  done (took 1.860128223 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080029368 seconds)
  done (took 1.757642369 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097727049 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111734415 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12873492 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108124543 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135857094 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107003488 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084373549 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085647964 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075683682 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086467947 seconds)
  done (took 2.697821134 seconds)
done (took 22.203472127 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076060025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.458547726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35959288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087839744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668565878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355893351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981965501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090982676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112030224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066448882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082523541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648279893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972982926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.416946924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960503249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317748455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650911848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06756824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066998086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066823468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967502644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067057021 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067263246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067177096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649112752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369792332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067291367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322698595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066575422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068460391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353475026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06727284 seconds)
  done (took 16.306718462 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069439319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115913668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072668724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082230118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069240963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068642187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070466163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068246063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117522509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066979701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083127846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067333318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070960851 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067593993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08586243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067231484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067914479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067466586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067768778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067278502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085011918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066626517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067665883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067292221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067030596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078433767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067080664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066994575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067263302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068918526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069742245 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06782436 seconds)
  done (took 4.04272321 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113083303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123393452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072359106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101938455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111209245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068839786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141163461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091392518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125500219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067222534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083679122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067021081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099308068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067861472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086282592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068167405 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068604148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068001301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067941914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067984822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086134542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067015129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06738434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068011072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067584924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080583278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067536519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067826034 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06724768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069287726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070430694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068080815 seconds)
  done (took 4.298549451 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071569004 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074400163 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082093723 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082793037 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068626282 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070304859 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071062938 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06815765 seconds)
  done (took 2.282731252 seconds)
done (took 28.614007653 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077864334 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068584503 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07128558 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079309499 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072047954 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077585001 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066920552 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073266325 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070975231 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07186925 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073755348 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066363354 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069998002 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066412475 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073070945 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06724191 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077868696 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070639127 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077576005 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078093663 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069281731 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072343784 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073360193 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07804384 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077799835 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077811269 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076444409 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071806137 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068272567 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069464314 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076071441 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082262368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067568486 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077763405 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066788419 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066637441 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070641493 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066836157 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078183794 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075647489 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068669686 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075503328 seconds)
  done (took 4.732358543 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086929115 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089690663 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083516696 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061053759 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066033775 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064551588 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086602962 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058531343 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058524675 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08625483 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054969866 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058236171 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061588506 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052926775 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058122354 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055593074 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060384635 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054732541 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05822644 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058707972 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086891703 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053544758 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076362479 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061830194 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058028629 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060729269 seconds)
  done (took 3.410203804 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073207287 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083279747 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087608753 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123536005 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101761719 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075607417 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078406683 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091510773 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083815675 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065443717 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069928635 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091864852 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086601728 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072786481 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066916732 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08332551 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080591055 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067860737 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072544 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090702094 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084089159 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083537757 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090979513 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079524242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066106802 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068400484 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070188071 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079705428 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070846269 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075032835 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070155799 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069792556 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067934242 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077733322 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070308999 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068509002 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088728784 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075699125 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076599117 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06693764 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069898761 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067695852 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089835718 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124153386 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066464476 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073396966 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074323346 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075726377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066831353 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084860269 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077442797 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065843082 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06950211 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066010666 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066616931 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079108863 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068501689 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068688465 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075269515 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069566521 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088227682 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070762121 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081681058 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065948568 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073888569 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065817716 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06752308 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065687484 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090757848 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068368575 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106421283 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068512432 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067521226 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075052289 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073857659 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072918544 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067027762 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081415529 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076623688 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070402688 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074728561 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069902875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069248587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086853171 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068791728 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06825665 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067925553 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072473004 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068988685 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067574464 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079600171 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066496203 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069575093 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082941584 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065977782 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06776292 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072650098 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071508133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066061465 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077465911 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071286712 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067707188 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075363359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066733882 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069782756 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078126335 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072904607 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065868936 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071099774 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072797592 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067521379 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068048803 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069167155 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068376405 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074867752 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072431034 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070583957 seconds)
  done (took 10.484700448 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158098501 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153060414 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069969029 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142936758 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075589838 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078340364 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145096426 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093415327 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07850047 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068346569 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067835571 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109046453 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104201849 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114382472 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077685524 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066862569 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082299416 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112484597 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148133559 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141332538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08221346 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075693249 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069012714 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068077618 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069522866 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077415297 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084086939 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075830029 seconds)
  done (took 4.421942011 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08104936 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095585918 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073130899 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088390315 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089883804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067284154 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069278113 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068723495 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079808011 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077884909 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06698354 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072529507 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073292036 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070122039 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067832272 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073630815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074112923 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068823455 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070314944 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072184008 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076300767 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090500555 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070902105 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066611931 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07174097 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066197886 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063422687 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083663677 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067108957 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090215861 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06521886 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074693279 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080354617 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067508961 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067093165 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066694516 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067086497 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0665153 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06883937 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06560597 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065532066 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056647902 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065975364 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078842127 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072554518 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055830058 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071855263 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071575006 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072143145 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064828439 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069686484 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069858155 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06984422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074018184 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07158235 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071630191 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067687798 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073092603 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074263774 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066891952 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064011301 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065290056 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071028787 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065229554 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074788749 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071139918 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065829235 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066200087 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068250654 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072451727 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066625869 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069763921 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06459614 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068610468 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070974257 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06857906 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067298909 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065237148 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066558738 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067027467 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054531867 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066615331 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052885958 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069500682 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064932183 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065022342 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066339186 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071206872 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079137276 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068000646 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072428919 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067331747 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065807662 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069480938 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059296934 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069222228 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081637864 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081453963 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066746449 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064571268 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08052956 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071092474 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065753533 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055304111 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073710561 seconds)
  done (took 9.110021753 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087451215 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06922889 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08212098 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089278622 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.084703033 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073437579 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075336687 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068560737 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081054313 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072708538 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0755148 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06717045 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076811953 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076027543 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069221606 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07587584 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07100572 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081548796 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081496805 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06800219 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074729726 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078957061 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087688927 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07915345 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077089202 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079124417 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088152735 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07129598 seconds)
  done (took 3.907415694 seconds)
done (took 37.756549317 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.776219833 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.029089514 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.774724121 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.173601625 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.865936279 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.9864449 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.834090594 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.767746728 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.901100125 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.810097992 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.04720956 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.806411232 seconds)
done (took 65.481557162 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.802078618 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914757791 seconds)
    (2/2) benchmarking "String"...
    done (took 2.040292514 seconds)
  done (took 5.66717544 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.080742982 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.451406135 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.002158428 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.768538762 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.774146762 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.003456955 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575150465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302548372 seconds)
  done (took 30.590976779 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.928091447 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.993278424 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.460571356 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.498998194 seconds)
  done (took 15.642770761 seconds)
done (took 63.575431246 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.796163706 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.80446419 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.798823049 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.753316226 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.828817122 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.790367278 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.998170265 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.963061143 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.768398642 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.75768896 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.771237812 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.203185784 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.772966285 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.933186505 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.768182159 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.774415279 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.845006007 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.195286682 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.926876547 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.782414199 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.79028405 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.817963892 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.770655762 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.779776097 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.807523124 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.772491583 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199488388 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.777230376 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.581936023 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.77332488 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.814837449 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.072164872 seconds)
  done (took 204.901196771 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.770616301 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.769713376 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.845669493 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.811652008 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.302092063 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.951808085 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.88765846 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.346190853 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.774462632 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.792457301 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.920655462 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.772926719 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.943289095 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.721655391 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.806760151 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.772648912 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.044259673 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.958345246 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.818422579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.936175031 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.796483506 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.792211945 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.74437981 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.907147687 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.810889269 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.84977571 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.773170811 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.788126577 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.969363769 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.994431818 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.79854766 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.8144148 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.980082182 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.644072642 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.793445036 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.775443788 seconds)
  done (took 169.895872101 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.936010802 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.771762012 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.770379569 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.772097163 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.777328047 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.772412919 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.897712149 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.897556367 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.227622245 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.103991773 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.824718546 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.599039864 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.7725428 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839894798 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.785085623 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.772906435 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.78681247 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.798020113 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773446691 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772396688 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898871625 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.784751623 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.931783914 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.780025829 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.773585766 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777703904 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.143837374 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771507147 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777433412 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.123812506 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.022500658 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.773715214 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.772624677 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.668786732 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.772828858 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.855991595 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.774530291 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77868801 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.77352158 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.772951497 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.992361772 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773822947 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.774154805 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.776732233 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948838763 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.776319919 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.898257921 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77336004 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.262120778 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.773301317 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774343531 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.723681497 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.438508872 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.771720218 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.771126982 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.772347676 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.775691176 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.771711736 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772374908 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.778035538 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.624772339 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.849403184 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.77434238 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.776120611 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777590115 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.77220646 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.982795409 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.774513328 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.013449444 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.829841886 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.882491991 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89303886 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77508747 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840277315 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.868049521 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.773859099 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.773237507 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.77290546 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.773323217 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.854542078 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.773530765 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.892244019 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.780472791 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.773894641 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.823871683 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.84252277 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.773378786 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.659186038 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.775890641 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.772925117 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.069594546 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840884409 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.773066784 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.773093156 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774079207 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.892746928 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896471046 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.532536705 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.775292691 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.773373142 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.778922317 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.95535608 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.965872351 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774927366 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.013672837 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.775161328 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.865875703 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.780078239 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.776084824 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.774214534 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.807605988 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.77594633 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.836146061 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.775333178 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.145966618 seconds)
  done (took 402.423366598 seconds)
done (took 780.924570397 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.456165563 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.420591102 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.532175996 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.439422053 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.409751163 seconds)
  done (took 13.974744019 seconds)
done (took 15.690754903 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.868390834 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.868328754 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.800523059 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.864951924 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795927354 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.865057415 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.846099015 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.800669521 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.832162845 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.801150457 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.832300515 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.801123426 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788025636 seconds)
  done (took 25.483840341 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.008118176 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.011591579 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848111047 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012859307 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823493038 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.007973359 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943282166 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928212932 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.930119748 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.792585709 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.790069062 seconds)
  done (took 22.815575619 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010406515 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035048329 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.8541074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.020990063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.828533554 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.012636396 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942611654 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.930966246 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932210549 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.792479717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.790622757 seconds)
  done (took 22.86995856 seconds)
done (took 72.885906116 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.785402969 seconds)
  done (took 3.505522873 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.807462826 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946821788 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792342851 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.788506662 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.785817247 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.786520715 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.789457205 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.785531477 seconds)
  done (took 16.203079777 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.785393921 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.785988259 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.785600867 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.783003947 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.785521457 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.785984693 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.786252679 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.783251691 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.783604435 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.782562464 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.786057175 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.783167513 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.782953805 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.785689757 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.78387512 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.783805243 seconds)
  done (took 30.274005883 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.785363724 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.78341235 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.783343324 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.784015809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.784028572 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.784071107 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.783759737 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.783140521 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.783269766 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.784088675 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.784013686 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.783691022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.785112362 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.78487976 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.784465936 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.785384545 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.785128836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.784852116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.789450275 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.785297069 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.785403226 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.785437933 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.785142841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.785556555 seconds)
  done (took 44.556079477 seconds)
done (took 96.257068575 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.705113096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.195759865 seconds)
  done (took 8.622896948 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.789109831 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.786716068 seconds)
  done (took 5.337073384 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.787602862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.788208063 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.787737057 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.787726437 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.787181132 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.787544084 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.787664601 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.787990247 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.787445261 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.787637455 seconds)
  done (took 19.599021433 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.788924319 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.788663916 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.785829181 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.788326856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.787692001 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.786384395 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.788634338 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.789341908 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.78945658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.785878268 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.789024558 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.787756589 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.788717634 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.786703056 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.788661544 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.7874184 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.785773484 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.786831839 seconds)
  done (took 33.904098234 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.789357687 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.789409635 seconds)
  done (took 5.302354739 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.786713373 seconds)
    (2/7) benchmarking "second"...
    done (took 1.786682709 seconds)
    (3/7) benchmarking "month"...
    done (took 1.787027489 seconds)
    (4/7) benchmarking "year"...
    done (took 1.786547819 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.78649374 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.786200048 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.786938814 seconds)
  done (took 14.231118508 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.790277494 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.951814266 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.02221748 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.444894497 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.792040146 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.793915562 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.74616435 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.793108314 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.794660644 seconds)
  done (took 19.853481897 seconds)
done (took 108.571006585 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.624700503 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.789223635 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.143642217 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838001061 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.841262827 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.083202307 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.797715726 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.006149067 seconds)
done (took 42.847456062 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.7976789 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.345233395 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.376987805 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.175683168 seconds)
  done (took 12.623147888 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.770788127 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.312951837 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.827442073 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.381459652 seconds)
  done (took 20.041128738 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.153669372 seconds)
    (2/2) benchmarking "read"...
    done (took 2.1471471 seconds)
  done (took 6.032061995 seconds)
done (took 47.219797817 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79202912 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.791679282 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.792467754 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.792880637 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.790479245 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.791434119 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.78953773 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.7896012 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.789071829 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.79173605 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.79179847 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.791770415 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.792199108 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791789244 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789230049 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789151226 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.788507528 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791710172 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.7895609 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789649722 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789388302 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792943874 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.790021113 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.789754384 seconds)
  done (took 44.705612004 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.792384933 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.790866769 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.792960396 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.792693559 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.789764647 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.793847977 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.792553616 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.791084771 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.793675354 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.792761332 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791339325 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.791088057 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.793851474 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.79118041 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792815446 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.791688717 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.7935186 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791426933 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794125254 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.791815177 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.794696276 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791650506 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.79262106 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794007997 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.792120353 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793604666 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.793890489 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.792239719 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795449412 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.792419806 seconds)
  done (took 55.506651091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.799602161 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.802200874 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.793835324 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.794576762 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.794086851 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.794004577 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795004835 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.793945497 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.794965605 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.795147301 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.794243468 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.795210867 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.795302638 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.794700572 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.794682965 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.794688251 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.795540102 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.794731072 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.79547727 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.795608657 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.795123241 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.7953809 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.79568803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.795388394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.795458811 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.796011335 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.795758128 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.795938391 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.795973949 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.795601235 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.795277972 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.795808557 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.795870411 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.795579937 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.796644672 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.795807589 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.801495988 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.804652026 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.796041625 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.796492856 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.795975107 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.796623014 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.797982072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.797099242 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.796447096 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.796415618 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.797071501 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.79723448 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.798105006 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.796076155 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.797615708 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.796759989 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.798556551 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.79754015 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.797652705 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.796987935 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.796668406 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.797619183 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.797525692 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.798444051 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.797274539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798185765 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.798451278 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.797857386 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798414841 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.797796292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.797749747 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.798705812 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.798410703 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.798248993 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.797402403 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.797910653 seconds)
  done (took 131.08960719 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.798032142 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.795603411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.796030503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7963988 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795721278 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798558919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795794077 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798093323 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796879198 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797753025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799205691 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797919945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796416609 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800170557 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799129953 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.796324071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.798590459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796365868 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.799460577 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.799768236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799721474 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797070563 seconds)
  done (took 41.282685895 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799128838 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799794716 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.796782391 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79885876 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79717979 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799159054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.800104872 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.800140653 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799960548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797625243 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79779929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800220806 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797978597 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797344222 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7974486 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798042712 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8007567 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.7976245 seconds)
  done (took 34.109929021 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.798158449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.797920169 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.800538907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.798029248 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.798176179 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.801250108 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798111356 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.800493085 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.799661865 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.797935032 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.801205733 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800085558 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.800931122 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798577542 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800015078 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.798700448 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.800921056 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797900561 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800835871 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798411861 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.798596448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801404474 seconds)
  done (took 41.323288021 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800455915 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800747077 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797690612 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798782276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.797927616 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.800967787 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.801517573 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.798743776 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.801602687 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.801551965 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799627265 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.802145424 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.799851594 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800709814 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.799316545 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799863598 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.802191959 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.800951044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801656633 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.799934306 seconds)
  done (took 37.741993369 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80376622 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802650838 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.803811756 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803608067 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802867213 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.80327985 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803393053 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.803488934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803413896 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803581663 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803337844 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803659532 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803099616 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804136587 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803614705 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803207686 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803685488 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80439025 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.804422982 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804086352 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803813736 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.803853539 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803617727 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.804638493 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80427145 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803523143 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804672114 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804687088 seconds)
  done (took 52.242274097 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804621724 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802937748 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.801057746 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.801583095 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.800651545 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.801131898 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.801993736 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.802083779 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.804774352 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.802738716 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.805199178 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.804984202 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804093532 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.805015523 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.804204139 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.804778889 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804669835 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.801762875 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802155785 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801633665 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.804398266 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804243953 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.805165171 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80220088 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80202139 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.805567856 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802573943 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803181672 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805314742 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803715828 seconds)
  done (took 55.839791615 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.824761959 seconds)
    (2/2) benchmarking "in"...
    done (took 1.824120538 seconds)
  done (took 5.389147445 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.803048619 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8059769 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.805393655 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803288681 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803577333 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.805978471 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.806327278 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802819625 seconds)
  done (took 16.175603758 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.805732698 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.806113258 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.806082078 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.805482943 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.806037169 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.806618875 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810632338 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.806220229 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.807313184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.806714698 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.813424548 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.814475423 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.808230356 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806372975 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.806006455 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807866996 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.807164531 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.806547986 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.807696277 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.807183629 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808015862 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808219978 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808604201 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.805668084 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.808467815 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.81671966 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.809920245 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.807594574 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807443472 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.810027371 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.806969458 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.80457871 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.807437893 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.808233568 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.807397108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.808040559 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813609195 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807822455 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.811874095 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808789119 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808432874 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805164893 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.808487201 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.809231451 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808503756 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.808442574 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.808854278 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.804914045 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.807942369 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.811452075 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.814808286 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808813479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.805987686 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812064546 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.80983641 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813390586 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.809299292 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.811765559 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.81817576 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.817382277 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.820276141 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.816123584 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81102281 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.809635964 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819672187 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.83312755 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814112467 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.806972011 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.806598232 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.810000217 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.815019863 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822096022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.818734923 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.809923543 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810364657 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.81029825 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80928512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809530559 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815208078 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.812987078 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.810062999 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810832751 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819850324 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833371703 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.809509257 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.810540156 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.809862051 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.810285037 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.811162077 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819665182 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.811862944 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.810231589 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.809321136 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.810883803 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.812311265 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.810387878 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.810914565 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811044175 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.80860385 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.811771535 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811534817 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814680806 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.82054638 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.811806757 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810927495 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.817658596 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.81151601 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811012567 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.816802058 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.811615237 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812749525 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.813063636 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.817684771 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809690586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81502591 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.819787321 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.812107956 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.812881064 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.81219489 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.811639841 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821286674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.838657587 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.812503 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.813135202 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.817260686 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.823457398 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81309565 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.814676242 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.812289985 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.810160035 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.810566084 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.814050621 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.813310154 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.813595876 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813201351 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814501734 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.8099125 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.81246137 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.812581896 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.813832381 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.8148599 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.812299189 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.813907489 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.815884002 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.813885249 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.814834056 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.817992826 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.813007598 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.814947603 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.813830953 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.811281761 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814528062 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.815042076 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.814556379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.81414966 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814037202 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.813860756 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.814220123 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81422887 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.814362001 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.814660269 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.815615026 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818451593 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.815250235 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.817973376 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.81411018 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.811935837 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.814417809 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.814299855 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.814097611 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.814677831 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.814173613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.817703871 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.82372476 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.814395232 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.815242395 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.817228406 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815504234 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815096322 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815677871 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.81873299 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.823035008 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.815387901 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.820142872 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.815407372 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815994191 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.816236481 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.81600698 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.815434543 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815461733 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.818897101 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.823576372 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828011898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825822327 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.817459449 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.82078269 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.817108738 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.820852496 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.820328774 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.816458157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.816254873 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817041448 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81751719 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81638699 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817951981 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.816290462 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.816655914 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.81696409 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.818083027 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.817791056 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81766862 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.816775652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818440205 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.815343231 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818732045 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817624927 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.817646146 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.81555385 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.816799508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.817213066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.818374625 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.817947541 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.823837333 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.815922368 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818654245 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818497247 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.817792889 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.817027434 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.818108203 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819498534 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.818317495 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822384931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.819130308 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.818535243 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822942446 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.817565375 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.817196389 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.820439798 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.818655104 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.816654625 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.82093095 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.826139586 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.818132537 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.818837038 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.81879214 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818131768 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818869184 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.82448641 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.81671167 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.81809304 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.819360177 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.819598789 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.816616693 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.820312636 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.819643146 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.819272415 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820599952 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819610531 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.819390956 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820811505 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.818943589 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.820594616 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.820280694 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822365813 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.828572079 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.823618052 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.820019061 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.820864519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.82198332 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.824760127 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.820826652 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.82040383 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819364106 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832226644 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.828788202 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827082269 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.822345684 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.820584951 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823835135 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.821798212 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.824590281 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820368379 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820274432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.821005299 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819967396 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.818217105 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.822011549 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.821070231 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823201404 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821697429 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.825270051 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.821785334 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.821037773 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.821929892 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.821699578 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.821635673 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.820575505 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.822000509 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.823000631 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822363452 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.821595908 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.82133235 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82616715 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821729174 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.822790554 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.822364498 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.822247878 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.821320388 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.82330132 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.822401635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.82495112 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.830692265 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.825325201 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.831475566 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.823821874 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830817797 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.824793436 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.825766235 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.831412428 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.819840468 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.821667334 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.822335367 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.822860532 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828199808 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.823442777 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.824480012 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.828281785 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.824229854 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.823456168 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.823862872 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.823399551 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82390828 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.824677326 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.831319238 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.824604668 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.82742778 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825741995 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.821264959 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.824982039 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.823899765 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.823010355 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826868544 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.824775035 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.825130545 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.823361015 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.82394079 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.824995357 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.824259974 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.82394053 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.822349507 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822830099 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830137476 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.825486419 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.828197322 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.824758663 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.830981899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.825349673 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.829897848 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.825585159 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.824924573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.825536036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.82410716 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.826184653 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.825328998 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.825884368 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.82544889 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.825822999 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.829606819 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.825356525 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.82702125 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.826497839 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.825611477 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.825828699 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835513497 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.850349824 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.827430228 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829702395 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.824320798 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.827727315 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.830009746 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.826337584 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.824070728 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.829449029 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837394145 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834521379 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.826980688 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.827474994 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826391749 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826879237 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.826849988 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.827300723 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.826459025 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.826684147 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.827565879 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.827543054 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829715874 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.827197745 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.82842446 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828261595 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.827862249 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.835665971 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.827305001 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.827963721 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827239828 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.827039722 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.827586614 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.826721832 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.827805803 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82738833 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827902839 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.829032812 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834261377 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.834725038 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.829140065 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.827259337 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.828594243 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827975208 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.82806759 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828815849 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.829146883 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.828581455 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.828756139 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.828243505 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.82846909 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.827814332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.828186553 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.828880114 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828613365 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831361098 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.836157592 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829140111 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.827391479 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.828521466 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828516084 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.828660935 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82900957 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.834963251 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832299225 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.840284672 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.838287637 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.832686098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.828760362 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832054452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.83731541 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.82821591 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.829793355 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.829647463 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.83126874 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.831310704 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.833145443 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830448923 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.834827603 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.830440554 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.829559253 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836398246 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.830634758 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.830750797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.831343622 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.834569802 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.829637404 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.82752544 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.83067313 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.83061336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.835098134 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.831798134 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830367505 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83184 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.828648734 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.832200795 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835187546 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.830952251 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.832482051 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.827819577 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.831834655 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831050662 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830030681 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.828975097 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.829884166 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.830635364 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.834166168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.838118028 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.829189272 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832667643 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.832084121 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.831763701 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832497309 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832866127 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.829504302 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.830353983 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.831646598 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832247549 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.832218369 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.834329366 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.831897958 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.833863747 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.834403112 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832869018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836163687 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843129688 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.839330303 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.829525064 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.83207988 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.834238882 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.834689491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.832379637 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.83303982 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832137237 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.834125374 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.833177805 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.833452328 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.833781522 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.836360733 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849094473 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.832884343 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.833624332 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.833188025 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836744037 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.833220686 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.830267226 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.833932084 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.834933378 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.836302703 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841245599 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.833721099 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838431268 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83259164 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.835143975 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.837658759 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.836777408 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.842851972 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.836651787 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.834321308 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.834748801 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.839087538 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.849705349 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834708631 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843152457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.863395169 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.834850357 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.836650884 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.834809872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.834784667 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.834972451 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.837117679 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.835419263 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.83518574 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835822833 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.83517834 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.837119155 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841235644 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.836363812 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.83531454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.834528186 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.835869099 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.837042447 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.83290828 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.835717417 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.834669003 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.835878957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.835623472 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835996709 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.835760204 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848219241 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.845538311 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.83540451 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.836510194 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.834853724 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.838395176 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.839740607 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847085027 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.844792695 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.835522739 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.836232716 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.836792538 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835725418 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.834438335 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.836759428 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.836164541 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.835945584 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.833461184 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.849619015 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.845187478 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.840618307 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.837440482 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837017736 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.837020331 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.838190413 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837241245 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837496693 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.838281006 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.838854283 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841905454 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.837741332 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.837394985 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.841309498 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.845400028 seconds)
  done (took 1088.515932278 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835030931 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834869535 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835076966 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.835276313 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83538103 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835258896 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83507804 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835184243 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.836378524 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836347467 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835768754 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835468393 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836586209 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.835876516 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835531792 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835737168 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835984753 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835666602 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834857772 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835688933 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.836963956 seconds)
  done (took 40.319007744 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.838086084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.836295831 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836215934 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.838244189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836638219 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.838128672 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.836292719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838979484 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839432772 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836254201 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.839021931 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839997013 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.836999019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.836577634 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836791021 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839102412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.839334191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836607324 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.839963706 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837717699 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839609386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836747113 seconds)
  done (took 42.205314303 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.839084776 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.84003484 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.839795061 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.83762261 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.840567447 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.838109831 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.840760495 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.839945282 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.840732075 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.840033279 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.839604638 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.841265062 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.848370763 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.845156737 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.843337609 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.841305327 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.984730299 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.841572077 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.841662326 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.84121662 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.838858743 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.845310736 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.838479698 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.838795181 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.840295083 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.841921335 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.841347857 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.841179323 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.841688976 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.842224279 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.845850389 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.841270806 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.84219551 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.842548871 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.841451893 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.842919904 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.845757409 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.842506626 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.839501417 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.841767348 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.85150569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.863895882 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.842028245 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.8476679 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.842398255 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.842951718 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.84575475 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.850127069 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.840141572 seconds)
  done (took 92.201951726 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.842249213 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.843023333 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.839968056 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842221555 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.842964387 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.841735482 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.841097101 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843482236 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.840596911 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.840037478 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.843107233 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.840321554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840241115 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.843040874 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.843443707 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.841424648 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840517718 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84118328 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.840832507 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840396619 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.840746672 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.84317934 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.843517735 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.841755707 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843744376 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.841624373 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.841861012 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.843698283 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.842365767 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.841506376 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.843142086 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843982372 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.844529198 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.841534994 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.841149861 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.844670382 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.844197452 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.841877968 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.843853141 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.841380434 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.843577545 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844088186 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.845365128 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.844667583 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.841599644 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.842731847 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.842509725 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.841984636 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.842199974 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.844835892 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.844193119 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.842652577 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845026311 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.841979451 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845012523 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.845568027 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.841982997 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.841871842 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.845001818 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.843579742 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.84341134 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.845189588 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.843998796 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.847073216 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.846230768 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.844637968 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.843886814 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.846359679 seconds)
  done (took 127.095309589 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84678154 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.846440568 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846415176 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847109727 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847436235 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.847192446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846753822 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.847932628 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846810222 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.847986722 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847389789 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.847483441 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.847911088 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.847500951 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.847411038 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846927872 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.847548699 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847461045 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847005896 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846691978 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.84723035 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847475746 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.847208499 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.848442047 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.848469812 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.847345559 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847828304 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.847433482 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847980956 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.847406492 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.847811103 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.848247555 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.847806196 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.847929768 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.849108802 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.848270432 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847887187 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849088703 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.848557945 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.848480908 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.848889972 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.848909917 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849241984 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.848541771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.848322741 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.849469275 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.848565956 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.849366803 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.848827607 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.848922989 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.849155588 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84888757 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849475619 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.848772634 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84935281 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.850196264 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849278036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849200801 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850157303 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.849743023 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850539761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.850742718 seconds)
  done (took 116.370813738 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849391336 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848444227 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.845881956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.846543114 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.850382378 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846532538 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849614828 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.84889193 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849695144 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.850716809 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849862588 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846810111 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84754422 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849104103 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.84789516 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846776575 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84730773 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.847180236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849839175 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848246184 seconds)
  done (took 38.750008705 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.847652107 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.850533223 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.847510904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847584177 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.850023835 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.848041431 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.850922584 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850648508 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848034315 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851169182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851522972 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850751197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848903111 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848213775 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.85149608 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848476306 seconds)
  done (took 31.375410836 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.848524566 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.851530671 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.851718939 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.85161041 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.849001794 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.84814133 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.851478809 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.849399724 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84893054 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.851877798 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.851578838 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.851944556 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.853113405 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.85216441 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.85062168 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.851553373 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.851047583 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.849671004 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.852128371 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.853004084 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.850606 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.850145328 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.852153075 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.851975577 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.850081115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.850683066 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.849349362 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.849613458 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.849860785 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.852515383 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.849511068 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.850955779 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.850770207 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.849830188 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.85332525 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.851243547 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.852656288 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.852389372 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.852947397 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.854116653 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.85327846 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.851054959 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.853460329 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.852561015 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.851422448 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.853426185 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.850564223 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.851638027 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.85156662 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.851539238 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.85344691 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.854348241 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.853745244 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.853804674 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.853745568 seconds)
  done (took 103.619759594 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854479263 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85479868 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.852186741 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.853617457 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.854455429 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.851693776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.853790077 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.852126561 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851972916 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.854277803 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853976999 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.855345682 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852407465 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855213411 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853371136 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854890037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851967842 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853111869 seconds)
  done (took 35.151800274 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.852554538 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852940276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.85535794 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.851949325 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.852368578 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855014033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852777877 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.854962725 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855111215 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852478366 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852530955 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.856459103 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855775716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.85531257 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853888235 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853124734 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.855259011 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85587898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.853074543 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853518967 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855781808 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855728656 seconds)
  done (took 42.580624073 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.855647197 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.855532674 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.872802384 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.876214175 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.878321197 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.889974921 seconds)
  done (took 13.017364006 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854444571 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855725127 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854628571 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85767916 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856219892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854702918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854625093 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854438734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857051938 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855362145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854836058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856267042 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857917876 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853292504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857519875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85744783 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854592542 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85521794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85585987 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857094773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855041773 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858228606 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855299435 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855859969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855655656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855450179 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857372082 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855533099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856408001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858178017 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858264481 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855797455 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858017991 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855401664 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858729918 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857384412 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856534384 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859179732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858100261 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855607707 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.858438385 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858320308 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858435163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855670045 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859127139 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856982694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856238211 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856425677 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856293204 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860560807 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858682151 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856338867 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858764051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858476613 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859461957 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861809232 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856532809 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856380771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859721761 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856775069 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857257072 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85896927 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856751908 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857286548 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859803157 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857007816 seconds)
  done (took 124.348486225 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857259317 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857053635 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857448404 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858453988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857183594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856769741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856935144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85669257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857090487 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858589468 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857033223 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854345852 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855128832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854248178 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854464527 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855699257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854676732 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854798695 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855182911 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858665233 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856404505 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854973101 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854824767 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855481448 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855923744 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858326893 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85533336 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855116096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854624112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85542269 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854917372 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855649185 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853960639 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855389131 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855340605 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855442782 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855464513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849926619 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850384661 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852251592 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849235572 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85230087 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851066684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848849505 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84914448 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850136678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849147021 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851494348 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849478956 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84892934 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849660072 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849746111 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850194616 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848107337 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848037748 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848838612 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849097721 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848268543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849574792 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850089722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848834643 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848247393 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85164449 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847707004 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848644776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848524289 seconds)
  done (took 124.102285411 seconds)
done (took 2536.786479701 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.905410753 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.876382233 seconds)
  done (took 15.564660488 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.011953365 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.965598722 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.848909246 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.860133916 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.849592414 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.859057611 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.864326558 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.849359336 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.850124678 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.850914265 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.849760765 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.042005955 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.852401267 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.84933878 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.850297278 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.94083071 seconds)
  done (took 51.983289821 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.853529708 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.854195718 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.863359311 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.855530629 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.853012093 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.865262308 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.885947981 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.857445849 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.887542587 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.865535759 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.923110051 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.865387658 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.853251606 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.903588478 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.866750568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.868738499 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.942707466 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.930599529 seconds)
  done (took 35.580006466 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.932750624 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.854513837 seconds)
  done (took 10.581159448 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.866940216 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.84892402 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.869201083 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.852817648 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.863360403 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.875554915 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.866791723 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.864314566 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.875038216 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.859137621 seconds)
  done (took 70.430002641 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.858218808 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.854901374 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.854850758 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.852985518 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.845856304 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.850789736 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.852800089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.846332478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.552568532 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.888835034 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.859304397 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.85865688 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.848916037 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.849647898 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.846171616 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.872871893 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.968028669 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.84616606 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.844774117 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.851858742 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.847919114 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.901616997 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.862568917 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.847486262 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.876392434 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.547270743 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.854989641 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.853100005 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.998789119 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.844165244 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.845044295 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.846472991 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.847871976 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.234961751 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.155132052 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.847384326 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.854417081 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.852394358 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.842610342 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.985476441 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.845765059 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.849958124 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.819643188 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.131601044 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.954178601 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.887724315 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.255531381 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.848614757 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.84619409 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875522202 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.848110212 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846050736 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.859083936 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.36392766 seconds)
  done (took 131.674990861 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839223273 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.135441823 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994607434 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.842258827 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115663114 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051003317 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782003087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89071943 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843147075 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.046406736 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003965959 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954395671 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843640805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.841043728 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.840665959 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.839056471 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002627213 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91247371 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.844638099 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.840583026 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86917896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052288075 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973599764 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.845390712 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.862912101 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054155514 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965306675 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.951348548 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.12551822 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.840025612 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907835846 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.843296408 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.841711588 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839521077 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998879308 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941851941 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935557211 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.844359666 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841627408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841345633 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.501715959 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040669548 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94490584 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986670593 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.090388943 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049019892 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.494905469 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.840493727 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.487663183 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00781595 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.057364238 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.05068508 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.969485997 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.846103349 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.082880517 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.841753485 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841752142 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080334646 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074255392 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950719685 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845021234 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.843513731 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842167113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087833833 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845019243 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942362494 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845579613 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841744961 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944529697 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953885203 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077890624 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058866546 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.878151741 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.15031648 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.321821045 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058411085 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91586192 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081720689 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.846024374 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843506115 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931491694 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.593529991 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002414374 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.093644771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066696115 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880486833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.444869064 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.842457017 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038443974 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.031653719 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040513272 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087219727 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.999567109 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.975467666 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843427835 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.843443483 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.062822138 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.984435432 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.849095626 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20682394 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080258534 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.424794722 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875279571 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143269987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981708035 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.222509419 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.470750058 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843827543 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012664688 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884872104 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.846161341 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845483449 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.036731923 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.653587477 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844682617 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.56532141 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.910384399 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847583405 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050177299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.848845115 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055740794 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848864793 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081523831 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.944723227 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.88118528 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.020343742 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.088146666 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.639399856 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097651648 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091988129 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967372205 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120535506 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.583107058 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845565831 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123170601 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848205161 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.844685643 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.013465036 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848535567 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024242153 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850266051 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075624172 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873008381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004012529 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851465905 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.08222765 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885750397 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901196756 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851043517 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.971056038 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850111913 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.73380975 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002900051 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848280298 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846321431 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.272824762 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.845723151 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994096878 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080303304 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873751723 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918143732 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.380089005 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847856646 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936954043 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876112892 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.330372338 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.84694989 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.005419808 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.796106153 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281205651 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.848070431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.088691812 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.082534131 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849740046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847253889 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.588386748 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.542247966 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847268156 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007180237 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.270698161 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.497291479 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051897875 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853325401 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979140148 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854899124 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.925006137 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196536991 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847999158 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.848412135 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.848769094 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.848654005 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.850084964 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059762095 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88230593 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.364573167 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.985975548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067094271 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.161472512 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.069604023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.898122299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.85113837 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117675517 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852047124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.916672013 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.852897076 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874240443 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084098605 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855179454 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063490123 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104895666 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778854447 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902855048 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.853945609 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850355049 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.850730597 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003010056 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949710444 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853087108 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.850290436 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963550443 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983444603 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.045567292 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.44510945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.931249347 seconds)
  done (took 894.078277829 seconds)
done (took 1211.674173534 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.852449032 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850654283 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.839204931 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854493454 seconds)
  done (took 29.18666464 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.860596802 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.857751503 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860321146 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.857478532 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.859349689 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.857574332 seconds)
  done (took 12.945557394 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.911566145 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851768561 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853186902 seconds)
  done (took 21.408011752 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.926698852 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.275405313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.972261437 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31702264 seconds)
  done (took 10.283969243 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.861201968 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.86079498 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.860450573 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.860818017 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861966156 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.863663677 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.86102014 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.861140206 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.863567157 seconds)
  done (took 18.548471411 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.226651567 seconds)
done (took 98.387668271 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.950959039 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.192991982 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.93526393 seconds)
    (4/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.985376774 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.935794643 seconds)
    (6/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.266088373 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.181541754 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.867071366 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.992045112 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.881175628 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.154355657 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.888266976 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.949757405 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.899557646 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.882295427 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.088300878 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.964533486 seconds)
    (18/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.9401731 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.4609732 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.856475886 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.85608132 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.150513672 seconds)
    (23/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050521424 seconds)
    (24/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.375933845 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.047418033 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.992487834 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.160581145 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.671113328 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.150620714 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.855859804 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.903641834 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.978355117 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.978729876 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.841511084 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.869307957 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.358178175 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.960190852 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.025325659 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.858083041 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.86398553 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.896366574 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.693375291 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.156879665 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.871213212 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.281205407 seconds)
    (46/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.04416134 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.140066913 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.77044465 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.947815318 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.530433956 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.951894612 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.954702749 seconds)
    (53/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.866514062 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.968534641 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.222645589 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.124409487 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.820888608 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.378171025 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.931153658 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.856603965 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.88671423 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.913759121 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.856560889 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.190295618 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.566506784 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.879837009 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.069286896 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.099204835 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.861114985 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.929135408 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.539341705 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.858252651 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.859347759 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.165763741 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 4.816760585 seconds)
    (76/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.991658993 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.968212406 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.857899697 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.217215524 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.846845097 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.019379422 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.951466733 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.235101278 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.98467787 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.955790134 seconds)
    (86/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.452356176 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.568444063 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.887811786 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.65314925 seconds)
    (90/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.982248167 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.959567637 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.478343782 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.917988519 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.889664985 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.133794785 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.99251881 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.891992858 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.217096832 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.018925058 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926895977 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.208750125 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.861832818 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.309025002 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.254005586 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.864516636 seconds)
    (106/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.469887797 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.071380872 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.916719229 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.849072552 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.596516697 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.158003409 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.661874427 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.562727181 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.393243928 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.080577222 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.008567782 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.971955491 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.242409882 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.946489792 seconds)
    (120/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.970811329 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.02601462 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.080911712 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.84650923 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.409970127 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.853871789 seconds)
    (126/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.247388216 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.887714093 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.082014287 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.254683162 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.864750908 seconds)
    (131/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.047806709 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.886052609 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.765420751 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.969396434 seconds)
    (135/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.042106147 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011820164 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.446549397 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.472313182 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.862731188 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.618553441 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.31103641 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.88841235 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.990716711 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.134061652 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.532104387 seconds)
    (146/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.890744922 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16726797 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082299704 seconds)
    (149/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.80965978 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.215354189 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.880367913 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.88703035 seconds)
    (153/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.352972277 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.966587584 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.02585988 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.119379225 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.996258381 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.002385831 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.235097864 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.796945154 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.938478678 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.088440168 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.893447121 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.161507385 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.075600234 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.09006778 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.224524568 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.050687358 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.576212134 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.166893145 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938442386 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.264064408 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.892268468 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.431406025 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.904566851 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.862815217 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.196837087 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.92918107 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.044377559 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.899669756 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.949658769 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.213599057 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.833405882 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.860424758 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.380644002 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.231553785 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.950957478 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.9750135 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.801020558 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.902291671 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 5.619489637 seconds)
    (192/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.978239239 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.966763598 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.699088258 seconds)
    (195/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.870164936 seconds)
    (196/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.200580009 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.212835662 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.98065522 seconds)
    (199/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.972698056 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.065612152 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.510027625 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.858141665 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.896188918 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388497155 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.9766413 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.255746173 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.897547915 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.006309936 seconds)
    (209/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.263095393 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.073544806 seconds)
    (211/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.910457033 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.490368811 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.995207896 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.677817384 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.969320437 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.853000771 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.805605247 seconds)
    (218/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.956943214 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.923935007 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.762901317 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.868806434 seconds)
    (222/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.135235998 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.077009671 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.875459713 seconds)
    (225/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.227461675 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.852449744 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.680668263 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.10004589 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.866534125 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.940940886 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.917516796 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.053255869 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.039323961 seconds)
    (234/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.049550729 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.899323461 seconds)
    (236/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.876039033 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.865964416 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.459063761 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.260114786 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.562830021 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.911290635 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.887505725 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.853872035 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.379749315 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.888923144 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.857252412 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.794636696 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.281417378 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.89556486 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.877717877 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.867667363 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.303168943 seconds)
    (253/309) benchmarking ("sort", BigInt, false)...
    done (took 6.869527717 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.901277933 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.853942708 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.91120073 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.969886354 seconds)
    (258/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.87303125 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.043872901 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.505352354 seconds)
    (261/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.48080322 seconds)
    (262/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.344737306 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938295671 seconds)
    (264/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.952286729 seconds)
    (265/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.380881595 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.907189371 seconds)
    (267/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.356415482 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.170101884 seconds)
    (269/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.524283903 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.764480326 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.00730069 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.952221735 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.175190145 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.262634248 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.231179378 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147406663 seconds)
    (277/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.023000419 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.979999461 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.039020631 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.655169494 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.967444493 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.957633398 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.856340633 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.067423295 seconds)
    (285/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.259424033 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.88660896 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.859585606 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.001141471 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953837685 seconds)
    (290/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.1902352 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.033009507 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.513497752 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.608460918 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.650729038 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.462652044 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.906707336 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.319884308 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.916523239 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.947639221 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.96907046 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.18577598 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.264353191 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.92346753 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.373994974 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.208642852 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.898191848 seconds)
    (307/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.974617287 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.213681087 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.875045047 seconds)
  done (took 1018.939206538 seconds)
done (took 1020.795543847 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.905197315 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899585028 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.882305627 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.903755121 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.996398969 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.919579644 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.893714317 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.885640566 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.931393695 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.933258145 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883328527 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.918296287 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88707668 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.885355857 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.883428114 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898874332 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193898549 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.914766188 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.901862282 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.892743864 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.901522335 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.884645109 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.933425907 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.918890811 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.889222034 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.887837946 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.889096552 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.905230003 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.998526127 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.889779554 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.88778971 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.898731803 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193305694 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.913743841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.880614691 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.904727862 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.897929247 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.895387782 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.888886933 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918722242 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.347494951 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.894550432 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888212201 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886518069 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.885966284 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.889455328 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.8879842 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.891408244 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900318704 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900834603 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.341888311 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.90960526 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.88975048 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886306808 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.897054885 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886979316 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.889555966 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902892977 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.906888986 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903441217 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.186025571 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.92159474 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.887827812 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.903953859 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895212888 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.378226108 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.889117002 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.890679555 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34989351 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.899404637 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.379290588 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.903701292 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.887905654 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.901817329 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.920132981 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.195215136 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.91184755 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.886348774 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.896684976 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.886669351 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.897815929 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90192834 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.893747606 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.888091139 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902786709 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.923470654 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898889438 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.889772838 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89781886 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908890204 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.897474411 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.899294129 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.891018214 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.884986371 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.897803031 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.892301345 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.891893417 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.89336224 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.89368308 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.899311198 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.344978567 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91273664 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.88495744 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.885112891 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.887764594 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.903421254 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347271625 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.897939385 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.910989822 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.935319597 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.890585435 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.187981074 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.923913969 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90571502 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.898048422 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.892644808 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.884854128 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.188259339 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.374492404 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.912403803 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.891572967 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.888959854 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905835071 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.891378357 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.885726176 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.199231794 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.920033397 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904744221 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.012125688 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.901436398 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.923778995 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.889697543 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.893973146 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.925808888 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907123379 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.924458447 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.894153912 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907556664 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907741843 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.887379391 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.903209332 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.901640473 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.891484659 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.897537129 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.885300465 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.927006821 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905468715 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904834804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.911558745 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.012807884 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.889252666 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.190937408 seconds)
done (took 296.962074395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.959471219 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.885831658 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.98844606 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.887479015 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.982695038 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.984435395 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884868102 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.885583261 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.884734608 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.346392757 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.886621562 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.885204603 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.88321172 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.88514507 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.984983447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.88784109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.885290221 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.22963623 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.88943097 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.95936988 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.881184338 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885746201 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889232987 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269344962 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.880401444 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.881009363 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.964816616 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.888149239 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.283193554 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887624383 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.8843997 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.234651704 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.987057887 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.906714657 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898533396 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.895951898 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.982191893 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.893600033 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978786565 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.98137979 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.997432994 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.929525778 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.888071528 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.886421353 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.892760117 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890670571 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.88651425 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.917271229 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.884522022 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.887341375 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.268867184 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.900364677 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.888190178 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.889013087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.887275017 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.920641211 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887671289 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.89098756 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.981931394 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.89199709 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.963878415 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.327701926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.269911908 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.88949503 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.891426307 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.8884557 seconds)
  done (took 185.937938551 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.958149623 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.962417667 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.418323857 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.894589301 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.94016951 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.963465132 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.894371825 seconds)
  done (took 15.851855472 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.895815961 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.89003916 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.938361183 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939206023 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.889506254 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.040960225 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890572408 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.90014918 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.887153501 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.942792717 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.891195867 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.890255736 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.897098802 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.882495708 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.937951014 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901703272 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.005091698 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.890735473 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.890801874 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.043505443 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888238848 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.89752878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.946272949 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.901572385 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890731133 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.896413195 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.486893861 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891446582 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889133618 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.891135695 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888329738 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.93622077 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.891614684 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.883247265 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888334674 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.007572926 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.891161633 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889513396 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.891369716 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.888548578 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.891390406 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89239917 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.891864707 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.888271961 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.890552635 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.915168026 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.892065264 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.891225713 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.892224948 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.891683701 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.94282631 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.892953511 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.889590084 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.889422872 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.946931943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.89860726 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.892317443 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.889780348 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892468019 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.889776396 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.046090082 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.940921206 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.892799564 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940633191 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894125693 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.895670296 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.895026488 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.895210023 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989035294 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.894581209 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944358074 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892114947 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.052488209 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.918267211 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896752959 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.897455462 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.897517671 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894571595 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.890998443 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.902458213 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.892260506 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.895635742 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.900943359 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893664655 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892087898 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.008410251 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.004721856 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.893792747 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.907803364 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.902089767 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.893022049 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.948616351 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.895497876 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.893048679 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950542301 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.012540439 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.952665214 seconds)
  done (took 208.073895731 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.902154374 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.903929175 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.897435811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.913864957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.89572967 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.895404271 seconds)
  done (took 13.233652576 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.898431616 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.897944084 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.895742381 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.89644662 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.897100418 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.897334802 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.897406081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.898382777 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.901074149 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.897048646 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.898164745 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.898575935 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.897955524 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.897527484 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.898970451 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.896911338 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.89881348 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895012066 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.897665907 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897702686 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.056173318 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.897453333 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.898752453 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.898931366 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.903123358 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.898595242 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.908292613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.898851185 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.898577024 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.907750923 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.901941813 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.898423695 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.899513235 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.905712808 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.903246925 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.900120964 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902868759 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.899459094 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896108933 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.898994402 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.899781506 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899093096 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.897964043 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.899203586 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.900211624 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.903813784 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.904368769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905847744 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.900359271 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.900338754 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.900502379 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.899298879 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.899559437 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900257249 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.900359062 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905128336 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.905355455 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.899656529 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.900058637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.901583141 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.900806875 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.900798245 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.900810859 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.904649322 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.898062155 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.901312166 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.901773194 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905084356 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900424619 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.901161294 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.90216591 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.89828301 seconds)
  done (took 139.793128358 seconds)
done (took 564.72525655 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.139061379 seconds)
  done (took 8.969035972 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.077339928 seconds)
  done (took 8.986265055 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.580067495 seconds)
  done (took 10.40893589 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.919961767 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.92883944 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.902497734 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.894137592 seconds)
  done (took 29.486268524 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.2771577 seconds)
  done (took 9.107633224 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.909625411 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.892533372 seconds)
  done (took 15.695207974 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.996777298 seconds)
  done (took 8.827051923 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.995405701 seconds)
  done (took 8.831398331 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.908319807 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.917627214 seconds)
  done (took 15.672291619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.880674372 seconds)
  done (took 8.710798525 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.534291912 seconds)
  done (took 11.374933094 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.905067998 seconds)
  done (took 8.748489123 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.928304269 seconds)
  done (took 8.758798079 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.134295752 seconds)
  done (took 9.96481078 seconds)
done (took 165.371025691 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.897754652 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.894443023 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.896627605 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.89514393 seconds)
  done (took 29.413973713 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.936320699 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.935231692 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.936291812 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.946247984 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.938515074 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.935654006 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.926522278 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.927738511 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.946346909 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.938628234 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.937799818 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.938475771 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.936038418 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.928291291 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.937658688 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.937855465 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.946450522 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.936839087 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.927522624 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.938959146 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.903301858 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.946000517 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.939052357 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.90301761 seconds)
  done (took 48.256876747 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.105138972 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.975024754 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.056385633 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.955186532 seconds)
  done (took 9.924019289 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.95481813 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.956566537 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.972250623 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.007636563 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.034180782 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.965633583 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.930031623 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.924224939 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.911581712 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.957923916 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.031371825 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.972642165 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.044484166 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.902278647 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.081299196 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.903143495 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.903985026 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.955386116 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.006732598 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.02439633 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.904204065 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.954682344 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.963044104 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.973010089 seconds)
  done (took 49.067998972 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.902257688 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.910958719 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.909538739 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.904227084 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.903334853 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.903102556 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.908291176 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.905081698 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.925143108 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.903824776 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.903760171 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.903777798 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.903499792 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.904526999 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.90359527 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.916065408 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.917345256 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.903633055 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.907528227 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.909642698 seconds)
  done (took 39.982888699 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.897121858 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.810485167 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.248937818 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.155603121 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.89844106 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.897757701 seconds)
  done (took 32.743252378 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.917806275 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.910455936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.904037769 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.962118234 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.045115626 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.914186454 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.904653687 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.915529829 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.951444537 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.972647265 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.926831363 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.934271171 seconds)
  done (took 25.09509011 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.899976893 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.90030264 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.90072957 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.917263654 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.91646255 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.914228456 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.912016019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.898700289 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.918235569 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.924243124 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.912804553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.917491567 seconds)
  done (took 44.77181945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990453955 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.943085295 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.941897347 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578791194 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2792943 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111657013 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410935717 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238635536 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.903776639 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174037981 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.92942309 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008296763 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156446739 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487167991 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.937702745 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.356658498 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194260645 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110008942 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926938617 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563429247 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963659152 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173331451 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.960824416 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955625584 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11366079 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.034206828 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.162400661 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901003364 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032640008 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936755834 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912693434 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901573905 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175804217 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276235036 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006799158 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912360762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.520501526 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.618514956 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.893422791 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.710240107 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587032076 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.018687554 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914743794 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902748963 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.8369321 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127887811 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282798109 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.908633473 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.614268171 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902929902 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9137298 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990788695 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906580472 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.71944609 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822145326 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.905796334 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.899993474 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910544187 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47067858 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.008637498 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164725137 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.881621279 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.993931343 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606320299 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301484165 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.049126602 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.90719825 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906898354 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838205616 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.642813337 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958899075 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233640945 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.925480426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554089126 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204241284 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.006119417 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848632297 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172849532 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.526268869 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.882669354 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133052181 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904342091 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839960292 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.950564102 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839217627 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180771333 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940657465 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.659688995 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943806888 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23777138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916075036 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921372956 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928981142 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.129369268 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.788561221 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9064545 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.71481863 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049804688 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926927503 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238827977 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840374025 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.91017732 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161751818 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.117843752 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048859298 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.398544475 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059610859 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.56774491 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.961968299 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.12867538 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960544766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174105938 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961715677 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005265879 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958705288 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906601271 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220789462 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.596448413 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.047724048 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.916078868 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036092478 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.221199171 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933575071 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971664064 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910181758 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906267074 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.677332171 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458178538 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.908095269 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.909278076 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.053958296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959967259 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.908795311 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857176003 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.550502952 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93680066 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.923357848 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131920584 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563701936 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224362701 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842917322 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237148781 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000313401 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.131357975 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.544559754 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.973500213 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168553151 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051212426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09902995 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960378756 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927925211 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007164981 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930719737 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.140774998 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205551073 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.913671781 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.913279401 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667749497 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.943818532 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916157933 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.915018212 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661435136 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182410167 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933055755 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917264285 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.799615086 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.923808975 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975054547 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915233334 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919344882 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.453044687 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638825032 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.917284149 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.507705396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134109789 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920744618 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.583035801 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021147887 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.991656428 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178493432 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967240869 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.844628633 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.620975851 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.603244255 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910377196 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846434813 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910080406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920423327 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921776295 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.10801031 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185209074 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951723008 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.579301005 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.953172229 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922604511 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.915922157 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91137926 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.426686058 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.022033435 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.184449981 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961862101 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055960177 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.925817609 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846071085 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916619088 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91667906 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911731813 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.910988413 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944810078 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.584285497 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287406467 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173161548 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.520994274 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926334522 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.611337487 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.968452633 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.973376072 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.567256378 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280083401 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.951137028 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938514209 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.922911215 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.582787162 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.619380311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479577499 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223669084 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212904333 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348440161 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.205715744 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946439918 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249162085 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852179667 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471132041 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973458608 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255684992 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858282558 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998578338 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.550684891 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249309099 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929654437 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141827513 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298049639 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.628423236 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051089791 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126684977 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949169365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.155126191 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881352868 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.438459641 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056494093 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.569332836 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111791328 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246378669 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598891827 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.03261278 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.913513373 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.597608592 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998577802 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.628083474 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.032414965 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.180355456 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.871402539 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380920428 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922230394 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141782666 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272118679 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145273721 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.04005256 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851523672 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927579401 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92753255 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.91776206 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.918892455 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.803093085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.171375221 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927069144 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851054856 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.100200738 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210389819 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.815958081 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.922610862 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917127848 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226805984 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547395317 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086593117 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.087508973 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.445054633 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921869735 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851132661 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851639864 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.610572069 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924071785 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892290771 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123888844 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.017539289 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830674464 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07024433 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003425184 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174840838 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.931102513 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.186665737 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189552275 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634832535 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943013792 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.018449274 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.56483521 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.019144953 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919316319 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155078042 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.670557473 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14546918 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.945531749 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.867545351 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917300996 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133802296 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919528448 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.832382999 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141585985 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.640787817 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.930783662 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242809944 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990169662 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.796825422 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958802744 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.010527481 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928908411 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997993036 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929633779 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.929077313 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930945595 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965456999 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801937461 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.036148663 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.93415983 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010675102 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026122155 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.446791506 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.925517206 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190617236 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284343539 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25199074 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976756128 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921032669 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918881023 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854348018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069073456 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.146030526 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194097927 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052880418 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.033564623 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945798696 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.599823629 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194889987 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166748129 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195713301 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.815986905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516539714 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.967256032 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.921699628 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932552 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.132919783 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132224214 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220770446 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066863522 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.073952439 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290142401 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195692478 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.921513939 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920238599 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511453705 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.934073956 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.618431301 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.961428747 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853334966 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191617032 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932019635 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296676672 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944663206 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.07755126 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.439056556 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602457717 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212574061 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.903582177 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974738491 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195537579 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308358349 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23312705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9904077 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932884291 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.030473544 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070616118 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.810831923 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924343761 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924257177 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972277417 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.63333116 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933198633 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202526738 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230946482 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.920496719 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.812445784 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948229321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.933840572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14724949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19272782 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175910175 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933413383 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930381427 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.739393793 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196858137 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979662464 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858278911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.92750534 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021202348 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172721802 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944085587 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.378321923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.636532159 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201621194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.924874289 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9474955 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.169495094 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299197882 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244303999 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.461734862 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134276973 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.517490588 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.605941517 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229817474 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.930879893 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164421283 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233629629 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.928550511 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.081871294 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969170701 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.192376025 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235305788 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.941357154 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615635879 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.895011207 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.268032165 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485293865 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864444535 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935435091 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.985800981 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926738951 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.057460555 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93921553 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.816896088 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161618697 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.691302986 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198793388 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.932241959 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.919164127 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.640357478 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.290304742 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965071661 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067717909 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936358824 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.645035722 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.287078672 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183738177 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.086592156 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.938485546 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.931113452 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928395679 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914173668 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.125884205 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.123778083 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21451552 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.107151101 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.96933939 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931676873 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.144191863 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139466971 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.80649068 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060910207 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08873072 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974876151 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.833320193 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.429201917 seconds)
  done (took 1698.101269343 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947850773 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.965714269 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.951393909 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.055410946 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955418644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971745707 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.064298632 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993944171 seconds)
  done (took 57.769255152 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.928133603 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.127905566 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.938246619 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.928554763 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937376789 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.928043164 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.095357397 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.940875971 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.937033035 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.938414348 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.928397052 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.927776723 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.243094065 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.954568287 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.929137731 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.913851701 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936814609 seconds)
  done (took 75.418509131 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.927932909 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.039806696 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.949235528 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.94139318 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.899819636 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.943613382 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.769693919 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.987392153 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.931433708 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.166585542 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.560056367 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.955008536 seconds)
  done (took 90.937217315 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.940497763 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.935733346 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.935357142 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936021431 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.936117305 seconds)
  done (took 11.553594112 seconds)
done (took 2214.89130236 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.175432948 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.146880283 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.163010557 seconds)
  done (took 6.175119783 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.079447506 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.127061936 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.295472931 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.279390291 seconds)
  done (took 10.649275127 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.219031965 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.311652503 seconds)
  done (took 6.395648056 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.32678793 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.937856545 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.314606775 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.92895953 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.929613753 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.930464882 seconds)
  done (took 22.659059198 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.933710212 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.936521397 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.934113565 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.937578316 seconds)
  done (took 9.608388381 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.915293178 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.617427589 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.9168546 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.935995287 seconds)
  done (took 21.251449403 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.683833384 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.694019973 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.678909843 seconds)
  done (took 9.922623256 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.379829135 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.139032564 seconds)
  done (took 9.384520262 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.202245351 seconds)
  done (took 4.068272127 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.06642891 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.243010173 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.483424843 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.496120661 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.584488849 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.959368453 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.314034806 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.192953166 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.337352783 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.409071262 seconds)
  done (took 25.951912342 seconds)
done (took 141.685016001 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.457287317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.33675557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.131876868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.298056106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.162818447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.129267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.259486237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.28974005 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.800520184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.787563478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.313812185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.163220949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.208911131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.331075431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.208635603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.951761368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.161555663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.342370471 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.975295091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.192148537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.257437895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.928547771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.193819941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.955928546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.164444952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.07993138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.487784262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.951525755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.125250112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.506760963 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.080739468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.334691005 seconds)
  done (took 171.436035052 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.870202334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.927036029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926252545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926089276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.268089711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926985684 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.925027333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.925742399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.017065007 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.987586103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925771241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.253766666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.927359172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.924716131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92730755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926017646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.166101944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.91826984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.924925543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.926102399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.925583649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.1768587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926796025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.171281226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.110523297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.92701567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.927059606 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.929296246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.926353616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931156746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.93548224 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.925508433 seconds)
  done (took 209.197084152 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.92573306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.927906513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92646095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.92749709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.928150007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.929082218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929093766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928016032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.510855447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.505216174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.936368649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.936049413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934717429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927634362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.931947088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.927037935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.934783877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.933649102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.936465055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938408525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.941579254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.70823141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.941451644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.711387046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934779831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935945324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929437008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.936950815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.938378631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.9388648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.938806907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927646411 seconds)
  done (took 222.429491248 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.124427816 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.934787255 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.936063602 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.874296181 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.935559677 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.935237998 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.93312174 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.133353426 seconds)
  done (took 19.682945424 seconds)
done (took 624.629293032 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.379463346 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.226753446 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.119339277 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.958624225 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.169784551 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.993267821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.954177633 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.017490819 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.686488297 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.026514899 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.598393527 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.974881114 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.682893443 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.980720775 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.084056162 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.011285213 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.530501044 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.628130052 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.141234145 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.992796651 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.135749688 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.893419853 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.03292761 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.698414669 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.704652069 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.937658578 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.13531718 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.539096002 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.968241731 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.125022121 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.738694186 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.338520766 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.967815609 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.953097897 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.007299824 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.989864834 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307016571 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.966376861 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.080776612 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692161962 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.994216295 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.570040489 seconds)
  done (took 105.798091554 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.926651531 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.924537571 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.924407501 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.926040384 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.926480734 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.924814148 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.925227245 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.923979522 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.92460477 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.92422632 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.924410566 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.926359213 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.9252718 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.926369974 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.924459036 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.924346154 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.925488188 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.927478879 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.924790021 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.924603518 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.926478312 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.925928511 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.940104884 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.926447758 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.926179174 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.926389934 seconds)
  done (took 51.954511264 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.937946826 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.082184294 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.163765519 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.957851499 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.938165898 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.941386915 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.958982203 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.944128498 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.941269543 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.941254355 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.035529706 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.946477754 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958526915 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163976876 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.955400754 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.939820267 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.940272946 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.940455841 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.090235496 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955379261 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.95993617 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.945038185 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.959372296 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.953790096 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.941777864 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939796827 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.943861186 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.41022294 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.948513815 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.038079634 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000551017 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.963156162 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.386247812 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.17502323 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.99374522 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.948557389 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.939599542 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.042549625 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.946060386 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.939851053 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.957818737 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.946758786 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.163206217 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.452782549 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.954195962 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.940525433 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.422536919 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.052257006 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.982402092 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.952557559 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.167207532 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.95750602 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.942630574 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.942201629 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.978188155 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.952764066 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.940479459 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.309367495 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.954014038 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.959548192 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.946786498 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.942130425 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.097708925 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.950337192 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.090821574 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95061692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.949771588 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.942495396 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.167102261 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.959100706 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.45394519 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.955384826 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.942620855 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.038278998 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.096870981 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.451122407 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.956455714 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098200301 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.40275861 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.966814136 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.949749182 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.404266987 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.970571749 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.95004525 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.945608218 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.944623058 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.943017452 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.987839727 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.959517148 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.388503218 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.455935258 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.325205497 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.969703152 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.960081909 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.944053955 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.3110981 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.952721856 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.943125144 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.160314969 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.466791475 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.956998784 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.951356266 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.444934389 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.958218923 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.963666312 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.952417793 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173005102 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.95946354 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.988750523 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.944298933 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.95054639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.947416304 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.964075235 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.952841602 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946875981 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.428225252 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.058904647 seconds)
  done (took 240.743056593 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.939470186 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.939768298 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.939223516 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.939351927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.937956724 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.944208724 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.938331777 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.938490843 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.952607753 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.937198013 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.936971601 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.936575749 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.941213449 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.946228078 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.985482249 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.945776155 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551911843 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.940562631 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.939552167 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.940458193 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.591572257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.94617377 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.937627066 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.939456181 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.941165581 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.94000617 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.942394606 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.977678023 seconds)
  done (took 169.564385881 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.946931399 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.06240461 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.963285268 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.974580092 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.956484431 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.943604963 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.968817424 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.962281299 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.950104532 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.943857318 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.944951885 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.006775526 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.957095018 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.047341265 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.977142176 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.978011474 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.053868177 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.952799141 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.945457263 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.944798763 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.97488908 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.941474965 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.00801026 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.073204375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.96378834 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.062091549 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.951044082 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.947228041 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.945940339 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065401445 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960934173 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.008438682 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.976176614 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.965133286 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.067535399 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.064533348 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.055204598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.977050989 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.951259946 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.945946091 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.945614986 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.93611949 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.063750521 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.964166449 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.947938257 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.058114401 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.964241188 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.949167994 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.95676303 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.946385322 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.960966458 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.965514652 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.013563484 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.079501048 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.980325086 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.973761247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.973938976 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.221160306 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.958906596 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.051105506 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.942980418 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.069121256 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.966431647 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.936976941 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.94876951 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.954024894 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.977903122 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.980777 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.056498797 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.956946038 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.050978972 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.983524053 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.955329548 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.947827051 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.950415184 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.067976379 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.066375873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.985507853 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.986234646 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.980453264 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.945112062 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.949036636 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.938240737 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.966963591 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.953705668 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.06550353 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.067896838 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.956490369 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.951063543 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.951891214 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.951373471 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.975906931 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.073279145 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.983379935 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.048472547 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.018257137 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.022973476 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.963032556 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.963184208 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.953118785 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.014183318 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.965085709 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.96157079 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.26731737 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.02180803 seconds)
  done (took 210.869683568 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.433197843 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.00631849 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.007398092 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.23575875 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.367688099 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.793911637 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.997214238 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.999364459 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.025122246 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.156582739 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.05794695 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012842665 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.986025385 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.973554736 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.99829441 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.019788123 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.002166117 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.289098978 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.118116491 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.096960794 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.978753727 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.305960009 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.314988658 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.385320621 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.033387801 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.325455974 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.676832671 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.241275622 seconds)
  done (took 63.72652656 seconds)
done (took 844.51879558 seconds)
SAVING RESULT...
DONE!
