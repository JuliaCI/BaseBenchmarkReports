cset: moving following pidspec: 10181
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.525971748 seconds)
loading group "string"... done (took 0.520747269 seconds)
loading group "linalg"... done (took 9.134885326 seconds)
loading group "parallel"... done (took 0.184733924 seconds)
loading group "find"... done (took 1.345443168 seconds)
loading group "tuple"... done (took 1.946339589 seconds)
loading group "dates"... done (took 1.400519427 seconds)
loading group "micro"... done (took 0.199831426 seconds)
loading group "io"... done (took 0.524383078 seconds)
loading group "scalar"... done (took 52.273427681 seconds)
loading group "sparse"... done (took 14.288386522 seconds)
loading group "broadcast"... done (took 1.354365207 seconds)
loading group "union"... done (took 10.410012425 seconds)
loading group "simd"... done (took 3.132453144 seconds)
loading group "random"... done (took 11.800724232 seconds)
loading group "problem"... done (took 2.250923978 seconds)
loading group "array"... done (took 24.791035663 seconds)
loading group "misc"... done (took 1.160418338 seconds)
loading group "sort"... done (took 3.854729125 seconds)
loading group "collection"... done (took 19.716914829 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.624906326 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12282244 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.266677991 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.285239353 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241514155 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154516089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140044312 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.26169656 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.667067253 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209113474 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13245093 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.500381753 seconds)
done (took 6.434327877 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254075734 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.183889824 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17028324 seconds)
  done (took 1.128351779 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074487856 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153976712 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105336658 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091937337 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090745509 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106856542 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090623248 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106596192 seconds)
  done (took 1.521257975 seconds)
done (took 3.752236712 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515617499 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881035379 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.559239646 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.148006406 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.321104505 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.302880384 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319295392 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204937151 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107552801 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090424434 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177144783 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.418883663 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.442644019 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.989882054 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090066634 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096776695 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132608571 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.777158137 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081216543 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112549109 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509444204 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.196201659 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096682202 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124941234 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184519156 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13286617 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162766918 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102442447 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667883417 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131078718 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.204986139 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082727566 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161755446 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197725119 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211684966 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091784395 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684682711 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199021801 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09284125 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097404896 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67248258 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117470073 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188712842 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102148799 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090409931 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181945911 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095356079 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075832702 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116146101 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083476769 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167072132 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465712415 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105498176 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171602972 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091035742 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68611437 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098411582 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273709721 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123633338 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090022185 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090594422 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085843988 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15839859 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092409731 seconds)
  done (took 20.336805633 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148637887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167045774 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07539083 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156141791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123191295 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078619118 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100168859 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076927081 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108247776 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242520034 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136681886 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153533648 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088818865 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086375673 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126130334 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247579952 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106113524 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121758359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085938226 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089257852 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13931574 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094622473 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089618614 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110023791 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167411197 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202806203 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105789972 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12159431 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.085824079 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094765977 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140740746 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144967279 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090177455 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085590192 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188698317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105452723 seconds)
  done (took 5.280626642 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201266727 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12403819 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.213573828 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163688207 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.170166125 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144112326 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.174425384 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128582899 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.288580858 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.290209418 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179171454 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111523944 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121085457 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078677335 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078779225 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075513351 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517878303 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138079744 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.175234851 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133033787 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10694962 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094915671 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370061579 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097296251 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079878982 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083783454 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067312561 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199749999 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101385706 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.084494628 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105357351 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088147974 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132148852 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200468425 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114646141 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138271592 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084577058 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079289257 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217813948 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10917667 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076224561 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104621746 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133325001 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113088296 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100839852 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109230739 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223321113 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084874195 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079727123 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123901961 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.043545411 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196903272 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122912863 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076915222 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289617703 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116372131 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085203682 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080854579 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269756955 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115403295 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080569875 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098124135 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077362091 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084398635 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095088963 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430100908 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090786758 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.19711299 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082263115 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162094816 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083118095 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104536245 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0848835 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083617388 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117622411 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079355543 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077850612 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09518488 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078626289 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082275003 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110241999 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083286568 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08169749 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095406962 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145199836 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100740065 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116602611 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107147374 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100230683 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079215653 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127311727 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081240893 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08200383 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166398755 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085603084 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111385366 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08492938 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144298765 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082655649 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.248335231 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082576256 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106589758 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101748876 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127419864 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101753694 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078468617 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099937791 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07771344 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078160376 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159923093 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079707504 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081186996 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081585736 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110787568 seconds)
  done (took 23.4449034 seconds)
done (took 49.832485804 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.460664696 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089875293 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086894377 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108386257 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089636462 seconds)
  done (took 1.6875614 seconds)
done (took 2.512078225 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.334689461 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198961005 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099351016 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195855839 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084950144 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201042602 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188567333 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092746744 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213697057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082229891 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194372438 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081485836 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102357237 seconds)
  done (took 2.922690176 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097782832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105894997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098432683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113950965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078751592 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095411963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113471699 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105403725 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095368028 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108065411 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079869296 seconds)
  done (took 1.918917775 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095511324 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101989672 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094186542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113486302 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078842102 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093178799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112532067 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105353906 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093954045 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108791772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079630495 seconds)
  done (took 1.906135891 seconds)
done (took 7.571346863 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.144234625 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.047138994 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.169767064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.222168617 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.356955516 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.246363363 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.59085723 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153496767 seconds)
  done (took 14.918651329 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.119813868 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.159634513 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087234136 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089417155 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087112521 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.113188685 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087086834 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088456513 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112130808 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092032455 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090274578 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103783369 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091434597 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087559077 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089765592 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.106462249 seconds)
  done (took 2.49690167 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13666243 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120680392 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113551435 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095102092 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089131111 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.113012817 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095494456 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091825852 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108381502 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.090748387 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095582787 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110097605 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093201271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087893662 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111265067 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108807283 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088229056 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114411442 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110259536 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094184918 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116115946 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092474549 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093538174 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.114618233 seconds)
  done (took 3.399833874 seconds)
done (took 21.645994757 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151624089 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100165582 seconds)
  done (took 1.084764994 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142346692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158812883 seconds)
  done (took 1.138646773 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109790406 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083764227 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135814279 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099826338 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084924518 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10365088 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114218863 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102510006 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.086574762 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085399666 seconds)
  done (took 1.846718368 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090487318 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08995583 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118837573 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.140854139 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113407495 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090729616 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090401955 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087133995 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.1109365 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086769661 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09480959 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124333088 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091628013 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123951154 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09250581 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092615732 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113944702 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.091892729 seconds)
  done (took 2.686571052 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08569147 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087220089 seconds)
  done (took 1.015555867 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090283596 seconds)
    (2/7) benchmarking "second"...
    done (took 0.085473201 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086717144 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106989486 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085839958 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084929832 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103899997 seconds)
  done (took 1.486330333 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.501649275 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26716709 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37405215 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103061777 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142725184 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.352067792 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143012698 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099467993 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098381285 seconds)
  done (took 2.958228945 seconds)
done (took 13.054174616 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092082727 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218561666 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.640553102 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.108974205 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.204844055 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163594267 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294414694 seconds)
done (took 2.570995398 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354266742 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15222453 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086737696 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085181749 seconds)
  done (took 1.522833436 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080898843 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093619169 seconds)
  done (took 1.026727503 seconds)
done (took 3.401626356 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084596001 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.118152184 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.102938799 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.083886895 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08266876 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083052757 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.10310626 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086072479 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084186256 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083819435 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.105436907 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084875194 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0839585 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102902723 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084490112 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083545141 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084457555 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.101897182 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082783979 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083256564 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102355354 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086481228 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083059072 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081618568 seconds)
  done (took 3.047813225 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109687005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084771018 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105465261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089825166 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089244657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106806138 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091059087 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084933423 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088709487 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.106302503 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088820917 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087645077 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104747429 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089108609 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085584238 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106984006 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089843216 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085205993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104534348 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089678193 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08887803 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104338427 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089350379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088862242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106818216 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090145036 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086180474 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102787152 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090573048 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088226311 seconds)
  done (took 3.679144395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096827891 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083516323 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0866658 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114226678 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084890613 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086858586 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101818759 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08615929 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08817281 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086374983 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109408457 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088265229 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083172522 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105620883 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090687848 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089902096 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096238808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104505144 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084649725 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088527558 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110374085 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085597048 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087343294 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087454696 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106874819 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084824863 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088834171 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104156425 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089814844 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0882653 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08941956 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110831761 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087987233 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097017436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109120818 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089736745 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092407032 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083747494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109017824 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085485428 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084315596 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106994141 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085438904 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093145656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086363612 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.107387555 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085422809 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090345475 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106681134 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092195339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085046374 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08398804 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.108679272 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089477105 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090222553 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102236914 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089296328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083912169 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092030678 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.111819378 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089422885 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08724982 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.114902363 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093705201 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106601265 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116521612 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089438411 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093363907 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091328216 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.116694806 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09472854 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102124187 seconds)
  done (took 7.673736405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100255803 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095349344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084998081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10443965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085976272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085559178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109242824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086618525 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086249348 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109744594 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087211476 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.086553876 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085395611 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10742623 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085894633 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086654227 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111973011 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087570299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08920646 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108505436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091373948 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093976455 seconds)
  done (took 2.932934039 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23266981 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092682518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135460789 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118378811 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104197717 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117798026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090568462 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090995896 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108055782 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094938332 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094104533 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108983857 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104991078 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09431778 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11284806 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095398593 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110873646 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09641 seconds)
  done (took 2.867041924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101225355 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.086194916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128279893 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089306301 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087418961 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088869222 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112323342 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109279206 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087129057 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.108057615 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095505579 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087385632 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106763971 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08873233 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088262008 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111183018 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093310348 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090230173 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118504243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097131366 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096200971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119893018 seconds)
  done (took 3.055402725 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102925389 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.087360247 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123826993 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090116221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085647698 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085502695 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11203694 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08714671 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092402085 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106955494 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087384822 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085430152 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121442054 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086938992 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091755248 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106563966 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088664285 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086261695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105532149 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088098211 seconds)
  done (took 2.786225665 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175355498 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123750013 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108367244 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113295081 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125487316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105784561 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11473542 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126248369 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106625866 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135392977 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107456955 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104935184 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13381508 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111974386 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104954918 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134353483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114151875 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132400108 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106580876 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104570424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138878972 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107072999 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132581896 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106794426 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10614657 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125175505 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10803307 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113062665 seconds)
  done (took 4.194926613 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086975535 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08717952 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08494012 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.103426012 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085566529 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085395832 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085743533 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104819968 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087325602 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084934665 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104297779 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088250764 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087168068 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08569589 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104440307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088045106 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086403125 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084250846 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103778323 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085436658 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086183856 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104167272 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087903953 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084291225 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085220401 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10625797 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086677302 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084209869 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104617238 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086776831 seconds)
  done (took 3.599788158 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098959535 seconds)
    (2/2) benchmarking "in"...
    done (took 0.096243381 seconds)
  done (took 1.066163432 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095161052 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102227794 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085951973 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105918547 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094305437 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087038584 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114613752 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09349633 seconds)
  done (took 1.650809772 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145847787 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165934418 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093016358 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098621211 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164632858 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157021354 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134459875 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09193886 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107743227 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083304079 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158480364 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082800935 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090687366 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085404153 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110769826 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096155559 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087734794 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117988946 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09417759 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089577586 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112383921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097179145 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091757874 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117980038 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084390043 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091436332 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113174911 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102698147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085466217 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113248999 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089376384 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086382079 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110147006 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093941048 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087974304 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.167324839 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098339885 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106526474 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09230074 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0928326 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142232728 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.089719289 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092469107 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088462456 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114942808 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093601154 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092646411 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108578535 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084071371 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085726118 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107899601 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087461282 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086969561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111345734 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093427879 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098751561 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108704489 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088430388 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087538869 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086264699 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109291733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087540742 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092585002 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.111590365 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092678235 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090151761 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109604487 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088014229 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088926095 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108104978 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091571383 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106577669 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112254714 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093768279 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092278365 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108117659 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089492096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094027434 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108127025 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092951382 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092302517 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136430567 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094158874 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086303204 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08662787 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116215983 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090908896 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091342692 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103665528 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101528146 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090508091 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.108623257 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084658749 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089762573 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106420697 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093200747 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083673662 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091828471 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.107750647 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094815782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093174157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10909564 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092382961 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093404507 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115162118 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091197932 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158580437 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089889136 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086784875 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08911229 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115471104 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085440327 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090357544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.108034154 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089698027 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086134213 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114821378 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09323665 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091309161 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112123014 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095740051 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.0923043 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.109961645 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090515693 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087667784 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092707022 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117876563 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093659967 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.090379364 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108286361 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088897616 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090701613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11220768 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090013276 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094669691 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106290894 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090010833 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.090017653 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093554294 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111605276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087475432 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088625591 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112362534 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091355236 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09107251 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112530179 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086730005 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0830388 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111690873 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088303727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088094272 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117944411 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088958376 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092383504 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087369406 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118498488 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089073084 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.092414941 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111541775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095330817 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094238643 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10312538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08975382 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091373804 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113541415 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08856223 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089111322 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106376743 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098521355 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085137859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.092073739 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104439649 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090038251 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094854078 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110514789 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094353118 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087435562 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150213986 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104027094 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094157135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109485163 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096451074 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093955187 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110095254 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094894927 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094800015 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093554807 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112915924 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091495663 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095006215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108696622 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091988217 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089923473 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113288069 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084646878 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089431044 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102767631 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09611222 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093063008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093195349 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115262717 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092764441 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090221211 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11885385 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088777701 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093026473 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103929431 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095075231 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099546225 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.114884751 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096847644 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093697363 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108291274 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090854545 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097907908 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090869894 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113561074 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08990161 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085160048 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104889042 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095675288 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091774376 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106553635 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090506511 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094072969 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093209467 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110742748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084540794 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.094115825 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116887442 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088653032 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091763219 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109472218 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090762495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099190998 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105532387 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089452456 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094504625 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.113843484 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089991111 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091572183 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110978739 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09933006 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092821675 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.092004328 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109529008 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097913701 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089405961 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.107932615 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089678744 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091838571 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105279358 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091576618 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093124067 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088766413 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10883622 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096916216 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095627803 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115759928 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091919593 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.093693201 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115782208 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096554274 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090418202 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114738343 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088448397 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085063652 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106373401 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086375765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090705458 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086801162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114740481 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09052436 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090166716 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.113904543 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095435787 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088805281 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.115269436 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104644814 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085685201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104256721 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091635794 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091244106 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108618872 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090402784 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090599181 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113606355 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09688832 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094795038 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087521973 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111223628 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097326851 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088017816 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117350568 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104885891 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095897827 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107938805 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.095986601 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088789373 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116940349 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087697755 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100137024 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110784595 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093245281 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088658846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110377195 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089430055 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085865251 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087760597 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116687843 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092032412 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.094440539 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111572987 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090828254 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087993637 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107922548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097604843 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090376628 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1152849 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091510993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085881186 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084921159 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11624561 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093758059 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.095320575 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107320803 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095488435 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096330985 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.114113009 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092870959 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09910594 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097969695 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11775027 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098583661 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084443221 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111118254 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09881202 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088735402 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11421727 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.092535287 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085396373 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114894579 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098154385 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09434776 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109843068 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087797065 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089865139 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097305904 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11445257 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093991064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.091375757 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114104456 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089258588 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093136299 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.095577827 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114920154 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097408862 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092042637 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116218467 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089644142 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.095085896 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.111068926 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087695748 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085593456 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109605521 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098038318 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086712403 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097029105 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115918264 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089659312 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090210606 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116305744 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090793363 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095384054 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116170757 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091989778 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099361112 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.110527618 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092263129 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09569122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.094165847 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107287732 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092572677 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091711023 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118431664 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092320924 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.094928333 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113603086 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097795771 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092931221 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11418677 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097272755 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096180004 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085951421 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118090573 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096953687 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091664807 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111901454 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093041092 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087668795 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111199596 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099111547 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089629116 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118629484 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097284651 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090466209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089864966 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.117530399 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091817767 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095954852 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110163352 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095745417 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085847004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116112152 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092710713 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096079774 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10992567 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088578962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095273618 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115029851 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097188046 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095268055 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.095914233 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107565871 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087206662 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091832634 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11043922 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102246337 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095230831 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111797605 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093634542 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09106302 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.111347921 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09996257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08841362 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088992268 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114277551 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095227992 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090400724 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109385888 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096019488 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091968531 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11588058 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093606775 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088066337 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111959424 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098770286 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090796305 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109067326 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092363229 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097072895 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092221399 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110517454 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088177057 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098624877 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116879079 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098844754 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089339055 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114981835 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092278445 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.091642013 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118617595 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092884184 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094336883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112336226 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097455887 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098888944 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106170469 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091648466 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101099479 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095013782 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118803308 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.093145927 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091806084 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119583043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099110413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.091576851 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10818674 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089818414 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091966694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106551132 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.094413125 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098894258 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112211644 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092916925 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096410225 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095196616 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112882892 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093810956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087328262 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117996934 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091797468 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097337974 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105806135 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088348995 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09197752 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096162262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113951667 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094726893 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.091194021 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113365129 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089612861 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090981228 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11629029 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097344208 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09688544 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092409209 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113532772 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.094765143 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10115958 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113202271 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094089411 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101927357 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119217361 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096425963 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092592024 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118829681 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098629939 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092201451 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118671479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093600114 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092384916 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117870712 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100397494 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104199647 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112326084 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089332518 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095848866 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090604042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109931981 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098029014 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097865869 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119714688 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095474658 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089758991 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121559003 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100959005 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094551485 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112289821 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092736569 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09504851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111327332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096878082 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090032154 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098199775 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120166581 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098009991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.099631225 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108907566 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101498803 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095900057 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123093347 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092904889 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087308863 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087460747 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.114517103 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100212805 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100725723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117322997 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096388114 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.095658105 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114444199 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09563655 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090871104 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.118854627 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099098757 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092408296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095512277 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114151852 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096626677 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092768052 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118543825 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100100363 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094194557 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1232432 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097906245 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092656222 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110760007 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09737697 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.092831351 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094167678 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118459924 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091474366 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087763846 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118841997 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101178313 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093761742 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120269576 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100725457 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092391254 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11670448 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101235261 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095873989 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.092363437 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117145438 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094535879 seconds)
  done (took 60.345061805 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146512267 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099299748 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114274301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093333362 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11214411 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116450671 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093794415 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093678588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1148242 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105231775 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093101376 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11189359 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112201484 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114292453 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134219264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104293994 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113289474 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095804668 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093126717 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093222559 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130488347 seconds)
  done (took 3.211666621 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114054512 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.107311456 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125109716 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108681275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099526646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12763708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104580072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126740427 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109888199 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100919363 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130328363 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104895752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.121486077 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103061859 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101387852 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12313772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110366959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100034529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127634558 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105576534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123103422 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106507218 seconds)
  done (took 3.405187721 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104121364 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098222966 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098714249 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113865088 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098782011 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092417335 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121313791 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096040867 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.102112585 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093925026 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111144544 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095602418 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098653682 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115100876 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090614811 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093800865 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124058828 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099008668 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098802441 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.092109842 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130277749 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094154164 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.093629194 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111883614 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106131084 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.098249236 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115192028 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098817298 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08914687 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118607498 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095894734 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093974913 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114997694 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091739848 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090407672 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096672308 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120506088 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094282221 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094263256 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116221752 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095696166 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.09866915 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120103983 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096077357 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094395784 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094648927 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.120476802 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093290704 seconds)
  done (took 5.844258715 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127155326 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162917394 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097056674 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135583588 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131267524 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105077 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097060563 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13640617 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09539433 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118794291 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110990609 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107689322 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120959825 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103068825 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096619164 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121772042 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100390728 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096181865 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123785051 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097918354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.101779692 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121690678 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109787228 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127375194 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10270882 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097643011 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118180886 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103769186 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107222984 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123659135 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103817129 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10242492 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.374395744 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097547512 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095971601 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120348158 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111062867 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097962602 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121656335 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097907715 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099243838 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123536745 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101728981 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.110409719 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120869306 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100572171 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09851306 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.116735967 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107022422 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.098737693 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127762539 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108229974 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123204126 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100049364 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101015436 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130328502 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09919977 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096445791 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.120484002 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108626875 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095478398 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122029931 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109545071 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.098337118 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126525211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108702704 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119095002 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103589673 seconds)
  done (took 8.867348088 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136094687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101967885 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131448914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111364174 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102909179 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125437245 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10315399 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101639381 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125216269 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108381671 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123254807 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.20468776 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121401096 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109235919 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101465974 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124295953 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103387463 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101841456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123818315 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103028831 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102694859 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132251236 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102987657 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131182935 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114796667 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098946942 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12352828 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103722928 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111203505 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124029067 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113429586 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122741002 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104367346 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110985405 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136587521 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103096992 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097079072 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125433341 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103428068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101715019 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122491677 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111969161 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102283893 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.121307096 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103258488 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10175443 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133814185 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114336058 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128355387 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108967746 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.102090559 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134303614 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103132604 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122611179 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113702004 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118125407 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133632295 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11173912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124196646 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112556557 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110483407 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139803856 seconds)
  done (took 8.143287959 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097987256 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09609025 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09428563 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115811541 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097514059 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093808172 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095034651 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117700878 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096132604 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095414769 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117723504 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095225033 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094283047 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094447732 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115652021 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095354127 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094612396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093189783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118939205 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096038385 seconds)
  done (took 2.955502622 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106926262 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11367154 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.117575377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104487422 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0977918 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123480809 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.0996809 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097908934 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096180197 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121445566 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107199606 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106252368 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120973986 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103639272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126818342 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104877646 seconds)
  done (took 2.693064236 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118780726 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115777029 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.193826765 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100914929 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12098974 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106223004 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097560456 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098862747 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120070949 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104474474 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101544537 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125121516 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098871952 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098067159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120130317 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102948248 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095516814 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.122866958 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100101216 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.167188961 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125176851 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101362375 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09842967 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124668856 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099265606 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.101340222 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127949429 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098078635 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098712042 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122748639 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099434025 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104943031 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11878243 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103884778 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099560192 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119524204 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100841857 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098855483 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122048873 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100821139 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101196719 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098408424 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.11976703 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102659071 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095247366 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.121339636 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098016264 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103667332 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121641834 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100622441 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098228593 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107259081 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126626382 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10780261 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.105071703 seconds)
  done (took 7.030953299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112964688 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100437599 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130651991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097948128 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10046968 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098154604 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121715137 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100453254 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098596185 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118389647 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100880645 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100445132 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120371497 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101817443 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099384298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09880381 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.118182303 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099397021 seconds)
  done (took 2.871388775 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104642113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097423406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103289084 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120302251 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098418265 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097806799 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118775728 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099652402 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096984004 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097122696 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120152507 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099666013 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096962236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120712854 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099051991 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098224414 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11946032 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099503429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097281206 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096472655 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121354183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098629111 seconds)
  done (took 3.254679444 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112623113 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185417993 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108303771 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195213581 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098662654 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095865373 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128709342 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099963939 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114652226 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119523611 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09666633 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096555285 seconds)
  done (took 2.405110728 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129218126 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137554605 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119969669 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10063695 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106680763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124637869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103940668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1027638 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134299041 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115190214 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122769725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112898738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111252373 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132468866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108310804 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128264678 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103774855 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101948451 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09833739 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141594982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101859514 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133425738 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103323044 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101704682 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125414003 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11251726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132026641 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116781429 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101984332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132997289 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10929576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101911913 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134802676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114236131 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121244802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112598753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102889274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140334967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108048148 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132913104 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100976772 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108193613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13376102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10973129 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111335378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125936782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109045568 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102022047 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12580608 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125512064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130721837 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111760213 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130215574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113463456 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111176705 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148036948 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114570154 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134460549 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109414181 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136207162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113186864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108581544 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133882503 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11540043 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130579218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113328111 seconds)
  done (took 8.741880436 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141364077 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099244339 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124970711 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116134174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11050765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126337778 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103748136 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124024004 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104625275 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099424541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17219802 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104071156 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11330341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134640085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102959828 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12409705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105292173 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11115483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121655481 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127340535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102173581 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135435202 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111906425 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133398778 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115725778 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130468877 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104377372 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102949809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123956578 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105001061 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10814569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125016944 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112631817 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099283715 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135011404 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10430465 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102940387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132512831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104870142 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130649289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114162569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119381032 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126013044 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103667599 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136701227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105817797 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104014676 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121328622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10518854 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100845949 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136706888 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116985168 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13689131 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116950489 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104401666 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125283807 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104483952 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104256767 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125948841 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111159583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111630271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126475437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126875019 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125023978 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106199296 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111625653 seconds)
  done (took 8.678938939 seconds)
done (took 165.852343365 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153640329 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194510121 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147573643 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179847015 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094303249 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127771603 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150369927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150362099 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092883387 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115585493 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093844244 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096380096 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183381303 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094634177 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092118794 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095684901 seconds)
  done (took 3.018349721 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19534588 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.313391658 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110093366 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119143824 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102685106 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100273507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118980433 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101226527 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097492991 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128409804 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101447472 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096056638 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127848473 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097488571 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097049104 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122187358 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10648383 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099763558 seconds)
  done (took 3.205199841 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119897806 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144437926 seconds)
  done (took 1.234122518 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132120288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199298684 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278488289 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170686507 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123943584 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139021353 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152644739 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133049815 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182304276 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134110798 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114007913 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098213197 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148145928 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105883022 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110790379 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12197935 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126934961 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109559106 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.132095948 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100923365 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120105088 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125815738 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10404835 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.131266929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.172610636 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132416541 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103863415 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100940234 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120995096 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110739735 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104454963 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137674569 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111728103 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175707756 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103794032 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17208154 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10656401 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120039496 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110402229 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098561751 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124463516 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103662545 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114073024 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121043212 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101115051 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107299489 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124812687 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102035026 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10538993 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.131172936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107008176 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1266543 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147883733 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130830216 seconds)
  done (took 7.892886299 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.869084466 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144029656 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099707254 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.018725545 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155047995 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114153638 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.869769709 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145557796 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255215973 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.886082759 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116545512 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110516537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.265713242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232238252 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.999639842 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350624959 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.700295756 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.138486344 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127566837 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1645854 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107386975 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147966575 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121633309 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421202726 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099620398 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098598458 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129560107 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111348228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181283595 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09880069 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124935709 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175482433 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269574395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211098624 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120573793 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099320943 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098050528 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185197614 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274026348 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221223 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187384759 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096613825 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097568813 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128836852 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119844207 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093965771 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181251478 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190806523 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190001173 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103703566 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111496971 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133036853 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106291362 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180394809 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095848178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329449154 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357328054 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102708845 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105779461 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138521646 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270701124 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097128005 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23301373 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149571758 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217778439 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097580258 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813643819 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184452848 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097942442 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129841101 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106500387 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103128747 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130567135 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158953264 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397657716 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109507621 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126308573 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098380396 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244311761 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098223799 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121848542 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160331658 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122744396 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107396921 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134368313 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11204805 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190657859 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25005163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112898315 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108657518 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128518874 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111972637 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099153151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23500782 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230480783 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179722674 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.237133462 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10711738 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183396316 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185651821 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106136032 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190142499 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105996283 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139147893 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106496906 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225919868 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157621314 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099002685 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125597018 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10961464 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136362488 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125253889 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107676578 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186774913 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457836673 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182430568 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097177989 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101888507 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128330234 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161353275 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128355176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265260766 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109848176 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18368292 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106858323 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095337797 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131513848 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182573472 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10990675 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132236643 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110240935 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.253764063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225326277 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111285099 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246889599 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193575471 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106287209 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191332392 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129885372 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167830791 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132395767 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107833606 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099822032 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824221883 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113561557 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106757019 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128010812 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183603865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120873157 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101741823 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099058803 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096118875 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806229316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125562201 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09719256 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099079127 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130145808 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107192543 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106273528 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127870385 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180254696 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246646164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113297419 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129299094 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100838324 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181668068 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101008119 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099292047 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122061907 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100394913 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107796052 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126807003 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102411003 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1947461 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1533578 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.256572988 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.55958468 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100719805 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098958741 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240965488 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12172813 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302428763 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107656331 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233967257 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187621703 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096787693 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.353358198 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165902872 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208087432 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101557883 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190981833 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09519559 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132469448 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17961815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102028955 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106552289 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179624113 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113007584 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136745892 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.000372987 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099055867 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253166613 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095817427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187801098 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100102485 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131429446 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304652145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098938158 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141068823 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158681689 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128437706 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099286802 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604404912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099800246 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134211208 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107179388 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235264417 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187352026 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106948981 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134341059 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112917658 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184925749 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236666648 seconds)
  done (took 45.504681455 seconds)
done (took 61.819678255 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299887074 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260410543 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.312453347 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2120945 seconds)
  done (took 2.147343146 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269997027 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16207131 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.238190141 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098098847 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248649885 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097468517 seconds)
  done (took 2.109397001 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.499755647 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.378391595 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.316981109 seconds)
  done (took 2.195480605 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258873077 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248652018 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355798293 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417294041 seconds)
  done (took 2.395534986 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.304554186 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13047539 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125238988 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215356616 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.261830061 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.236005485 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148482445 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198347628 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131153704 seconds)
  done (took 2.795377393 seconds)
done (took 12.634841307 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.37590578 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.146400474 seconds)
    (3/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.260781171 seconds)
    (4/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118968598 seconds)
    (5/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.198472241 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.36794832 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.174061998 seconds)
    (8/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.358808253 seconds)
    (9/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.200320984 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.25042838 seconds)
    (11/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.295863311 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.104439744 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.173775243 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.247444008 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.230365424 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.160972436 seconds)
    (17/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.24759809 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.163150982 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.277324694 seconds)
    (20/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.345532567 seconds)
    (21/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133027079 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.258867362 seconds)
    (23/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.218872101 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08495158 seconds)
    (25/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.093440405 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.338537365 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12391191 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.127406389 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.153394644 seconds)
    (30/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.192210242 seconds)
    (31/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.229090806 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157705694 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.26108845 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083398557 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.14213031 seconds)
    (36/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.105177282 seconds)
    (37/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.246495045 seconds)
    (38/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14750715 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.130205473 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108379186 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132072873 seconds)
    (42/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.148673701 seconds)
    (43/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108252904 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.232354785 seconds)
    (45/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.217494985 seconds)
    (46/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.33272585 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.15245506 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.18945358 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.132445586 seconds)
    (50/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084291608 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083841042 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.186514671 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105801335 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104586075 seconds)
    (55/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.20440524 seconds)
    (56/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.194352897 seconds)
    (57/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083735295 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.214289023 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.209724812 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132547946 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084736918 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09877553 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.162419631 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.223851873 seconds)
    (65/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114276326 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.111342158 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.169481173 seconds)
    (68/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.082060556 seconds)
    (69/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.10818587 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.134573738 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103459782 seconds)
    (72/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.110505039 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123450277 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193937337 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.11034687 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105209811 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.105187294 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.140449841 seconds)
    (79/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.146959806 seconds)
    (80/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.154701057 seconds)
    (81/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217073805 seconds)
    (82/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10782143 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103139563 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.167031857 seconds)
    (85/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.324501902 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112327822 seconds)
    (87/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189938903 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149952772 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104701283 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084354379 seconds)
    (91/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089676191 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.139076264 seconds)
    (93/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124618909 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155018738 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129565067 seconds)
    (96/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106107282 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098164864 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.130819398 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095578314 seconds)
    (100/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084699924 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101738367 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.148678676 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21366879 seconds)
    (104/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.185441582 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.199330284 seconds)
    (106/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.110610586 seconds)
    (107/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.109809905 seconds)
    (108/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.090979255 seconds)
    (109/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171420947 seconds)
    (110/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10452317 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129287635 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099242532 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105385974 seconds)
    (114/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.108756133 seconds)
    (115/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.084858174 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105208498 seconds)
    (117/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105829398 seconds)
    (118/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.174400044 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104155187 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103020465 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.108747464 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.085081043 seconds)
    (123/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.151221428 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105342 seconds)
    (125/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.108503628 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086133608 seconds)
    (127/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089621587 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082996144 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0989462 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.108570205 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104296475 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101422297 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.221955737 seconds)
    (134/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095229706 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122398889 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148254934 seconds)
    (137/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100826021 seconds)
    (138/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085066206 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083928043 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109064232 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106041719 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.107308399 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084056939 seconds)
    (144/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131640812 seconds)
    (145/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.147136134 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.084371973 seconds)
    (147/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.0835144 seconds)
    (148/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.114408796 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085874742 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.083478507 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085369946 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083119642 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117744636 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.200032627 seconds)
    (155/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108307992 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.087778728 seconds)
    (157/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110915219 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100864862 seconds)
    (159/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.194869146 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.109126761 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084822332 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085569617 seconds)
    (163/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083608405 seconds)
    (164/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08777009 seconds)
    (165/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.109638037 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086831974 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099208249 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106619762 seconds)
    (169/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.110071991 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086582287 seconds)
    (171/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086211949 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124466972 seconds)
    (173/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083736598 seconds)
    (174/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140184713 seconds)
    (175/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099425623 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104341742 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.113904449 seconds)
    (178/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084940686 seconds)
    (179/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110017927 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084693086 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145554425 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105050361 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084712862 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.084059061 seconds)
    (185/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.108710751 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10580592 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085344648 seconds)
    (188/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.196015886 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.085374857 seconds)
    (190/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090010401 seconds)
    (191/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.083685875 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104407388 seconds)
  done (took 28.037291825 seconds)
done (took 29.04383835 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217902092 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132094974 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109448399 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10838412 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.20811559 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11522445 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.145090778 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113107811 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114213148 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13247439 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103013501 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116695983 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107886286 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206625445 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110322049 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129229937 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101242894 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115445869 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.144200147 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119953299 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209043873 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103751958 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114716868 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127404686 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182745489 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128282624 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109669079 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107665478 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.139459431 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108689459 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107573862 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099214019 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.145021641 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119161558 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099172957 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13366667 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100730068 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090100207 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130347885 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109992392 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115649104 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105972652 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13524189 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10205867 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107918215 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.13302374 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100731733 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11200599 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126222895 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108830457 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102563267 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.145639408 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106954626 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099530438 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12285415 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102806567 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114607969 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100236981 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.143543459 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101132135 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100797472 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125281251 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11022797 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100028141 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13180137 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10208939 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107750865 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.132866172 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108925642 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1033657 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100342336 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133010551 seconds)
done (took 9.802281073 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106076258 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148116137 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.204207764 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214029362 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128599393 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114911566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.13793572 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122372542 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.109462737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14628064 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.135115837 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.154708582 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184445033 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139315863 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116322626 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.110166289 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134844381 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109604857 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.212072516 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124799269 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127634608 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140063383 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128555229 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142385317 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105226878 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125845109 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133398596 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112851796 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104078497 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147526803 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126599307 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103961967 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132167474 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122116481 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120371794 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.137144714 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118763741 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111182468 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.1300615 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105383399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113905842 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144856105 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106641433 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115485171 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138500333 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119954067 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.108977417 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141761928 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107689237 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109167648 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130199662 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132945104 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113580114 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.144063925 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114928198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116003127 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142067978 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117590459 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107696894 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142233495 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107199361 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105046401 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132466255 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125813178 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107485777 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142003801 seconds)
  done (took 9.556976068 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127648652 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137120289 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140847164 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116671697 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10980371 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124730605 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098588763 seconds)
  done (took 1.908365459 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101098406 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189045685 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.213512302 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.21266912 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182878383 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.223858627 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148130917 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101352239 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13172997 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135755082 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190959265 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.244464972 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106102751 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142832363 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189408674 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127782185 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191071773 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127125708 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113187333 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.216430721 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113664658 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128765793 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139592478 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100644773 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212523404 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102272127 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268518206 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116984239 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134883516 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116797637 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111394935 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207355526 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211307119 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115846497 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105215465 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213416161 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.208187295 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115087101 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226019741 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106190923 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212092082 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11411182 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115159991 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.137051629 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117167238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.171860417 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.14934002 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114624937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.111051347 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.224589204 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109919065 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216278536 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.107443902 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.139426621 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111930033 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112624286 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149015096 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114013942 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.224888544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113939915 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.214299777 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185110101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.216275424 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215653209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122820712 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.217777281 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180696948 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.140503203 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109546199 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112103236 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.21651915 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.109760685 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141251728 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.1749026 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147352308 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.188152118 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.215656234 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108956649 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142494496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104894422 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.109714482 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129646744 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.178248201 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139865973 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111159109 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118555728 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14037356 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112742105 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104912335 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151688566 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113478456 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.111548114 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14580168 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113187331 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142146841 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.195030671 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138680965 seconds)
  done (took 15.792544467 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107194253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101706409 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106474741 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129860371 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104004699 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102093168 seconds)
  done (took 1.721485288 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142639633 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113881253 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151042517 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115589241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166688019 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.222310192 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.233102835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110272327 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159724243 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128696988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.224785813 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.201911817 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.230913035 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116565683 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.230618482 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117578548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.235452666 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111563345 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155038014 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11200874 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116491123 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14805563 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112642093 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.21898766 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115700928 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145002256 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114909849 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126473937 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149758761 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113025015 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117612713 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143726573 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111287503 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111283703 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.232912196 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10768651 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139226628 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123738141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114844923 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144035373 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.204425498 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142086954 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122743131 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12272875 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141780013 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109086695 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.152490595 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112892481 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.229347564 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123971156 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123065185 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.1433011 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118253859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124766496 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137072788 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112513469 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123461517 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.23323992 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.116344501 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.140422627 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.113913498 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.115657374 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139843741 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122884942 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.113811884 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.153628391 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109693385 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113941707 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142022804 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115367386 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123519259 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143632278 seconds)
  done (took 11.406557505 seconds)
done (took 41.429832357 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.587223642 seconds)
  done (took 2.654832884 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.923642507 seconds)
  done (took 1.995191921 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.259617551 seconds)
  done (took 20.365067161 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.541200172 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.622213635 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.041673276 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154832469 seconds)
  done (took 3.439031561 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.045601428 seconds)
  done (took 2.136541582 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29588374 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265572831 seconds)
  done (took 1.643954146 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.751219544 seconds)
  done (took 1.842837663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.575498704 seconds)
  done (took 2.652715574 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.351715467 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174436901 seconds)
  done (took 1.624704801 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.637133317 seconds)
  done (took 1.73232747 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.039192833 seconds)
  done (took 21.136601336 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237481534 seconds)
  done (took 1.333429581 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282516095 seconds)
  done (took 1.383828473 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.821478783 seconds)
  done (took 4.923153377 seconds)
done (took 69.943220238 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114680661 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115478921 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1149103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14163524 seconds)
  done (took 1.575802979 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12242284 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117014017 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118995273 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143768358 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124047526 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116971389 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144259582 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119619169 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115373589 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147038528 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117973508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115632855 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146713622 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116127547 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114865599 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145125579 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121157567 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117205861 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144456963 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120254099 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118238184 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144292465 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121825958 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120456565 seconds)
  done (took 4.13439525 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113878248 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10740556 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107101748 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132693096 seconds)
  done (took 1.567016989 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127868514 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130033833 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154971561 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125500573 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128312462 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154362818 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116994762 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113498801 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14230488 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126762357 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13227584 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156901887 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129412474 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117746021 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155083651 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11205673 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117869316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156908191 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12519622 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125985152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144425221 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124618412 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121947344 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152659138 seconds)
  done (took 4.295770963 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190272299 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.123394605 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166163794 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159134938 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167248019 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112271037 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135114557 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147153148 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119649808 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.113816594 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.142391697 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161304398 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144404878 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.1165173 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113633277 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144653263 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126140161 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118585519 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.182869551 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.115727379 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.145959194 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.126342373 seconds)
  done (took 4.177251613 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119692569 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106863323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101809847 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134353166 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118218948 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108728522 seconds)
  done (took 1.799929804 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107009274 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101039054 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101158613 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127178632 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106782127 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100683921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100079646 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128505109 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101359315 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101111441 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126985542 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10170803 seconds)
  done (took 2.4138091 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.338563789 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106287871 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134804045 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110122482 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112369039 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103760327 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145229182 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106415764 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.273872394 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101752941 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143193316 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196993856 seconds)
  done (took 2.983821767 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204411366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142411036 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297168609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369475092 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162931097 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187962133 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270045144 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190103935 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205346738 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133151752 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244765376 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150970519 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176633114 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171165048 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162756913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.16092343 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194604838 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187206933 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173478929 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223894033 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154365127 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190611523 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177884687 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17466075 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132073006 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187741382 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114566807 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125491958 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192972333 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187647095 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169706672 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170703135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13656239 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219608451 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257381991 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169555825 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316206573 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13153367 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202662797 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.182390403 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25657762 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134847156 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211105223 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178093825 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125266712 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203464229 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149322009 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199700127 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126268688 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137260018 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205894243 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197696488 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171827369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160972208 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314725542 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162073765 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163675812 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171275751 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209663069 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184143053 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190705053 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118337015 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210262287 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208463709 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176970909 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165572702 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160567691 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147694918 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163026198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219345347 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203076166 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156058026 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.221906066 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126421744 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183538119 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194895009 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178928444 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198998394 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155356334 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113872872 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174167626 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130318352 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15084299 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198888141 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115945248 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223662755 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126155981 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.350431211 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213011327 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178934296 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156078097 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183410903 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155664879 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169955008 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110825398 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141100736 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189339933 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151015213 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157308825 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15138804 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163003053 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123661622 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173045231 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.11833377 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153191686 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161716565 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160154547 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182452196 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1251121 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188707127 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144238222 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177960991 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163690765 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208407849 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126664941 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156702497 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185639506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182134314 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127296872 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201059388 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178951233 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176925452 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13139341 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192099467 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183404856 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165873401 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210980192 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135365101 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129677082 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.173706197 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155923557 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182946015 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151120991 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154216155 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14707851 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221241243 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122518513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161328957 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164712458 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154467621 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121308779 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134259845 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158905206 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136468875 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.166138561 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131202676 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147770548 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182083381 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151656948 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179458781 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12886526 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203878184 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12741908 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.183152875 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140783864 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.142334878 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168874865 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208748095 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124225737 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228355243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185311183 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190669856 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182562741 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125246965 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202274465 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122490252 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.141736401 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160595573 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176918822 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158850997 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203982525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212358044 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162421533 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.175770459 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143667768 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191377364 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171634138 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177833198 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139010025 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183199109 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1580838 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144988947 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118908869 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.121266626 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163082044 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125108792 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129880609 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202483087 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18944991 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209001683 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154620428 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161710743 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18071008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.147859687 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15793755 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.188501352 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135922749 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204331928 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177625969 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190280245 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135949401 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185668309 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115820708 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121916572 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156786014 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158507001 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159196346 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130894928 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163628744 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179396913 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198022695 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141313458 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225462324 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190846559 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188335438 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.14359864 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163618409 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195953485 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153556542 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208843005 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134722912 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181733222 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177037231 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163242675 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185498126 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181860205 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157184371 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21420698 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150087023 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156095124 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14326495 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185934191 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132190259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189692836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143490517 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124471371 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177195787 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13249233 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149614563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179372646 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168064805 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193683233 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157899853 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192832774 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121616996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134778027 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184564622 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138340325 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.142774465 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16658858 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208931304 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141077638 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182460178 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170215439 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155232538 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316646168 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215604107 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203266868 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131382822 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135743138 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187358814 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157026103 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190440555 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203700982 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137804158 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201908455 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155967026 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.165752386 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128035965 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144269594 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175884455 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146557643 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.156009367 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15204881 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.165316212 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182404567 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165230977 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156149274 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184261684 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144385552 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.138821825 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165244586 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218041051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153949984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199100974 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152111043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190967442 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188703207 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148577873 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123889151 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126662533 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20641754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12420547 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18787086 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.20436547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217901786 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159304247 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185014608 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136161507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120907944 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182693491 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142902638 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220797278 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15957541 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132830625 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215944704 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136284185 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125223934 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185921999 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306372511 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142341347 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198062505 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121292383 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29920873 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127139533 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127588167 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189856267 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165118995 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157138186 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179964738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188566244 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137456795 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186801606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132836967 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210725921 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219224963 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165390252 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197296451 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140039652 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18598576 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156227092 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201929298 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138606738 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169253041 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158363965 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208977282 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17645308 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156493743 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15471095 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184699223 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15234336 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198078339 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133004338 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216959698 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123484962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188847887 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133592953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147210552 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156757638 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.205110371 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127450298 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206511825 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153992876 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158232398 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121488231 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168503857 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154178617 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132296913 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.154422912 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205616096 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126304016 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157425319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205855214 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125726066 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181873488 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141924936 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123233934 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166589543 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138081963 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155732237 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167979096 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207109562 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12873721 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202212115 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161143891 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189763565 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153128439 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168156759 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667446051 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.121233084 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208033325 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142176739 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215244922 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176065891 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159010888 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182667672 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146278927 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189348863 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144726327 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.266475979 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160777705 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180595941 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128929171 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136006991 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166133434 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127995517 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17737852 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154844707 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164393391 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132024855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151005091 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166327714 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141777581 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162473685 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182068674 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174101615 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179892695 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209066231 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132167348 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188412802 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196433919 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127218414 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157331416 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20001179 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135017827 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174274766 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128041014 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.162168645 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177717961 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.117857304 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185554559 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155841745 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185451952 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153890474 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159884527 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15743533 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165941137 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157377272 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149489853 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149529111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183241039 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130893898 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.121463054 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183175126 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154872021 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.182374242 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121955472 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168417719 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212231438 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.118298131 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15788416 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278435598 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18756022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184522975 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.177247323 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130621719 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170275738 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150584196 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179735177 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157886108 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.122993534 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155512318 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.125853432 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.198322122 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.153976364 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184235586 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176285652 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186216623 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189764621 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160834093 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.291924965 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165835222 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155078972 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125147994 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154602162 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135598123 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157579264 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138264675 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213580349 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178338611 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.179948481 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141785052 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160686211 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.120654622 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125251338 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193451934 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147361365 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186059015 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138415223 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111316466 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168925764 seconds)
  done (took 82.918131176 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171140907 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153194338 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167235121 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227930871 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196579795 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298068496 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234625025 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263745437 seconds)
  done (took 2.914255818 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123806211 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159142343 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140396837 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145594249 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117868516 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.453233261 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157514691 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.11815879 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165800716 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.161074613 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142866667 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.634189032 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11349334 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144561548 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129790518 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.117126982 seconds)
  done (took 4.217861354 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.604574477 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.60490088 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.431026078 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286170773 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236839804 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182544552 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.826767833 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.708776969 seconds)
  done (took 14.085602843 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150564411 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136343997 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.32403357 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.266138169 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150432302 seconds)
  done (took 2.232492994 seconds)
done (took 130.408385271 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122381999 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119103628 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118601145 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152782221 seconds)
  done (took 1.700597041 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.187743694 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095318154 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096674045 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122627716 seconds)
  done (took 1.707437421 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.460730799 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094433528 seconds)
  done (took 1.790054794 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147728584 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142435528 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168949461 seconds)
  done (took 1.679002656 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143125148 seconds)
  done (took 1.350651917 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131962127 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119431574 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.242909151 seconds)
  done (took 1.704071065 seconds)
done (took 11.145618208 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123928734 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.414717205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432769728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134569121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710749364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427786804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036030633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175524681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174118571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137870022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133010387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686641235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.090311632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.358332962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.043409276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.387087065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69211741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109509788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14528748 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111693108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016769313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136786157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111795637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110517446 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715317599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421731039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10701168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.398045398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108852467 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111575378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425949137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109753849 seconds)
  done (took 17.492710103 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117387924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173234883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145525045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109986051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111566772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138220315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121261194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121347544 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205863509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10790734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160518002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10842494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113186019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137019825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137141224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107956244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110268979 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144313288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116918384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109491427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161030723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107453689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109488441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140960299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108704451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131067026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138329125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121336577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107803515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143347416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113858611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108896808 seconds)
  done (took 5.303860557 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15908042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180100501 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147289575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148332213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186816579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110932727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224541921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147644663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204649567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110814478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132350922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136433205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152627767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109551477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164816936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109690995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112309643 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140184004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118452981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110607436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162255061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108870303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110256368 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140793747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109857727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131579524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138252906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121792118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108623484 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143534633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114296338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109007407 seconds)
  done (took 5.626121756 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124826438 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124937962 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131549746 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163407333 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11901865 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12345598 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154943965 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119865726 seconds)
  done (took 2.280699031 seconds)
done (took 31.914502552 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137558351 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126580545 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126203299 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150774735 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194203668 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143970206 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124285714 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112282216 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150492954 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129705916 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108063325 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112858588 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.15723384 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.117591892 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.228469682 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121207989 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.231431829 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197074356 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.142695404 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122371587 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114998098 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232401776 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.11886845 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113319898 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.239202851 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111601854 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.219742666 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11618346 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147516978 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112498662 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225295239 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.119649247 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112170061 seconds)
  done (took 6.129753214 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.213142668 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.115573926 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147841124 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117604755 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115731738 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146660913 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.216229895 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148393005 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118884344 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117665733 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117513584 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22845276 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.120933153 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141302246 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117465547 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115443728 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.247268743 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.116530709 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108909177 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126591567 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.111475927 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117296601 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258416089 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.109357275 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118037044 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147622379 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.117894152 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.119855448 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146128993 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118891313 seconds)
  done (took 5.491212284 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125750806 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131800969 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134516324 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21719455 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145737511 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161191302 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141004081 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132298429 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173225545 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112561578 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12707623 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18047461 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129065365 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121009109 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146391061 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130366604 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134726156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142324434 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119782322 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129012899 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161910791 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130687735 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138715437 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150079492 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111217065 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118613515 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150615542 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127394569 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120077911 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125116239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144793706 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115788018 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112982221 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179450965 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112487374 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125274982 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.169020775 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123475524 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125000569 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173076424 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1153397 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.113461309 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169735921 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169207276 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.112662504 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.156244955 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124083881 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124978926 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140426791 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130488089 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153378015 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142308708 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132557865 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111875098 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140016696 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12061567 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110662008 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144149611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127589125 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113611048 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16476349 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120346596 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120569844 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112908735 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152880523 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109300451 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109839063 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146736611 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139610033 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118300447 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.179316149 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112255686 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123200928 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154330846 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123681156 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121807198 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109521639 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153941796 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121934262 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117274689 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156322475 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115079194 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113872621 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.15934897 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132951562 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125022548 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.15510318 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125961165 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114508166 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.142981377 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130380785 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112504638 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.145449039 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127127044 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112776157 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114181077 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156643329 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123583095 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108649917 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.16850524 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116295187 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110177832 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.166361907 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118822984 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117551391 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1514613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157463527 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111783283 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152682507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126930457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111059668 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.118288438 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146684961 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11070692 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13019582 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158334546 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120253631 seconds)
  done (took 16.915692656 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.331048378 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318214764 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181266338 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318429255 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157534975 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.21168617 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.312995168 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.315182401 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111466222 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18135887 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163425454 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.281449943 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.143892706 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140431566 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.318654984 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.370964163 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175388468 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150717055 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18132494 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127757249 seconds)
  done (took 5.737554971 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137229959 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148357243 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166741576 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143842654 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119268089 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158566165 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111170007 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131041925 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152631517 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123817587 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114274493 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160055504 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122634551 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.125417265 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158832279 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153999354 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120416648 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147330642 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136593251 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117292847 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137317896 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141203051 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12114839 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167194386 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128933664 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123982615 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141638088 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119461546 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116829313 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.117806472 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148929931 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131817501 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.118093872 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.139752264 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125114738 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128219373 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.145972624 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11556734 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116391031 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145065019 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129090353 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121345852 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119419948 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133591788 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131159181 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.1151149 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121625111 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156210162 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112405913 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127945102 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156821343 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124576124 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118685697 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161887319 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.117608468 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129428065 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153525466 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124430692 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116964485 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.109541356 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.142015539 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117544332 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.117172034 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.15426653 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126667193 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132481406 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159728747 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113319987 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116258874 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.148136728 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118190636 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12727085 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166070152 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119576655 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.115455781 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155680715 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118407925 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098855338 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122366269 seconds)
  done (took 11.686627539 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14478616 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.117726071 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131309378 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180063588 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.122633795 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117522655 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15072677 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13316598 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12183222 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159450214 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12480604 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126159247 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166588946 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122774036 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117274333 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160073331 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123878901 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151626581 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164168842 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142467197 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122812911 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150456124 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125653036 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123241391 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174285854 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124462 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139820903 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.154769479 seconds)
  done (took 5.150375103 seconds)
done (took 52.332214317 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.399765568 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.58463829 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.346069941 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.339693721 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.337771907 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.378011928 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.337254625 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.339055248 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.873461345 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.318868892 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.341536807 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.350848094 seconds)
done (took 30.189245797 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.349631783 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.857853819 seconds)
    (2/2) benchmarking "String"...
    done (took 1.620249245 seconds)
  done (took 4.713988521 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.332334155 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.33519613 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.565866914 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.334723722 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.337865528 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.337642432 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.342660647 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.339039587 seconds)
  done (took 16.831372544 seconds)
done (took 27.463431258 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.408267527 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.516507963 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.577868909 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.344866718 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.334588031 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.33548272 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.356687005 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.362675938 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.340532292 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.353428063 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.775928346 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.603158816 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.341662963 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.715413963 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.33603968 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.361310059 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.353163928 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.579486672 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.339257559 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.37231026 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.321476759 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.322761315 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.377636629 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.342301754 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.344141292 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.347691022 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.339794959 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.349242832 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.530362284 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.349959215 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.375319361 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.342105085 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.414608848 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.355653155 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.336602991 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.346639225 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.537024702 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.352543019 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.325553725 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.350493855 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.542545353 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.346629928 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.337454481 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.366029929 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.355610064 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.408477985 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.324600414 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.454930972 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.374079699 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.351255272 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.388850105 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.725950575 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.356481416 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.347728454 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.345405955 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.570594036 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.363826868 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.410436364 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.369908477 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.342603798 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.351636576 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.348355502 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.353758507 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.344925068 seconds)
  done (took 152.785969301 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.341198732 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.345408125 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.345383467 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.353414141 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.340400216 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.34549864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.341133998 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.341695261 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.34467633 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.36611522 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.339772899 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.340518345 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.346311581 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.281711302 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.348346587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.362849955 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.3464929 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.364016199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.346369034 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.343357058 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.360896442 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.340477935 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.358661776 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.340975775 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.340082471 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.426671219 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.386695152 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.356248738 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.352058709 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.34260972 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.350870395 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.350984735 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.006824163 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.209573353 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.35046855 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.376518419 seconds)
  done (took 85.377507429 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.34315219 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.338606891 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.341780168 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.377143144 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.341159078 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.339905978 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.969847068 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.978428328 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.079924174 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.081628521 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.851580425 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640980894 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.340748276 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.439977432 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.355022961 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.344345265 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357172644 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.370682226 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.344752256 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.344660521 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.973496715 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.359804995 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.382145978 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.534179275 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.363667047 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381263063 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.743616945 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.342489286 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378054109 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.682658387 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.397576304 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.345784705 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.745965503 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.208707351 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.461210907 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.347577477 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380719181 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.34424458 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.630169119 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.343803922 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.34375939 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.344976707 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043159007 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.342701927 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.972748756 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.349541216 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.32975669 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.345693 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.347861879 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.344844304 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.425509894 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.047664672 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.344151233 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.344483391 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.347579949 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.345499205 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.344780961 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.383366883 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.304597799 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.439350635 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.346459748 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.346916614 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.35102755 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3793718 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.344522402 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.585898294 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.345389696 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.433989331 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.408193414 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.586131156 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.97434313 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.350499419 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.446419722 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.469528934 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.347603149 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.347193917 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.345627313 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.348201265 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.459424858 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.344776545 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.786373128 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.346145031 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.532688524 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.363599097 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.820410936 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.451607291 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.345158547 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.787023824 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.350934394 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.347735545 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.131821437 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.448802336 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.347755442 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.348965958 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.34794042 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.786818806 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.979803186 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.633877575 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.353576457 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.506923346 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.351591238 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.804566283 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.949233193 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.058681039 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.346987819 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.468956141 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.532843508 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.366050524 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.350803215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.856947825 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.35349351 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.405953808 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.351336491 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.756070769 seconds)
  done (took 384.798355535 seconds)
done (took 624.198926038 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.217655133 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.161142029 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.328921027 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.17384535 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.156850699 seconds)
  done (took 12.283594799 seconds)
done (took 13.533289648 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558094169 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.561492443 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419532861 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561922039 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387253677 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.575606634 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.546779618 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.374941142 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.475925634 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.439355774 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470320154 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.408754892 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.38262407 seconds)
  done (took 20.407296936 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.646089579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.358079369 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.421085988 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.653636895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.398004726 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.649746189 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.67826647 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.360997827 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.496654957 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369764471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.369793736 seconds)
  done (took 19.650059096 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.65746619 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.363031869 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.415766085 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.647329418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.393617777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.661262536 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.681390724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.362731532 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511940443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371215906 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.368544748 seconds)
  done (took 19.682188257 seconds)
done (took 60.988138381 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.434190634 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.768714646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.386813708 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.379071813 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.366114572 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.370022371 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.379490348 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.366448744 seconds)
  done (took 12.696799158 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.365302866 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.366325035 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.364950491 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.36641195 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.367626454 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.366227886 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.365158507 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.367939107 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.367883681 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.363101033 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.364808249 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.365963835 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.363197477 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.368085357 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.368160622 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.364474403 seconds)
  done (took 23.104984158 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.368384161 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.367463404 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.368855332 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.366238196 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.365049302 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.366770584 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.364642259 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.365367966 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.366905611 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.363751156 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.363412634 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.366116292 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.365362238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.365756695 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.367979267 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.370920323 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.366146346 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.365465457 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.370089309 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.366559482 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.365817061 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.364448972 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.367538426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.366290503 seconds)
  done (took 34.047087555 seconds)
done (took 71.097509745 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.355503112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.3573929 seconds)
  done (took 5.962739386 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.426156522 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.427780405 seconds)
  done (took 4.1080234 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.366983912 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.367846927 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.368627033 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.366369101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.365781415 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.3662504 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.370368165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.36755496 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.366580778 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.367803978 seconds)
  done (took 14.923317455 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.36925224 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.367686968 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.367985341 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.372462886 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.369250481 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.367270549 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.371305977 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.370270133 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.36880108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.3706505 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.372499358 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.36741011 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.366327361 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.366531429 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.367980831 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.367719058 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.368809704 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.368102231 seconds)
  done (took 25.890877276 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.383366803 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.3909274 seconds)
  done (took 4.029490485 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.5093193 seconds)
    (2/7) benchmarking "second"...
    done (took 1.407370281 seconds)
    (3/7) benchmarking "month"...
    done (took 1.485705207 seconds)
    (4/7) benchmarking "year"...
    done (took 1.474996296 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.411417608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.387738418 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.411643115 seconds)
  done (took 11.341749001 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.371628389 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.586470428 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.713681753 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.938415061 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.371190076 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.371327937 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.1935979 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.373876879 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.37230057 seconds)
  done (took 15.545835609 seconds)
done (took 83.054094934 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.356221939 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.404129716 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.36924357 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.376774314 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.662786458 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.405528251 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.363839739 seconds)
done (took 17.195104059 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.351097924 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.347367345 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.345158465 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.370385911 seconds)
  done (took 10.665527393 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.377455108 seconds)
    (2/2) benchmarking "read"...
    done (took 1.64699955 seconds)
  done (took 5.277387473 seconds)
done (took 17.200050382 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373187149 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.372465821 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.372060079 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.369844476 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.370572446 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.374481085 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.371324147 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.372289693 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.372771539 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.370895302 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.372272489 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.370739965 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370352261 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.372766063 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371582466 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36965128 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37159788 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.370950739 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369563956 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.371016027 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.371335042 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371591851 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.370961816 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.373568228 seconds)
  done (took 34.171042474 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.373520548 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.374291167 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.372991309 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.372743192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.374185681 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.373803075 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.371560071 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.37245508 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.373257939 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.372492956 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371735702 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.371580327 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.373838528 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.371604524 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373736999 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.372602942 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.37464313 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373653317 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375534709 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.374926391 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.3752952 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373660849 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.372000546 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373789122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.375257891 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371196997 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.373371336 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.374446362 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372811994 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.371410603 seconds)
  done (took 42.454299237 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.381490338 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.379853161 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.374443977 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.376015966 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.37638217 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.374972671 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.376445775 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.374440731 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.376176208 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.376362693 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.376823256 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.377949877 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.377386228 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.377777285 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.378137898 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.377734435 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.377380502 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.376169783 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.37562892 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.377260222 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.378780563 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.378932989 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.377155737 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.376742143 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.377188094 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.376435069 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.376683579 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.377420034 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.375689105 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.378212381 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.377301071 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.374749595 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.378500193 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.379345103 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.376540636 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.376823909 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.380409122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.383104019 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.37965307 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.379566818 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.376481523 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.377778352 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.379603813 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.379220674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.381580592 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.379265938 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.380435421 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.37953599 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.380777429 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.38032485 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.380964704 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.379209352 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.38150805 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.38062155 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.381730059 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.380247477 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.380829771 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.380670565 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.380388177 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.38107471 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.381089851 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.381421858 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.380833181 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.380635009 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.382655908 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.378939233 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.382980638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.38214536 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.382392502 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.381437608 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.379679069 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.379802454 seconds)
  done (took 100.535114065 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.381551627 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.379183367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.379197061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.378317356 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380735679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.383434635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.378550175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382262242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378777132 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.382280642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383119557 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379870757 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381808056 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.382933624 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379880815 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.378026349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.381654948 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.379587133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.381216096 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.384453563 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381747402 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.381933707 seconds)
  done (took 31.642575617 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381437518 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381327616 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.377478215 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.381836529 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.384866696 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.382888318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.382492667 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.382210597 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379985381 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.381135044 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381323716 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383896799 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.381802878 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381563542 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.38168212 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.384054965 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382025601 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.384216385 seconds)
  done (took 26.137573654 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.384932155 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.382774933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.382003991 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.380644584 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.383388347 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.383471678 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.381570703 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.383250268 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.383808834 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.383739202 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.382631819 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385829942 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.38375668 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381131446 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384050253 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.382947219 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.384419534 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3832856 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384106585 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.382922701 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.384503406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.38521068 seconds)
  done (took 31.700030169 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.384934581 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.382515109 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.382842112 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.384406843 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.383070944 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.383524792 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.382412992 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.383478683 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.391073955 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.387245867 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.381622812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.38408897 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.385605228 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.382950224 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.384003193 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.382124 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.387096656 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.384099651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.385817185 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.385387919 seconds)
  done (took 28.952700871 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.389256723 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386646839 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.387407616 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387734788 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.385813376 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.38304543 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388639824 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.387021099 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.386161345 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.38684675 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.388553489 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.387674334 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386057692 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.38894711 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387975373 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388483792 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387445972 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.388304671 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.38745599 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.384998407 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.388501087 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387655438 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.387726478 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.389592767 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.386460172 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.386984258 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.389994448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.38870977 seconds)
  done (took 40.116145135 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3850982 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.386906668 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.38766297 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.38458655 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.38636787 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.387083528 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.384997402 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.385488979 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.390234498 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.385749365 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.387944505 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.386271486 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.38983767 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.391200927 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.387032348 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.387914133 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387627239 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.388116085 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.38581952 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386646753 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.385471468 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.387103799 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.390019182 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.386397323 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38875289 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.38690819 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.387088474 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.386605886 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38929641 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.387156083 seconds)
  done (took 42.885435446 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.409377324 seconds)
    (2/2) benchmarking "in"...
    done (took 1.407102208 seconds)
  done (took 4.086508385 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.39001246 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38821375 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.38859793 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.387558989 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.387937512 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.386421058 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.388667714 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.386836074 seconds)
  done (took 12.372367241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.38285043 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.391882792 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.38842946 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.390088635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.389395027 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.386267679 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.390570985 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.395342474 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.382799703 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.38568746 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.39034043 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.388742467 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.388611978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.387690486 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.386393498 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.389816404 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.393662582 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.38980607 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.391007595 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.391988636 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.39011524 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.387336122 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389131121 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.393956329 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.386578057 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.395548217 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.393544489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.395545475 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.388273554 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.390608551 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.388319582 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.391140209 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.393070488 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.392578393 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.392690789 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.392004911 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.396027168 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39155731 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.397272214 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3960549 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.394756616 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.393317612 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.388222914 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.390663021 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389615806 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.395120958 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.394818447 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.389528162 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.388706107 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.391669372 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.396619646 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.387439517 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.391393683 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.39284449 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.394171288 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.398677294 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.395712112 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.390351934 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.393076263 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.398103551 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.403344301 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.399657828 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.39245846 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.396746402 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.398350007 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.405018753 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397745248 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.397383444 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.394397784 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.396640972 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.396040645 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404413672 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.40049471 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.394426541 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.393423127 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.392210488 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.389211646 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.395742146 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.39755275 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.398184214 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.396042905 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.393429657 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397610583 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.401499416 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.390840519 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.396062014 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.395001232 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.393654699 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.3916412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399160462 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.400952322 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.395157353 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.390762399 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.390635705 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.392594157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.394802679 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.390988012 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.394674372 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.396834147 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.396674694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.395185256 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390361337 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.398589261 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397303828 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.398143064 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.397196015 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.40078795 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390717095 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.398113597 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.398450291 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.398461915 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.393460981 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.396312549 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.39477095 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.39593168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.396829859 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.397187731 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.394173275 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.39945546 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.397189245 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.400252427 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.409568714 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.398838731 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.395690285 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.396343347 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.405127724 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.395909377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.39267691 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.397880786 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.399368721 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.39743012 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.396342036 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.399632023 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.394936834 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.399443678 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395260149 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.396170049 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.397119553 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.398341701 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.394070458 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.394606693 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.395507663 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.397759461 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.397217158 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.399848456 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.397231121 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.402000072 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.398799562 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.397539963 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.398346908 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.397755564 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.39968158 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.395634633 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.40281555 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.393953411 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.402964543 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.393899382 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.402946215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.400771277 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.399175793 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.403091258 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.396761192 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.3978595 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.399963742 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.399470695 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.39790669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.400082387 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.400252722 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.403267444 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.396314088 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.401089244 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.396061422 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.397584093 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.40575722 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.401621374 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.400894789 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.397124511 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.400385698 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.400162001 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.400192795 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.397326278 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.400407482 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.401783658 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.403030671 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.406562655 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399738205 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.400383345 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.395502981 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.39565475 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.401964128 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.397781982 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.406801334 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.407460966 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.4089836 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.3991061 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.403753123 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.396174231 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.402359975 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.399481149 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.405519218 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.403128967 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.402903469 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.398413606 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.403242478 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.396774352 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.406167044 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.39622785 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.40616816 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.40114599 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.402668247 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.40336578 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.398131768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.400188945 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.402465897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.402481443 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.404325684 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.398163451 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.401338239 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.397342894 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.401043568 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.404566925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.404866307 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.404408791 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.40520018 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40390933 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.401538626 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.401261289 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.39954883 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.403644077 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.403873363 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.401605831 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.405927427 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.407773029 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.402323423 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.411280444 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.40399405 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.4028313 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.403711501 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.410634824 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.406682878 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.402627051 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.411310165 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.4085562 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.406570635 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.407834331 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40186822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.408734823 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.40764802 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.408077833 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.403189601 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.40690026 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.40240952 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.407313449 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.403272898 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.405250429 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.405329385 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.407020593 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.410837571 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.407999399 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401698376 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.406887369 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.405460953 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.405850874 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402037054 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.411500765 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.408417159 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.404215344 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.404226581 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.40535756 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.407821835 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.404142648 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.409780372 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.403331887 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.415619697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.417998941 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409824666 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.406566614 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.410637479 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.410652212 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.408479565 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.405341467 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.405693916 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.405136403 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.403910598 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.403391432 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.40892187 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.405476754 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.410412742 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404491229 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.406738674 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.408679946 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.411179809 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.404112235 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.411009348 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.407954746 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.408089685 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.403791553 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.41019389 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.407459297 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.41008019 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.40639182 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.403925496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.413595675 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.408874034 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.40586966 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.407346029 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.408012732 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.404673564 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.40569832 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.413260797 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.407329354 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.413303688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.407101618 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.411868887 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.405210433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.414992577 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.414345455 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.40830676 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.414273228 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.409903947 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.405763695 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.406465932 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.409929903 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.413216384 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.415486733 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.405655614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.413184772 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.408839291 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.410927126 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.409252033 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.411120235 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.41048382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.412830944 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.416397846 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.411923631 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.408846125 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.410099019 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.414186556 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.414109432 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.408221105 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.406271116 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.411743768 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.415691322 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.40571156 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.407168457 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.40783824 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.409974793 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.411636468 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.408214835 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.409270729 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.412604128 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.416278475 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.414675919 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.413528384 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.412654699 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.41324313 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.417477281 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.414821906 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.417644861 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.407844355 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.412048282 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.411024543 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.408448963 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.41023301 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.409435641 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.414050736 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.408316299 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.420632792 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.412438479 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.409498569 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.411186983 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.416163869 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.40989354 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.419167811 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.427782532 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.409755915 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.417284517 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.412622014 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.411314558 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.416658176 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.413034542 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.409054485 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.411381213 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.416228894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.417909016 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.410618994 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.414796785 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.408908942 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.415115377 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.414656259 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.413811884 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.415473942 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.4140542 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.408719795 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.412433313 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.412043278 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.41683474 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.411590456 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.41458088 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.412498238 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.41808548 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.42029109 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.412183522 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.416738334 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.416330184 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.413361244 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.413367076 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.41937148 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.41201874 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.415299874 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.411822685 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.415691545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.413896255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.414303197 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.415130815 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.416436606 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.413274957 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.412923877 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.417551208 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.420350158 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.414235523 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.413941801 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.418116615 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.411521862 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.409525337 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.413604029 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.413148565 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.419192933 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.413737946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.415484751 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.413652583 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.416990938 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.417011774 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.41849655 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.413714925 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.411643127 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.419681337 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.418181993 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.420814372 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.42011134 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.419557832 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.416631595 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.418991116 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.417120608 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.414779104 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.412918631 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.418999919 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.412243128 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.414569235 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.413620419 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.4196384 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.420683877 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.416170881 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.410393062 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.421249222 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.419474298 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.421364942 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.415515381 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.414778105 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.417139475 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.420055613 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.418073105 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.415959927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.421636299 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.421835919 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419855146 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.418070797 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.415187591 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.416659152 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.420083951 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.419444928 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.413407274 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.420126503 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.417934879 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.422387036 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.420452209 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.417930432 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.415597226 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.415479395 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.418163796 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.419643842 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.420154002 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.417410438 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.416298148 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.416392629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.424167966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.418097026 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.416598322 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.416688457 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.414853555 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.421273422 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.417080614 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.421218722 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.419071983 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.417507126 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.418879738 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421552562 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.418790186 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.422451007 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.4251995 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.41884291 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.418078328 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.419705415 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.423181565 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.424510938 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.420990928 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.414637866 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.419023071 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.42276839 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.422044639 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.422365046 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.420161597 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.432633572 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.425240523 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.417070328 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.418013647 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.423748392 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.424056066 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.421787638 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.424910645 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.419230328 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.422406577 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.426127732 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.421501855 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.424986885 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.423076719 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.418775167 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.426149426 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.41984442 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.421690928 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.423474299 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.424260463 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.424000653 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.42361219 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.429011324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.429068233 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.427172801 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.440564518 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.423979704 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.421508803 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.426892525 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.419745686 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.425312316 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.421502918 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.424590461 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.424886862 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.424297859 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.426023467 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.419390136 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.421651727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.421279097 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.43186633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.421884016 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.4185399 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.420057789 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.423120472 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.424616394 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.429102363 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.427413145 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.426477408 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.426214249 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.42200867 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.429980773 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.434347597 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.428541957 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.428343572 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.424435284 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.426107439 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.424700895 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.427674236 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.427732591 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.424449467 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.424417894 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.425153561 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.429939433 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.424866928 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.419414098 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.423612716 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.422638104 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.424624966 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.432464856 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.438837181 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.426942996 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.422603886 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.426979118 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.427498826 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.424002676 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.427847252 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.428434329 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.423183429 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.425587957 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.42933438 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.428089943 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.424884991 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.423926864 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.431793632 seconds)
  done (took 840.67378185 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.426425902 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.425611824 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.425400763 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.428472028 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.427704152 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.426175764 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.429733837 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.425629073 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.428064902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.42459573 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.428315461 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.425059849 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.426990123 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.426404407 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.429341178 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.428082267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.426150201 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.42726918 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.427719042 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.427826291 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.427721649 seconds)
  done (took 31.267522449 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.42831692 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.426770134 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.42944584 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.427198356 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.428623702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.428918681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.430762645 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.4296847 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.430429402 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.429259156 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.431266498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.431917455 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.426734912 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.427855567 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.427712211 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.430625063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.43213851 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.429946794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.429546049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.427444809 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.428955436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.427867694 seconds)
  done (took 32.744248057 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.427871055 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.429472714 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.423105645 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.429004007 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.43188347 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.427127472 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.430177902 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.429193802 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.431910819 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.428006845 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.426005602 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.426106118 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.430599285 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.433854142 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.425833065 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.433532438 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.432269408 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.430088934 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.431993349 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.431000349 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.431073013 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.434463439 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.432029985 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.428755376 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.432588292 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.431655794 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.430827759 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.431962797 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.428011175 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.434946472 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.434571646 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.429494031 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.432981924 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.427989529 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.42859706 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.436142304 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.437084166 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.432841301 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.432751634 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.435806829 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.44598599 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.432803489 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.436141694 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.435962802 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.434257241 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.432409035 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.440298167 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.435230976 seconds)
  done (took 70.029192652 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.434276072 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.433561191 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.433585622 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.436103182 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.434689181 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.433152412 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.431828808 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.434502927 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.432521275 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.432944006 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.432487974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.433494111 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.434368957 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.433732285 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.434134105 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.432642633 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.43376589 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.431575095 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.435392835 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.435370994 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.433536444 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.436190502 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.436505099 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.433085692 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.436056001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.431997904 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.436488026 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.435975429 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.43649943 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.434312473 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.437090304 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.435434267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.434719929 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.433502264 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.434943671 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.437597063 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.435501951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.434890568 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.437838292 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.436281029 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.436287032 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.438181612 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.435698805 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.436460092 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.436087024 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.435987118 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.436345283 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.435743494 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.437222361 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.437345671 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.439446134 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.436957802 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.437314481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.436810064 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.438996247 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.438660713 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.438414628 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.438041278 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.437873178 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.436546412 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.436965004 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.438746581 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.437511294 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.438634586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.438561987 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.437659581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.438673871 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.439669673 seconds)
  done (took 98.940712425 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.439306649 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.438515052 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.440613118 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.439962752 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.436243103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.438887059 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.437769605 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.438005644 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.438070093 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.43833221 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.439455465 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.439457116 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.438630514 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.439335992 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.438120355 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.440033462 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.440513344 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.438937424 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.439788379 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.440502305 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.439322276 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.440551411 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.438879339 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.441814256 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.439192923 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.440492993 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.440993601 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.44088402 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.440643278 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.43856887 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.442809042 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.441472401 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.440497254 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.440082016 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.442311758 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.441285112 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.439978432 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.440112146 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.440311719 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.439523159 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.44115422 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.440085396 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.440167956 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.44219279 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.440191049 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.441288819 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.440185529 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.442201032 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.441754442 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.443303622 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.441667378 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.443012007 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.44257305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.443076594 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.443273001 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.441003903 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.441609312 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.441443354 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.441908109 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.443263647 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.441602789 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.442143695 seconds)
  done (took 90.617534565 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.444754976 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.44486997 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.441382459 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.440388392 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.444084103 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.441917412 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.443157637 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.442404141 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.44299077 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.442248968 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.443815451 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.442334717 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.443841343 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.442047098 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.444018532 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.443940674 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.440688987 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.442931569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.442957248 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.442062312 seconds)
  done (took 30.170763189 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.44215887 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.444869817 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.442564548 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.44181007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.445150428 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.444194414 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.442691319 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.443784423 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.442635447 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.441898257 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.444952402 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.444204629 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.443562678 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.445190524 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.444285141 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.443100864 seconds)
  done (took 24.409114265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.443862428 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.44131828 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.444281174 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.44254205 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.442395018 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.443338149 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.442313359 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.442964342 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.44128064 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.445474833 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.443093835 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.44259389 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.445316452 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.442110192 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.443122316 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.44183327 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.44309581 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.442898527 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.44527655 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.445660449 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.443906827 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.4416803 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.44406315 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.44181565 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.443564678 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.445321005 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.445236401 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.439127058 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.44161492 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.441944516 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.441331864 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.441752054 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.442108017 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.441883712 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.444180538 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.441201996 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.442383711 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.44226233 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.443849142 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.446382536 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.442483971 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.442254901 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.442137102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.441861887 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.442450227 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.442700804 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.444057473 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.441833362 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.440902322 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.441030802 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.441556777 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.443269844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.442589171 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.44450059 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.446716115 seconds)
  done (took 80.673910083 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.442643385 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.443088091 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.439296396 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.441193647 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.440930061 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.437937921 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.439099645 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.443588934 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.439706436 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.441095774 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.442053571 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.441572601 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.439795458 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.437852576 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.437477597 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.439576594 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.438284513 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.434314476 seconds)
  done (took 27.232447579 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.439500093 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.435305869 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.436636626 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.436224252 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.434561938 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.436240994 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.435608003 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.439975298 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.436203177 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.436731091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.436500415 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.437717808 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.435903638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.438115319 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.436503596 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.435108901 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.436445062 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.437614649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.435754548 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.435218627 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.436674334 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.438146693 seconds)
  done (took 32.917741497 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.429050891 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.429802195 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.43035778 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.445882102 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.442299246 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.430788562 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.430134498 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.431745196 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.45327931 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.470715455 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.46626028 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.44224338 seconds)
  done (took 18.616702333 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436648696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437855519 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.435639368 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436430506 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438499918 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437665702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438107601 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438100255 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438715664 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438462987 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436222484 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439414817 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438398522 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436262794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439026304 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437574047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436918082 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43759164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437614399 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439027153 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437086222 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438005952 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437350573 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43825348 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438748537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437153719 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438021391 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437727117 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437115585 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439032588 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439247179 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438955723 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439433121 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437816356 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439681932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439093811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437344644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43809912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43964985 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438326788 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.438220315 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438142879 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438861413 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44050821 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442278443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438678415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439401944 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440604329 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438645529 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442961229 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441148495 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442062101 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439888291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441173022 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440965383 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441124605 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439843098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439743551 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441276544 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439744166 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441477742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442193561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439960046 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440813818 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440605389 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441283729 seconds)
  done (took 96.288311037 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441086818 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.43797915 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440448842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440597739 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44055264 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439797621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440675302 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.440657594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440319869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439846661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441428716 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440151696 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441109828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441315501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441652265 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441926253 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441908079 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441236814 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440566314 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442535771 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441401455 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440626709 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442172726 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439471586 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442231232 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44367843 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442210822 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440952683 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442332987 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443189472 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442335456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44107009 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442455305 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.441687671 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.443126975 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442814043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442882541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442149012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442762042 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442564088 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443376674 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444398819 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442727685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443369806 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443297924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443776748 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443354072 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443726691 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44423859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442104044 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441364747 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444098643 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443177803 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444688239 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442866159 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445622465 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444394528 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445418899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443887885 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445652168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443810797 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444120924 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444707929 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445266949 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446529649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445301899 seconds)
  done (took 96.522408577 seconds)
done (took 1967.412917369 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.606719563 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.557876255 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.43888395 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.453706355 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.44053872 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.460297874 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.451958627 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.439991055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.440625712 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.437741895 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.438076708 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.628640785 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.493911889 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.44065435 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.440035565 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.539122397 seconds)
  done (took 29.03119548 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.471341317 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.448564812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.569634231 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.44608686 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.471544601 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.650355108 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.506165952 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.445623283 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.634678697 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.464696498 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.450823695 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.465383977 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.443253258 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.43500648 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.481795932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.649584788 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.712691005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.442949816 seconds)
  done (took 31.512241916 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.93655652 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.471046951 seconds)
  done (took 5.72793362 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.463249789 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.442265762 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.444320908 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.441224527 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.44855801 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.43614449 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.443334289 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.452139635 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.44896895 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.586205016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.450947186 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.453419089 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.44114141 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.443993381 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.447333014 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.488000869 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.590194769 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.445791161 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.446044683 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.446929595 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.442093249 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.53366267 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.487892161 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.448693663 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.579361753 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.452021758 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.445809761 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.449411728 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.586814601 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.448978574 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.44240534 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.442177828 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.444569017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.436784389 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.938837878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.437593382 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.451503242 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.471436739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.446107191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.589308835 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.444957754 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.448596985 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.447563095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.932673839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.568141629 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.57251323 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.444388491 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.446857401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.445757064 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.514347748 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.445965143 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.446958156 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.505280773 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.320788421 seconds)
  done (took 91.546001141 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.483761621 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.439124693 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609749426 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.457340184 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.453364121 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.438948588 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.456358036 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.746173384 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.455029936 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.439986336 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.752201244 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976064202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.443597815 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.456464554 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.982316339 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.531707534 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.437842233 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.434861154 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.438034558 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.443645296 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.967355529 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.45247247 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.437090184 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.524010868 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.476692725 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.912552238 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.435909253 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.443840723 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.439325063 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.436373205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927793274 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.438722586 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.438613176 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.438611426 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.719817201 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.813502696 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789465684 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.436801999 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437994715 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.439576138 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.459379093 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.906549027 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.796782735 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.438433211 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.437119531 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.914874435 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.436151651 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.43939801 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.43881498 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.660010557 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.438896915 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.441707272 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.437496386 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.445748281 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.437251706 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.472340052 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.522244516 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95337832 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.439436581 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.438421164 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45639664 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.43690788 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.445223947 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.443168143 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.442524223 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805057322 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.629643361 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.439550142 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.804109823 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91984368 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.448083941 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992729813 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.4391055 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.452801785 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.643283896 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.43794794 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.438444002 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935427455 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.472284775 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.438844604 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786892833 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.439133503 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.746622526 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.456713044 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.440727184 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.98886096 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.442830534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.484078095 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.440060781 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.440442291 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.457824886 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.443413636 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.726145481 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.514044904 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.440925002 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.439785246 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.464509575 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.440766825 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.455695179 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.442386995 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993647638 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.446614224 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.438914175 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.43903162 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.454646825 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.440237867 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.44169956 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.438973869 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.678911483 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.44013158 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.441410553 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.441601311 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.4399922 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.448738736 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.485866256 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.445600298 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.757463179 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.44054132 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.450098647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.444750383 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.439693686 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442330222 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.439464765 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.440401169 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.343326875 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.650738987 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.458364672 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.43971562 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.441253204 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.440550608 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.451217022 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.440417668 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.446702005 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.443579983 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.202446795 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.44112117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.445518833 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.439455893 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.443643384 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.445263183 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.441507369 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.439446484 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742716658 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.720741251 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.616518021 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.441097586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.440724189 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.178426129 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.480808792 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589584403 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.458106129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.439078593 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.642423696 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.646949048 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.440778853 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.439126264 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.440250844 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.678739902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.452717157 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.76125638 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.945077914 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.440418103 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.445902686 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.191818425 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.15509628 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.44646822 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.44305274 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.73360362 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.455114178 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.440422993 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.437800318 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.439600351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.441677255 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.443194238 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.448658337 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.440037763 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.440340527 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.494168705 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.615256943 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.457626834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.448860188 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893867236 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.484185607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.450088336 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.443414263 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.440448758 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.439690622 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.514029363 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.446047905 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.472036637 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.439172001 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.443939243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919036775 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.447514902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.441962919 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.592268679 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104799454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.440563568 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.441440224 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.440815982 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.99083883 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.962282699 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.446004799 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.750179604 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.441790529 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.480172077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.441088675 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.506041991 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956054966 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.443185274 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.441745021 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.056264106 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.44020598 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.846850506 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.442190138 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.440491045 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983366039 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.442276546 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.445083822 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.448058248 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.439931627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.731733239 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.440952429 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.441151112 seconds)
  done (took 520.377937174 seconds)
done (took 679.51589462 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.441971468 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.440744787 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.431510962 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.445202924 seconds)
  done (took 11.082619518 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.460231299 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.445925936 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.454446454 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.445205286 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.453807708 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.445594518 seconds)
  done (took 10.02865643 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.439743615 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.441615116 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.444468541 seconds)
  done (took 8.649539445 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.66183573 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.461684447 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.806242645 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.440609493 seconds)
  done (took 9.692700145 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.453301293 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.452810247 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.454317858 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.453032359 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.461865678 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.461077108 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.454241453 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.45352357 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.460131018 seconds)
  done (took 14.424851869 seconds)
done (took 55.201414548 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425594515 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.478165036 seconds)
    (3/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.423001098 seconds)
    (4/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.460203987 seconds)
    (5/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.5764267 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.424874954 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.515019658 seconds)
    (8/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.709938142 seconds)
    (9/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.509199946 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.567488729 seconds)
    (11/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.483323089 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.472936496 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.565360346 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.630783458 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.603056066 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.550686279 seconds)
    (17/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.265708399 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.463851503 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.144352443 seconds)
    (20/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.290857846 seconds)
    (21/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.48120469 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.424985634 seconds)
    (23/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.432679437 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.306674273 seconds)
    (25/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.569255477 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.426847496 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.515733727 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.556413016 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.52188359 seconds)
    (30/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.256522702 seconds)
    (31/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.697825727 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.593613107 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.580135394 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.209842277 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.532353787 seconds)
    (36/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.476066227 seconds)
    (37/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.424564273 seconds)
    (38/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.470926296 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.565617064 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.502932002 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.57437867 seconds)
    (42/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.507445569 seconds)
    (43/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.474576289 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.619728628 seconds)
    (45/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.255355834 seconds)
    (46/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.544841745 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.561244665 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.574095629 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.446424629 seconds)
    (50/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.429529327 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.424561644 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.69968429 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.477526497 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.473916634 seconds)
    (55/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.443833857 seconds)
    (56/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.510545551 seconds)
    (57/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.297389884 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.425160916 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.25327812 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.468008201 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.435820455 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.559649322 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.666412713 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.443323026 seconds)
    (65/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.448699526 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.435425141 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.594678104 seconds)
    (68/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.47399086 seconds)
    (69/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.480707706 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.442406262 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.454162929 seconds)
    (72/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.625076362 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.532139192 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.337817328 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.45150777 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.606737827 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.479772634 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.546211269 seconds)
    (79/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.476675675 seconds)
    (80/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.525739241 seconds)
    (81/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.426777644 seconds)
    (82/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.48936538 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.548104037 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.528387459 seconds)
    (85/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.436117692 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.559651593 seconds)
    (87/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.589466196 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.524622376 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.552030395 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.149401487 seconds)
    (91/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.789465417 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.589076022 seconds)
    (93/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.511601894 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.426397873 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.577520127 seconds)
    (96/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.62331568 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.560168752 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.472624352 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.425647946 seconds)
    (100/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.433108029 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.549129143 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.509394519 seconds)
    (103/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.573696147 seconds)
    (104/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.618187076 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.559508823 seconds)
    (106/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.572007557 seconds)
    (107/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.426978273 seconds)
    (108/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.573372342 seconds)
    (109/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.673895069 seconds)
    (110/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.471451768 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.443465315 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.650852404 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.478508796 seconds)
    (114/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.427801855 seconds)
    (115/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.683069318 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.528052855 seconds)
    (117/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.477660949 seconds)
    (118/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.52909677 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.537891841 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.601631041 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.427386902 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.601320883 seconds)
    (123/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.665348807 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.558355374 seconds)
    (125/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.428474124 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.300609381 seconds)
    (127/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.66263012 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.546523782 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.563481213 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.441528397 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.604141625 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.457580646 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.163617634 seconds)
    (134/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.420446586 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.573849744 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.530775837 seconds)
    (137/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.613390927 seconds)
    (138/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.434289348 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.438178075 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.455527013 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.675900429 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.504568142 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.246142986 seconds)
    (144/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.478608838 seconds)
    (145/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.519912673 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.356182264 seconds)
    (147/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.164968232 seconds)
    (148/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.67959695 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.429481189 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.522639589 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.429287628 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.616406295 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.433323566 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.574935423 seconds)
    (155/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.505347274 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.441679137 seconds)
    (157/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.550795761 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.505137709 seconds)
    (159/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.400584813 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.27058966 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.434667114 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.440162265 seconds)
    (163/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.443095718 seconds)
    (164/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.679113319 seconds)
    (165/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.547628075 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.199558139 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.528063015 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.485108278 seconds)
    (169/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.195104098 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.433062111 seconds)
    (171/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.437439754 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.557979968 seconds)
    (173/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.218765591 seconds)
    (174/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.5110307 seconds)
    (175/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.506337307 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.667532407 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.622426893 seconds)
    (178/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.674133103 seconds)
    (179/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.505149532 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.435289287 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.643037062 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.603260328 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.618321879 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.105633896 seconds)
    (185/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.116816257 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.46550783 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.445385213 seconds)
    (188/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.594318911 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.593295306 seconds)
    (190/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.715053029 seconds)
    (191/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.527462249 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.448690003 seconds)
  done (took 361.612407641 seconds)
done (took 362.93518893 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471878547 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.535212144 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.456057724 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.455752539 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456962286 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.447587651 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.474357792 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.456135074 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.467295154 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.466152732 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.447625825 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.463712301 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.469023086 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.464521855 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.490861747 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.45714878 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.455812247 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.464445035 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.467900562 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.469599595 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457672095 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456202573 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.47573111 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.455840462 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465314958 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466641608 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.462064183 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.455916361 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.461041352 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.469587468 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.457231586 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.463457937 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.469837574 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.465622482 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.45958182 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.465262323 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457713969 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.539108479 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.473174683 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.467152999 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.46248594 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.470925615 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.463052591 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.462592693 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.467871341 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.478075903 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465926291 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.471994318 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.458663053 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.463402683 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.474859815 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.468601351 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.462632316 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.461910149 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.453749764 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.473761936 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.466471672 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475774886 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.463740701 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459968986 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.492100104 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476028371 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.467025043 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.467640198 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.462684199 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.472359262 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.467029844 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.472553846 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.463940613 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.460414258 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.460682578 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.46546431 seconds)
done (took 114.978575831 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.583723966 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.45875955 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.596920986 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.463834093 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.619325888 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.587195803 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.462980944 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.464352683 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.461137736 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.260829936 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.462940033 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.463829872 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.460744984 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.466396886 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.587017941 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.4664599 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.462905167 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.162024145 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.465938793 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.604967618 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.459665402 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.465097783 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.465471063 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269238171 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.462886773 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.45703534 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.603673817 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.465004917 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.158565421 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.456699906 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.458182198 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.160373767 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.60660786 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.484221613 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.479693772 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.473788222 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.61977807 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.468805677 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.583448682 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.582820854 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.601813513 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.505309194 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.456688508 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.461651099 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.469567158 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.467414095 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.465552435 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.494056726 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.461608394 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.466578944 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.160458164 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.475612016 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.475242208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.467298945 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.465295019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.486287957 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.466664489 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.467130977 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.608922748 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.468329963 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.587952128 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.26478597 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.266682163 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.468019194 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.460251308 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.467135023 seconds)
  done (took 116.984952134 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.528222151 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.537644796 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.570749796 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.463747695 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.514162304 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.570886061 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.462787831 seconds)
  done (took 11.98439669 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.468183681 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.470477431 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.513416684 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.513382465 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.468134574 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.619100522 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467326884 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.474897335 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.468121564 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.516900912 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.472307296 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470219448 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.477157139 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.463437608 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.513193203 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.473366752 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.57916721 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.464538858 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.469011456 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.618518058 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.468686142 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.47647684 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.514933607 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.474444985 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.472146284 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.470348426 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.234354169 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471472925 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469415765 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.472234381 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.46958682 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.519113312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.47153578 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.463652293 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.470866139 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.581926872 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.469312605 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.46967956 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.474594698 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.468606876 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.47379615 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.470994284 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.474628912 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.469703434 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.473601548 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.489453605 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.474081308 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.471894045 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.470194249 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.476443114 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.516418484 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472366566 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.47060846 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.471863416 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.521897904 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479894417 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470555333 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.47026766 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.4747057 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470562373 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.621392461 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.515867852 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.475156443 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.515346664 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.471485608 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.472718235 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.474547988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.471035448 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.52232475 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.470289909 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.515198615 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.471765222 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.648665198 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.491543583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.473801726 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.470355284 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.4709331 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472793572 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.46467167 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.47394605 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.472110864 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.469334933 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.47453009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471839993 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.473259749 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.624532219 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.577219201 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.472480065 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.482336873 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.47610064 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.473278009 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.521545373 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.472793073 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.472778207 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521334089 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.584334769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.521954906 seconds)
  done (took 150.793846048 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.48065755 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.481399251 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.471904439 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.49540282 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.469554189 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.468189887 seconds)
  done (took 10.208770953 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.47110042 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.475413741 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.474236206 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.474379701 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.475477105 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.474798645 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.482195176 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.472193383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.478532125 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.476701791 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.474703074 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.482498557 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.482731602 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.476305927 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.479613831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.477295357 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.482800876 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.473632798 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.476914221 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477024786 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.470163022 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.475709879 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476147777 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.471692521 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.479409353 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.478690305 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.496041886 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.479349595 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.476575972 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.478159233 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.479383105 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.478571395 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.474134032 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.475382827 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.483304237 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.471805489 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479743782 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.484442945 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.476451603 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.477861496 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.483208446 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476270152 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.479449734 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.484775743 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.474023032 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.475301377 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.487675423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.496184198 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.48134149 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.485358037 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.484791423 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.47898828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.47809531 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.485950971 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.475442283 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475631779 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.488971719 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.484024869 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.478627562 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.474977819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.48083789 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.479569718 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.474966061 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.483557616 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.479023024 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.486650407 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.475283425 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.482261868 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480722083 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.478114128 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.486953768 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.477882779 seconds)
  done (took 108.84200228 seconds)
done (took 400.146495956 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.798280156 seconds)
  done (took 4.145388384 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.516834689 seconds)
  done (took 3.86272238 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.647476776 seconds)
  done (took 23.001505649 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.504758491 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.573981802 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.474897419 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.482703109 seconds)
  done (took 11.382936283 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.76958251 seconds)
  done (took 4.116662839 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.471961069 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.487733187 seconds)
  done (took 6.30700039 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.738220434 seconds)
  done (took 4.086330762 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.813077822 seconds)
  done (took 4.159832949 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.503340723 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.486855137 seconds)
  done (took 6.344109672 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.453981432 seconds)
  done (took 3.800914807 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.46077193 seconds)
  done (took 21.807672051 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.481668373 seconds)
  done (took 3.830887414 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.546943567 seconds)
  done (took 3.893710723 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.949876339 seconds)
  done (took 6.296367243 seconds)
done (took 108.380378797 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.468431016 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.471297957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.469418401 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.469253263 seconds)
  done (took 11.225308441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.534197956 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.536731721 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.541623532 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.535112555 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.533181754 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.535127058 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.513165072 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.507644633 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.535586686 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.534459215 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.541567123 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.535825226 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.535446356 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.510330289 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.535584222 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.540879687 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.535248733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.541672203 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.509298652 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.535730705 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.483658709 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.538742297 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.536823956 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.484249444 seconds)
  done (took 38.019591794 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.99286525 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.546329025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.631966241 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.52772379 seconds)
  done (took 8.047103709 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.562347797 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.567546119 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.584194178 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.621227136 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.64643702 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.582895596 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.508154406 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.507359142 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.492748399 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.566852176 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.616653519 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.55004401 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.653167482 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.485453517 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.770977666 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.484688331 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.486762659 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.565825612 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.618263675 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.645897272 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.487017955 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.566074126 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.570496261 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.555751179 seconds)
  done (took 39.045858951 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.489606165 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.50182039 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.483359105 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.498724364 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.485960618 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.48512278 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.484722882 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.490261867 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.48315852 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.485075795 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.483689761 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.497798314 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.483787765 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.485776128 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.490220633 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.486526495 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.486499526 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.491265756 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.49255948 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.485277575 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.483893649 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.491746405 seconds)
  done (took 34.097529246 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.474639405 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.474080367 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.824746552 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.72969515 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.473779011 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.479145214 seconds)
  done (took 14.807969475 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.549343556 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.682677854 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.479904615 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.819397149 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902766604 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.481311142 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.481148539 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.718293562 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.008776927 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.004662432 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.544202185 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.546177051 seconds)
  done (took 21.570552296 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.474876702 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.483138334 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.490688424 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.498440962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.533201743 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.483522589 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.485439971 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.475366154 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.539828248 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.536901024 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.485882538 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.535439081 seconds)
  done (took 23.375641407 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572022213 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480476187 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480920835 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526818298 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479901417 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327885886 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502722746 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20844248 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.491883665 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755640528 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488495213 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580023339 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.735855354 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482735938 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488115931 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.473362089 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717936991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98841644 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488946159 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483174371 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51913618 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48414253 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49084195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.715992539 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333376187 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482931239 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.745508822 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483537535 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772915701 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756158463 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752909894 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490144574 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757823498 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125697517 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586722247 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691338844 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49034336 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484982982 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.480005652 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.498985858 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506510829 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491586466 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747183162 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494404303 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484676132 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497564188 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227624636 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.497254953 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.484856578 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484518198 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750937606 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589812687 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.490579809 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486464624 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551482417 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486180711 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.491052913 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612390908 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04739966 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490767242 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507045868 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.493001826 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480841046 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486700016 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144519258 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.4914444 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.489529769 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490691715 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485839751 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486313567 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514525812 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485443929 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.505478779 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487350811 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274434395 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495249353 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494691684 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054730442 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49219659 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.493092715 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717751259 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488501604 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487786965 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.485781577 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486425089 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233953599 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493732814 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.466177787 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555885737 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216444079 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.704915738 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51199473 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51660279 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.710419663 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.467417472 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488291323 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.488895382 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497351113 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509463906 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224310659 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493613478 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.493222806 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745465486 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.699623603 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488891342 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.473383499 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998804438 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493893725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.531505925 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.501529601 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.695892467 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.124040665 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746635131 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48733604 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533910665 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479378484 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287649332 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493158596 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.490741317 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482926894 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753922355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.32872783 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484812462 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548328762 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484641307 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480658476 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479009434 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486593633 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476860432 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.68736098 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48163722 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.74923166 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.486491934 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473253175 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.483624855 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487739945 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.481403346 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.69186997 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470472185 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750970358 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469514557 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46907937 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466908366 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.687294117 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.465204579 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.499633945 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722573626 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461457676 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469383371 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735921312 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503063473 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567389362 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487619636 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.458963783 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.719316085 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.461328016 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.462872517 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45272629 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459875564 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461683447 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.461180534 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451632508 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090453645 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432349046 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455530904 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453771688 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.462038304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515017522 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452481222 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656720141 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.463624656 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440939543 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.449166777 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.456941155 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667104275 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709545405 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.462961568 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522034575 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.915369241 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080691075 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45946676 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.44315816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.437587234 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.436521356 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436932463 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439049213 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436887226 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646628738 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707956857 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.459838265 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076851317 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441532873 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435335452 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.445225244 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697815588 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.449899746 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431028114 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.436074709 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451606914 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439037487 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.714286012 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574357966 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.449041081 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433771561 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.947203451 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44005428 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431467007 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434803565 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4658919 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.432402363 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28184965 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68878979 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441187618 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691685717 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434124986 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.450318764 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.430770549 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432232359 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440699057 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.440933073 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430061684 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.638773107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428912153 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433405961 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983874389 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226201413 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003884833 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432031545 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.431855305 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429098539 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163918159 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423649083 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427595396 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661802611 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16258191 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428460809 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90808799 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.427595895 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168402475 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694669232 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661692967 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440873775 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.424928419 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698017083 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640319427 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460190631 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439798067 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431466154 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.400312553 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983451882 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422485399 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525936446 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165024502 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428648205 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431882758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.48893883 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.436959205 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810672043 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431918879 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431391174 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438582527 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439093912 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270321039 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425665748 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428077219 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09309988 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435456081 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.905412951 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424210488 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640060005 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693294412 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.693441461 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.432822653 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.429908858 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.682768545 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692482446 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433575829 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437232046 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009622931 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.29272201 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.432612711 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429574244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216315687 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438214012 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723789828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.437414614 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.428098137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429545404 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431411016 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429011194 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.429773362 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435076203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412007297 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929707812 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.432802746 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426491281 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42955742 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432524868 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681521444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.440272761 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070197276 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656416206 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430476336 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450275885 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.428430446 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429562956 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.405162981 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422257823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42312192 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460868882 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640397704 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419078871 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.392737964 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458709732 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624810557 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421047632 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430015299 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644185781 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.412284379 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.430989165 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216219023 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444735355 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425848767 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419529269 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41348841 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453516264 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47939549 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62187853 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.681970607 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684265558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80138144 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423959212 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418007267 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.428236871 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507907096 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424102533 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.417119 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.187785887 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051975154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210247086 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.056683907 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679018907 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417831694 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420933953 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415746414 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547918972 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412413077 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686966899 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415292934 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.423335661 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438840629 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419818224 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430927036 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628498144 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686749731 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413566674 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425360609 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415960152 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.409615892 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68215329 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.625592163 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916666167 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983167487 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413200043 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411521114 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114801264 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683719908 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407934856 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410575566 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408928881 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.416531814 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414395278 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.420215459 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423252362 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549199542 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672176949 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058216278 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670804023 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.449434634 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.923864857 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410507647 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668331839 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174287442 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61694949 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056650411 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.164570372 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676826812 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477504918 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61708252 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.412359086 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545249943 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.412327517 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414214033 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407951247 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410060178 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.408427827 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673183741 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060646133 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678059691 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412550591 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.414565034 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445397125 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.617195063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634531106 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15362067 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629341116 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676593447 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421545134 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409749213 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055767733 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682148783 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416684592 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.413637367 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631145838 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414847621 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435058952 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.927519709 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.409005854 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969885624 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.298096182 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430501898 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421799604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172079805 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061268003 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415461634 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921910177 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417038267 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411911527 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690339392 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.417358874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425063581 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694437147 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.41546057 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424982788 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627435323 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058988619 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169454347 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.436639345 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418116945 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.413571137 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411515718 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423639372 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411383278 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419667048 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.825531395 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412476025 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412822249 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424150509 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.420694291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429468809 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.417334244 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412191262 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.41940682 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.410921558 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.40860678 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429730668 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540037923 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962385532 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415564203 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088535496 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.760384072 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66658472 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414281326 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.416134933 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.418391049 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415910276 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415402626 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41220193 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410416946 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974759657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.411594103 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.681203709 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419876454 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.617909669 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618025693 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421242301 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621953977 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420168291 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432940385 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.384878723 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40691447 seconds)
  done (took 1014.046523147 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407266491 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.408337635 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.418821457 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.428828982 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.440075306 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.463723668 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.46960197 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.498571737 seconds)
  done (took 20.828253905 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.401010952 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.413760247 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.401498118 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.415365078 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.414213916 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.880959892 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.410711285 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.410581502 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.423555122 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415169248 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.418189116 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.09260143 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.429067726 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.413340333 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.40005231 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.416489695 seconds)
  done (took 33.049337642 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.476115463 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.582740949 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.325778688 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.45290223 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.435254769 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.402635652 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.644524525 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.418462591 seconds)
  done (took 27.032083471 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417164726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.413719091 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.415803967 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416100904 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.41659195 seconds)
  done (took 8.373227442 seconds)
done (took 1294.86732131 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414833256 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414612955 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.412339521 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.414932603 seconds)
  done (took 6.950070836 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.387389659 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.387128461 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.388139168 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.402334722 seconds)
  done (took 9.858865095 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.106289077 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.014074993 seconds)
  done (took 5.414675052 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.890001612 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.89913483 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.899392926 seconds)
  done (took 6.982213717 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.688914655 seconds)
  done (took 2.982829073 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.327270862 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.405043841 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.0726239 seconds)
  done (took 8.098320151 seconds)
done (took 41.581259504 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403783255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.648657492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.582312661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.40377791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.562679297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578121945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.144440526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403132442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404104439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417071224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403348575 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.564119718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.190433108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.650903776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.188349312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.651288439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566429025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409727948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409485344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416694689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.143727219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413828667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405342915 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43170531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.564690065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.552446815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410352035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.650599703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405678716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420169352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.557071933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404311725 seconds)
  done (took 83.653424783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404116904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406600157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412767115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411147331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414568572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417048948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.406525939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406243465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416486621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.410803883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417307925 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.407576356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.408828831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.404805564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.42365947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.406281948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.407867282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410848383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426479692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406340821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40849666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406086767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.407037493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406811746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416076848 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.421887182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407329016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407399899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406973323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.406765453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.42758588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.421819646 seconds)
  done (took 78.466693492 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408376553 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.428926818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41361201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413995022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421214924 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413986136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414893296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414411071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430312655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428318469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413738623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413194269 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.431555088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.413793258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415692922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.411766399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.427988585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.412560194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422912366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415201047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.416624082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413401648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42444742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411994195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.412813688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416097441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415815628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.413089806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416463283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41340732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414841057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414529642 seconds)
  done (took 78.649236982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.649741954 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424928728 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.427046575 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.417645594 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.427163213 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423388497 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418723455 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.655696412 seconds)
  done (took 15.144558298 seconds)
done (took 257.209445571 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.428780074 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.911848164 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447907413 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.414418551 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.439996101 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.444033374 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.639814993 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.444155088 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.636214893 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.437356279 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448677897 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.420907444 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.203398447 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.572783401 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.278160225 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.401772996 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.288228908 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.418949104 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.982054826 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.698973476 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.447570916 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.422991402 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.269891114 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.301486853 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.403376973 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.501853546 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.516543221 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.641670084 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58068946 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500240485 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.922953078 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.423138001 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.421636902 seconds)
  done (took 65.613440827 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.418331098 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.421993058 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.426414026 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.426058041 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.422601065 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.426637665 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.418575348 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.426916614 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.427385801 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.427421494 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.427448208 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.42534447 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.426050148 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.423049868 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.425617601 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407535546 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.419260006 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.423701106 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.418603534 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.408638041 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.423609225 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.429045572 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.428621578 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.42473647 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.426792828 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.428158824 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.424532691 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.426398027 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.426541841 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.424465368 seconds)
  done (took 44.013638025 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.428071879 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.984382675 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.13833247 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433214963 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.421081496 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.424709273 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.703705745 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434324291 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424687863 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.42396001 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.894990497 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.431450864 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454262124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.140094273 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425021093 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429765647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42987122 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421788576 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.99795125 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430697713 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.702028178 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429769488 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.704377026 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.430871391 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.424029989 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421605496 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.426993262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.228227829 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.442675874 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.897218153 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.19405266 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.704872846 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.171479697 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.184626638 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.199330565 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437746227 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.431258629 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903789965 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424011419 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.423180437 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.700994039 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.423701482 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154846781 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.10336549 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.441681023 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432675307 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.257672997 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.925341533 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.665041419 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434742169 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.176927542 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432618121 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.434683171 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.425263271 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.661605726 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.43076619 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42365954 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.264700115 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45015745 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.702719887 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.439941902 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424320306 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.999466392 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.4263263 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.991095847 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426920258 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.432856083 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.427133877 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.154126481 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.432610353 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.132974336 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.441675743 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433398498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.899629188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.994519072 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.307102471 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.42823533 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997479296 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.196656181 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.720287873 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436615533 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.22472924 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.723295729 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.435133024 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437084249 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43675052 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.434230226 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498806039 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.700967744 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.04057286 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119972526 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282473656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.728555833 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.439863097 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.427044862 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.258621251 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451390792 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.435187466 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146325066 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127423511 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448763529 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433879317 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.10629481 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452189303 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.708707869 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437974747 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.185544008 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434159979 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.499809068 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435977766 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.43458429 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.432154321 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.707725085 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.436020452 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436020891 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.105767521 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.933630978 seconds)
  done (took 198.427173988 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.424166498 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.423754914 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.42364548 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.422955987 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.4234908 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.429768112 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.421906179 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.424471174 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428585814 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.423496432 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.424836786 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.431884347 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.430471317 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.424385556 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.425599384 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.425780068 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.423036941 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.447270744 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.423804966 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.423273486 seconds)
  done (took 45.837976993 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438552139 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.972656668 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.946822124 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44193804 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434449297 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.429428916 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483374351 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440334703 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435137467 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.721628494 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.599399303 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446098535 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436123082 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.436526477 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949680265 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.419240711 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.721776644 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.976027107 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.439239184 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.976535201 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418389852 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439540283 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429981209 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.976130756 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.731848365 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.710934948 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.488895156 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982362071 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.43667355 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.435124232 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.976390789 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.439777789 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.432155426 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.972025486 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.441078569 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453857304 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.436621551 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.488901547 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.491864811 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.726474333 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.982191399 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.719230929 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451409973 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.611218325 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.440436854 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418762572 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.986099377 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.440914248 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419854899 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.437914152 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445041253 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.962303057 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43391203 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.962583208 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.437769255 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.440938299 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.978965488 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.962782677 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.954971411 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.600293602 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437411283 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.713545463 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.439317302 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.988192292 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.442539023 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442681776 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442465518 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.603359509 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.986933715 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.713649897 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.728174551 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.728677777 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.442732461 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.496778556 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.440656382 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.72818523 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.495317385 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.855332276 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.733635254 seconds)
  done (took 129.316202047 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.692496419 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.551268471 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.797045671 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.02059534 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.934717799 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.569960351 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.547552734 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.680219424 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.452331928 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.523053281 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.065881299 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.532940257 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.174412103 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.528786517 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541977424 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.568930978 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.821958535 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.430025397 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.087486189 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.041373165 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.435420264 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.535874482 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.952802335 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.620266612 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.435674568 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.00381912 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.384098733 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.945113352 seconds)
  done (took 54.192911919 seconds)
done (took 538.701544779 seconds)
SAVING RESULT...
DONE!
