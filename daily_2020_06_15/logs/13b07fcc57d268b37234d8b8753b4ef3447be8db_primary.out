cset: moving following pidspec: 22332
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.258549218 seconds)
loading group "string"... done (took 0.646520115 seconds)
loading group "linalg"... done (took 8.199644681 seconds)
loading group "parallel"... done (took 0.169027246 seconds)
loading group "find"... done (took 1.241321849 seconds)
loading group "tuple"... done (took 1.917954484 seconds)
loading group "dates"... done (took 1.45159693 seconds)
loading group "micro"... done (took 0.210478583 seconds)
loading group "io"... done (took 0.984793154 seconds)
loading group "scalar"... done (took 41.011515909 seconds)
loading group "sparse"... done (took 12.263607829 seconds)
loading group "broadcast"... done (took 0.990330711 seconds)
loading group "union"... done (took 14.221952973 seconds)
loading group "simd"... done (took 4.853227652 seconds)
loading group "random"... done (took 9.197210852 seconds)
loading group "problem"... done (took 1.719662657 seconds)
loading group "array"... done (took 21.485744776 seconds)
loading group "misc"... done (took 1.662613222 seconds)
loading group "sort"... done (took 3.502662074 seconds)
loading group "collection"... done (took 18.087199551 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532158864 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125727112 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137560203 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120255424 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149787931 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117671116 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124966207 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085107725 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.894191646 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158400214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115955078 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434716515 seconds)
done (took 5.418829712 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173411808 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08968848 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079235169 seconds)
  done (took 1.258970084 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066037071 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128857108 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067974295 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067481977 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068893432 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069041217 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068516628 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069323877 seconds)
  done (took 1.63537396 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072952342 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070038092 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066996427 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06917088 seconds)
  done (took 1.37122614 seconds)
done (took 5.606300005 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799167684 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209303386 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190264921 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.406218235 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136175777 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180687089 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647503489 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321579748 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203602657 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094951353 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112586325 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.360550043 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124307994 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645681105 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081411362 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097780255 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142282981 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436545768 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071642239 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088062944 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09250514 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131104887 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089131693 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076602552 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148829341 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070735157 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143547402 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083784332 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069271916 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222264574 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175717925 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659096607 seconds)
  done (took 10.443117953 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10187406 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099557931 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069966245 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127680056 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101470617 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072479479 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077442664 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070217824 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092871509 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132611684 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094947863 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111153724 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068703472 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072871589 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085520452 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198536936 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080695226 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082454003 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068607109 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079070623 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108220932 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080549538 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080689928 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079912752 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131143057 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170004142 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096871342 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098030754 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069825151 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083168897 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115884 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135183245 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069492493 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068298263 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128722574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097709659 seconds)
  done (took 4.631439124 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107495947 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152888019 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091496071 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143821894 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0676421 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115149023 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068087064 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085930976 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243141892 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.38107197 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.6331089 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152703812 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120132766 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108393522 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073584735 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071646016 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070240784 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.274229914 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104251388 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116798088 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086338828 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072907762 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072471929 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071917456 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074129009 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06627329 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071690728 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090906117 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078146272 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334308354 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126376446 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069371169 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.835403223 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165796847 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068978455 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105608329 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161247685 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095362192 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095466071 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142347759 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069409371 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065856737 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.302625257 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068218293 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074083034 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069514714 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087757175 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111928193 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11980621 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065854598 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066442362 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167640642 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065960825 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08689296 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.261596299 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152463839 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068692878 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299940633 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097337913 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074257867 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067374373 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.198028968 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118165225 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066670104 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07125124 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070171399 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071465323 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071445287 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368593474 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06897633 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.948806363 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071585505 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079318997 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072679949 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073033127 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079110206 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079712459 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092943957 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067712974 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07441776 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067502903 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066991044 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067372564 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095052063 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.393332556 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068226876 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075072115 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065728571 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096074251 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101113213 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067294959 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066189997 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104004244 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07119356 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066513862 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069228568 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120049265 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070285051 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112796597 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069730559 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.179202355 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065466439 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097107962 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070202132 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101055879 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076410887 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071749647 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.463954076 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065748768 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064877707 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072623754 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066301489 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068620226 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067192858 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078590351 seconds)
  done (took 21.966900475 seconds)
done (took 39.239158672 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245939068 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085563299 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085685155 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086040674 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086117379 seconds)
  done (took 1.765916763 seconds)
done (took 2.930125762 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129770972 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105301353 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066500467 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100276897 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066869995 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107205437 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103308484 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086373817 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102866165 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067308765 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100059863 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066775787 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066600784 seconds)
  done (took 2.341980867 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082838126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085079265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071206976 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083526783 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063953368 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084164439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082577271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090534644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08278186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074180281 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064511932 seconds)
  done (took 2.0185863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081893482 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08316451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070176453 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082913885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064177514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083930522 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083193253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087210461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083205121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075546326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064352533 seconds)
  done (took 2.009233439 seconds)
done (took 7.516266062 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081345783 seconds)
  done (took 1.215792775 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.542727242 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.5940542 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078790543 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100173367 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195985143 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11127847 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240668253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086234256 seconds)
  done (took 8.265731012 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097100751 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082665321 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070818437 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071357086 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072524276 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072334703 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072174088 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072132789 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071437788 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073136678 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071363231 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072431653 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071902236 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071305086 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071389765 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071582078 seconds)
  done (took 2.409627316 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100016017 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098069158 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075794947 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077394325 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074728306 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073974289 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076759671 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07653819 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073825824 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075264036 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077720846 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075738709 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075928656 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06629088 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076786486 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079016334 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07328416 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076729424 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077195873 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078374939 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0777413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066215353 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075999914 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076762083 seconds)
  done (took 3.110978068 seconds)
done (took 16.147773531 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117614493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078274964 seconds)
  done (took 1.337563462 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080824249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082322632 seconds)
  done (took 1.315442174 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080337468 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064955544 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085910381 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075933511 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065377004 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064918338 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084456144 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065643871 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065861579 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065766638 seconds)
  done (took 1.873448009 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067632196 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075827775 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071000356 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08140481 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072091502 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066089884 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070833323 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067188577 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07606389 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065152574 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070859359 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086544754 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068431497 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085165993 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06870097 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068334534 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071169565 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067378465 seconds)
  done (took 2.455387776 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065470734 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065625999 seconds)
  done (took 1.289880689 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067774882 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063522623 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066867603 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067295715 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064892679 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064580226 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065640606 seconds)
  done (took 1.609007595 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406222213 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123342361 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323686625 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072436066 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082111536 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256099017 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066833607 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071914794 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071955041 seconds)
  done (took 2.672767393 seconds)
done (took 13.716722989 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082426329 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086541488 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097515112 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412331513 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093179547 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067824043 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114247329 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180544967 seconds)
done (took 2.308839085 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217889217 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.853027238 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.471053817 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211066628 seconds)
  done (took 2.696889585 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348358231 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08110546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077595086 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067338764 seconds)
  done (took 1.751647046 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069322883 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072787156 seconds)
  done (took 1.307693902 seconds)
done (took 7.146642417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183224284 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091384355 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066080518 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066409653 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066392452 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066726879 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066409113 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066363383 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066139812 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066599305 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066305128 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066403512 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06653019 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066784051 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067033754 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066553869 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066628574 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066701534 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066838487 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066539002 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066974502 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066424479 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066496881 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066828465 seconds)
  done (took 2.940271953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084495073 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068725102 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070294614 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070457358 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071127491 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070373675 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070886695 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068741918 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070876892 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068668921 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071009542 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071578807 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068392196 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071260528 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069009126 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07117242 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070881985 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068914996 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068238479 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070794217 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070462915 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069099878 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070834256 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070531663 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071058168 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070698861 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068637843 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069008312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070382637 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071862676 seconds)
  done (took 3.294365018 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067386582 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062480698 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06366341 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071984708 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062853841 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06348148 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062165163 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062891837 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063235319 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062700043 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06404897 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062973833 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063102964 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063855619 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063886538 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067240092 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0803363 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062862026 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062961514 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063145454 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06709268 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062783809 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062779685 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062810322 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062446851 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06270027 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066404617 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062198106 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063231668 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062378496 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06643183 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067320196 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06303553 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067999112 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067412774 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062676993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06672072 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062539876 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063218235 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062655639 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061997191 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06242381 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062750048 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07169257 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063057745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064226518 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063332628 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063823512 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06362661 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065072853 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062708484 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062424784 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064515426 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064051511 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067807369 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062524151 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0634405 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062153872 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063523242 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062635898 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062806856 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06234766 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066344345 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064203375 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080621267 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071430813 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062915883 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064275173 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0635273 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066040243 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064192213 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078064966 seconds)
  done (took 5.847760892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087901925 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089570753 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067960889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067421949 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063707539 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063579424 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07170609 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063473633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068289389 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083180802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06378886 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067793576 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068013975 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068045836 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063955971 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068503833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072078484 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063650485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06339919 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067667709 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063954505 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071558629 seconds)
  done (took 2.721286344 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152661079 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069155761 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107829695 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074046154 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072441875 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074368579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069807464 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069669466 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069822962 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070283546 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070251021 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069867474 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07202822 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069647075 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070019926 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070242593 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069437957 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070071216 seconds)
  done (took 2.574250407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080481619 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069150098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088751622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069382531 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068673589 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068684166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073037769 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073926641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068743673 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069368341 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07353489 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068626753 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06881032 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06895568 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068593027 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068822596 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068394643 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069264314 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073547422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073759691 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073460009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073521538 seconds)
  done (took 2.763093906 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080804228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067858462 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084004847 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070040802 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063670496 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063645283 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.079204674 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068353797 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069736357 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068483437 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068789192 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063597448 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070965533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068378002 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070793613 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068142616 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067545474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068029545 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068086912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063436442 seconds)
  done (took 2.581538597 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08531624 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067119489 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066224835 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072383803 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066624048 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06670543 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072866787 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066555524 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066567563 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08753317 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066800915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067184769 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073170488 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071032086 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066649389 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072996508 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072803681 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072721962 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069448539 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066846127 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087751038 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066873342 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07325854 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06643689 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066599136 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066585091 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066574147 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071180172 seconds)
  done (took 3.169416024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067811034 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066143705 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066131643 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065948139 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066398733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066860172 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066092703 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066678547 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066120613 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066457453 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066243655 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066108593 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066181878 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066217561 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066268192 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066433177 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066118188 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06636744 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066753721 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066766257 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065932314 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066083734 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066565752 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066443025 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066459815 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066216274 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066457871 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066096357 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06600111 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065981237 seconds)
  done (took 3.179786148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077700019 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075300933 seconds)
  done (took 1.34597863 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065289719 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080781964 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062197735 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07379503 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071817368 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066572269 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072963526 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072596278 seconds)
  done (took 1.75157217 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088254032 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077009972 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066283918 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078384786 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076656383 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086846085 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128804777 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066139265 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076215425 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066437805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083986624 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067864844 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076003095 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071071309 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076765663 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079373138 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063666331 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070862725 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066850688 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064022056 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065972369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079351255 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075330112 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06413711 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070758534 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093687701 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081475441 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063873375 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072211572 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078161734 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075899141 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062313915 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065296037 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066035495 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063356437 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077235311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084893594 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072430664 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078623288 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066406199 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074011228 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063322922 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074005139 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076268847 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081373239 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06551412 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065719459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063114092 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066139969 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07236843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063434294 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069782631 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062562883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077548406 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07318099 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080591802 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063968494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070969297 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072098881 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072265159 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077319414 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07198568 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075418635 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06481628 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081280908 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075375502 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077849058 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063185469 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062573628 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063676055 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080185206 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094967096 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073894836 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065004406 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065939266 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063553331 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072534223 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065603382 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074625018 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07694314 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064699034 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070159557 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077682574 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069913557 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071645519 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071853024 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063660846 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068663178 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06607216 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085343768 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063824137 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062947936 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066072922 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080737398 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072009676 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067227186 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066079667 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075074407 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060641957 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063475327 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064343673 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069227382 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076846713 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067554583 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067792617 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076683115 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073508005 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070652916 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071280975 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061141092 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065619724 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066983547 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076475994 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060652905 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071676137 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068161727 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065030612 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076318786 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063299953 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064930941 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076539501 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076431265 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062983023 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062335758 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071534569 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064420547 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066787557 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078173808 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062776399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062161277 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062070842 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071881949 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063841013 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071517093 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067851622 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070961119 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.189408209 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064485012 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070240375 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078520495 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068917274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071499596 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075411995 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071143117 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06469386 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078595019 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072578865 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068222128 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074898028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069340351 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063555534 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067253563 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071824493 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064297518 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072938231 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068008415 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072033608 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065687599 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063949808 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071148727 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065725591 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067555144 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068805806 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063706002 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080014466 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07130909 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062254515 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06126164 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071120357 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067219135 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06525579 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067283669 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072035862 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065456352 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063133024 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06436025 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071433277 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073054414 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068568627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065630753 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074894656 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081703684 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063759991 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071686462 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064751422 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0660268 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06549204 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080516129 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076135084 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070346251 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07224802 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062586744 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074848316 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077309222 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066421513 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062003788 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066591998 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067344504 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075258938 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067119684 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064091208 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062140874 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069571153 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065806002 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070476147 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063343787 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06630041 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068501001 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062050935 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069375535 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064734521 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078846639 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070988644 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062091106 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066140546 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062169244 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074800493 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06272397 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064887496 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06730613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066069736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064258322 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071597661 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062298619 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078172059 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077327869 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069326023 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066174579 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063325015 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076125214 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069415285 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072062502 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071321007 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073740169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078731695 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0661691 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070708363 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078670502 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063334046 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061224371 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075802293 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0623273 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062775432 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06325834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062516173 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071791598 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071335837 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075616215 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062346444 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072919467 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063946068 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067872646 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063372526 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073620818 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072058557 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069278306 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077227443 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065677297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065147958 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072858818 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064724258 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06541005 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066159597 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072154841 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065376689 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071066978 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067612255 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071088431 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067076451 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062694463 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070539499 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064108354 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069264321 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072410967 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063585075 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070302283 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07114207 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064280706 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.202103394 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070064511 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06857151 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073116809 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071941868 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070708135 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072733057 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06331142 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077266655 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064514757 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078478992 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070379916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062188249 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069906687 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069827492 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.067705021 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063738658 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064162284 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069359745 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064215811 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071375383 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076519887 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066365351 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081467726 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076715125 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071573563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071902934 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070912293 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071409128 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067378346 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069106467 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066245614 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071133075 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064936096 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074101797 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072150387 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070165898 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071430346 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066453786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070873341 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066041114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062746898 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068145598 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067993756 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06538888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078335912 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06525154 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068323857 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064400058 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066046928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064591492 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062659295 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072552966 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073327415 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066058646 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076361442 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068348571 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071887729 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081202339 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062899211 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064188321 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063409913 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06658941 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078241949 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06572286 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079401747 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070905272 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067899942 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063488889 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066031468 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064416076 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063593791 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063819992 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073734802 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067689256 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064872844 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065679503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071438191 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064691519 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07629992 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063132804 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068742063 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064296155 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061951332 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067653833 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067048467 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071775112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065444414 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066049516 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063120582 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065253609 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068870799 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071432967 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065047371 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071056736 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077864896 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065295278 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071893498 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066672725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061678545 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07183236 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065195193 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064837457 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067565963 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073333446 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072695571 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066099737 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079882732 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068124944 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071324072 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065174856 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063215962 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064937103 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065023716 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06507746 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067153918 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065840997 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078529919 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063366199 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071883647 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070236716 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069340423 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075837791 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066371657 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071305146 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070129447 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066392244 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071807246 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078661812 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068727097 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072755972 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065953724 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070828847 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075590003 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067298496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076959434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069988763 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06462579 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070406039 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065603464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064134216 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06469271 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063514606 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073942133 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064402138 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.201992752 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06937066 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064018173 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070813553 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068066379 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078766595 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072896601 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072497403 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062866039 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062846044 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065975412 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066708639 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07144839 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071591167 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073412086 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070308737 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067864332 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06354688 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078692876 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074268452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072118145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065583964 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072090861 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064363824 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071847113 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069009944 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069802031 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065222439 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073715017 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070321862 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066686188 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075341314 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073284259 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06435029 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069192043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070055922 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069019648 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06186063 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06383043 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070478802 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072590974 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071025157 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063543595 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079108808 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066494921 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070304329 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067719053 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064861915 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073908343 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063680867 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072157027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06665574 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066484711 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064011154 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068198884 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067276178 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072927988 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068675151 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063556683 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081476637 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080679099 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072116981 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064769215 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064736622 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064049689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063322065 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067969563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066489623 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071517174 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080830684 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068302071 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068048224 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063866295 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066297922 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072987751 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07320525 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063373834 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063655162 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067948303 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071825321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077310533 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064210701 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065049163 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073045591 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071746342 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063256853 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068506949 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062840376 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073547369 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082537507 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066127638 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071312114 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076108268 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078567337 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066060463 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063423342 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066006776 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071726012 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071795125 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066386292 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066007158 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084756964 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072789996 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068178909 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064110247 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07210806 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068124747 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079178864 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065349231 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069076297 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074010822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071833469 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072795534 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07583541 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077130519 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071689671 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071847754 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064322882 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070283309 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064172113 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068509536 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066246522 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065889744 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069502797 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072023201 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068023576 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082461786 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079782679 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067831469 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062698853 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068018895 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06798705 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063979847 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066557122 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064045364 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063656836 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063548839 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063922257 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070770296 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073564874 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069051543 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064384637 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064207563 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061916851 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073640404 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.206027028 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072400216 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063954905 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066345702 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066111683 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074527272 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068349242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067214818 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072003036 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071287255 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071642925 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06406903 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077449142 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064653346 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071868073 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067851683 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065978955 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066201151 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073547092 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070362081 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066748207 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07293182 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073177163 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06706976 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063427003 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062976371 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075022928 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063547711 seconds)
  done (took 43.185316102 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102780416 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064802268 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063715239 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063595439 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073822987 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082133183 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063775174 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0651441 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064931192 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067432809 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06392822 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063732842 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071394997 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078881143 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073755551 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068455778 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063976201 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064660088 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063656516 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064982253 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071347481 seconds)
  done (took 2.730937384 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071750772 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078682682 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075597549 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080711032 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072648504 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068646031 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076906829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068552167 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076706769 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074603444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077249016 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068561369 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074103265 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074235081 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074565261 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069528705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077196593 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073046508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068840763 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076566995 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069088065 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076477072 seconds)
  done (took 2.901480655 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066132871 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064291221 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07073897 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062441335 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064319461 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062624043 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067650285 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063343628 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066984301 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067900361 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066987913 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067076261 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071807598 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062912969 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068720913 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062816122 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109130632 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067406885 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064812208 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065072891 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063448031 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071710628 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062879824 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063210494 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066587204 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067762161 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064963029 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06309257 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064332015 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066551898 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064541889 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062848476 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071160995 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070184566 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067238446 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066812445 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06428225 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065154914 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066189244 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062938816 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070802845 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06372589 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065123708 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071952354 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064041874 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062979489 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071467784 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064558892 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062663272 seconds)
  done (took 4.550879444 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076177723 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111684825 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069313878 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092927403 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077823694 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071067307 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069914834 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094048633 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065077166 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065947724 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079665243 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080070573 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067287106 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068709917 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069321617 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066953029 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06737576 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066635961 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070028368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06634036 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070843685 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071542604 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078134495 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078940833 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068078592 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066607623 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066934387 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068562579 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078515899 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070767477 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068770065 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069637307 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078582395 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070392021 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066800649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066552176 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080199668 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067332181 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066659785 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064936049 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066741126 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068933735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071171238 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079622389 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067455841 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072152458 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067134537 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064475201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078733986 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066742599 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072053272 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079831322 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067961594 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06737163 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068863011 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078737858 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067408095 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066130826 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067395593 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078279254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064974102 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068140111 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079503482 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066159158 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070657609 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079362495 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072411221 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067659601 seconds)
  done (took 6.318115093 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075294085 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096102634 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080855081 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081440801 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075593217 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075117575 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075131753 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075352466 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075071559 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079132481 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075378638 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116897188 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07161449 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07694122 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075393773 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075011042 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075454593 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075125086 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07543983 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075404134 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075418483 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081919448 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075286534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081296372 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078092973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070859659 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075002087 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075013072 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081361706 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074872481 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078430324 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074938427 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07519726 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081313004 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078397361 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073831436 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063607355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074837313 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074976043 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07539277 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070550627 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081477643 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074384642 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069211112 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074648699 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074792024 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080773664 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078438791 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077330163 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079212781 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075277282 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081588169 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074677552 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075373716 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081341423 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082401594 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079141169 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079938035 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073534535 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07945784 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079273581 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082043865 seconds)
  done (took 6.11063046 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079125774 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069560896 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081501452 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061741351 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064299387 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07230461 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062102993 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062177154 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07101318 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070482222 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071996016 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07246896 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074952656 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072757924 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072099153 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074827287 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072487005 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072043995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070322417 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072052734 seconds)
  done (took 2.722251753 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077748387 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080676462 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06779104 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073520601 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069248168 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074014118 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068974447 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069225845 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069852134 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069478664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075914398 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075996789 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070257118 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074498194 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075723929 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073994549 seconds)
  done (took 2.454875154 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08575418 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072295785 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079277209 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065996816 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068964618 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064930992 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064859306 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063833955 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064382141 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078173511 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065082457 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076345619 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064946988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063797898 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065368854 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070964983 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064727067 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065094881 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064920664 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078302845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072274103 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066191001 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068808293 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064832476 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070782999 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072602493 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067017051 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069051019 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064972391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065605878 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07144767 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072055792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064896475 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065694052 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064224314 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065477675 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065358795 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065603635 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070799585 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064910268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063658274 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070255829 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065363474 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06573336 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063981642 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.084302142 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064035277 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070749071 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06518816 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070664081 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065252653 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067390413 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065750306 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072811593 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067816678 seconds)
  done (took 5.054853376 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080687104 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067401366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06205156 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062830048 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068935811 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069549527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069409353 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069299874 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069821977 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06400933 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069944166 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069224199 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070303802 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069533083 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070763006 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069533614 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063696191 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069784299 seconds)
  done (took 2.541262428 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075020902 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068633527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073439916 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068382246 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068326859 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068515647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063645002 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06363898 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063869262 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068770454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06868522 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069031469 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064068045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068217301 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068489951 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068435688 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068628099 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064484356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069089079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063856008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068128753 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064035585 seconds)
  done (took 2.783484286 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098061127 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085090599 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143812301 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081476046 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088532344 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073241114 seconds)
  done (took 1.867556428 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093466396 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097711307 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06666027 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067178214 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07464288 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0720658 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071739487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071424589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07549783 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075614224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070497155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077494765 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076356282 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079435375 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07437106 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074920622 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072156481 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072501951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068675542 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081718806 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072571548 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076940609 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072543113 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072192983 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072550252 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078938337 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076755723 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077596163 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072195034 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077480666 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074991377 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072428429 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077116262 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077290589 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06907897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076718824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072649455 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081909823 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074537533 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078939992 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069222134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074985582 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076886007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076229219 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076779866 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072287319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076985794 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072666472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072371293 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0868137 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074805085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07888002 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074462312 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076797686 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075530304 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082255425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076077883 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076525398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072781937 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075147058 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076322579 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072903747 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076275044 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07535525 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072451859 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076333976 seconds)
  done (took 6.281232 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105010988 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068964917 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072037267 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07715295 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07853766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072463393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072832773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072681676 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072680119 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069526278 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108200919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072922938 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079034127 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079252314 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072717494 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072890886 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071676054 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076827946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068266228 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081703396 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070482244 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076647606 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076656233 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077429835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077284958 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074813277 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072346285 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072115218 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071928558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072300683 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076402977 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072484522 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078460667 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067772598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076493469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071139054 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070159011 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074379107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070721978 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072771026 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077185462 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079782205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070751332 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070357956 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075111613 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070628359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070109522 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067500175 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070255095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067998224 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075598528 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075222505 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075230515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076692622 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070212314 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070395681 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070445563 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070271161 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070262788 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072811365 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076398993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070220836 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081389213 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070145221 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070443346 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076400709 seconds)
  done (took 6.225946063 seconds)
done (took 129.068951911 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212072254 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185908932 seconds)
  done (took 1.67511627 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076140436 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106197111 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084658966 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136186273 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071049417 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105490353 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104051567 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083740797 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071321057 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071287086 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071089515 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07364364 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136171893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071652339 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071150933 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073948499 seconds)
  done (took 2.704722057 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105038015 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.219403839 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111146972 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070794621 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106500945 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079223121 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070839398 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087633475 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07821172 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073173344 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079599873 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077401475 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072440685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078085593 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078013712 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079530467 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072344916 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078902868 seconds)
  done (took 2.920259308 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104300586 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094292031 seconds)
  done (took 1.505613553 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174152616 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13347723 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201307781 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341908284 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150825983 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.422680211 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137535106 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137140852 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112373134 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134159849 seconds)
  done (took 3.246028964 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10261406 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199753762 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301120503 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120650874 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075648545 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110517574 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121675235 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081857805 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08086605 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080875219 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080299473 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077701422 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100027639 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076331565 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075571288 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077626897 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102909939 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074476548 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075606314 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076064361 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104100245 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069925811 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076678064 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074406563 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078351568 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07827337 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070966215 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069246826 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076065048 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075805837 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078696338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107843599 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078117198 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104685275 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073669228 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10548765 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077750747 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074281073 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075613425 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074793532 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077295928 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077474849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07858733 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077975906 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070790337 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078381642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071190116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069563635 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080228336 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072397328 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081993111 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080436065 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104206467 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071068574 seconds)
  done (took 6.146501577 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108834161 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106757005 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070749058 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112867709 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104286317 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070365295 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105256381 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099043989 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107297493 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070922915 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069343185 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071680813 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079195423 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080568677 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115141852 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107387011 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072543301 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070602822 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107498898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106997047 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069551926 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10151607 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097609844 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106681932 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068394001 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071146147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069137483 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071101691 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075718779 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077292582 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069778937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078981436 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083320443 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077110417 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068317637 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06873867 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069170718 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078077543 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07836175 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078517053 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076287725 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06830952 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068894233 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069731033 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069801731 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068258666 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077264711 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078402821 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077298253 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069359711 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07041436 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069399883 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069969794 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077897168 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07607186 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078456994 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078082587 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06919853 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068731551 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071577885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079227442 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077994045 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077941202 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069890444 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079005505 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069649317 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081384164 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082275928 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069409877 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070721676 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068798223 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069109978 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069663905 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075771808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075919791 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070182411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068917104 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069059054 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077846159 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07636243 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068921824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075468541 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067780235 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068781482 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071012996 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069848348 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075608 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078038736 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07029003 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068893337 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06918713 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06889578 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068399196 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075552678 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077703391 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077630252 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076879113 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06987728 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077058776 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076250606 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070505331 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07721168 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069199941 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070735485 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069863637 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077086173 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076280908 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078155559 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0691596 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069311444 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076505765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078942727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068409989 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074522852 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076838705 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074875029 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067075398 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077917642 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067897964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076344207 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068218124 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211694255 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071597973 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07792097 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070024335 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068822327 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069467632 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077707375 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070907039 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06922898 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069887202 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06966239 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077168498 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081069513 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070770162 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076975598 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076876073 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070791359 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078069854 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069281197 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078235567 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069599503 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069991807 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068438671 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079344382 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069091451 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06973586 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069487534 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078332476 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06899876 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078395002 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076312848 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069151294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080255907 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078678759 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075817096 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078724292 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070497845 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06888439 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068729966 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069275642 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07608088 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077936737 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071004407 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069682524 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076748542 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079181206 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068731756 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076819032 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0771854 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077312858 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069635958 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069585829 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079834879 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079610865 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077040284 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077143758 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077478352 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069866243 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076679334 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077199964 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06965126 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083003904 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069402282 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08099112 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077775891 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075823124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07737782 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078754809 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078880446 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079329359 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081776332 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06922678 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069373095 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077514373 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069275002 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069748512 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07644331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070467008 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070393518 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081233141 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070172112 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078392024 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068584335 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077314195 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068297755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070337338 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081880902 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069524651 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070336635 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077675527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072372531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076848652 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079000451 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076964117 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069264439 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070103729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078473829 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07789812 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069143031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068690406 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07049438 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076889496 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075848183 seconds)
  done (took 18.416117991 seconds)
done (took 37.932616204 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212360874 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155042093 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186782638 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115207869 seconds)
  done (took 2.071174641 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106845932 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097584244 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086658659 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065314859 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094042252 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065717122 seconds)
  done (took 1.857337372 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294506742 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201508852 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180242373 seconds)
  done (took 2.012524079 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208556874 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199116482 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458609332 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282714937 seconds)
  done (took 2.582014918 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142076853 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083914593 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064295004 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082444732 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123043694 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148598651 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091912463 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116875026 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075347154 seconds)
  done (took 2.320957628 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147224766 seconds)
done (took 12.34850586 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.103700746 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.211950487 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.099391113 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077209212 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077494224 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074989654 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087302807 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071406014 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114926003 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.265849069 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078907731 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088240104 seconds)
    (13/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116439369 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205653148 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.202968572 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078665658 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187341871 seconds)
    (18/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076387469 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.217757522 seconds)
    (20/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.398902215 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.214818164 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077162406 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.238776983 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075242104 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074305999 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193579694 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.102852454 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208577767 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108418404 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10199282 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090558007 seconds)
    (32/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177330245 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178666325 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072428445 seconds)
    (35/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.176429909 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094099265 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091346293 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087877722 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074710621 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065671553 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066150884 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.171040782 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073836865 seconds)
    (44/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066040476 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064770392 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.142338015 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081008715 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077827628 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149574268 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084439921 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.175854542 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.159507541 seconds)
    (53/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066303054 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065789151 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076483595 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.207810749 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194608468 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 0.131249072 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.066769648 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067473872 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083181798 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067193211 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065711642 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128750531 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064891158 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074200886 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087893649 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.124282124 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064738978 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170116282 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064772526 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066460506 seconds)
    (73/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.21508531 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091627522 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127482199 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076379124 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177333988 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065447308 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067067208 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090187908 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.22715778 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136072966 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072981157 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073673734 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075122594 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073402828 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.208557195 seconds)
    (88/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073159086 seconds)
    (89/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077821265 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065525453 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097298033 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.194306322 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.22240051 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094483338 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067887966 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073530062 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075294884 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074968329 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072911229 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069035349 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087423255 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094316493 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093310551 seconds)
    (104/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066252767 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136746929 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090727914 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091167079 seconds)
    (108/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217812249 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075507179 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083854057 seconds)
    (111/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.170732999 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074523485 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073486625 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072449219 seconds)
    (115/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.13815018 seconds)
    (116/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175412883 seconds)
    (117/309) benchmarking ("sort", Float64, false)...
    done (took 0.130690497 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114267597 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076127504 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143746567 seconds)
    (121/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.125459312 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075471444 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07638583 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074266606 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.157853758 seconds)
    (126/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066445088 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131194295 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074038975 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088496419 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091643451 seconds)
    (131/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24175975 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123847156 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.07800817 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074103093 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066191665 seconds)
    (136/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.192639452 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088219099 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14536526 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.1708429 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066221403 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074751112 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167778381 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07316982 seconds)
    (144/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093763769 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070178294 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07421776 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087894913 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066325053 seconds)
    (149/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.126562281 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14314861 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06692122 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066190604 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06520924 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078838491 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130387793 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192332599 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144008853 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094664319 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067049734 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066944643 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193730131 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06609505 seconds)
    (163/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066097212 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212057456 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119217591 seconds)
    (166/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13335764 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066538648 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068340368 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065820768 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13195428 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116854718 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068674807 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072420972 seconds)
    (174/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071515469 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074442405 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06617464 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065406821 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076993442 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07067437 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091837138 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193507767 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066383571 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07379388 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126646444 seconds)
    (185/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.140992943 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169976225 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06691283 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067374003 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067369993 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073074743 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092080056 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066479353 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066250275 seconds)
    (194/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069823632 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078417527 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072749985 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065058634 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074424079 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065147253 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065468672 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066862724 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077762548 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071617992 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065344888 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065223171 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064778521 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163985426 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066219666 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065293531 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066093514 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07320586 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065305636 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.227805552 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07041199 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138264896 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070566857 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068489708 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067097227 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070033581 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066894828 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066837774 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067442499 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074690136 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074692888 seconds)
    (225/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070073898 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070643715 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067337047 seconds)
    (228/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.135635809 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17087366 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119089136 seconds)
    (231/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077454633 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065423467 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12354876 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10874532 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.170885282 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067176285 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181272219 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068681718 seconds)
    (239/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065059095 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091481875 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066212243 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.180035523 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090046096 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066327905 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08625156 seconds)
    (246/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069085684 seconds)
    (247/309) benchmarking ("sort", Int8, false)...
    done (took 0.168056231 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066978243 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069160027 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072540381 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.078176114 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075806225 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137389318 seconds)
    (254/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078112839 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066057872 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131184484 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065556704 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066026551 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066138515 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076080689 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067481198 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066280858 seconds)
    (263/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067258652 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073292458 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066584379 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086257239 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066288722 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.202382939 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119620828 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065757094 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069697302 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068685683 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067988342 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066108108 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066908478 seconds)
    (276/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070839659 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066920931 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073319385 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133002369 seconds)
    (280/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066654223 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065553871 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074199095 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172996556 seconds)
    (284/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066821082 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074776399 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066305463 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176584555 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068205577 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12114745 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065693771 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065070363 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065773127 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065757954 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065969197 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072309847 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179475208 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066159031 seconds)
    (298/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066178592 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064675313 seconds)
    (300/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066517575 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06585083 seconds)
    (302/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066203946 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065298138 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071873884 seconds)
    (305/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067937224 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066080058 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087054503 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066772207 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079476593 seconds)
  done (took 32.847045817 seconds)
done (took 34.196855623 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090433079 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103201521 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076313539 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09618974 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08414396 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099710238 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07634877 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081560788 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084329194 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083454079 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081959147 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075334347 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077714038 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078119765 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076244892 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100861173 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082769059 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076823738 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076959484 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068405358 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077333905 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068660438 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067875472 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074611899 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080186364 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076908861 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078469709 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077990354 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068515108 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069118357 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073942967 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07735364 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068893068 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081466099 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078013527 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077871612 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078617767 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081461886 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068406659 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068751519 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078710608 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068878745 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076855192 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075442406 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073254833 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075555122 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077332655 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080895921 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10117081 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072225512 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077059752 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077427908 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078507704 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072404989 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071905666 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074840469 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072850218 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097224447 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074902799 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071077838 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075941679 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075647721 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072827809 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07468416 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074950368 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077082576 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078993884 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073111765 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077146289 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073493096 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06636843 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074976272 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071367545 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067097848 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080570733 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079014558 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065908362 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071228481 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074970929 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074837917 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066659083 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071206731 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066145582 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071330164 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07113929 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072762851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071481108 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073445555 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066043345 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074942176 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07384341 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074455251 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066312064 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079055258 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0667425 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072329779 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06696645 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066533328 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06622887 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07178488 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066001147 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071227193 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074808804 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066306001 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070644973 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079186355 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065740383 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07272221 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065131192 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065904602 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076800426 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07634564 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066213686 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070480048 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06546094 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071512395 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066009203 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065903122 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065982086 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065612429 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069756465 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065642685 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069805164 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07096238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078017865 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065366975 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070132111 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070406733 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0658386 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072585136 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066148197 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065638198 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06527865 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079346251 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070119646 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066301159 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071859184 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070762797 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074404561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065640186 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074491089 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071958807 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069615643 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071760084 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064508857 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076303833 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069904916 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069013936 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064344609 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064763764 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064049746 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064316097 seconds)
done (took 12.680131576 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071633837 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118911559 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092694787 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094142615 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083353811 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067624901 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073989774 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091469821 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069065122 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096115415 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088634071 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088551681 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109415529 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066276197 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066881935 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068230593 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068622917 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079141071 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094076133 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088985845 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105892023 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066834071 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086012677 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086879635 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083760713 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091267878 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068222061 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068427378 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07049757 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090450376 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095065277 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072308225 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070192445 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093592031 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086392939 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080422944 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067830443 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075568192 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067997774 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067406106 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068777758 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087483132 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075065183 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077759692 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068761477 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074807609 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06871049 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082992373 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085215884 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07592081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08291605 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091058055 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070791775 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083388811 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066547966 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083174599 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076173095 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067383412 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067624007 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072215558 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067426799 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06986208 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078645413 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076244364 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071538921 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081617744 seconds)
  done (took 6.636043106 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086550113 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097564258 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.0839463 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083648271 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066579709 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067410849 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067601737 seconds)
  done (took 2.000169638 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068922321 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087120066 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091514514 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090168811 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083326871 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091248309 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075132769 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06806479 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095773479 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066329512 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087603525 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097936434 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070754799 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078976183 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091941058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067646955 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091371415 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067183454 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068141208 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091209941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071646512 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094791719 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079129222 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067542219 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079993266 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068179153 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100441195 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075357814 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068658353 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069223921 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068864225 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094670067 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079524607 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081337082 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068746412 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082632601 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081119093 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07100448 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078443865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077438184 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080733212 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06927386 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066469827 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06904584 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070382497 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079192294 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066540446 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069586165 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068420964 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087332656 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066486738 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07966363 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071157047 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073307975 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073335962 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072312514 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075871407 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069361694 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086930331 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068828213 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084944994 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.0845144 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080968075 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084024973 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068370331 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07987776 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080769565 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068471261 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069631192 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06932498 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083772058 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070755015 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069174809 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081574342 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06970934 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095206619 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094571803 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068298337 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080773263 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068364903 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069017535 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079916283 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09150657 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073303066 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069561566 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072350291 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069759202 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070787876 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066603615 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072057772 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069183127 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073007392 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068830252 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071350319 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070159902 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083615088 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066490913 seconds)
  done (took 8.867748367 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071674404 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069970517 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070824951 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068189437 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068310037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06873467 seconds)
  done (took 1.881009083 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094270435 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069925327 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083133078 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070596014 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106948341 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086782657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08672659 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080947073 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08496998 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083078339 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087325696 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08986873 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091500716 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073596492 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086664133 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072080484 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08676849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075626672 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082226609 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073922411 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084561651 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073776347 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073586526 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091026086 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074533554 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071865813 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080439969 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081979891 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081668716 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080736431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073212917 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074617662 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079267399 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080988587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087046099 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079051297 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073396534 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077241292 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073593199 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074680501 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089154748 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07318394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073041984 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076958088 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080242582 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076963082 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075917617 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076785644 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083115271 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074922524 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074898723 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069234859 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071647083 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074712996 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076178048 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077680246 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074895269 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083469319 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070796578 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076237773 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068586717 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071777927 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077381118 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07194968 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075401922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074868565 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076459433 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070494797 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070778774 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068486862 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075318139 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068303318 seconds)
  done (took 7.065737811 seconds)
done (took 27.905335409 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.523220027 seconds)
  done (took 1.935309844 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.633943484 seconds)
  done (took 2.079125836 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.565229029 seconds)
  done (took 8.011284009 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.408304883 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471157598 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749531241 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134536024 seconds)
  done (took 3.24236208 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716618794 seconds)
  done (took 2.169753686 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242044426 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231805744 seconds)
  done (took 1.937145613 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.355169235 seconds)
  done (took 1.797789609 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.070185229 seconds)
  done (took 2.514522321 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.238976909 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1616346 seconds)
  done (took 1.854065945 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451668439 seconds)
  done (took 1.903026522 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.241101645 seconds)
  done (took 5.693401921 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224169412 seconds)
  done (took 1.704244543 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238977129 seconds)
  done (took 1.686415783 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733040221 seconds)
  done (took 3.182209321 seconds)
done (took 41.169305773 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08475701 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085140688 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086020217 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081070329 seconds)
  done (took 1.765761769 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076645638 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071032825 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074256752 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070681022 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074664131 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070849638 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074464499 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076059585 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073203002 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07320586 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072909996 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072810646 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07639699 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074499415 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072363488 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076257823 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077131827 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073613909 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076370454 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072961202 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071217922 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076068391 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076197351 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071910458 seconds)
  done (took 3.227868005 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080692597 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074884315 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078298974 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073929814 seconds)
  done (took 1.767035436 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079074656 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090973168 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089033308 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079916777 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091363697 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087220461 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069549239 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069868678 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070740412 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079710436 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068495963 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096603429 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089350445 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080037215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08201873 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065679481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068259128 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088197861 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080724658 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080490594 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071070868 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079850287 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068799985 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088462532 seconds)
  done (took 3.372450478 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084457057 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066140733 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083739299 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092324853 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093848269 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066189979 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.081664063 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093537788 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138586779 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066487845 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07228337 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066675747 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105350563 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068584182 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085958796 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112543363 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116095733 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07242376 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103002365 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068758505 seconds)
  done (took 3.206112448 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085466753 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070914859 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071141179 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067822707 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078613371 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076258088 seconds)
  done (took 1.918347235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070872938 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069897686 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070328439 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069390556 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074482031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069590358 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071101936 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070067083 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070267603 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069604448 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069578254 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068429921 seconds)
  done (took 2.309786187 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.211014835 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06990043 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071115641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066247847 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073302239 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069895206 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085093338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071834607 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088930101 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069403851 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070029171 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071870234 seconds)
  done (took 2.484562097 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194216466 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07614601 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22508016 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146091935 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10468154 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110793346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110416029 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108566584 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132151869 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096511333 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151848316 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158340327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102770457 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125678439 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086900854 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119535963 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143020529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151950067 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099220608 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152170617 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135251084 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118633527 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139533934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095910421 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102485412 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119557024 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074129894 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079326247 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16108638 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125614376 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137924759 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107217373 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097787885 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167282074 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157990351 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131850972 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137969148 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081177115 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117045748 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126420835 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193096876 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088266885 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150062967 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102224975 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077219192 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119493584 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107928848 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11185009 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098933008 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08559872 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273922898 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176295303 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131192827 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086579065 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118394648 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107825011 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111521411 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114355153 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171661843 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150913562 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120819478 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071235753 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106969975 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141719327 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12361211 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103700019 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120392155 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090934653 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124032135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147518607 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127306461 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135442255 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115120615 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086170077 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113389427 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129263062 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119103087 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15793177 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114410778 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071557911 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116705077 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094482512 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077775195 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142343675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073789299 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162267601 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095140976 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120062839 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121827995 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104264098 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10437027 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147949171 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133247014 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100551956 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083584659 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098594695 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11354822 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135814797 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084020367 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103225085 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108762589 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076843388 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126615162 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072918372 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113862981 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093882258 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112192055 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115271413 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075462158 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259064889 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102145063 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098870651 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122621023 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150030175 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087963463 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080990073 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157946687 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116216056 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102389609 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138474616 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150933917 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120639915 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096693245 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141556836 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164231098 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090217343 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153682964 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100979263 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083011675 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106031033 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117244026 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109631632 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121827627 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080932228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115363822 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156685309 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075270821 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096280769 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124439541 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078719698 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07770929 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103393458 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102104836 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094877599 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100287222 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101247371 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130140071 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115270252 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099830678 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117378424 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093896314 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154411594 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084622714 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097403699 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099872473 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070516751 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12579596 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145774692 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077617677 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14924399 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115638501 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108904092 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111739315 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080672071 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13054285 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07842905 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070571679 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130055071 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105509954 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102533942 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138719344 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256631404 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121414938 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115500503 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127704613 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124608738 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123016636 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104479895 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088288693 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1084914 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122304136 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071023126 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089470052 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080935822 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100497533 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092260635 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08255323 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129845858 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114999175 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104120483 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110724292 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095650997 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143034068 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079080857 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121139165 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118316902 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094752892 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147783594 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14555932 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124332586 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09715077 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128676518 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071485147 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072366587 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086154683 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117824211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08136351 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081041587 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108016714 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1399645 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118694334 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128158891 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115260995 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110721326 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145795437 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070366179 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115023442 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134773535 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111895764 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101234142 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08822727 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093836969 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133365766 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098943899 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171757022 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109867607 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119271948 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147896212 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098563182 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076821233 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098408265 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122026949 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245600076 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139777953 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098314751 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086725003 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105885795 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078046142 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097477613 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121899273 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115180733 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132091411 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109744388 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126067692 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077138289 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108148415 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113534381 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11419323 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081003943 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110888814 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155571972 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092759352 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109995619 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139651788 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076708939 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131739418 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160817614 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136441142 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084556027 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104056355 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116952355 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123130641 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115524032 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134005185 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103355041 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132720959 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108741076 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085758175 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089123124 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095288305 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10257596 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112239939 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103151513 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10780357 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092548453 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122650378 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098163243 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104273426 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113384911 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098949849 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096118447 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095963536 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16457272 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109264925 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1573024 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095383845 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133762339 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151530345 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075325849 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078393487 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080036307 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131812685 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084044078 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268764355 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109862111 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112852948 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117671931 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132971821 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096484127 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072244181 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106854167 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128709806 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119355944 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096306585 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103444512 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15240156 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118165747 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07913753 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108925411 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108365839 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099614027 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160922499 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079586682 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105726272 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077211537 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079839202 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120631996 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140902865 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084250389 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100432346 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112437135 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105707466 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119738241 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094205338 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104363841 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123011279 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137806507 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122087384 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090085667 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109633876 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125257815 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148021488 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102871519 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100242458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166468827 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14437776 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154344933 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088356315 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111561598 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111223021 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107322964 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130936085 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084201169 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154382471 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081939975 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129389156 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100337639 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089781391 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124875497 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110025519 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087630764 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13715938 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109785509 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081889146 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229036953 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110563974 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113948119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102544654 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075743756 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134361239 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074451413 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128129622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15962115 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080411863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102597837 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094801917 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080181428 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100224193 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098847306 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082982872 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095937284 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15845278 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084215359 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137263027 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124227504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104957075 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129001816 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099930221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639475212 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077583803 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142995259 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113891887 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169555553 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098319773 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114796592 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10789672 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116252551 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136559314 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100047693 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179422106 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125924212 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113006341 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079714681 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100698375 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102287874 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089360003 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105247662 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10861133 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107680907 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091458067 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112838838 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116199817 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080260524 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092724162 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143597736 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109932928 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133427996 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131966582 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084548316 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113725841 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126837552 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077416185 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.109972993 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291388038 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101387272 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097245218 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079940828 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097327864 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157655762 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071624349 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147916525 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111301405 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10577522 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109527288 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107093973 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123383053 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102649914 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112418506 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089210927 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104455115 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105981139 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08102112 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078594269 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1027121 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109039519 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.133427185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09614019 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099828379 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145011871 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072640202 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096540747 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108320518 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135351098 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159411836 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101660062 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081073027 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113283548 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112858706 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10629265 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1124666 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078842221 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078415194 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079231333 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097952111 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120219546 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106356271 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111354575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104106963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15008884 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081630565 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220886036 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092607842 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099301793 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086506061 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.0777577 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092624395 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092825182 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099115372 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103986668 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159678566 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090364078 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087003868 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089078301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072651979 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080221394 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121576397 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108154352 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111075406 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100548773 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.229050732 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103540903 seconds)
  done (took 56.856973183 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106123125 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08001838 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101421986 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144230799 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120747599 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199652483 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150154945 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188352367 seconds)
  done (took 2.651471555 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070751638 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096904714 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104916365 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085256206 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066527204 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06834052 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231513305 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083837277 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066626562 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091105785 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076803808 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068707228 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.457751842 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068597405 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069646442 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07988868 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06990445 seconds)
  done (took 3.410838329 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379718704 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60375283 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351821029 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076720939 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.870392644 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088631524 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.184548107 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136139577 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080884468 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.517275835 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367628155 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130401796 seconds)
  done (took 18.353587475 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084605792 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076737392 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090939694 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090669836 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078732766 seconds)
  done (took 2.065778076 seconds)
done (took 104.863224574 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083500395 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.546891173 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06988678 seconds)
  done (took 2.205551001 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.095033691 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090706681 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090190498 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087170128 seconds)
  done (took 1.93749801 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076586638 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077224857 seconds)
  done (took 1.719801751 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233139803 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176823281 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095428414 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086008791 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081782901 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081514317 seconds)
  done (took 1.819086136 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07486403 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073605769 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073448735 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077922133 seconds)
  done (took 1.867488046 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073429922 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06710934 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069578663 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072453987 seconds)
  done (took 1.847132693 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086800097 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084807205 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080021595 seconds)
  done (took 1.817510906 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102989783 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094534788 seconds)
  done (took 1.763303766 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083060215 seconds)
  done (took 1.650300825 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093140289 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100938687 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131416513 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113797159 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141552279 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117769798 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084278689 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089202264 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078771103 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086124558 seconds)
  done (took 2.605183926 seconds)
done (took 21.384967524 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082277074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374389465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361878319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091470284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673209268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358230431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980996908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093901084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108741048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070205804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087907023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650465458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974641473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332225239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958689521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330893741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6530553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069500225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068652355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069618614 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96314112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068919345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070025745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069977562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651431383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375315157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07147435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332126966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07091737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074366222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360309302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07128645 seconds)
  done (took 16.116001739 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071722405 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122574187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073551046 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085677775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071870841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070612731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072373598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070687159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119792833 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073554402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092047928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072257041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076766578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07368597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093402027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072874187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075557411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0723429 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070399199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071424876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089649772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070033542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071064143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070947738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070974952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084443866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072360761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070807116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071372026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074826422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075478746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071904794 seconds)
  done (took 4.078828862 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12018397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131613805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077297488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112221458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122527033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075086106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152920393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097850293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125552067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073509668 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08843842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069516357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105516808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071322437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091609957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070584253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073349301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071218203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070442807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071974446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092474225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070269484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07168125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074624865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074550225 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089197308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075495979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073473275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070364302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074719013 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076372674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072134797 seconds)
  done (took 4.372448021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073846304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073620036 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081389507 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082542404 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068611497 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071115746 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073353714 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071480507 seconds)
  done (took 2.183994195 seconds)
done (took 28.325410347 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081906 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070885802 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074861291 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090364121 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076976249 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082352202 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068627589 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077685946 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075152693 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075439024 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076914726 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073257137 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073755039 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068694359 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073418823 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067492482 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081975809 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071976161 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081001295 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082011168 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070817366 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073774615 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076336911 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082709778 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084746208 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084861679 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080096373 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076076986 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071409534 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073530203 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074362345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080914117 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081566701 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081909125 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068763247 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06816831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072623202 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070241334 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08288138 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077195231 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070198605 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077789829 seconds)
  done (took 4.762025755 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086303355 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089477013 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08274792 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080143579 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091974209 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083083939 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086443428 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079000514 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078633508 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086451763 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074802302 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081774974 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079243254 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07391355 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078301563 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075779489 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080514659 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07538763 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078498533 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078600926 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087616276 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073592482 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088313352 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080762446 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07587616 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081511568 seconds)
  done (took 3.701925985 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077029357 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088529505 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096528497 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149209321 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115393191 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083586845 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085537881 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096835563 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100923121 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071627401 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076222577 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096736004 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095552124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075277628 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112423592 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084689786 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085540088 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071318012 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07650114 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098678196 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090303984 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08676273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095268856 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086308499 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068571052 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071801629 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0739964 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085326928 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072049242 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080842905 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072068272 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073262682 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070599875 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079891148 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071959158 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068523417 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093635907 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080820625 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081994909 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069803945 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078768867 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070489866 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094518269 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129226965 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068280832 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072987195 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072799668 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080456735 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068161692 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096294525 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080677114 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069232161 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069792369 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067985129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068712725 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071862402 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071051162 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0712025 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079016944 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075729906 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090682318 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074275545 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086714856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068668488 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078963013 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068322739 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070195612 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067612016 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097570808 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070084155 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112751144 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069613577 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067428121 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079933329 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07891392 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075064845 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068613215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086157636 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08013097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072562075 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077178983 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071907853 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072329452 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099281818 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069218361 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068488898 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067539838 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072734048 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075109107 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06934524 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080816106 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068116595 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072228289 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086397896 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068593245 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069638144 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072554829 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07126012 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068795753 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079328278 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072741148 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070122487 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078958953 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069531066 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072524925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081693602 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075576644 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067844005 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071382655 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072173192 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070026991 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070187073 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072175909 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070648388 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076219063 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077434688 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077014082 seconds)
  done (took 10.855859534 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166187052 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15706992 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07175467 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14958894 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077829077 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081190821 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154962571 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099527012 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072144952 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073161682 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072743544 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114417987 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110308062 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124294228 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082684393 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071575753 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095127389 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115442885 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154712296 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148329306 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091841165 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077312129 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072124801 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07115507 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071430238 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07961047 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086602865 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078506455 seconds)
  done (took 4.451219954 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078825383 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103563082 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073540722 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092075186 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088811721 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070035048 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07148418 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071185785 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085850883 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078356383 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07008635 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074488756 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074351179 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072680247 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070202525 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076374176 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076794758 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068862835 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073403518 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07485995 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079714118 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094496652 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073239252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.0695567 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071988597 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069428245 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077586486 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081603763 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069848759 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10556071 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067123454 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074401708 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083513578 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070170497 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069119999 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069657069 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069158152 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070105934 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070998585 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067989268 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068567662 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073273999 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068632288 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077409194 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082368472 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071252435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071390521 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07231216 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072158527 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067462077 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072589336 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072022604 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07307496 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077600554 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076799734 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074032164 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070409166 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096258784 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075189805 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069011533 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068554608 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068183536 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072189679 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078782498 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084719647 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071791119 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068351775 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069517516 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082258885 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082443115 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070319059 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077096264 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069442539 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072673512 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072169068 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07207672 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070557441 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068296289 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069154514 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069421258 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070433311 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069276052 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068948638 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072643201 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068673938 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069887917 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07058502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071092723 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080520751 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072478761 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073421094 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070372779 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068130191 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072849426 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075126021 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072945515 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080175326 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08033239 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070137213 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068143989 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083611519 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072185683 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06914161 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075249493 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074371579 seconds)
  done (took 9.4283617 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094148517 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069953918 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088612454 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094928408 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081594781 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078010174 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082308272 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071585207 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089104587 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077385749 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079433432 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070536308 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08285896 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082081807 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072239729 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082988162 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075551751 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089762966 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086947732 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070432577 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080625299 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084384758 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083837689 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086029181 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085895271 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085079057 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08134769 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079503098 seconds)
  done (took 3.923103693 seconds)
done (took 38.703719802 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.667657328 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.835756963 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.653835923 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.867284491 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.965510684 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.679390235 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.728255581 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.651378843 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.894756254 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.699689648 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.926334917 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.112414814 seconds)
done (took 64.418843203 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.691818018 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.805711783 seconds)
    (2/2) benchmarking "String"...
    done (took 1.905134717 seconds)
  done (took 5.304512963 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.873927222 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.325207154 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.891538517 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.650441854 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.6610471 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.901603283 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.42701378 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.096499695 seconds)
  done (took 29.542028183 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.828396817 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.875945353 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.342445197 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.379277324 seconds)
  done (took 15.062677045 seconds)
done (took 61.157817901 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.706818421 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.662431442 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.696899704 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.651492528 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.748049035 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.662751735 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.74222932 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.68646005 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.653578586 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.663150137 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.653569896 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.072888509 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.66235949 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.815275928 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.655260971 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.65278901 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.655724345 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.107740853 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.810441253 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.671231699 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.669568354 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.697226133 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.662274204 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.794657789 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.671190405 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.653154349 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.069971457 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.653941213 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.265225062 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.657140658 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.69193266 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.992924082 seconds)
  done (took 199.702458446 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.657822528 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.618206996 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.695952491 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.666096451 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.039365971 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.849698995 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.752489965 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.071923283 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.660243972 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.675513696 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.880910105 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.658365446 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.904938944 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.603160971 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.691685073 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.662507556 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.866843662 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.940166664 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.698616869 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.799865722 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.67243653 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.772614941 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.705766525 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.88571901 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.696122151 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.747607596 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.678313969 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.689003487 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.842001817 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.832269752 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.702097764 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.691785106 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.84911948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.524844835 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.680704988 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.679299458 seconds)
  done (took 165.639324328 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.841598485 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.657904587 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.654407246 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.656482337 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.661264467 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.653506782 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779248781 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782393315 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.330475363 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.136017199 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714060752 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.655648899 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.431468826 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.65982978 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722179611 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.668187504 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.655254969 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672920512 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.681558229 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.659972658 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.65667767 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782052851 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.672283571 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.653920403 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667256279 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.660590752 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.66673341 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.042779041 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.654887257 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.834261193 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.657252452 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.664203677 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.899936804 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.655821482 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.662621521 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.484772915 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.293596446 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.666772048 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.741770711 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.657039472 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.667843877 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.656066572 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.877884997 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.655524075 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66109349 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.661574567 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.659276307 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.783247536 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.654269421 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78551529 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.654441036 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.138289341 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.653653114 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.662061772 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.823990659 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.482137076 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.661834205 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.666411536 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.659628108 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.661371974 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.674103669 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.853021271 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.735132277 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.657388133 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.660262235 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.661156475 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.669218918 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.662770817 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.663177815 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.658672637 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.975535048 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.674188089 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.786598426 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777664247 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.662718318 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726078258 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749621646 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.657117225 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.659410205 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.660641746 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.657923298 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.745581145 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.65851622 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.783479868 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668635891 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.660885016 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718752182 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.733743145 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.657368598 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.484973214 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.660203468 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.660876795 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910430285 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722108594 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.656848112 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.661813051 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.75616752 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779634707 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.380282615 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.660339475 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.799801307 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.659758905 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.749314694 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.659565095 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.786040819 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.662305244 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7416191 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.665858649 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.663471766 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.66305989 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.69795084 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.663026545 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.676395691 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.660766273 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.035796402 seconds)
  done (took 386.875277971 seconds)
done (took 755.711554312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.270462155 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.232359766 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.341075146 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.25586511 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.224951672 seconds)
  done (took 12.921480244 seconds)
done (took 14.520467179 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.744315721 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.744641665 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.679636522 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.740814895 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.674764555 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.741761261 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.725656455 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.684588206 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.712349049 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.683206368 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.711333696 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.683101562 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.670535122 seconds)
  done (took 23.796032215 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.892194875 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.884340941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.724981309 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.893840933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.702253251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.91722271 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.816066229 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803464289 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803634703 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.675389605 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.673112932 seconds)
  done (took 21.384341186 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.906337536 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.899307821 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734190267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91067566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.708810457 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.896946578 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822236785 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.808763493 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80343814 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.675599702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.672613749 seconds)
  done (took 21.436529452 seconds)
done (took 68.216812828 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.666601826 seconds)
  done (took 3.266149152 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.68573492 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.84580427 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.669154257 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.668960431 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.666538218 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.669510502 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.666482823 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.66904574 seconds)
  done (took 15.142218501 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.667539504 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.668442557 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.668774137 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.669429777 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.669029057 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.668114851 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.668511449 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.668880345 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.668151087 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.669985856 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.668777696 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.668872854 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.667465466 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.667579972 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.666972406 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.666744869 seconds)
  done (took 28.293838121 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.670579687 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.666998396 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.668163731 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.669503109 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.668440255 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.670144627 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.668750763 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.667216435 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.66946919 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.669035498 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.668443653 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.667621587 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.668747892 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.667653069 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.668807418 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.669654564 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.669326016 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.669037313 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.673100586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.668324617 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.669447159 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.66886251 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.669519728 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.670118522 seconds)
  done (took 41.658805362 seconds)
done (took 89.958867354 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.431168132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.282760738 seconds)
  done (took 9.313259046 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.672756528 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.669226055 seconds)
  done (took 5.012951751 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.669725689 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.668322107 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.669529712 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.670298456 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.66931598 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.670158985 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.669445416 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.669327702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.668444018 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.67127055 seconds)
  done (took 18.29658274 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.671123348 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.672439786 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.673107317 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.670567052 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.669104134 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.671503395 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.666891672 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.671679872 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.671181532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.669803953 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.672356347 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.669224531 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.670180467 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.670356337 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.669974503 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.669649916 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.66758442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.670610476 seconds)
  done (took 31.668667199 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.671592126 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.668165479 seconds)
  done (took 4.94192509 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.67106604 seconds)
    (2/7) benchmarking "second"...
    done (took 1.66936328 seconds)
    (3/7) benchmarking "month"...
    done (took 1.672400906 seconds)
    (4/7) benchmarking "year"...
    done (took 1.671049875 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.671264959 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.670955601 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.670379913 seconds)
  done (took 13.299408779 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.669841533 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.821892738 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.882415386 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.306747173 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.67144848 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.673583051 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.599215911 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.674653927 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.675537916 seconds)
  done (took 18.578191339 seconds)
done (took 102.712161169 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.532553027 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.666551604 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.931573508 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.755974321 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.688547811 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.007438345 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.685465149 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.948687869 seconds)
done (took 41.820092697 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.693588345 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.422703753 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.457006144 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.790213706 seconds)
  done (took 15.273812586 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.669549339 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.973447321 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.692624261 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.523045064 seconds)
  done (took 21.468696932 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.032080603 seconds)
    (2/2) benchmarking "read"...
    done (took 2.016444321 seconds)
  done (took 5.658578848 seconds)
done (took 50.70174986 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.671700699 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.672567153 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.672428581 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.674671176 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.673682895 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.671839854 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.673263211 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.672033245 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.673893486 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.672759746 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.672947851 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.671437424 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.671515319 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673981638 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672718544 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.674348397 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.672998972 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.671625343 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673827012 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.674482022 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.671890833 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.676455184 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.674155365 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.672917036 seconds)
  done (took 41.760314766 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.674386609 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.674754653 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.674634945 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.672894559 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.67477688 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.674895885 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.674710366 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674686497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.676277098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.674005948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.673565171 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.674356229 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.674794322 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.674437509 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672975168 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.676243034 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.673467323 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672950976 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.672692382 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.675265273 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.676637201 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676613741 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.676170158 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.673222467 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.674178666 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.675080292 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.673886861 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.67238527 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.675636962 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.674944537 seconds)
  done (took 51.843040652 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.675121786 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.674725965 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.674682175 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.674554189 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.674375457 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.673909444 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.676172433 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.676419822 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.674004464 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.676138092 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.675022321 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.674781982 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.676331041 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.674704007 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.675215745 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.67799621 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.676379301 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.673308002 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.676553993 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.675428031 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.675860356 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.676422877 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.676551117 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.676444523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.676498903 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.679292007 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.676828676 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.676251359 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.677222837 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.678835865 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.678062814 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.676275227 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.678154974 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.678991443 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.676795033 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.67608964 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.677590176 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.677637786 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.676590027 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.67640932 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.6776941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.677867177 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.676663629 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.675678608 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.676891401 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.676829679 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.677184691 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.67773118 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.679017699 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.678596873 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.678469849 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.678663462 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.678140082 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.676732472 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.677673825 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.678345409 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.680404342 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.678105436 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.678343446 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.677620585 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.679050436 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.677960758 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.676935899 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.679558416 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.680566273 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.67814706 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.677926852 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.678989636 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.680847468 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.679391473 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.678155753 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.679457508 seconds)
  done (took 122.36222887 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.678778824 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.681237146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.678325796 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.679504434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679559336 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.682774221 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.681210026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.67936202 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678937152 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.680695341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680902637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.680844525 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678994617 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.681207549 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678354566 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.681283957 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.677892845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.683315302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.679843484 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.680806913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.680611412 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.68001057 seconds)
  done (took 38.575744566 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.681223179 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.680147788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.679728899 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.679672807 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.680894516 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.67985835 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.679755832 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.679726688 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681223958 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.680959667 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682843989 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680398765 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.682594083 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.682311216 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.677913741 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.680985461 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681162267 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.680183309 seconds)
  done (took 31.862443347 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.680357459 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.68067991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.680792189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.68137875 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.681384781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.683687192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680657398 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.679834462 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.677672912 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.682320786 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.681282504 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680160156 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.681533007 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680478585 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.682300946 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.682836461 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.680768943 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.682576537 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.683041622 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.680954153 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.684056576 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.682905507 seconds)
  done (took 38.605242657 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680512244 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.682768987 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.683758897 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.683603912 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.683489304 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.682175107 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.681415104 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.681741633 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.684293075 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.685644129 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.683626174 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.681242594 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.685997838 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.682398441 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.684482067 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.682991617 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.6844283 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.682474483 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682217131 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.682900581 seconds)
  done (took 35.275974128 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.683866936 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.684167757 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.684027976 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.686028359 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.685917578 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.683223459 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.686919556 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.681933559 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682963643 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.684847809 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.683764822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.684111124 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684545797 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.682676019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.683280992 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.686149913 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.683475543 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683902864 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.685636984 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.685702976 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.686247045 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.682224176 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.685889333 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.685384337 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.686020848 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683819008 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.686853898 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.684490069 seconds)
  done (took 48.784221642 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685952783 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.683408251 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.68332685 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.686447566 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.685009914 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.687083605 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.684071846 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.687074143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.68548941 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.685241443 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.684252617 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.685826532 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.686970699 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.68325438 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.68628898 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.685684633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685127745 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.683733057 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684187847 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686913611 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.686232308 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687025956 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.68485358 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.686151032 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68731244 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.686135114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686125599 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.687117632 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685141746 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.684039602 seconds)
  done (took 52.182575723 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.704550039 seconds)
    (2/2) benchmarking "in"...
    done (took 1.705897817 seconds)
  done (took 5.026151759 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.685853054 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.68719879 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.684811912 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.684904899 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.684687669 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.684693822 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.686634078 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68659884 seconds)
  done (took 15.102704002 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.687987429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.685899873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.686476079 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.686573835 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.686977925 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.689223643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.695408914 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.688977271 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.689145667 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.68690139 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.696490777 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.696662632 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.691144273 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.689026157 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.690659947 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.690642941 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.687926035 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.687680578 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.686065115 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.686099743 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.689284285 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.689327144 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.692408052 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.687305522 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.687981224 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.701801182 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.693896375 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.688427047 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.691327063 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.692205748 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.688845366 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.690908535 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.690311295 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.687634142 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.688261896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.687819996 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.697820478 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.691100321 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.695809597 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.687314768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.687722354 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.688767759 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.691119677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.693429138 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.690406421 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.689828127 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.687853931 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.687620016 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.691379355 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.694020942 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.699648765 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.690344789 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.688066451 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.695332219 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.692240509 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.697875444 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.689365785 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.692211994 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.700766312 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.702341734 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.702807949 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.698637552 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.6931135 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.68915116 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.699133624 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.717624331 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.698939032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.690049227 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.689649691 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.691560095 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.696889426 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.705199793 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.701217119 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.691396124 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691549228 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.688358952 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.690140594 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691235964 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69873612 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.695709907 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.691773419 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.69034739 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.702759863 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.718627912 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.692614386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.690205012 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.692192945 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.691097199 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.691772126 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.704230768 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.693047655 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.691721954 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.69167549 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.693165332 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.692942969 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.692601183 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.689126488 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.692195566 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.689833974 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.691605999 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.692045209 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.695278052 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.702857933 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.690120841 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.692641049 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.698681797 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.690985221 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693268487 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.701118947 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.692916516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.69104111 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.693684224 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.701706769 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.690826646 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696024959 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.703027853 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.692013896 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.696923259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.691251572 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.690454502 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.70391007 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.722420709 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.691675484 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.69085097 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.696992992 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.702463073 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.693138906 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.696608853 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.691639708 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.692228677 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.692064336 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.695388567 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.693216213 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.695527548 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.690964482 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.694384271 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.691871964 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.691762357 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.693839809 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.694992692 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.693712953 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.694636632 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.695827542 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.698284121 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.69186158 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.694322751 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.701597254 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.695405031 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.694723017 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.695255502 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.690979428 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.693167182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.695544147 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.694109907 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.694808308 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.693725208 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.696275911 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.692324545 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.694335592 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.693337759 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.693928367 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.693664344 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.702061344 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.692601688 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.700070726 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.695161187 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.69234607 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.694947226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.694044759 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.694857447 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.694237007 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.694877419 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.69959288 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.705347311 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.694139012 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.692973405 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.698733408 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.695376411 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.69382202 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.69659481 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.700837404 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.707092077 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.695968394 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.702785472 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.696655029 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.695477733 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.696923625 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.697502423 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.699004548 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694922236 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.701772649 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.705344499 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.708506948 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.706876254 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.695091162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.700280794 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.697349196 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.700568086 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.700003819 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.697692976 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.6976052 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.696096789 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.698269764 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.696448181 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.701174741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.695530026 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.69818287 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.696463865 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.696395968 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.697791795 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697491133 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.703273751 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.701190254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.694435877 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.698371774 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695753624 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.697862199 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.697580081 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.697118029 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.699581172 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.698504371 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.696109568 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.704321102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.698622588 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.702407614 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.701650934 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.699142217 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.697587395 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.697419152 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702668241 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.702066999 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.708483735 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.700639426 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.701306689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.706568039 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.699267367 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.699674215 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.701391931 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.697121287 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.697424902 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.703609636 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.707523214 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.697423423 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.700558247 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.698850242 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.70219562 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697778154 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.707616363 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.699880591 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.699080801 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.698393886 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.700091202 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.699675681 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.700472403 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.699953931 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.700146911 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.704647778 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698628511 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.699073279 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.70179813 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.700728557 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.699770399 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.697841992 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.703569433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.710584541 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.706581483 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.700680141 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.704076173 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.699648012 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.703069326 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.700106714 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.698051035 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.700740538 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712696955 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.709101801 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.706686728 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.704827982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.69985503 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.707353795 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.700820687 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.708287802 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.701581282 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.703109286 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.70278833 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.701821187 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.702354951 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.704383642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.703070921 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.704027154 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.704050393 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.704781174 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.701681629 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.701869351 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.700622911 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.700633149 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.70043848 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.703024555 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.700574493 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.703858747 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.703735867 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.700159788 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.703473615 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708976452 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703564359 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.703991166 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.704080684 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.703352765 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.700828711 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.70387279 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.703287998 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.705902301 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.709520531 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.707312612 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.715670689 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.705400615 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.712458161 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.700936949 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.705917947 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.711189822 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.702392111 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.700310857 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.703239631 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.702537568 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710408321 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.704091172 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.707050762 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.709784628 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70011167 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.702018618 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.700241312 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.701072918 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.702016325 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.704008258 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.713862435 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.706181669 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.709902649 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706845492 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.702659027 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.703741542 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.704470188 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.705095187 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710078319 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.703365894 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.705275379 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.702695387 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.70416264 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.705370225 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.705534407 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.70364357 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.700780244 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.702469108 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.709120565 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.704465693 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.706801289 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.704193151 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.711226817 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703222334 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711222743 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.705428868 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.704952273 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.704035206 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.704957458 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.706850617 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.705639888 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.70617194 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.705866505 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.708307969 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.708020991 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.704375686 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.706622389 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.70521144 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.704448359 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.704321676 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.714270492 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731824306 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.706757541 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7083438 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.702556372 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.706887665 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.711713233 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.707157949 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.706224705 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.709717191 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717800165 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715556068 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.70653181 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.706452407 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.708699541 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.707177089 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.705049943 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.706717693 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.704396453 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.705267262 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.705400637 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.703636642 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710419495 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7048466 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.708979969 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.706974893 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.707669385 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.718242156 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.704998351 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.70951858 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.704407621 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.706736084 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.707979552 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.707961478 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.706206163 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709752431 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.70463428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.708227327 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.715447001 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.715033943 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.710567407 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.7079056 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.708105516 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.709649268 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.707874086 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.70647185 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.708842553 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.706866421 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.708971402 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.707008576 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.708745869 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.706916889 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.706716501 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.709128517 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.706758256 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713935334 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.717052611 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709682462 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.70539623 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.708518661 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.706028711 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.708189604 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.710067069 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.716368643 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.712172217 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.721425177 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.717185174 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.712872167 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.708214962 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711637139 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.719241012 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.70809331 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.71109209 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.709358252 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.711161544 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.709419741 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.713561168 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708044399 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.717003942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.709760047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.709262148 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.719763742 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.713625389 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706376302 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.712901502 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.715138023 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.709830108 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.707598883 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.708423982 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.710504781 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.716868311 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.711751176 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.712108057 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.712453055 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.707532727 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.714406868 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.715066935 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708233324 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.711603735 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.708738792 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.710504268 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.708986326 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710308702 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.710513941 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.708974172 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.709148568 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.712724061 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.719081886 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.710190437 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.713254347 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.713789783 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.710921719 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.708776715 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708195485 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.709637753 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.707560922 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.710425591 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709892231 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.712206796 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.716142487 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.710235406 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.710768975 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.713091586 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.710974151 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.715485587 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.725505571 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.719214937 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.710890542 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.712029915 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.713071654 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.717103829 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711139368 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.71071354 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.715435222 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.71577371 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.709184642 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711044391 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.710996894 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.713769537 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729833635 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.712026067 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71305562 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.714028776 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.717645642 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.710414764 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.708483325 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.711646955 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.713417495 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.715611493 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.719394814 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.709440639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.722310792 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71409498 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.713539254 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.716454431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.717308255 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.723828066 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.716644576 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710548442 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.71339358 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.716188574 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.733145115 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710015969 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724872093 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749486417 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.713727121 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.715475518 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.711879736 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.714919848 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.714498483 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.715736455 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.714302891 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.715300557 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.713199838 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.713766343 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.71669767 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.721519565 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.715234888 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.712229703 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.713055945 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.713445181 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.714308345 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.710692367 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.712181183 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.712861912 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.712104663 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.713795775 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.711428223 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.715274738 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727130878 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.726842653 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.712487756 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.714566337 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.714779183 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.720638499 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.719759933 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.727294517 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.723859218 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.715944694 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.714079479 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.716518254 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712094391 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.71335576 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.716315995 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.714814793 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71622353 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.713172196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.72745515 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.722510382 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.721279223 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.716406948 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715489396 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.713263302 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.720383976 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714890412 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714523453 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.718867743 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.717512569 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718373207 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.715343438 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.715923265 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.719867101 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.723659165 seconds)
  done (took 1017.119857279 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.713464693 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713241235 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.714523437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.716443668 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715007163 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713319071 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714480885 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.715946291 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.714646793 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.715181362 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.715248586 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716079691 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.715538356 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.715069167 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715094171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716032565 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714181331 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.717734708 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.716146001 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715639169 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716202035 seconds)
  done (took 37.666337016 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.715656239 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.715225745 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.715068691 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716180821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717106252 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71610409 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.715235235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716874264 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.717433202 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716187655 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.717545653 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716281896 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.717635215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.71640819 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715603503 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716281203 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.716079131 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717172417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.71665782 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719724872 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718445897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.718097083 seconds)
  done (took 39.414971556 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.717197669 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.718825322 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.71780093 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.716216459 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.717576558 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.716392009 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.719227017 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.718390216 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.716154939 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.720754332 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.719374627 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.719330061 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.724788911 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.725822544 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.719779215 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.716782543 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.863843386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.718206944 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.716815313 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.719062649 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.71774291 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.724774202 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.720305297 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.718119398 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.719333403 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.717894097 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.717759135 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.717975908 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.717630781 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.720561991 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.726100327 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.718725336 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.722018071 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.721930607 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.718716251 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.718746785 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.723308433 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.718397529 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.719473987 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.71849314 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.728786534 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.746978124 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.718713329 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.728687806 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.719346986 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.719235173 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.724158134 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.728075598 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.717756222 seconds)
  done (took 86.099942006 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.719685967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.721028119 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.720751223 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.718414913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.717950153 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.719277146 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.720805871 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.718475003 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.718519131 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.719765763 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.719072209 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.72039834 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.719204883 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.719646094 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.720632955 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.720502479 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.722193794 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.721701371 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.719595369 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.719199177 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.718247772 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.719810727 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.72007022 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.718845405 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.718424369 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.71763964 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.717428224 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.71580312 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.718258532 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.71855428 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.718115167 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.719552844 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.719576303 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.721421322 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.722807271 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.719731558 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.720125252 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.720573986 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.719118804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.716628942 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.718569196 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.715864845 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.720813278 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.7199732 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.719303072 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.71964104 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.720326421 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.718537524 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.717168224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.717980753 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.718662445 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.719099648 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.718520162 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.716250126 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.715960224 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.718147905 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.716750634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.716303261 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.714072418 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.715550462 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.71651026 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.719615149 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.717372512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.715840923 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.712852728 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.715995147 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.713668605 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.712356078 seconds)
  done (took 118.511865145 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715971082 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.713132851 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712671891 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713801428 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714933881 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.713706784 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.713889925 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.713257598 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.712611968 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.710661627 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.71341896 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.711348201 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.713090806 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.710417762 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.714127883 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.70859338 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.711545454 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.716036953 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.708156648 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.711313892 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.70965005 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.712147596 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.710341335 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.713453133 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.709467123 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.712120364 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.709872321 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.71018089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711885394 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.712765319 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.711613175 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.710430822 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.713225294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.712178316 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.712516374 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.713636057 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711131434 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711964388 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.712539841 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.712046322 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.713239512 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.712836903 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.710308741 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.712586934 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712689686 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.712322895 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.713186812 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.712872836 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.710889006 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.712532022 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.711831571 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712640084 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713106332 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711241932 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.712563285 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.711496151 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711583322 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713327857 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714125151 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.710245217 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.711994526 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.712656228 seconds)
  done (took 107.804625369 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710954716 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.718402014 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.710644913 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.713016369 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.712921354 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712685129 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.713402343 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.712651801 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.710901751 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.712209841 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711958996 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716910372 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714528322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712495951 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.713750856 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716112061 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714196932 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712900266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712444819 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.715434394 seconds)
  done (took 35.912454799 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.713887905 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.713925379 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.713311515 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.715098148 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.714372402 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.711911127 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.711959876 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712368281 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712867164 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715761074 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.7115534 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711827785 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711631847 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.714057286 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.712464297 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.715233267 seconds)
  done (took 29.054234425 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.712115736 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.713919144 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.714553572 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.71327762 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.713892814 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.714775274 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.713266303 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.714339246 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.71262593 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.71361212 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.713838358 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.713071454 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.712717676 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.712175601 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.711987769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.7113231 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.709030399 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.707267885 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.707852474 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.704833709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.705448101 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.708138819 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.701915727 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.699532031 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.702056694 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.706059568 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.698654267 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.702996542 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.701966282 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.702426017 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.702069164 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.696543773 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.704826414 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.704041277 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.697149072 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.698515231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.701121689 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.698068322 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.697614005 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.703805725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.697222766 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.700596768 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.699458215 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.697839034 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.703802706 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.699078895 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.700889388 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.704605147 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.701757482 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.702820487 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.699980177 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.703307784 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.697637735 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.703029747 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.700758471 seconds)
  done (took 95.43147777 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699482604 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.700876996 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.697994646 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.695346659 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.698017942 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.694594972 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.696859193 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.697328096 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.700063313 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.69716062 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.701060084 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.698398086 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696475341 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.69728205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.697969078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69535003 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.699765473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.699351033 seconds)
  done (took 32.196946804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.696243621 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.702312286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.699579681 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.698761226 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.69823292 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.701262301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.698629803 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.697601123 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698091067 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.699605758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696876947 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.697996082 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70181006 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.697307477 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698503411 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698596879 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.698667007 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.703706258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.695972556 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69538646 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.700521491 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.699486711 seconds)
  done (took 39.00540687 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.699282889 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.697353054 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.714063389 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.721413726 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.719360612 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.739126145 seconds)
  done (took 11.918696344 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70609255 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705238366 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.703698659 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70363636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704670941 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710295202 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700598178 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703940536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703046417 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704928886 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699728658 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707881838 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70398138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702502484 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704750787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702364697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704392638 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702631358 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701695374 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.6989552 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702118187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699261631 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702511924 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704549823 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701276758 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697640815 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700973897 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702301305 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700319837 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706160929 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700868776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700636396 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696558984 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699707017 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703616877 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699533272 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700220838 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700379301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699454034 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699100374 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.703288499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703289897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698734164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699591256 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698479645 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70035075 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705448887 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698527289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701120258 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700463551 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699730295 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700349821 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700407734 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69918976 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700191703 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700813349 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697790429 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697674713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703973952 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703074708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701017824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699603455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702097115 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705668308 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702092025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697906493 seconds)
  done (took 113.94938142 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701271961 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.699926132 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70106043 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7022771 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69938753 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702810803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700404634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702688482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702940657 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702759323 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700503932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702993752 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703224454 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699194772 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69911348 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700405632 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698631685 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700486946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701732022 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701583475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70426039 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694971253 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700696402 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70200187 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700745832 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699081722 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70384496 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699676621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698632619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697266625 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704228866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698370442 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701410356 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698610741 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697851465 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700807654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698581522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699317346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699413514 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697735691 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697490256 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697063839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697227068 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699661911 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702269928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696336247 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698745244 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699007035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699124495 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701917948 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699790315 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699046872 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70087297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695752855 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69848898 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700642332 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701441051 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698093349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696817676 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699380444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698837523 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699730716 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696824991 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69607171 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697423197 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698105518 seconds)
  done (took 113.820740269 seconds)
done (took 2360.895902256 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.716817538 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.729055856 seconds)
  done (took 15.075399939 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.858869087 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.810875487 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.696552815 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.725795968 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.68941914 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.722444029 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.718294035 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.692499266 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.693762901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.694036968 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.690084587 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.882448062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.753088317 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.688912257 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.69693856 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.786476502 seconds)
  done (took 49.43437885 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.695276171 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.694600121 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.70617326 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.696976599 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.696120773 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.707827321 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.725241017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.698146428 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.726624553 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.71363717 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.762147781 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.708311236 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.695672651 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.743103718 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.714313779 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.709113858 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.786845365 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.774779088 seconds)
  done (took 32.581381628 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.77345138 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.713456832 seconds)
  done (took 10.11882694 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.714429808 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.702320185 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.717333076 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.702027166 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.686455821 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.727118639 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.688524182 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.706098686 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.71860049 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.71776437 seconds)
  done (took 68.708335234 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.697122441 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.694371624 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.69520896 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.690054865 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.690909411 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.700825422 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.692363385 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.695384102 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.339996199 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.72595578 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.706120234 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.699593231 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.689562307 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.695303874 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.69268181 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.717181718 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.804434548 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.69336537 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.690358312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.698742454 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.692690325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.740630502 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.707319002 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.696251955 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.721334607 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.348397117 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.703800115 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.698365886 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.810673887 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.694082379 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.694023052 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880237346 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.695343007 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.163184111 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.962896596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.701446854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.704599862 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.703603083 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.689748017 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.800997176 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.694768342 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.6974043 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.617782009 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.94093089 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.788055987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.740188886 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.99190107 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.707801371 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.693471406 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.724856828 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.69784725 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.694784389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.708519861 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.213345251 seconds)
  done (took 123.054965963 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.702367822 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.037350138 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.861081979 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.69307827 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971092493 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901250005 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.692307347 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.738504641 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.695942727 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.91245861 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.943536761 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796688456 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.688235943 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.693578157 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.683707607 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.689552214 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.845822472 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.75889351 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.691999358 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.695325732 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715267712 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937138746 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.812989991 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.689789342 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.716296405 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90669699 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.813744611 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.796733415 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.478933013 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.692081059 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750735052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.689936056 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.691747608 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.684958143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.84057433 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.806388495 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774405263 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.691093778 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.686043198 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.691614159 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.342098872 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.888907325 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.77995504 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.814974159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.941537473 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.890391512 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.468489109 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.688065235 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42850105 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.855451361 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.921008637 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.920977865 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.806743986 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.693401606 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.032938342 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.692225071 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.684683189 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.936315354 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.90341521 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.782354913 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.694305719 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.687542901 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.694073429 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.924486189 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.693982136 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.789609127 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.689920057 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.690326225 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.786257928 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.787620277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.921114814 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906881275 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.717962431 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.040804799 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.194613116 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.937939865 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.760281135 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938497631 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.694580156 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.68538914 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765192772 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.534672089 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.937093521 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.937897451 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932645958 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725442633 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.407689283 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.690273917 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.919163188 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.910049733 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.949604598 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.94106289 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.930909344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.012262644 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.682552211 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.694373516 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.976098717 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.810268442 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.694352227 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.036687729 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.917676762 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.206512015 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.712959021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.994520215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.817914438 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.694296309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.320942495 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.696451883 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.914002899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.73131246 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.68877254 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.692156477 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.908960334 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.678986759 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.688855265 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.344271189 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.747108589 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.691552856 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925140979 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.696315461 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957691667 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.697762722 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927183333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.784160807 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.717628739 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.867294197 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.944713402 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.693877186 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.929983803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94262045 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.80533565 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.916636121 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.404047833 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.697527757 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979050307 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.699130564 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.695316651 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.86449677 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.696137239 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.836313795 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.700541371 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.987787039 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716861603 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925830114 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.703377833 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.950021262 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.723621274 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.746460857 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.700573623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.816813924 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.69801229 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.515253337 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.85163047 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701262716 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.695288969 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.668426526 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.693804301 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.839497985 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.920419559 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717655825 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767467873 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.353951294 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.700420308 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781871026 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.71559561 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.290215592 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.69882675 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.94346422 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.698820859 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.698655067 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.699921065 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.932306433 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.878144242 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.701538607 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.697327058 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.605140848 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.701018194 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.698543115 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.882541953 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.067517863 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.697609716 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901676786 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.703594159 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.821926754 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.70329767 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.770832298 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.028664849 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.695469845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.693402632 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.698346697 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.699137901 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.69919179 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.905886596 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.723317967 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.188109582 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.835671232 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974324156 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.004383244 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.936913261 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.735430987 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.697550547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.939199224 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.700452851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.756443434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.701777693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.715924448 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923864504 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701622115 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985964819 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.968804074 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.547166 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.741930563 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.706949641 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698181965 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.696016283 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.844287792 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785739214 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.695566729 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.702152496 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.809402577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.822075596 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905520252 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.700892439 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.74275751 seconds)
  done (took 865.213070731 seconds)
done (took 1165.816463145 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.697911116 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.694629738 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.692030953 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.697745001 seconds)
  done (took 28.413706289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.713478318 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.702468346 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.701840065 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.70476966 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.704030582 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.69845538 seconds)
  done (took 11.855907638 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.726941874 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.700368668 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.70501688 seconds)
  done (took 20.766337018 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.771308818 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.080508912 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.830263318 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.10406488 seconds)
  done (took 9.417461444 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.701396823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.701553314 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.699630319 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.703965536 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.708754695 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.708701183 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.702513461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.703148827 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.7117107 seconds)
  done (took 16.976597304 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.692492863 seconds)
done (took 92.75204503 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.721641982 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.867070101 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.731296792 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.731512725 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.73277624 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.773164831 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.90668754 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.853404297 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.802404749 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.725236518 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.599673697 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.712313495 seconds)
    (13/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.195527591 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.110207244 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.902990765 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.737193744 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.196344967 seconds)
    (18/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.722587642 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.155176653 seconds)
    (20/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.912880309 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.723534238 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.816671122 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.711096212 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.972552338 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.733513213 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.014138481 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.061729781 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.721038176 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.706661797 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.977413732 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.738411089 seconds)
    (32/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.706570858 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.338026731 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.802158216 seconds)
    (35/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.969542789 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.740918618 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.479555174 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.983098233 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.715987383 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.018097082 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.832984052 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.910398686 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.88803612 seconds)
    (44/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.821338059 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.815600532 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.84722404 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.713544053 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.448633897 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.711615759 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.94437384 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.718076318 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 2.534589317 seconds)
    (53/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.796108776 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.092300861 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.714470393 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.95249717 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.883512483 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 5.448766584 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.437859502 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.714728604 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.060390723 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.708540041 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.498122259 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.818423803 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.863516665 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.737871905 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.829126707 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.813862054 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.803479472 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.867447049 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.72492411 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.710798112 seconds)
    (73/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.177616427 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.590641362 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.81874404 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.730680185 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.929118659 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.046983464 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.717053973 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.451065392 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.032279623 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.857770094 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.740154587 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.872481239 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.719209468 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.802754429 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.54140246 seconds)
    (88/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.743673836 seconds)
    (89/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.966182034 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.714193419 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.517399004 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.452866309 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.734323217 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.652436331 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.900019501 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.726274743 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.717221027 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.246418948 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.9838139 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.931298412 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.055431634 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.557783117 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.695243465 seconds)
    (104/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.821285931 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.223315024 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.39148219 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.382782227 seconds)
    (108/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.17654204 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.867418682 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.911371942 seconds)
    (111/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.63949042 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.742635817 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.791268888 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.871965886 seconds)
    (115/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.901433961 seconds)
    (116/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.967178942 seconds)
    (117/309) benchmarking ("sort", Float64, false)...
    done (took 5.479486538 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.854899793 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.719011549 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.805085132 seconds)
    (121/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.827355873 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.751417917 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.850856931 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.736859534 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.79792829 seconds)
    (126/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.81054481 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.75423078 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.966974358 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.110064592 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.503092242 seconds)
    (131/309) benchmarking ("sort", BigInt, false)...
    done (took 6.72121492 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.718464832 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.939658455 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.975762742 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.112452207 seconds)
    (136/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.105107817 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.624720945 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.722330771 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.79905905 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.85398848 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.733881425 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.8280936 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.984802628 seconds)
    (144/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.756200781 seconds)
    (145/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.780145179 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.864680342 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.855218066 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.584489892 seconds)
    (149/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.801148443 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.721994706 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.720783962 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.958918942 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.733461891 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.953158947 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.619051179 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.106817762 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.726322467 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.723184304 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.806873015 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.798163237 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.118296325 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.922119115 seconds)
    (163/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.864998141 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.729015879 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.849321942 seconds)
    (166/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.177466915 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.022502061 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.760992302 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.918192401 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.747056252 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.725948082 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.107418839 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.102932033 seconds)
    (174/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.724470257 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.747291198 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.121620323 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.022325946 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.038353538 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.825099499 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.724870588 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.194157998 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.947588275 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.750155986 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.855842556 seconds)
    (185/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.724362762 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.858621219 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.809180834 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.044750385 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.041371989 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.799380411 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.721296452 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.239797445 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.040164053 seconds)
    (194/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.821813821 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.279305398 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.817850601 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.836353324 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.744548041 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.909922488 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.72127421 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.815348666 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.472485385 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.961687646 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.072834688 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.723713081 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.903800153 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.974278302 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.118916587 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.84203785 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.06793491 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.93687345 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.0126119 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.431696477 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.722038099 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.820337401 seconds)
    (216/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.886177888 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.954491213 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.036888519 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.99029022 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.045624602 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.067194114 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.719955211 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.816571582 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.745551009 seconds)
    (225/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.782746731 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.852806961 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.675876085 seconds)
    (228/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.860819471 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.733437036 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.734085358 seconds)
    (231/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.023658399 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.866814505 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.854132077 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.847599483 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.828817544 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.969379604 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.726646477 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.981526299 seconds)
    (239/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.831711962 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.342910902 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.925905283 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.258821841 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.736080904 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.83392043 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.647442287 seconds)
    (246/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.81072702 seconds)
    (247/309) benchmarking ("sort", Int8, false)...
    done (took 4.585842744 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.72673308 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.877704862 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.740728623 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.071702943 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.729503064 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.191570629 seconds)
    (254/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.222537333 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.813072941 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.856477861 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.935594482 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.074205127 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.827761208 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.079876397 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.724279161 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.155829851 seconds)
    (263/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.728836038 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.059647861 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.748999737 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.660973408 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.019188034 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.528410196 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.725507681 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.313850078 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.786799142 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.770198649 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.951844873 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.003548756 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.508425807 seconds)
    (276/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.821439166 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.018867224 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.735026977 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.724818264 seconds)
    (280/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.831291253 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.817343066 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.810471239 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.726259076 seconds)
    (284/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.726691869 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.518873787 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.343202957 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.728041913 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.723820828 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.937090854 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.06706607 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.823280637 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.104834043 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.123595748 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.11723972 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.763170004 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.725246845 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.132076525 seconds)
    (298/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.731072093 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.969483659 seconds)
    (300/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.962334911 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.985612287 seconds)
    (302/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.062654359 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.945391288 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.733135886 seconds)
    (305/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.805386305 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.906374384 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.699654552 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.768838744 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.668678942 seconds)
  done (took 958.916775629 seconds)
done (took 960.842188697 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.753937737 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.746817509 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.73190503 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.752946067 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.842536628 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.777830044 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.744479481 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.73543868 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.781480764 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.782877739 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.728512377 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.776196534 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.735366174 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.731388876 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.729253469 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.749496981 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.042853562 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.764858452 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.748957762 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.739791623 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.749044466 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.730571995 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.781947047 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.777852071 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.73601686 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.735796215 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.736249925 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.752249575 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.845054198 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.737007291 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.734325524 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.744581036 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.040769972 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.765106263 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.728870359 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.755169798 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.744056148 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.746748699 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.735320391 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.765823104 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.128442108 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.770153252 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.733077052 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.73424786 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.7316981 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.737442356 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.737289731 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.73901668 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.745558748 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.750009004 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.125011639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.78722127 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.736344514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.733473191 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.746089274 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.734395936 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.735953552 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750427877 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.751793783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.750439693 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.026448415 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.77133908 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.740897693 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.754392757 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.743492571 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.163325074 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.771752837 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.740571546 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.131863629 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.781347982 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.162850085 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.78262441 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.739450102 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.749504791 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.762109853 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.040679322 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.76405841 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.733321916 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.742133509 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.736813751 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.748735018 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.74775622 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.738273026 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.735061259 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.748531736 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.784664642 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.746715405 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.7339421 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.743717171 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.755495996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.745318291 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.744590305 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.740111894 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.735167346 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.747732615 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.737008419 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.742185878 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.735189349 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.740143686 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.749752828 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.12830685 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792463508 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.73031346 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.73218759 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.736342239 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.749670037 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.129825846 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.777493213 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.758341776 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.788315057 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.740161774 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.030040937 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.773899824 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.753885147 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.745199218 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.741025183 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.73498612 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.030554743 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.155789295 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.789771316 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.735590329 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.734234951 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.755276121 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.741520391 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.735965266 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.047437537 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.772017352 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754501062 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.860287901 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.748441633 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.768985078 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.736556022 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.740629423 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.790536427 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754575688 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.772500066 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.738809116 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.753713993 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.757090921 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.737730722 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.750147933 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.753218038 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.73987193 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.748673336 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.738664129 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.789415661 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.755239363 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.748866793 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.759647206 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.861898614 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.739555061 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.032758261 seconds)
done (took 273.477270748 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.819021949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.736790574 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.829925957 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.738808428 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.823578756 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.813269805 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.739634609 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.733299503 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.736053337 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.222696265 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.737463262 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.744956574 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.738468846 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.736311975 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.813199031 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.738088746 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.735576981 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.169268346 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.739069187 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.819160069 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.739184968 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.740613178 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.738227141 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.224485011 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.736551146 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.741336956 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.817123367 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.740804667 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.175729568 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.736882676 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.737805901 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.174602253 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.816259497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.762950042 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.749271147 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.744195525 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.828905158 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.747911448 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.80493113 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.811770901 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.833545987 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.774437581 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.7379019 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.740945854 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.737850716 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.740947548 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.739158295 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.769589863 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.737956164 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.741234987 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.17221244 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.745944131 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.743128377 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.739274543 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.738010406 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.766725747 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.742219045 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.740251054 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.812736546 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.742895233 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.807767333 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.223622013 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.225252502 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.735925088 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.739982564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.738178897 seconds)
  done (took 176.368334358 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.809359232 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.815661694 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.806914841 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.745098995 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.79029109 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.806734114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.744761656 seconds)
  done (took 14.186492283 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.746324278 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.739369911 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.789341788 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.791808803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.739368462 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.895809477 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.739857033 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.752417319 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.745218407 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.76673336 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.739686534 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.738948401 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.741865795 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.738700554 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.789841374 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.753015499 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.857286283 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.743498696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.741698594 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.886257724 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.748066229 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.751033341 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.768650738 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.754966082 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.739581002 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.748826486 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.312542634 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.740400442 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745183828 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.739452907 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.742995314 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.78325395 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.739457319 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.741462817 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.74098012 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854733162 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.740120798 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745476468 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.744771015 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.739593006 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.740887169 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.742746312 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.743747205 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.743167398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.740028833 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.768187239 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.742679321 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.741603813 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.742211841 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.748583101 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.766252802 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.743321766 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.739148757 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.750268781 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.784839435 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.752722973 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.745605707 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.747607867 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.743293698 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.739256933 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893781389 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.793596938 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.743166116 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.795887528 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745883105 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.746478002 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.744880904 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.743039513 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.829966991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.741639924 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.792385451 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.742418168 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.901839418 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.76505393 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.744100611 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.74799963 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.744989147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.739552114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.742286982 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.751928887 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.743346556 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.745945115 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.750286694 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.747522987 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.745395765 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.854070524 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885790809 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.744245307 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.7451032 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.748124319 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.743402413 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.785757213 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.745068614 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.745300778 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.800945197 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.860602009 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.769496041 seconds)
  done (took 193.308577379 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.7513055 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.751740045 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.744909532 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.761371087 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.746929056 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.744067585 seconds)
  done (took 12.171160946 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.748244116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.748953708 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.745388558 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.743488836 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.742496813 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.745030751 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.74532954 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748261754 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.748930228 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.743024524 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.745122028 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.743750631 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.74584749 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.747168419 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.745379856 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.745636185 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.741817565 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.748256251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.742246173 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.746378015 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.996553252 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.748726288 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748276755 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.745050865 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.750697612 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.744399709 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.755159431 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.745162807 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.74457924 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.751986542 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.748604921 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.74639445 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.746870003 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.752908297 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.749191436 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.74579295 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749042227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.747598449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.745009265 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.746230546 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.747755938 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.745766295 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.748381868 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.748065295 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.749381067 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.756417635 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.7510157 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.762603796 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.749247634 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.745397055 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.748454875 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.748941685 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.744977858 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.750335256 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.748918611 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.750360406 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.751615706 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.749567955 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.749738481 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.751364874 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.752267858 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.749749756 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.750407681 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.751833648 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.753645391 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.748750258 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.750804053 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.75129332 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.748408076 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.748301874 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.746062065 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.749242837 seconds)
  done (took 128.792754891 seconds)
done (took 526.511817303 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.035642049 seconds)
  done (took 8.71194449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.89088151 seconds)
  done (took 8.6247016 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.249019042 seconds)
  done (took 9.927769904 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.775527574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.798088003 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.759038047 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.751170402 seconds)
  done (took 28.79240748 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.955611736 seconds)
  done (took 8.6336833 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.778149328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.743889724 seconds)
  done (took 15.270868555 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.913075601 seconds)
  done (took 8.592061013 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.007906022 seconds)
  done (took 8.7005059 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.772464078 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.762910347 seconds)
  done (took 15.24276226 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.757446016 seconds)
  done (took 8.440958976 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.987614179 seconds)
  done (took 9.774918517 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.763675763 seconds)
  done (took 8.520462458 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.780315859 seconds)
  done (took 8.467191597 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.83311427 seconds)
  done (took 8.516622096 seconds)
done (took 157.893837709 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.754301521 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.749798226 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.74792383 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.751084654 seconds)
  done (took 28.686171541 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.781502648 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.787502305 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.788841386 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.79874454 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.784184952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.784495862 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.780352973 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.780339787 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.796357289 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.793246856 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.788610387 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.788378521 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.782445489 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.783433651 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.792524625 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.807418007 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.796899618 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.787253344 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.776670656 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.791767599 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.755965054 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.797362291 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.783876402 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.754674046 seconds)
  done (took 44.546090533 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.946137691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.817109364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.908890845 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.803061733 seconds)
  done (took 9.16325773 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.80480554 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.812002153 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.825456227 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.860175274 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.879254465 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.82186924 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.786164557 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.774542132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.761964767 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.801217377 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.877821721 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.80116685 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.897208471 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.751247654 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.938690428 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.746766019 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.758837992 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.800791668 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.857942818 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.868332678 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.753940733 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.805106829 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.810267835 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.800979444 seconds)
  done (took 45.280388866 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.755214918 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.762845153 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.765358454 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.757880232 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.754587533 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.759572209 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.763351943 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.755724358 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.776241402 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.756705333 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.751816363 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.75641136 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.765741154 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.758673215 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.75559994 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.771683365 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.769339237 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.755973168 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.760340533 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.763194701 seconds)
  done (took 36.898723819 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.749964494 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.598014274 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.09974576 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.006930946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.75444037 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.75336092 seconds)
  done (took 30.647682929 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.769500733 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.763473011 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.754251087 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.809831283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.901575451 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.765223654 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.759168751 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.765775474 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.80240947 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.823941799 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.771886349 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.783828389 seconds)
  done (took 23.156730295 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.752639384 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.754213674 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.755902299 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.765906371 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.76713304 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.766394493 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.762474946 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.753053204 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.765092079 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.771110867 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.765780566 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.765614571 seconds)
  done (took 42.833206581 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828457696 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.626290301 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197955056 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219079764 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27595371 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954083648 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.752538645 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839031064 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.750911519 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023983909 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.126322196 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961504658 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.993373057 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492013303 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.759275959 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.237769159 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050587545 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975499565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788410615 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376036878 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865863756 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271683979 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.438902266 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.868903973 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958168695 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.874524713 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.01314774 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.710810837 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800795156 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76062549 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758190671 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.763283757 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027269191 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87810729 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827299328 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759378081 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.168305295 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.462325818 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.770217643 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.391720889 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.250989301 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87549593 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756876883 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756259777 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.681563461 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259154681 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846365612 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.758344011 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.452996617 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.762351265 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.759969859 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828016618 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.752054684 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.560576293 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43805035 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.016121974 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.753344513 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751263814 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313961185 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774502701 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355403274 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.687151987 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.837369675 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.44290305 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212239736 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.917439734 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.754766689 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756341582 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680715523 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.443577772 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871049251 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889328326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.765332339 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392476242 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043663114 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.174439216 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805173341 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030269167 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.5246244 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.682718611 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970232518 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.70312565 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.674837619 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.596380502 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676482168 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967901291 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787995529 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.355506263 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786407446 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836401237 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.754525511 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763584836 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748455224 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96504097 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.64520075 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.747973107 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.045950643 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007626211 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763727593 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854978673 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676725992 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.747331558 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994281084 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.952703173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.974339709 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.240961179 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841706323 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.676449506 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.761531991 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.645107677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.757170332 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.023239903 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810792921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7687755 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868230405 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.696576705 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001227342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.69838649 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.846470691 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.112549041 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992133847 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.109552888 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001061616 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813418307 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.755526811 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.74979944 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.458860926 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36287369 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.966468211 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.76424785 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.228471438 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75707317 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.752127711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685936382 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.368016018 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.117349782 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.840544999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.965814658 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.682979276 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022875107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678072081 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886215511 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727981633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.959560035 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.402502409 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.83943148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996444218 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977455077 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.96444691 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757879668 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76234557 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843566096 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773221008 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.150213522 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992132035 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.75323954 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.754936502 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.443534424 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.811383951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.754365836 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.752633746 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279590529 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027359116 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.776001296 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.755925774 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630183329 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.766707265 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817773838 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757881862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75851988 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.272084719 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258586671 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.761265623 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.399660648 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965972913 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757794089 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.444847198 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944013084 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.766481299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026089564 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822767056 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.684138269 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.457145191 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.454657412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758504817 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.678622008 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.757012888 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758041872 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76081428 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.945740576 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033240678 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803857613 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.39159586 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.866714819 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762277959 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.759197513 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756121 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.273196704 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78157688 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252287275 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883707187 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883093687 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.766792281 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.68094352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.753501168 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757501526 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.759386009 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.701234223 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804048326 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.441884432 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965516815 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998405592 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.158292463 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762967755 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.398238885 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.877175277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.767828001 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.0594807 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273635565 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.849311638 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822397699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.758312983 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.400115913 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489212342 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321567854 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049633258 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074062795 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109446103 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.094701751 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.070000596 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839002772 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980395932 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275823481 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.808799541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.840986863 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697356804 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767625225 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.405883264 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112335775 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761148713 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975205824 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047718764 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.1306636 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899761596 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960276856 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788971759 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.550969612 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778871985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.289051102 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773254455 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.17117782 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966858752 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839254148 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.069577656 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.847836425 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.760773215 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098808753 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801740576 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.46319287 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110313219 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.125208413 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.234045421 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992842038 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.757819626 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.197326285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110183164 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.928568229 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.869887936 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683051324 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.763211687 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.762309504 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.771525328 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.732492271 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.588750567 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.000662247 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766319129 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983812293 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.86794138 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129582399 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.666598646 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.758104514 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758595185 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006503565 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483222487 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906223609 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.034260943 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.321261138 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768368712 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.687348279 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684625815 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.457632715 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.765131194 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723351271 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969684006 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.867148937 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437312482 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.119271239 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062345667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000273811 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.771290765 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034836527 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03346147 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.250209151 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776482146 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.859531523 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.075603653 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.501808173 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972043832 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986056084 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319244843 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97536819 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210091598 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.734235788 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.75991688 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966793328 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.976252075 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.145338978 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941151654 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.470244056 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.766861763 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134839283 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822817482 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.152886303 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951765387 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.855861432 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763531973 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834729034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766021403 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.764288929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764261895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768821747 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.150703824 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886784958 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.773997671 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839089282 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797156084 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.337760697 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.766200056 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036056956 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112077519 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10428249 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829581107 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.758160275 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766755491 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695488126 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891565907 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.202914069 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035267524 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.87680784 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.8961196 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782122522 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.084870672 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.001521802 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066160602 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035566959 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.646376953 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447910899 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.875679712 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.98028427 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769972817 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.967659288 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982654373 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067264137 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323147395 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.880660763 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953497845 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039059678 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12615491 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.763160348 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347323723 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.770333009 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169310623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.802887944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.158277098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028704838 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769767066 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888306145 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770685714 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.958319426 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.224296914 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416138887 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113231206 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.622523689 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.768744833 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046471611 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101015702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076560704 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845595126 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775332641 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.453926312 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898151548 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.598709896 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.976508403 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768956941 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973561438 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.477774285 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.770965835 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044786668 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069985554 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.768429045 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.649073958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766326597 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.776241914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987291411 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990124902 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013138727 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77319097 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.773685088 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.579862013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052636751 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8305056 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697147435 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.767553998 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815048408 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.993628189 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787739693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.286291359 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.467271375 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055539957 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.677463883 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784369824 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.18596185 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145710488 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101411635 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.292318614 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989261568 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322226463 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.581928787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138304727 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.775003996 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.149386183 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147048954 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.768566182 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.254527786 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878912377 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.045089956 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096415546 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.78808751 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490385177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.814921893 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992207881 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132210943 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706110094 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778691653 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.823928555 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.777243338 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.777434613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781958553 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.711236644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.153924375 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.612510586 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335237923 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.773836576 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.846300472 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.1365024 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29020853 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877102013 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793024791 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785563365 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.477004321 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.062113896 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019124198 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.254874177 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.861627892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.776680557 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776384875 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.693355902 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.955655801 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.960498599 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060720163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.080833717 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.875580455 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7753163 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.983869507 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98128478 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.172756541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914174918 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.872938997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883957908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.715116792 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481170805 seconds)
  done (took 1607.574001834 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.805248588 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.796586376 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.795462332 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.795315595 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.805827803 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.796916314 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.833343361 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.874206091 seconds)
  done (took 56.210207014 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.782431781 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.938858755 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.787307395 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.78429281 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.783388251 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.785965598 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.94125584 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.795392194 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.783300367 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.78805932 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.781233242 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.780895764 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.597410244 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.804153848 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.782054578 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.778767774 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.791278046 seconds)
  done (took 73.205923105 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.784966397 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.126133324 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.811965911 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.784973535 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.616458873 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.800156974 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.837077456 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.830205274 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.789483477 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.829587833 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.081140764 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.835181714 seconds)
  done (took 88.843909078 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.794937401 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.784384837 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.784538839 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.783173979 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.785556107 seconds)
  done (took 10.655386556 seconds)
done (took 2099.407951322 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.013015784 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.968633086 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026864252 seconds)
  done (took 5.709575147 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.930624657 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.981374886 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.094018697 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.101306166 seconds)
  done (took 9.830992243 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.090058671 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.158642303 seconds)
  done (took 5.968919572 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.11400186 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.823934281 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.202121299 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.78943577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.793956615 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.793595986 seconds)
  done (took 22.106076944 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.791487344 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.7905343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.790580309 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.790875002 seconds)
  done (took 8.88482013 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.789318313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.505250911 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.789652079 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.799512791 seconds)
  done (took 20.605124473 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.937746061 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.903862161 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.934350435 seconds)
  done (took 7.495650831 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.011612466 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.896579346 seconds)
  done (took 6.629560597 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.928154373 seconds)
  done (took 3.649108896 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.814525383 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.058531206 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.271290693 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.310578988 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.394042903 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.614717835 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.127314877 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.012664921 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.233039269 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.253606251 seconds)
  done (took 23.812438313 seconds)
done (took 129.560458399 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.137064753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822513713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.992045904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.148755457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.033291595 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.990661968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.010327115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.143227799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.836276962 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825675353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.156447953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.028196731 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.958654474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.811433173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.965216489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.812294712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.021090141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.171482681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.832795894 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.0496908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022806334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.792526832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.988822743 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.808641982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.025373017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940911855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.334866565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817393771 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.966591012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.351277707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947417382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.190361342 seconds)
  done (took 165.657127913 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.792787149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791979958 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.791826386 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.79365373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.26778179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.790572229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.791211901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79231659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.196535381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.19073972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.791613559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.25457887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.79149167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.792226595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.791488747 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.791874014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.364600313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.794091641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.794915167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.791724282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.792376086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.099295639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.79364667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.110612318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.335688629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.793270838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.792487309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.795136164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.792846812 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.791884007 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.794183534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791776227 seconds)
  done (took 206.566540012 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.793470713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.795481918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.793172171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.793171787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.791400544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.797445494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.791262233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.794046257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.420666896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.414215301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.795975691 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.796060471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.795803558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.794574652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.797711592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.794509743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.794294209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792546619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.79438135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.795454461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.796909589 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.553616402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.796421845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.56188581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.794648564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.79198861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.794066529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794864568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.792931544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.791567368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.794194847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.794857505 seconds)
  done (took 217.919207 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.041730508 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795241956 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.79486828 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.706596782 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.793873787 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.796038668 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.778055115 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.042335503 seconds)
  done (took 18.476566698 seconds)
done (took 610.349981717 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.153882502 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.996710842 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.97573869 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.817472382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.060758667 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.864473232 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.814993095 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.879227933 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.626980214 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.890396148 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.476387429 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.839228133 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.569334137 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.842767843 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.936763361 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.875056401 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.365943688 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.466142749 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.99379264 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.883765357 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.992210093 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.712263075 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.89823466 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.658311689 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.591571164 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.763021879 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.825607916 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.371928083 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.825705183 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.972143043 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.464023345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.064680526 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.829061729 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.815116097 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.87170926 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.846409561 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.008371761 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.825775012 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.941217392 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.511272221 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.88897391 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.533140807 seconds)
  done (took 99.270033969 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.805616532 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.801573859 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.803457072 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.801738506 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809407428 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.803795623 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.801600411 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.801572429 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.802445175 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.800658939 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.801794549 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.812004506 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.801359724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.811847317 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.80238167 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.805128006 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.80334297 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.813148029 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.803933182 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.804244283 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.80265699 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.803302509 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.798493253 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.800262636 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.803136331 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.802339518 seconds)
  done (took 48.642729936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.798659415 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.952721609 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.04260826 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.820033514 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.799504797 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.803561391 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.817282552 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.803774824 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.801821522 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.800141938 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.891268976 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.806568544 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.817542777 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.044769704 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.815545802 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.799768457 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.799327354 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.800202155 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.957012808 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.817664865 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.816818336 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.805036419 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.816970734 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.812531383 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.800649668 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.801402538 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.804834589 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.294996763 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.809155874 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.88894889 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.849832668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.829432918 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.242904633 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.052616363 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.856773904 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.810049488 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.799475412 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.892464479 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.810233159 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.801106163 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.820137636 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.811944973 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.045611384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.332373661 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.818680375 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.804144061 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.304364347 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.904648831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.84566084 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.812901278 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.050312245 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.81949144 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.803080444 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.801873105 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.839752201 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.809291706 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.801933901 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.163283151 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.816598208 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.820404566 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.811559545 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.803588254 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.968128393 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.812728565 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.955194765 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.815280905 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.811692792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.803819588 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.045358643 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.819591169 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.340574115 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.817426545 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.801863936 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.891961045 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.963645748 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.330063769 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.818052996 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969739743 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.260235703 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.827238017 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.811429223 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.287919639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.834568197 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.813139025 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.807540309 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.805807408 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.806333653 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.848750216 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.820301356 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.258459836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.347136449 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.181721404 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.830905624 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.819335306 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.806173716 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.161636972 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.812747352 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.804679215 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.040861985 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.353581673 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.818128952 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.812566863 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.319666731 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.822132837 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.823777405 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.813871644 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.054347162 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.821414335 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.846552159 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.805062087 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.811999265 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.809299724 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.824021692 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.81436603 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.805533411 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.313805965 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.913201527 seconds)
  done (took 224.697622751 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.807439396 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.808796065 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.804934584 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.809328807 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.803603781 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.806746354 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.806131814 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.803707389 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.805705887 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.803150471 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.802585193 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.80342651 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.804929355 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.813581656 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.811779981 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.805873537 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.40822486 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.804546994 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.804097208 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.806305858 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.4453404 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.81167391 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.805739897 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.805326614 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.807325945 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.807977001 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.811704899 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.807687698 seconds)
  done (took 165.569028912 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.807159186 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.917653975 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.828674257 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.834532444 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.812704794 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.805666863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.904939004 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.822345083 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.810366957 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.807750683 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.807038939 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.866784199 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.820037184 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.906562058 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.839396636 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.912993944 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.910542269 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.810071967 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.806465777 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.806902317 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.83457861 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.816808228 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.866871124 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.935974949 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.830965996 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.920137162 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.830204347 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.807259206 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.806672493 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.922752047 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.831787999 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.867037227 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.841521947 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.825137864 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.927071093 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.927087097 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.911794492 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.909821281 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.813843589 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.810774239 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.811484652 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.810732882 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.921393834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.83008281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.807292147 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.926825547 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.831503743 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.810259914 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.807480864 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.810747123 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.823060892 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.826345026 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.874073159 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.942996095 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.846273986 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.832659355 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.90547106 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.929471475 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.808405328 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.905387149 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.814764282 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.922746538 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.833573334 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.807882017 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.811828347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.813629389 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.838872759 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.912636716 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.913135565 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.817563002 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.905037356 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.844481195 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.817215723 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.808230328 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.811047249 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.922442961 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.927081268 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.847634231 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.844890884 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.839708177 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.817952105 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.811903641 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.810497882 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.826880981 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.816501831 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.924483965 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.926558623 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.815004326 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.812930577 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.810981827 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.81018579 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.835621864 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.93078706 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.847058547 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.915582397 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.879367666 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.887699171 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.83142164 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.824125382 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.816117509 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.874895112 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.831960293 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.823767698 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.097033108 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.870960535 seconds)
  done (took 196.386003193 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.211701882 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.860320106 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.866128314 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.132845405 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.164698095 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.821004779 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.858826695 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.857774464 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.883798403 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.047881127 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.931811773 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.876123917 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.848505068 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.831845298 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.858408536 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.883648391 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.864393155 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.192727625 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.06718991 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.998881576 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.850471678 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.132769818 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.164115323 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.435679242 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.908565407 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.240322648 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.42611878 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.993096603 seconds)
  done (took 59.962291322 seconds)
done (took 796.254912911 seconds)
SAVING RESULT...
DONE!
